{"version":3,"sources":["std/Constants.js","std/Util.js","std/Settings.js","elems/Frame.js","elems/UserControls.js","three/RingGeometry.js","elems/Animation.js","stars/StarReader.js","stars/PrepStar.js","elems/Action.js","elems/TextInput.js","elems/OptionsSelector.js","elems/FromTo.js","stars/StarFinder.js","stars/Connecter.js","animations/LocalGalaxy.js","orbits/Kepler.js","orbits/QOrb.js","orbits/Parameter.js","orbits/Origins.js","orbits/ParameterFactory.js","orbits/Orbit.js","solarsystem/Planets.js","parsers/ParseMPC.js","solarsystem/OrbitPlot.js","solarsystem/Planet.js","solarsystem/Ring.js","elems/AngPoints.js","solarsystem/SmallBodies.js","solarsystem/Sun.js","orbits/SecondaryOrbit.js","orbits/ChainedOrbit.js","solarsystem/Missions.js","animations/SolarSystem.js","animations/Satellite.js","std/Coords.js","earth/SatPrecession.js","earth/NoradReader.js","earth/Satellites.js","animations/Earth.js","orbits/TransformedOrbit.js","animations/PlanetarySystem.js","animations/Mercury.js","animations/Venus.js","animations/Mars.js","animations/Jupiter.js","animations/Saturn.js","animations/Uranus.js","animations/Neptune.js","animations/Pluto.js","animations/AnimationFactory.js","calc/UnitLegend.js","calc/Units.js","calc/Status.js","calc/Row.js","calc/Debug.js","calc/OrbitCalculator.js","App.js","index.js"],"names":["Constants","year","month","day","date","Date","setUTCFullYear","setUTCMonth","setUTCDate","setUTCHours","setUTCMinutes","setUTCSeconds","setUTCMilliseconds","time","JD0","mjd","GMSun","G","MSun","MEarth","AU","CENTURY","Epoch0","UTCDate","getTime","dSun","rEarth","SOLAR_DAY","SIDEREAL_DAY","SIDEREAL_ANGLE_AT_EPOCH","PLANAR_RATIO","SHAPE_RATIO","HALT_RATIO","radUnits","unit","scale","angUnits","Math","PI","timeUnits","offset","velUnits","massUnits","intervUnits","Util","msg","div","i","arguments","length","console","log","a","sum","c","sqrt","b","Error","Array","isArray","map","x","a0","z","times","dot","n","res","angle","axis","m","cos","sin","toFixed","str","flds","split","dtflds","tmflds","toRadians","toDegrees","Settings","url","window","location","href","indexOf","substring","token","keyVal","key","decodeURIComponent","val","parseURL","Frame","inputs","defaults","camera","renderer","controls","animation","userControls","this","mouseTime","startedRun","setupTHREE","animDiv","anim","name","cameraPos","position","clone","cameraRot","rotation","copy","updateProjectionMatrix","setAnimation","showOptions","initialShowOptions","setState","options","empty","showingOptions","run","trace","here","render","requestAnimationFrame","loading","update","scene","now","e","longClickTime","domElement","dispatchEvent","CustomEvent","detail","elem","document","getElementById","body","PerspectiveCamera","cameraFoV","camNear","camFar","WebGLRenderer","antialias","setClearColor","setSize","size","resize","OrbitControls","raycaster","Raycaster","params","Line","threshold","Points","near","far","appendChild","canvas","addEventListener","mouseTimeUp","bind","mouseTimeDown","clickListener","raycast","raycastResult","rect","getBoundingClientRect","floor","clientX","left","right","width","y","clientY","top","bottom","height","mouse","setFromCamera","intersects","intersectObjects","children","found","inter","object","elementName","getIndexedName","index","instanceId","distanceToRay","aspect","innerWidth","innerHeight","UserControls","props","state","running","paused","currentTarget","pos","ind","reverse","pauseStart","speed","newShow","animOptions","img","className","onClick","timeClick","id","src","optionClick","Component","RingGeometry","innerRadius","outerRadius","thetaSegments","phiSegments","thetaStart","thetaLength","type","parameters","max","indices","vertices","normals","uvs","radius","radiusStep","vertex","Vector3","uv","Vector2","j","segment","push","thetaSegmentLevel","d","setIndex","setAttribute","Float32BufferAttribute","data","BufferGeometry","Animation","startup","Euler","sceneElements","runOne","counter","segments","delta","Scene","quiet","timeID","timeElem","settings","updateElements","rfunc","elemName","sceneElement","component","add","Object","keys","remove","faster","open","animFactory","getAnimation","frame","newTime","parseTime","setTime","parse","addElement","innerHTML","timeFormatter","millis","dateLocal","toISOString","baseAnimation","setAnim","texture","ring","mesh","loader","TextureLoader","bump","spec","specColor","load","Color","Mesh","SphereGeometry","MeshPhongMaterial","bumpMap","bumpScale","specularMap","specular","rotateX","receiveShadow","ringG","rMat","side","DoubleSide","ringM","set","loadStars","callback","xhr","XMLHttpRequest","file","galaxy","onload","zz","stars","responseText","json","JSON","onerror","send","colorChar","spt","startsWith","charAt","PrepStar","star","v","u","w","sizes","factor","cc","getSize","color","SptColors","getColor","np","clr","Action","opts","action","args","TextInput","placeholder","value","onKeyUp","event","target","OptionsSelector","nullDiv","direct","directContent","selection","evt","opt","onChange","change","FromTo","fromDft","toDft","fromPlaceholder","toPlaceholder","mouseDown","mouseUp","contentID","fromRef","createRef","toRef","from","current","to","stopPropagation","idPrefix","ref","defaultValue","onMouseDown","mouseDownF","onMouseUp","mouseUpF","StarFinder","Stars","simbadCache","nameLC","toLowerCase","getFromCatalog","getFromSimbadCache","getFromSimbad","encodeURIComponent","onreadystatechange","readyState","DONE","simb","parseSimbad","text","lines","getTok","inIds","line","setHIP_ID","l","Number","parseInt","pmr","pmd","rv","fld","trim","Connecter","starFinder","getStar","fromStar","toStar","LocalGalaxy","fields","savedLine","finishConstruction","starData","ringIndices","material","MeshBasicMaterial","wireframe","baseStar","baseRing","theStars","InstancedMesh","mat","Matrix4","makeScale","setPosition","setMatrixAt","setColorAt","theRings","r","instanceColor","needsUpdate","scl","getMatrixAt","instanceMatrix","addTimeDisplay","yr","names","entry","updateTime","drawLine","hideLine","openHelp","results","showString","dist","distPC","distLY","connecter","connect","lineDrawer","starMessage","v1","v2","LineBasicMaterial","geometry","setFromPoints","fromNP","toNP","fromID","toID","fromSPT","toSPT","distanceTo","isNaN","Kepler","ma","ecc","fma","ea","sinh","fdma","cosh","emin","emax","eaTest","abs","asinh","maTest","iter","maNew","eaNew","eaDelta","smaller","subiter","deltaNew","maX","QOrb","input","doLog","lastT","lastTA","rot","t0","per","coords","precession","precessData","Lm","ep0","fOmega","fNu","dt","dOmega","dNu","updRot","cd","sd","so","co","t","ta","posTA","vTransform","rs","rm","mag","sn","p","getRot","nu","vrad","f","vtan","vtot","vadd","tan","tanh","tmp","atan","taMin","taMax","acos","Parameter","dim","varies","units","ParameterFactory","getParamInfo","SCALAR","VECTOR","MATRIX","determinant3","BLOB","LoadOrigins","gadd","addGenerator","pgen","genParam","generators","M","E","NaN","g","dm","cbrt","sign","em","getScalar","atanh","f1","cross","f2","vec","eccv","ef2","L","vv","vm","omega","POSITIVE_INFINITY","ml","cs","lp","pnode","atan2","m1","pow","pmag","eccm","o","ci","si","tx","EA","descrip","caseConv","legalParameters","variables","constants","fiducial","pt","knownParams","gens","gen","reqs","allFound","xname","param","generate","func","arr","info","baseRender","inp","called","toExponential","toPrecision","addParam","Orbit","newName","conOrVar","flag","have","forEach","addParameter","getName","cycle","updateParam","pn","newComputable","getNames","knowns","sort","deriveParameter","getParameter","qorb","Planets","bases","initialize","elems","derivs","Eccen","ML","LonP","Omega","Per","MA","corrections","corr","elements","mass","diameter","ringAngle","ringColor","base","pname","getElements","orb","quickOrbit","parseMPCData","startTime","mpcdata","nskip","nhyper","nAst","nCom","unknowns","Name","Designation_and_name","Orbit_type","Peri","Node","Year_of_perihelion","mon","Month_of_perihelion","Day_of_perihelion","t1970","setDate","peridist","Perihelion_dist","epoch","Epoch","orbit","H","loadMPCData","OrbitPlot","orbitR","orbitXYZ","points","pi","Planet","start","qorbit","wireFrame","useSize","ratio","log10","sphere","ret","Ring","_inverseMatrix","_ray","Ray","_sphere","Sphere","_position","AngPoints","PointsMaterial","updateMorphTargets","maxAngSq","source","matrixWorld","drawRange","boundingSphere","computeBoundingSphere","applyMatrix4","ray","intersectsSphere","invert","isBufferGeometry","positionAttribute","attributes","il","min","count","getX","fromBufferAttribute","testPoint","error","morphAttributes","morphAttribute","undefined","morphTargetInfluences","morphTargetDictionary","String","morphTargets","Object3D","point","localThresholdSq","rayPointDistanceSq","distanceSqToPoint","origin","distanceToSquared","intersectPoint","closestPointToPoint","distance","face","prototype","isPoints","SmallBodies","smbData","colorLookup","getPositions","px","allTypes","colors","h","col","c3","fac","getColors","sizeAttenuation","vertexColors","Sun","sunSize","sunColor","sunWire","sunSegments","sunSegements","sunName","sunPosition","SecondaryOrbit","primary","secondary","secScale","prime","sec","pstate","sstate","ChainedOrbit","orbits","usePrior","useSubseq","norbit","isPrior","isSubseq","interp","stopTime","stop","norbits","r0","setOrbit","curr","f0","r1","chainDescrip","chain","prior","setPrior","subseq","setSubseq","addStructure","porb","getOrbit","addOrbit","missions","Missions","miss","createChain","ConeGeometry","SolarSystem","planets","addSun","addPlanets","addSmallBodies","longClickEvt","optionState","doLongClick","matched","endsWith","test","Anims","isAnimation","entries","nearby","findBody","planetBody","xi","planetData","orbitLine","ringElement","smbCallback","addBody","openParams","resArr","userBody","Satellite","textShowing","planetOrbit","sunlight","DirectionalLight","AmbientLight","createSatellite","moon","createSphere","satelliteOrbit","phase","CoordTrans","ang","sin_dg","cos_dg","alphaG","deltaG","lonE","vx","toVector","transform","vy","vz","cos_d","sin_d","cos_delta","sin_delta","sin_b","asin","num","denom","RADIAN","crd","result","name_or_angles","transformations","coordDefs","eqgal","eqec","galeq","eceq","ecgal","galec","SatPrecession","rE","mE","e2","cos_i","sin_i","NoradReader","parseLines","satp","addPrecession","latestEpoch","parseNorad","smallestA","l0","l1","l2","desig","yday","parseFloat","inclination","ascNode","argPerigee","mm","idays","leap","days","Satellites","satData","toUpperCase","Earth","moonRef","lunarOrbitData","N0","prec","lunarTexture","copyright","getCoords","earthOrbit","moonScale","earth","createEarthSphere","lorb","qlorb","moonOrbit","createMoonSphere","rotAng","addSatellites","setMoonScale","baseTime","note","planet","TransformedOrbit","transforms","trans","multi","PlanetarySystem","moons","eceqE","angs","rotAxis","ra","dec","eqEeqP","planetName","addTransform","castShadow","createPlanet","moonInfo","addMoons","moonName","md","morb","getMoonOrbit","lapTrans","rad","frac","texturedSphere","rendering","rotationPhase","rotationPeriod","pData","planetRadius","moonData","mElems","sub","Mercury","dr","Venus","Mars","fq","Phobos","pNu","pOmega","Deimos","Jupiter","Io","Europa","Ganymede","Callisto","Amalthea","Thebe","Adrastea","Metis","Himalia","Elara","Pasiphae","Sinope","Lysithea","Carme","Ananke","Leda","Callirrhoe","Themisto","Megaclite","Taygete","Chaldene","Harpalyke","Kalyke","Iocaste","Erinome","Isonoe","Praxidike","Autonoe","Thyone","Hermippe","Aitne","Eurydome","Euanthe","Euporie","Orthosie","Sponde","Kale","Pasithee","Hegemone","Mneme","Aoede","Thelxinoe","Arche","Kallichore","Helike","Carpo","Eukelade","Cyllene","Kore","Herse","Saturn","transparent","Mimas","Enceladus","Tethys","Dione","Rhea","Titan","Hyperion","Iapetus","Phoebe","Janus","Epimetheus","Helene","Telesto","Calypso","Atlas","Prometheus","Pandora","Pan","Methone","Pallene","Polydeuces","Daphnis","Anthe","Aegaeon","Ymir","Paaliaq","Tarvos","Ijiraq","Suttungr","Kiviuq","Mundilfari","Albiorix","Skathi","Erriapus","Siarnaq","Thrymr","Narvi","Aegir","Bebhionn","Bergelmir","Bestla","Farbauti","Fenrir","Fornjot","Hati","Hyrrokkin","Kari","Loge","Skoll","Surtur","Jarnsaxa","Greip","Tarqeq","Uranus","Ariel","Umbriel","Titania","Oberon","Miranda","Cordelia","Ophelia","Bianca","Cressida","Desdemona","Juliet","Portia","Rosalind","Belinda","Puck","Perdita","Mab","Cupid","Caliban","Sycorax","Prospero","Setebos","Stephano","Trinculo","Francisco","Margaret","Ferdinand","Neptune","Triton","Nereid","Naiad","Thalassa","Despina","Galatea","Larissa","Proteus","Halimede","Psamathe","Sao","Laomedeia","Neso","Pluto","Charon","Nix","ellipsoid","Hydra","Kerberos","Styx","singleton","available","mercury","venus","mars","jupiter","saturn","uranus","neptune","pluto","cache","UnitLegend","Units","row","cycleUnits","hidden","status","Row","validated","unitIndex","parameter","showingUnit","computed","values","initVal","replace","pop","getDftUnit","genValues","renderToUnit","validate","valuesArr","dispScalar","getVector","dispVector","prefix","cname","align","handleChange","dispVal","Debug","r2","diff","datetime","voy","OrbitCalculator","fixed","fixedRef","variesRef","orbitName","displayCount","doRef","setOrbitName","colSpan","compute","displayOrbit","clearAll","clearVarying","clear","rows","all","concat","updated","totalUpdates","newPar","setParameter","getOrbitName","orbitCount","mrat","amim","addExternalOrbit","App","appKey","dx","dy","style","onWindowResize","solar","setUserControls","GLOBALS","win","opener","setAnimFactory","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.96a82cec.chunk.js","sourcesContent":["\r\nclass Constants {\r\n    \r\n    //// Physics and Astronomy\r\n    \r\n    /** Product of  G and MSun which is known better than either individually. */\r\n    static GMSun = 1.32712440018e20;   // [m3/s2] \r\n    \r\n    /** Gravitational constant. */\r\n    static G     = 6.6743E-11;         // [m3/kg/s2]\r\n    \r\n    /** The mass of the sun */\r\n    static MSun  = Constants.GMSun/Constants.G;            // [kg] 1.989E30;\r\n    \r\n    /** Mass of the earth */\r\n    static MEarth = 1/332946.0487 * Constants.MSun;\r\n    \r\n    /** The length of an astronomical unit */\r\n    static AU    = 149597870700.;      // [m]    \r\n    \r\n    /** Length of century...  assuming 24.25 leap days/century */\r\n    static CENTURY = (365*100 + 24.25)*86400; // [s] \r\n    \r\n    /** Julian day of 2000-01-01 */\r\n    static JD0 = 2451544.5;                   // [days]\r\n    \r\n    /** Unix epoch of 2000-01-01, need to worry about time zone  */\r\n    static UTCDate(year, month, day) {\r\n        let date = new Date();\r\n        date.setUTCFullYear(year);\r\n        date.setUTCMonth(month-1);  // Remember difference.\r\n        date.setUTCDate(day);\r\n        date.setUTCHours(0);\r\n        date.setUTCMinutes(0);\r\n        date.setUTCSeconds(0);\r\n        date.setUTCMilliseconds(0);\r\n        return date;\r\n    }\r\n    \r\n    static MJD(time) {\r\n        return time/86400 + Constants.JD0;\r\n    }\r\n    \r\n    static MJDtime(mjd) {\r\n        return 86400 * (mjd-Constants.JD0);\r\n    }\r\n    \r\n    static Epoch0 = Constants.UTCDate(2000, 1, 1).getTime()/1000;   // [s] \r\n    \r\n    /** Diameter of the Sun */\r\n    static dSun = 1.392e9;  // m \r\n    \r\n    /** Radius of the Earth */\r\n    static rEarth = 6.3781e6; // m\r\n    \r\n    static SOLAR_DAY    = 86400;      // s\r\n    static SIDEREAL_DAY = 86164.0905; // s \r\n    \r\n    // Angle of Earth's rotation at 2000.0\r\n    static SIDEREAL_ANGLE_AT_EPOCH = 175.1731379442;   // d (from http://neoprogrammics.com/sidereal_time_calculator/index.php\r\n \r\n    //// Programmatic constants\r\n    \r\n    /** Criterion for planar orbit (to prefer periapsis vector to line of nodes) */\r\n    static PLANAR_RATIO = 1.e-10;\r\n    \r\n    /** Criterion for radial (1-e) or circular (e) orbit. */\r\n    static SHAPE_RATIO = 1.e-10;\r\n        \r\n    /** Delta required to halt Newton-Raphson.  Note that you\r\n     *  can just use the values for angles in radians without scaling.\r\n     */\r\n    static  HALT_RATIO = 1.e-12;\r\n    \r\n    \r\n    // Units\r\n    static radUnits = [{unit: \"au\", scale: Constants.AU}, {unit: \"km\", scale: 1000}, {unit: \"m\", scale: 1}, \r\n                  {unit: \"rE\", scale: Constants.rEarth}];\r\n\r\n    static angUnits =  [{unit: \"d\", scale: Math.PI/180}, {unit: \"rad\", scale:1}];\r\n\r\n    static timeUnits = [{unit: \"day\",    scale: 86400}, {unit: \"s\", scale:1}, \r\n                   {unit:\"jd\", scale: 86400, offset: Constants.JD0}];\r\n\r\n    static velUnits = [{unit: \"au/day\", scale: Constants.AU/86400}, \r\n                       {unit: \"km/s\", scale: 1000}, {unit: \"m/s\", scale: 1}];\r\n                   \r\n    static massUnits = [{unit: \"Ms\", scale: Constants.MSun}, {unit: \"Me\", scale: Constants.MEarth},\r\n        {unit:\"kg\", scale: 1}];\r\n    \r\n    static intervUnits = [{unit: \"day\", scale: 86400}, {unit: \"y\", scale: 31558149.76}, \r\n                         {unit: \"s\", scale: 1}];\r\n\r\n}\r\n\r\nexport default Constants;","import Constants from \"../std/Constants.js\";\r\n\r\nclass Util {\r\n    \r\n    static log() {\r\n        var msg = \"\";\r\n        var div = \"\";\r\n        for (var i=0; i<arguments.length; i += 1) {\r\n            msg += div + arguments[i];\r\n            div = \" \";\r\n        }\r\n        console.log(msg);\r\n    }\r\n    \r\n    static determinant3(a) {\r\n        const x =  a[0][0]*( (a[1][1]*a[2][2]) - (a[1][2]*a[2][1]) );\r\n        const y = -a[0][1]*( (a[1][0]*a[2][2]) - (a[1][2]*a[2][0]) );\r\n        const z =  a[0][2]*( (a[1][0]*a[2][1]) - (a[1][1]*a[2][0]) );\r\n        return x+y+z;\r\n    }    \r\n    \r\n    static mag(a) {\r\n        var sum = 0;\r\n        for (var c in a) {\r\n            sum += a[c]*a[c];\r\n        }\r\n        return Math.sqrt(sum);\r\n    }\r\n    \r\n    static dot(a, b) {\r\n        if (a.length !== b.length) {\r\n            throw new Error(\"Incompatible vectors in dot product\");\r\n        }\r\n        var sum = 0;\r\n        for (var i=0; i<a.length; i += 1) {\r\n            sum += a[i]*b[i];\r\n        }\r\n        return sum;\r\n    }\r\n    \r\n    static times(a, b) {\r\n        // We support \r\n        //    scalar*vector\r\n        //    matrix*vector\r\n        //    matrix*matrix\r\n        \r\n        if (!Array.isArray(b)) {\r\n            throw new Error(\"Second element in times is scalar, not vector or matrix\");\r\n        }\r\n        \r\n        \r\n        if (!Array.isArray(a)) {\r\n            return b.map(x => a*x);\r\n        }\r\n        \r\n        var a0 = a[0];\r\n        // Check that the first element is a matrix\r\n        if (!Array.isArray(a0)) {\r\n            throw new Error(\"First element in times not scalar or matrix\");\r\n        }\r\n                \r\n        if (!Array.isArray(b[0])) {\r\n            \r\n            // Second element is vector so multiply it by matrix\r\n            return [\r\n                Util.dot(a[0], b),\r\n                Util.dot(a[1], b),\r\n                Util.dot(a[2], b)\r\n            ];\r\n        } else {\r\n            // Second element is matrix, so we do matrix multiply here.\r\n            var z = [];\r\n            for (var i=0; i<3; i += 1) {\r\n                z[i] = Util.times(a, b[i]);\r\n            }\r\n            return z;\r\n        }\r\n    }\r\n    \r\n    // Get a row vector from a matrix (given as a vector of columns)\r\n    static rvec(a, n) {\r\n        var res =  [a[0][n], a[1][n], a[2][n]];\r\n        return res;\r\n    }\r\n        \r\n\r\n    // Add two vectors.\r\n    static vadd(a, b) {\r\n        if (a.length !== b.length) {\r\n            throw new Error(\"Incompatible vectors in add\");\r\n        }\r\n        var res = [...a];\r\n        for (var i=0; i < res.length; i += 1) {\r\n            res[i] += b[i];\r\n        }\r\n        return res;\r\n    }\r\n    \r\n    // Cross product of two vectors.\r\n    static cross(a, b) {\r\n        \r\n        return [\r\n           a[1]*b[2] - a[2]*b[1],\r\n          -a[0]*b[2] + a[2]*b[0],\r\n           a[0]*b[1] - a[1]*b[0]\r\n        ];\r\n    }\r\n\r\n    // Rotation matrix for a rotation of the given angle around the specified axis.\r\n    static rot(angle, axis) {\r\n        \r\n        var a,b,c;\r\n        switch (axis) {\r\n            case \"x\":\r\n                a=1;\r\n                b=2;\r\n                c=0;\r\n                break;\r\n            case \"y\":\r\n                a=0;\r\n                b=2;\r\n                c=1;\r\n                break;\r\n            case \"z\":\r\n                a=0;\r\n                b=1;\r\n                c=2;\r\n                break;\r\n            default: throw new Error(\"Unknown axis\");\r\n        }\r\n        \r\n        var m = [[0,0,0],[0,0,0],[0,0,0]];\r\n        \r\n        m[c][c] = 1;\r\n        m[b][b] =  m[a][a] = Math.cos(angle);\r\n        m[a][b] =  Math.sin(angle);\r\n        m[b][a] = -m[a][b];\r\n        return m;\r\n    }\r\n    \r\n    static toRadians = function(a) {\r\n        return a*Math.PI/180;\r\n    }\r\n    \r\n    static toDegrees = function(a) {\r\n        return a*180/Math.PI;\r\n    }\r\n\r\n    static printMatrix(a) {\r\n        Util.log(\"Matrix: \");        \r\n        for (var i=0; i<3; i += 1) {\r\n            Util.log(\"    \"+a[0][i].toFixed(5)+\" \"+a[1][i].toFixed(5)+\" \"+a[2][i].toFixed(5));            \r\n        }\r\n    }\r\n\r\n    // Enter a UTC date and return seconds\r\n    // since 2000\r\n    static datetime(str) {\r\n        let flds   = str.split(\"T\");\r\n        let dtflds = flds[0].split(\"-\");\r\n        let tmflds = flds[1].split(\":\");\r\n        let date = new Date();\r\n        date.setUTCFullYear(dtflds[0]);\r\n        date.setUTCMonth   (dtflds[1]-1); // Stupid!!\r\n        date.setUTCDate    (dtflds[2]);\r\n        \r\n        date.setUTCHours   (tmflds[0]);\r\n        date.setUTCMinutes (tmflds[1]);\r\n        if (tmflds[2]) {\r\n            date.setUTCSeconds(tmflds[2]);\r\n        } else {\r\n            date.setUTCSeconds(0);\r\n        }\r\n        date.setUTCMilliseconds(0);\r\n        return date.getTime()/1000 - Constants.Epoch0;        \r\n    }\r\n}\r\n\r\nexport default Util;","import Util from \"../std/Util.js\";\n\nconst Settings = {};\n\nfunction parseURL() {\n    Util.log(\"Parsing settings\");\n\n    const url = window.location.href;\n    if (url.indexOf(\"?\") >= 0) {\n        let data = url.substring(url.indexOf(\"?\")+1);\n        let flds = data.split(\"&\");\n        for (let i=0; i<flds.length; i += 1) {\n            let token = flds[i];\n            if (token.indexOf(\"=\") > 0) {\n                let keyVal = token.split(\"=\", 2);\n                let key = decodeURIComponent(keyVal[0]);\n                let val = decodeURIComponent(keyVal[1]);\n                Settings[key] = val;                \n            } else {\n                token = decodeURIComponent(token);\n                Settings[token] = true;\n            }\n        }\n    }\n}\n\nparseURL();\n\nexport default Settings;\n\n\n","/**\n * This class defines the framework in which animations are displayed.\n * We use a single framework for all animations.\n */\nimport {PerspectiveCamera, WebGLRenderer, Raycaster} from \"three\";\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\n\nimport Util from \"../std/Util.js\";\nimport Constants from \"../std/Constants.js\";\n\nclass Frame {\n \n    \n    // Build the orrery frameword. \n    // The OrreryBuilder will actually add the components to\n    // the orrery.\n    constructor(inputs) {\n        const defaults = {            \n            camera:       null,  // The camera associated with the frame\n            renderer:     null,  // The renderer used\n            controls:     null,  // The controls used                                  \n            animation:    null,   // The animation being run\n            userControls: null  // User control widget.                                    \n        };\n        \n        for (var key in defaults) {\n            this[key] = defaults[key];\n        }\n        \n        this.mouseTime = null;\n        \n        // Override defaults.\n        if (inputs) {\n            for (var key in inputs) {\n                this[key] = inputs[key];\n            }\n        }\n        \n        this.startedRun       = false;\n        \n        this.setupTHREE(this.animDiv);\n    }\n    \n    setUserControls(controls) {\n        this.userControls = controls;\n    }\n    \n    setAnimation(anim) {\n        \n        var oldAnim = this.animation;\n        if (this.animation) { \n            // Save the camera position of current animation.\n            Util.log(\"Switching animations from \",this.animation.name,\"to\",anim.name);\n            this.animation.cameraPos = this.camera.position.clone();\n            this.animation.cameraRot = this.camera.rotation.clone();\n        } else {\n            Util.log(\"Starting initial animation \",anim.name);\n        }\n        this.animation = anim;\n        \n        this.camera.position.copy(anim.cameraPos);\n        this.camera.rotation.copy(anim.cameraRot);\n        \n        this.camera.updateProjectionMatrix();        \n        this.userControls.setAnimation(anim);\n        \n        let showOptions = false;\n        if (anim.initialShowOptions) {\n            showOptions = true;\n        }\n        \n        this.userControls.setState({options: this.empty,\n                                   showingOptions: showOptions})\n            \n        if (!this.startedRun) {\n            this.run();\n        }\n    }\n        \n    // Run the animations.  Note that when\n    // we change animations, the underlying this.animation will\n    // change, but we are still using the same frame and sequence\n    // of render calls.\n    run (){\n        \n        if (this.startedRun) {\n            Util.log(\"Attempt to start second animation run\");\n            console.trace();\n            return;\n        }\n        \n        this.startedRun = true;\n        // Save context for render\n        const here   = this;\n        var cnter = 0;        \n        const render = function () {\n            cnter += 1;\n            \n            requestAnimationFrame(render);\n            if (here.animation.loading) {\n                Util.log(\"Loading \"+here.animation.name);\n\n            } else {\n                here.animation.update();\n                here.controls.update(1);\n                here.renderer.render(here.animation.scene, here.camera);\n            }\n        }\n        render();\n    }\n    \n    mouseTimeDown() {\n        if (!this.mouseTime) {\n            this.mouseTime = Date.now();\n        }\n    }\n    \n    mouseTimeUp(e) {        \n        if (!this.mouseTime) {\n        } else if (this.animation.longClickTime) {\n            if ((Date.now() - this.mouseTime) > this.animation.longClickTime) {\n                this.renderer.domElement.dispatchEvent(\n                   new CustomEvent(\"longClick\", {detail:e})\n                );               \n            }\n        }\n        this.mouseTime = null;\n    }\n    \n    // Define the THREE.js framework.\n    setupTHREE(div) {\n        \n        var elem;\n        if (div) {\n            elem = document.getElementById(div);\n        }\n        if (!elem) {\n            elem = document.body;\n        }\n        \n        this.camera   = new PerspectiveCamera( this.cameraFoV, 1, this.camNear, this.camFar );\n        this.renderer = new WebGLRenderer({antialias: true});\n\n        this.renderer.setClearColor(\"#050505\");\n        \n        this.renderer.setSize(this.size[0], this.size[1]);\n        this.resize(this.size[0], this.size[1]);\n\t\t\n        this.controls = new OrbitControls (this.camera, this.renderer.domElement);\n        this.raycaster = new Raycaster();\n        this.raycaster.params.Line   = { threshold: .12 };\n\tthis.raycaster.params.Points = { threshold: .05 };\n        this.raycaster.near = 0;\n        this.raycaster.far  = 500;\n        \n        elem.appendChild(this.renderer.domElement);\n        \n        const canvas = this.renderer.domElement;\n        \n        canvas.addEventListener(\"mouseup\",        this.mouseTimeUp.bind(this));\n        canvas.addEventListener(\"mousedown\",      this.mouseTimeDown.bind(this));\n        canvas.addEventListener(\"click\",          this.clickListener.bind(this));\n    }\n    \n    clickListener(e) {\n        let res = this.raycast(e);\n        this.animation.raycastResult(res);\n    }\n    \n    // This method take an event and uses the mouse position to look for\n    // nearby objects.  The intersecting or nearby objects are returned.\n    \n    raycast(e) {\n        \n        //1. sets the mouse position with a coordinate system where the center\n        //   of the screen is the origin\n        const canvas = this.renderer.domElement;\n        var rect = canvas.getBoundingClientRect();\n        const x = Math.floor( ( e.clientX - rect.left ) / ( rect.right - rect.left ) * canvas.width );\n        const y = Math.floor( ( e.clientY - rect.top ) / ( rect.bottom - rect.top ) * canvas.height );\n        \n        const mouse = {};\n        mouse.x =   ( x / canvas.width ) * 2 - 1;\n        mouse.y = - ( y/ canvas.height ) * 2 + 1;\n\n        //2. set the picking ray from the camera position and mouse coordinates\n        this.raycaster.setFromCamera( mouse, this.camera ); \n\n        //3. compute intersections\n        var intersects = this.raycaster.intersectObjects( this.animation.scene.children, true );\n\n        const found = {};\n        for ( var i = 0; i < intersects.length; i++ ) {\n            const inter = intersects[i];\n            var name    = inter.object.elementName;\n            // A composite object may have different names\n            // associated with each index.\n            if (inter.object.getIndexedName) {\n                // Points use index, InstancedMesh's using instanceId\n                const index = inter.index  || inter.instanceId;\n                name = inter.object.getIndexedName(index);\n            }\n            if (found[name]) {\n                if (inter.distanceToRay < found[name]) {\n                    found[name] = inter.distanceToRay;\n                }\n            } else {\n                found[name] = inter.distanceToRay;\n            }\n        }\n        return found;\n    }\n    \n    // Respond to a resize in the window.\n    resize(width, height) {\n        if (!this.camera || ! this.renderer) {\n            Util.log(\"Frame.resize called prematurely\");\n            return;\n        }\n        this.camera.aspect = width / height;\n        this.camera.updateProjectionMatrix();\n        this.renderer.setSize( window.innerWidth, window.innerHeight );\n    }\n};\n\nexport default Frame;","import {Component} from 'react';\nimport Util from \"../std/Util.js\";\nclass UserControls extends Component {\n    constructor(props) {\n        super(props);\n        this.animation = null;\n        this.empty = <div></div> ;\n        this.state = {\n            options: this.empty,\n            showingOptions: false,\n            running: true\n        };\n    }\n    \n    setAnimation(anim) {\n        this.animation = anim;\n        this.setState({running: !anim.paused});\n    }\n    \n    timeClick(e) {\n        if (!this.animation) {\n            return;\n        }\n        const cx = e.clientX;\n        const cy = e.clientY;\n        const targ = e.currentTarget;\n        const rect = targ.getBoundingClientRect();\n        const pos = (e.clientX - rect.left ) / ( rect.right - rect.left );\n        var ind = 0;\n        if (pos > 0.2 && pos <= 0.45) {\n            ind = 1;\n        } else if (pos > 0.45 && pos <= 0.67) {\n            ind = 2;\n        } else if (pos > 0.67) {\n            ind = 3;\n        }\n        // 0 = reverse, 1 = pause/restart, 2 = slower, 3 = faster\n        if (this.state.running) {\n            switch(ind) {\n                case 0: { this.animation.reverse(); break}\n                case 1: { this.animation.pauseStart(); break}\n                case 2: { this.animation.speed(false); break}\n                case 3: { this.animation.speed(true); break}\n            }\n        } else {\n            if (ind == 1) {\n                this.animation.pauseStart();\n            }\n        }\n        if (ind == 1) {\n            this.setState({running: !this.state.running});\n        }\n    }\n    \n    \n    optionClick() {\n        const newShow = !this.state.showingOptions;\n        if (!this.animation) {\n            return;\n        }\n        \n        \n        if (newShow) {\n            var animOptions = this.animation.options(this, \"optBox\");            \n            this.setState({options: animOptions, showingOptions: true});\n        } else {\n            this.setState({options: this.empty,\n                showingOptions: false});\n        }\n    }\n    \n    render() {\n        const here = this;\n        var img = this.state.running? 'runningT.png': 'stoppedT.png';\n        return (\n          <div className='glasspane'>\n            <div>\n              <img onClick={here.timeClick.bind(here)} height='38' width='86' id='speedButtons' src={img}/>\n              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n              <img onClick={here.optionClick.bind(here)} height='38' src='dotsT.png' />   \n            </div>                  \n            <strong>Time:</strong>\n            <span id=\"timeDisplay\"></span>\n            {this.state.options}\n            <div  id=\"clickTarget\"></div>\n          </div>\n        );\n    }\n}\n\nexport default UserControls;\n","import { BufferGeometry } from 'three';\nimport { Float32BufferAttribute } from 'three';\nimport { Vector2 } from 'three';\nimport { Vector3 } from 'three';\n\n// Tried to update the UV mapping.\n\nclass RingGeometry extends BufferGeometry {\n\n\tconstructor( innerRadius = 0.5, outerRadius = 1, thetaSegments = 8, phiSegments = 1, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'RingGeometry';\n\n\t\tthis.parameters = {\n\t\t\tinnerRadius: innerRadius,\n\t\t\touterRadius: outerRadius,\n\t\t\tthetaSegments: thetaSegments,\n\t\t\tphiSegments: phiSegments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthetaSegments = Math.max( 3, thetaSegments );\n\t\tphiSegments = Math.max( 1, phiSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// some helper variables\n\n\t\tlet radius = innerRadius;\n\t\tconst radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= phiSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= thetaSegments; i ++ ) {\n\n\t\t\t\t// values are generate from the inside of the ring to the outside\n\n\t\t\t\tconst segment = thetaStart + i / thetaSegments * thetaLength;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = (radius-innerRadius)/(outerRadius-innerRadius);\n\t\t\t\tuv.y = segment/Math.PI/2;\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t}\n\n\t\t\t// increase the radius for next row of vertices\n\n\t\t\tradius += radiusStep;\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let j = 0; j < phiSegments; j ++ ) {\n\n\t\t\tconst thetaSegmentLevel = j * ( thetaSegments + 1 );\n\n\t\t\tfor ( let i = 0; i < thetaSegments; i ++ ) {\n\n\t\t\t\tconst segment = i + thetaSegmentLevel;\n\n\t\t\t\tconst a = segment;\n\t\t\t\tconst b = segment + thetaSegments + 1;\n\t\t\t\tconst c = segment + thetaSegments + 2;\n\t\t\t\tconst d = segment + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new RingGeometry( data.innerRadius, data.outerRadius, data.thetaSegments, data.phiSegments, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\n\nexport { RingGeometry, RingGeometry as RingBufferGeometry };\n","/** An animation is a scene comprised of elements\n * whose state varies with time. This class addresses non-scene specific management\n * of the animation. \n */\n\nimport {Scene, Vector3, Euler} from \"three\";\nimport {Mesh, TextureLoader, Color, MeshPhongMaterial} from \"three\";\nimport {SphereGeometry, \n        MeshLambertMaterial, MeshBasicMaterial, DoubleSide} from \"three\";\n    \nimport {RingGeometry} from \"../three/RingGeometry.js\";  // Local Override to change UV mapping\n\nimport Util        from \"../std/Util.js\";\nimport Settings    from \"../std/Settings.js\";\nimport Constants   from \"../std/Constants.js\";\nimport animFactory from \"../animations/AnimationFactory.js\";\n\nclass Animation {\n    \n    // Set defaults and create basic Three framework\n    constructor(inputs) {\n        \n        // Defaults\n        const startup = {\n            cameraPos:     new Vector3(0,0,6),      // Initial position of camera\n            cameraRot:     new Euler(0,0,0,\"XYZ\"),  // Initial rotation.\n            \n            cameraFoV:     75,       // Width of field of view.\n            camNear:       0.0001,   // Nearest object we can see\n            camFar:        2000.,    // Most distant object we can see\n            \n            sceneElements: {},       // The elements that comprise the scene.\n            \n            paused:        false,    // Has the user paused the time updates?\n            runOne:        false,    // Run a single animation frame, then stop.\n            \n            counter:       0,        // The number of renders    \n            time:          Date.now()/1000 - Constants.Epoch0,  // The current time\n            \n            segments:      40,        // How many segments when drawing spheres.\n            \n            delta:         21600,     // The interval between steps (in seconds=6 hours)\n            scene:         new Scene(), // The scene that holds this animation.\n            name:          \"Generic\", // Place holder name\n            quiet:         false,     // Can suppress messages about loading components.\n            loading:       false      // Set if something needs to be loaded before display\n        };\n \n        // Set defaults\n        for (var key in startup) {\n            this[key] = startup[key];\n        }\n        \n        // Override defaults.\n        if (inputs) {\n            for (var key in inputs) {\n                this[key] = inputs[key];\n            }\n        }\n        \n        // Specify where the time is to be displayed.\n        if (this.timeID) {\n            this.timeElem = document.getElementById(this.timeID);\n        }\n        \n        this.settings = Settings;\n\n    }\n\n    // Update the content of the animation for the next frame.\n    // This does not do the animation, it only does any updates\n    // needed to do the rendering.\n    update (){\n        this.counter += 1;\n        \n        if (!this.paused) {\n            this.time += this.delta;\n            this.updateElements();\n        }\n    }\n    \n    // Update each element that has been added to the animation.\n    updateElements() {\n        for (var key in this.sceneElements) {\n            \n            // If the element has a function to be called for\n            // each rendering call it with the curren time.\n            var rfunc = this.sceneElements[key].render;\n            if (rfunc) {\n                rfunc(this.time);\n            }\n        }\n    }\n\n    // Add an element to the animation\n    // The sceneElement has three components:\n    //     name: A name (often the first as the elemName argument)\n    //     component: An element to be rendered in the scene\n    //         (optional: e.g., the time rendering has no associated three.js component)\n    //     render: A function to be called before doing the render.\n    //         (optional: e.g., a static component like the Sun may not need any updating.)\n    //   \n    addElement(elemName, sceneElement) {\n        \n        if (this.sceneElements[elemName]) {\n            Util.log(\"Attempt to duplicate element \"+elemName+\" in \"+this.name);\n            return;\n        }\n        this.sceneElements[elemName] = sceneElement;\n        if (sceneElement.component) {\n            sceneElement.component.elementName = elemName;\n            this.scene.add(sceneElement.component);\n        }\n        \n        // If adding lots of components, may wish to set quiet flag.\n        if (!this.quiet) {\n            Util.log(\"Added element #\"+Object.keys(this.sceneElements).length+\": \"+elemName+\" to \"+this.name);\n        }\n    }\n    \n    // Remove an element from the scene (permanently).\n    removeElement(elemName) {\n        if (!this.sceneElements[elemName]) {\n            Util.log(\"Request to delete non-existent element \"+name+\" of \"+this.name);\n            return;\n        }\n        this.scene.remove(this.sceneElements[elemName].component);\n        if (!this.quiet) {\n            Util.log(\"Removed element \"+elemName+\" of \"+this.name);\n        }\n        \n    }\n\n    // Change the time interval between frames.\n    speed(faster) {\n        if (faster) {\n            this.delta *= Math.sqrt(2);\n        } else {\n            this.delta /= Math.sqrt(2);\n        }\n    }\n \n    // Reverse the sign of the time intervals.\n    reverse() {\n        this.delta *= -1;\n    }\n    \n    // Pause or restart the animation.\n    pauseStart() {\n        this.paused      = !this.paused;\n    }\n    \n    // Set the time for the animation (in seconds since 2000)\n    setTime(time) {                \n        this.time   = time;\n        this.updateElements();\n    }\n \n    // Open the help window.\n    openHelp() {\n        window.open(\"help_top.html\", \"help\");\n    }\n\n    // Open the orbit params window.  Note that since\n    // this window shares code with the animation window,\n    // we actually call the same base URL and distinguish\n    // the window with a CGI parameer.\n    openParams() {\n        window.open(\"?app=OrbParams\", \"params\");\n    }\n\n    // Set the animation to be used to a new animation.\n    setAnim(animation) {\n        \n        const anim = animFactory.getAnimation(animation, {frame: this.frame, timeID: this.timeID});\n        this.frame.setAnimation(anim);\n    }\n\n    // Reset the time given an unparsed input.\n    // Different children may have different parseTime methods.\n    updateTime(time) {\n        var newTime = this.parseTime(time);\n        this.setTime(newTime);\n    }\n    \n    // The default time parser which uses the \n    // funky JavaScript Data.parse function.\n    parseTime(time) {\n        if (!time || time.length < 4) {\n            return;\n        }\n        if (time.indexOf(\":\") < 0) {\n            // Kludge that fixes a particular browser...\n            time += \" 00:00\";\n        }\n        var date = Date.parse(time);\n        if (date) {\n            const newTime = date/1000 - Constants.Epoch0;\n            return newTime;\n        } else {\n            return 0;\n        }       \n    }\n\n    // Add a time display widget to the window.\n    addTimeDisplay() {\n        const here = this;\n        this.addElement(\n                \"Timer\",\n                {name: \"tdisp\",\n                    render: function (time) {\n                        here.timeElem.innerHTML = here.timeFormatter(time);\n                    }\n                });\n    }\n\n    // Format a time given the time in seconds since 2000.\n    timeFormatter(time) {    \n        const millis = (time / 86400 + Constants.JD0 - 2440587.5) * 86400000;\n        const dateLocal = new Date(millis).toISOString();                       \n        return dateLocal.substring(0,dateLocal.length-5);\n    }\n    \n    // Return a simple options response.\n    options() {\n        return <div>No options available</div>;\n    }\n    \n    \n    // Handle a long click detected in the window.\n    // This default behavior goes to the \"baseAnimation\"\n    // if the user does a longClick in a corner.\n    // Children may do more specialized actions\n    // in response and use super.doLongClick if\n    // none of these seem appropriate.\n    doLongClick(e) {\n        e = e.detail;\n        if (this.baseAnimation) {\n            const canvas = this.frame.renderer.domElement;\n            var rect = canvas.getBoundingClientRect();\n            const x = ( e.clientX - rect.left ) / ( rect.right - rect.left );\n            const y = ( e.clientY - rect.top ) / ( rect.bottom - rect.top );\n        \n            if ( ( (x <= .1 ) || (x >= .9) )  &&\n                   (y <= .1 ) || (y >= .9) ) {\n                // This covers just 4 x 0.5*.1*.1 or 2% of the surface of the canvas.\n                this.setAnim(this.baseAnimation);\n            }\n        }\n    }\n    \n    // When loading a texture onto a sphere from a cartesian map,\n    // three.js renders the y axis of the map onto the y axis of the\n    // sphere, while the x and z axes are composed from x axis.\n    // This renders the center of the map at the 'north pole', i.e., maximum z.\n    // Since we want to use the proper coordinate system for the\n    // other system, we need to adjust to initially render\n    // the object and to ensure that we rotate along the appropriate axis.\n\n    createSphere(radius, segments, texture, ring) {\n        var mesh;\n        \n            const loader  = new TextureLoader();\n            let map  = null;\n            let bump = null;\n            let spec = null;\n            let specColor = null;\n            if (texture.map) {\n                map  = loader.load(texture.map);\n            }\n            if (texture.bump) {\n                bump = loader.load(texture.bump);\n            }\n            if (texture.spec) {\n                spec = loader.load(texture.spec);\n                specColor = new Color(\"grey\");\n            }\n            \n            mesh = new Mesh(\n            new SphereGeometry(radius, segments, segments),\n            new MeshPhongMaterial({\n                map:     map,\n                bumpMap: bump,\n                bumpScale: 0.005,\n                specularMap: spec,\n                specular: specColor\n            })\n        );\n        mesh.rotateX(Math.PI/2);  // Move the pole where it should be!\n        mesh.receiveShadow = true;\n        \n        if (ring) {\n            let map = new TextureLoader().load(ring.texture.map);\n            let ringG = new RingGeometry(ring.innerRadius, ring.outerRadius, 2*segments);\n            const rMat = \n                new MeshPhongMaterial({\n                   map:         map,\n                   specular:    specColor,\n                   side:        DoubleSide\n                });\n            let ringM = new Mesh(ringG, rMat);\n            ringM.position.set(0,0,0);\n            ringM.rotateX(Math.PI/2);\n            mesh.add(ringM);\n            ringM.receiveShadow = true;\n        }\n        return mesh;\n    }\n\n};\n\nexport default Animation;","import Util from \"../std/Util\";\n\nfunction loadStars(settings, callback) {\n    let xhr  = new XMLHttpRequest();\n    let file = \"data/galaxy_all.json\";\n    if (settings.galaxy == \"small\") {\n        file = \"data/idp_nearby40pc.json\";\n    }\n    xhr.open('GET', file, true);\n    xhr.onload  = function() {\n        let stars = xhr.responseText;\n        let json = JSON.parse(stars);\n        let zz;\n        for (zz in json) {\n            break;\n        }\n        callback(json[zz]);\n    };\n    xhr.onerror = function() {\n        Util.log(\"Called error function when loading stars!\");\n    }\n    \n    xhr.send(null);\n}\n\nexport default loadStars;\n\n","\nimport Util from \"../std/Util.js\";\nimport Dump from \"../std/Dump.js\";\n\nfunction colorChar(spt) {\n    if (spt == null) {\n        return null;\n    }\n    if (spt.length > 2) {\n        if (spt.startsWith(\"sd\")) {\n            spt = spt.substring(2);\n        }\n    }\n    if (spt.length > 1) {\n        if (spt.startsWith(\"D\")  || spt.startsWith(\"d\")) {\n            spt = spt.substring(1);\n        }\n    }\n    return spt.charAt(0);\n}\n\nfunction getSize(spt) {\n    \n    var sizes = {\n        \"M\": .15,\n        \"K\": .2,\n        \"G\": .25,\n        \"F\": 0.3,\n        \"A\": 0.35,\n        \"B\": 0.4,\n        \"O\": 0.45,\n        \"T\": 0.10,\n        \"Y\": 0.10,\n        \"W\": 0.45\n    }\n    if (!spt) {\n        return 0.01;\n    }\n            \n    let factor = 1;\n    if (spt.startsWith(\"sd\")  || spt.startsWith(\"d\")) {\n        factor *= 0.8;\n    }\n    \n    if (spt.startsWith(\"D\")) {\n        factor *= 0.5; \n    }\n    \n    let cc = colorChar(spt);\n    var size = 0.1;\n    \n    if (sizes[cc]) {\n        size = sizes[cc];\n        size *= factor;\n        if (spt.indexOf(\"IV\") > 0) {\n            size *= 1.3;\n        } else if (spt.indexOf(\"III\")) {\n            size *= 1.5;\n        } else if (spt.indexOf(\"II\")) {\n            size *= 1.7;\n        } else if (spt.indexOf(\"I\")) {\n            size *= 2.0;\n        }\n    }\n    \n    return size * .15;\n}\n\nfunction getColor(spt) {\n\n    var SptColors = {\n        \"M\": 0xff3300,\n        \"K\": 0xffaa66,\n        \"G\": 0xffff00,\n        \"F\": 0xffffaa,\n        \"A\": 0xffffff,\n        \"B\": 0xaaaaff,\n        \"D\": 0x00ff00,\n        \"O\": 0x0000ff,\n        \"s\": 0x00ff00,\n        \"W\": 0x0000FF,\n        \"T\": 0xEADDCA,\n        \"Y\": 0xEADDCA\n    };\n    \n    let col = 0x00FFFF;\n    let cc = colorChar(spt);\n    if (cc && SptColors[cc]) {\n        return SptColors[cc];\n    }\n\n    return col;\n}\n\n// Normally the size and color are derived\n// from the spectral type, but user can\n// supply it directly.\nconst PrepStar = function(star){\n    if (Array.isArray(star.x)) {\n        star.y = star.x[1];\n        star.z = star.x[2];\n        star.x = star.x[0];  // Last to avoid premature overwrite\n    }\n    if ((star.v != null) && Array.isArray(star.v)) {\n        star.u = star.v[0];\n        star.w = star.v[2];\n        star.v = star.v[1];  // Last to avoid premature overwrite\n    }\n    if (star.v == null) {\n        star.u = 0;\n        star.v = 0;\n        star.w = 0;\n    }\n\n    star.size = getSize(star.spt);\n    star.color  = getColor(star.spt);\n        \n    if (star.np > 0) {\n        star.ring = {};\n        var clr = 0x8800CC;\n        if (star.np == 2) {\n            clr = 0x00AAFF\n        } else if (star.np > 2) {\n            clr  = 0x00ff00;\n        }\n        star.ring.color = clr;\n    }\n    \n};\n\nexport default PrepStar;\n\n","import {Component} from \"react\";\nimport Util from \"../std/Util\";\n\n// This is a nothing component, but performs\n// some action when loaded.\nclass Action extends Component {\n    constructor(opts) {\n        super(opts);\n        this.action = opts.action;\n        if (opts.args) {\n            this.args = opts.args;\n        }\n    }\n    \n    render() {\n        return <span/>;\n    }\n    \n    componentDidMount() {\n        Util.log(\"In action:\"+this.action);\n        Util.log(\"   Args:\"+this.args);\n        this.action(this.args);\n    }   \n}\n\nexport default Action\n","import {Component} from \"react\";\nimport Util from \"../std/Util.js\";\n\nclass TextInput extends Component {\n    constructor(props) {\n        super(props);\n        if (props.placeholder) {\n            this.placeholder = props.placeholder;            \n        } else {\n            this.placeholder = \"Input...\";\n        }\n        if (props.callback) {\n            this.callback = props.callback;\n        } else {\n            this.callback = null;\n        }\n        this.state = {value: \"\"};\n    }\n\n    render() {\n        const here = this;\n        return (\n            <input size=\"16\" placeholder={here.placeholder}\n                onKeyUp={\n                  (event) => {\n                    if (event.key === 'Enter'  && here.callback) {\n                        here.callback(event.target.value);                       \n                    }\n                  }\n                }\n            />\n        )\n    }\n}\n\nexport default TextInput;","import {Component} from 'react';\nimport Util from \"../std/Util.js\";\nimport TextInput from \"./TextInput.js\";\n\nclass OptionsSelector extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.nullDiv = <div></div>;                \n        this.state = {\n            options:  [...props.options],\n            direct: props.direct,\n            directContent: props.directContent,\n            selection: {value: null, elem: this.nullDiv}            \n        }\n    }\n    \n    change(evt) {\n        const val = evt.target.value;\n        var   found = false;\n        var   i;\n        for (i=0; i<this.state.options.length; i += 1) {\n            if (this.state.options[i].value === val) {\n                found = true;\n                break;\n            }            \n        }\n        if (found) {\n            const opt = this.state.options[i];\n            this.setState({selection: opt});  \n        }\n    }\n    \n    render() {\n        \n        if (this.state.direct) {\n            return this.state.directContent;\n        }\n        \n        const options = this.state.options.map((elem) =>\n              <option key={elem.value}>{elem.value}</option> )\n        const elem = \n             <div>   \n                <select onChange={this.change.bind(this)} >\n                  {options}\n                </select><br/>\n                {this.state.selection.elem}\n             </div>                \n        ;\n        return elem;\n    }\n}\n\nexport default OptionsSelector;","import {Component, createRef} from \"react\";\nimport Util from \"../std/Util.js\";\n\nclass FromTo extends Component {\n    constructor(props) {\n        super(props);\n        \n        this.fromDft         = props.fromDft        ? props.fromDft:         \"\";\n        this.toDft           = props.toDft          ? props.toDft:           \"\";\n        this.fromPlaceholder = props.fromPlaceholder? props.fromPlaceholder: \"...from...\";\n        this.toPlaceholder   = props.toPlaceholder  ? props.toPlaceholder:   \"...to...\";\n        this.mouseDown       = props.mouseDown;\n        this.mouseUp         = props.mouseUp;\n        this.contentID       = props.contentID? props.contentID : \"CnctCntnt\";\n        this.fromRef         = createRef();\n        this.toRef           = createRef();\n        \n    }\n    \n    mouseDownF(event) {\n        const from = this.fromRef.current.value;\n        const to   = this.toRef.current.value;\n        if (from && from.length > 0 && to && to.length > 0) {\n            if (this.mouseDown) {\n                this.mouseDown(from, to);\n            }\n        }\n        event.stopPropagation();\n    }\n    mouseUpF(event) {\n        if (this.mouseUp) {\n            this.mouseUp();\n        }\n        event.stopPropagation();\n    }\n    \n    render() {\n        const here    = this;\n        const cntntID = this.idPrefix\n        const fromID  = this.idPrefix + \"From\";\n        const toID    = this.idPrefix + \"To\";\n        return (\n          <div>\n            <input ref={this.fromRef} defaultValue={this.fromDft} size=\"12\" placeholder={here.fromPlaceholder}/>\n            <input ref={this.toRef}   defaultValue={this.toDft}   size=\"12\" placeholder={here.toPlaceholder}  />\n            <button \n              onMouseDown={here.mouseDownF.bind(here)}\n              onMouseUp={here.mouseUpF.bind(here)}>Show</button>\n            <br />\n            <div id={this.contentID}></div>\n          </div>\n        );\n    }\n}\n\nexport default FromTo;\n\n\n","import Util from \"../std/Util.js\";\n// Find the position of a Star\nclass StarFinder {\n    \n    constructor(stars) {      \n        this.Stars       = stars;\n        this.simbadCache = {};    \n    }\n    \n    // This may either return after calling the callback\n    // or run the callback asynchronously later, so no further\n    // processing (at least any that depends upon this result)\n    // should be done here.\n    getStar(name, callback) {\n        const nameLC = name.toLowerCase();\n        if (nameLC == \"sun\"  || nameLC == \"sol\") {\n            const star = {\n                id: 0, name:\"Sol\", x:0, y:0, z:0, d:0, spt: \"G2V\", u:0, v:0, w:0, np: 9                \n            };\n            callback(star);\n            return;\n        }\n        // First try the input catalog, then\n        // previous calls to simbad and then finally\n        // try SIMBAD.\n        if (!this.getFromCatalog(name, callback)) { \n            if (!this.getFromSimbadCache(name, callback)) {\n                this.getFromSimbad(name, callback);\n                // This always processes it, but\n                // asynchronously.\n            }            \n        }\n    }\n    \n    \n    getFromCatalog(name, callback) {\n        for (var i=0; i<this.Stars.length; i += 1) {\n            const star = this.Stars[i];   \n            if (name == star.name || name== (\"\"+star.id)  || name==(\"HIP \"+star.id)) {\n                callback(star);\n                return true;\n            }\n        }\n        return false;\n    }\n    \n    getFromSimbadCache(name, callback) {\n        if (this.simbadCache[name]) {\n            callback(this.simbadCache[name]);\n            return true;\n        }\n        return false;\n    }\n    \n    getFromSimbad(name, callback) {\n//        this.setDisplayText(\"Resolving \"+name+\" using SIMBAD\");\n        const xhr = new XMLHttpRequest();\n        const here = this;\n        const xhrHandler = function() {\n            if (xhr.readyState === XMLHttpRequest.DONE) {\n                const simb = here.parseSimbad(name, xhr.responseText);\n                here.simbadCache[name] = simb;\n                callback(simb);\n            }\n        };\n        \n        const nmenc = encodeURIComponent(name);\n        // SIMBAD supports CORS requests.\n        const url   = \n                \"https://simbad.u-strasbg.fr/simbad/sim-id?Ident=\" +        \n                nmenc +\n                \"&NbIdent=1&Radius=.02&Radius.unit=arcmin&submit=submit+id&output.format=ascii&obj.bibsel=off\";\n        \n        xhr.open('GET', url);\n        xhr.onreadystatechange = xhrHandler;\n        xhr.send();  // parseSimbad will be called when we get the data.        \n    }\n    \n    parseSimbad(name, text) {\n        const lines = text.split(\"\\n\");\n        const getTok = function(str, n) {\n            const flds = str.split(/\\s+/);\n            if (flds.length > n) {\n                return flds[n];\n            } else {\n                return null;\n            }\n        }\n        const data = {};\n        data.name = name;\n        var inIds = false;\n        for (var i=0; i<lines.length; i += 1) {\n            const line = lines[i];\n            if (!inIds) {\n                if (line.startsWith(\"Coordinates(Gal\")) {\n                    data.l = getTok(line, 1);\n                    data.b = getTok(line, 2);\n                } else if (line.startsWith(\"Parallax:\")) {\n                    data.d = 1000./Number.parseInt(getTok(line,1));\n                } else if (line.startsWith(\"Proper motions:\")) {  // Note space in label\n                    data.pmr = getTok(line,2);\n                    data.pmd = getTok(line,3);\n                } else if (line.startsWith(\"Radial Velocity:\")) {\n                    data.rv = getTok(line, 2);\n                } else if (line.startsWith(\"Spectral type:\")) {\n                    data.spt = getTok(line,2);\n                } else if (line.startsWith(\"Identifier\")) {\n                    inIds = true;\n                }\n            } else {\n                if (this.setHIP_ID(line, data)) {\n                    break;\n                }\n            }\n        }\n        // Calculate x,y,z from l,b,d.  Can do uvw from d, pmr, pmd and rv,\n        // but there's a lot more math!\n        if (data.l && data.b && data.d) {\n            var l = Math.PI*data.l/180;\n            var b = Math.PI*data.b/180;\n            var d = data.d;\n            data.x = d*Math.cos(l)*Math.cos(b); \n            data.y = d*Math.sin(l)*Math.cos(b); \n            data.z = d*Math.sin(b);\n        }\n        if (data.id) {\n            // Replace with already downloaded information if HIP id's match.\n            for (i=0; i<this.Stars.length; i += 1) {                \n                if (this.Stars[i].id == data.id) {\n                    return this.Stars[i];                    \n                }\n            }\n        }\n        if (!data.id && !data.x) {\n            return null;\n        }\n        return data;\n    }\n    \n    setHIP_ID(line, data) {\n        for (var i=2; i<line.length; i += 32) {\n            if (i+30 <= line.length) {\n                var fld = line.substring(i, i+30).trim();\n                if (fld.startsWith(\"HIP \")) {\n                    data.id = fld.substring(4);\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n}\n\nexport default StarFinder;\n\n","import Util from \"../std/Util.js\";\n// This class draws a line which connects two stars (or the Sun to another star)\nclass Connecter {\n    constructor(starFinder) {\n        this.starFinder = starFinder;\n    }\n    \n    // Find a pair of positions.  This may require using\n    // one or two SIMBAD calls, in which case the callback\n    // will be invoked asynchronously.\n    connect(from, to, callback) {\n        const here = this;\n        function connect2(fromStar) {\n            if (fromStar == null) {\n                callback(null, null);\n                return;\n            }\n            \n            function connect3(toStar) {\n                callback(fromStar, toStar);\n            }\n            \n            here.starFinder.getStar(to, connect3);\n        }\n        \n        here.starFinder.getStar(from, connect2);\n    }\n}\n\nexport default Connecter;\n        \n    \n\n\n","import Animation from \"../elems/Animation\";\nimport animFactory from \"./AnimationFactory\";\n\nimport loadStars from \"../stars/StarReader\";\n\nimport PrepStar      from \"../stars/PrepStar\";\nimport Util      from \"../std/Util\";\nimport Constants from \"../std/Constants\";\n\nimport Action    from \"../elems/Action\";\nimport TextInput from \"../elems/TextInput\";\nimport OptionsSelector from \"../elems/OptionsSelector\";\nimport FromTo    from \"../elems/FromTo\";\n\nimport StarFinder  from \"../stars/StarFinder\";\nimport Connecter   from \"../stars/Connecter\";\n\nimport {Scene, Vector3, InstancedMesh, \n        SphereGeometry, RingGeometry, MeshBasicMaterial, \n        BufferGeometry, LineBasicMaterial, Line,\n        Matrix4, Color} from \"three\";\n\nclass LocalGalaxy extends Animation {\n    \n    fields = {\n        timeID:  \"timeDisp\",\n        name:    \"Local Galactic Neighborhood\",\n        delta:   Constants.CENTURY/20,\n        time:    0,\n        baseAnimation: \"Solar System\",\n        longClickTime: 1500,\n        paused:  true\n    };\n\n\n    constructor(props) {\n        super(props);\n        \n        // Add local defaults\n        for (var name in this.fields) {\n            this[name] = this.fields[name];\n        }\n        \n        // Add any properties\n        for (var name in props) {\n            this[name] = props[name];\n        }\n        \n        if (this.timeID) {\n            this.timeElem = document.getElementById(this.timeID);\n            this.timeElem.innerHTML = this.timeFormatter(this.time);\n        }\n        this.scene     = new Scene();\n        this.starFinder = null;\n        \n        // Used so that we can delete the lastLine on\n        // mouseup or a new click.\n        \n        this.savedLine = null;\n\n        this.loading    = true;\n        Util.log(\"Loading stars...\");\n        loadStars(this.settings, this.finishConstruction.bind(this));\n    }\n    \n    finishConstruction(starData) {\n        Util.log(\"Stars loaded:\"+starData.length);\n        \n        this.starData = starData;\n        let ringIndices = [];\n        for (let i=0; i<starData.length; i += 1) {\n            let star = starData[i];\n            PrepStar(star);\n            if (star.ring) {\n                ringIndices.push(i);\n            }\n        }\n        \n        const material = new MeshBasicMaterial({wireframe: false});\n        const baseStar = new SphereGeometry(1.0, 20, 20);\n        const baseRing = new RingGeometry(1.1,1.4,20);\n        \n        const theStars = new InstancedMesh(baseStar, material, starData.length);\n        for (let i=0; i<starData.length; i += 1) {\n            let star = starData[i];\n            let mat = new Matrix4().makeScale(star.size, star.size, star.size);\n            mat.setPosition(star.x,star.y,star.z);\n            theStars.setMatrixAt(i, mat);\n            theStars.setColorAt(i, new Color(star.color));\n        }\n        \n        const theRings = new InstancedMesh(baseRing, material, ringIndices.length);\n        for (let r=0; r<ringIndices.length; r += 1) {\n            let i = ringIndices[r];\n            let star = starData[i];\n            let mat = new Matrix4().makeScale(star.size, star.size, star.size);\n            mat.setPosition(star.x,star.y,star.z);\n            theRings.setMatrixAt(r, mat);            \n            theRings.setColorAt(r, new Color(star.ring.color));\n        }\n        \n        theStars.instanceColor.needsUpdate = true;\n        theRings.instanceColor.needsUpdate = true;\n        this.ringIndices = ringIndices;\n        // Add this function to the component.\n        theStars.getIndexedName = function(index) {\n            let star = this.starData[index];\n            return this.starData[index].name;\n        }.bind(this);\n        theRings.getIndexedName = function(index) {\n            return this.starData[this.ringIndices[index]].name;\n        }.bind(this);\n        \n        this.addElement(\"AllStars\", {name:\"AllStars\", component: theStars,\n           render: function(time) {\n               const scl = time/30.856e12;\n               let mat = new Matrix4();\n               for (let i=0; i<starData.length; i += 1) {\n                   theStars.getMatrixAt(i, mat);\n                   let star = starData[i];\n                   mat = mat.setPosition(star.x+scl*star.u, star.y+scl*star.v, star.z+scl*star.w);\n                   theStars.setMatrixAt(i, mat);\n               }\n               theStars.instanceMatrix.needsUpdate = true;                   \n           }});\n       \n        this.addElement(\"AllRings\", {name:\"AllRings\", component: theRings,\n            render: function(time) {\n               const scl = time/30.856e12;\n               let mat = new Matrix4();\n               for (let r=0; r<ringIndices.length; r += 1) {\n                   theRings.getMatrixAt(r, mat);\n                   let i = ringIndices[r];\n                   let star = starData[i];\n                   mat = mat.setPosition(star.x+scl*star.u, star.y+scl*star.v, star.z+scl*star.w);\n                   theRings.setMatrixAt(r, mat);\n               }  \n               theRings.instanceMatrix.needsUpdate = true;                   \n           }});\n        \n        \n        this.loading = false;\n        this.addTimeDisplay();\n        Util.log(\"Local Galactic Neighborhood:\");\n        Util.log(\"   Number of stars rendered:\"+starData.length);\n        Util.log(\"   Number of planetary systems:\"+ringIndices.length);\n    }\n    \n    \n    timeFormatter(time) {\n        let yr = Math.floor((100*time/Constants.CENTURY + 2000).toFixed(0));\n        if (yr > 0) {\n            return yr+\" AD\";\n            \n        } else {\n            // No year 0.\n            yr -= 1;\n            yr  = -yr;\n            return yr + \" BC\";\n        }\n    }\n    \n    options() {\n        const names = [\n                 \"Local Galactic Neighborhood\",\n                 \"Set year\",\n                 \"Connect stars\",\n                 \"The Earth and environs\",\n                 \"Solar System\",\n                 \"Nearby Galaxies (TBD)\",\n                 \"Help\"\n        ];\n        const opts = [];\n        for (var i=0; i<names.length; i += 1) {\n            const entry = {};\n            const val   = names[i];\n            entry.value = names[i];\n            const key = \"ka\"+i;\n            switch (val) {\n               \n            // Note that we need to ensure that we have separate\n            // keys for the elements (at least those that are the same compound types)\n            case \"Set year\":\n                entry.elem = <TextInput key={key} placeholder=\"...year...\"\n                               callback={this.updateTime.bind(this)} /> ;\n                break;\n            case \"Connect stars\":\n                entry.elem = <FromTo key={key} fromDft='Sol' \n                               contentID=\"StarInfo\"\n                               mouseDown={this.drawLine.bind(this)}\n                               mouseUp={this.hideLine.bind(this)}                             />\n                break;\n                \n            case \"Solar System\":\n                entry.elem = <Action key={key} args=\"Solar System\" action ={this.setAnim.bind(this)} />;\n                break;\n                \n            case \"The Earth and environs\":\n                entry.elem = <Action key={key} args=\"The Earth and environs\" action ={this.setAnim.bind(this)} />;\n                break;\n                \n            case \"Help\":\n                entry.elem = <Action key={key} action={this.openHelp} />;\n                break;\n                \n            default:\n                entry.elem = <div key={key}>Just the {val}</div> ;\n            }\n            \n        \n            opts.push(entry);\n        }\n        const res =  <OptionsSelector options={opts} /> ;\n        return res;\n    }\n    \n    \n    raycastResult(results) {\n        const elem = document.getElementById(\"clickTarget\");\n        var found = false;\n        var name;\n        var showString;\n        for (name in results) {\n            showString =  \"<hr/>Star: \"+name;\n            found = true;\n            break;\n        } \n        \n        if (!found) {\n            elem.innerHTML = \"<hr/>\";\n            return;\n        }\n        \n        if (!this.starFinder) {\n            this.starFinder = new StarFinder(this.starData);\n        }\n        var here = this;\n        this.starFinder.getStar(name,\n             function(star) {\n                 if (star != null) {\n                     if (star.spt) {\n                         showString += \"<br/>Spectral type: \"+star.spt;\n                     }\n                     if (star.id) {\n                         showString += \"<br>ID: \"+star.id;\n                     }\n                     var vec = here.position(star, here.time);\n                     var dist = vec.length();\n                     var distPC = dist.toFixed(3);\n                     var distLY = (dist*3.26156).toFixed(3);\n                     showString += \"<br>Distance: \"+distPC+\" pc / \"+distLY+\" ly\";\n                     if (star.np) {\n                         showString += \"<br>Known planets: \"+star.np;\n                     }\n                     elem.innerHTML = showString;\n                 }                 \n             });\n    }\n\n    \n    drawLine(from,to) {\n        if (!this.starFinder) {\n            this.starFinder = new StarFinder(this.starData);\n        }\n        if (!this.connecter) {\n            this.connecter  = new Connecter(this.starFinder);\n        }\n        this.connecter.connect(from,to,this.lineDrawer.bind(this));        \n    }\n    \n    starMessage(msg) {\n        const elem = document.getElementById(\"StarInfo\");\n        elem.innerHTML = msg;\n    }\n    \n    position(star, time) {\n        \n        var v;\n        const scl = time/30.856e12;\n\n        if (star.u == null || star.v == null || star.w == null) {\n            v = [0,0,0];\n        } else {\n            v = [scl*star.u, scl*star.v, scl*star.w];\n        }\n        return new Vector3(\n            star.x+v[0], star.y+v[1], star.z+v[2]);            \n    }\n    \n    hideLine() {\n        if (this.savedLine) {\n            this.scene.remove(this.savedLine);\n            this.savedLine = null;\n        }\n    }\n    \n    lineDrawer(from, to) {\n        if (!from) {\n            this.starMessage(\"Unable to find source star\");\n            this.hideLine();\n            return;\n        } else if (!to) {\n            this.starMessage(\"Unable to find destination star\");\n            this.hideLine();\n            return;\n        }\n        \n        const v1 = this.position(from, this.time);\n        const v2 = this.position(to, this.time);\n        const vertices = [v1,v2];\n        const material = new LineBasicMaterial({color: 0x0000ff});\n        const geometry = new BufferGeometry().setFromPoints( vertices );\n        const line = new Line( geometry, material );\n        if (this.savedLine) {\n            this.scene.remove(this.savedLine);\n        }\n        this.scene.add(line);\n        this.savedLine = line;\n        \n        // Simbad doesn't say anything about planets.\n        var fromNP = from.np ? from.np : \"?\";\n        var toNP   = to.np   ? to.np   : \"?\";\n        var fromID = from.id ? from.id : \"?\";\n        var toID   = to.id   ? to.id   : \"?\";\n        var fromSPT = from.spt ? from.spt : \"?\";\n        var toSPT   = to.spt   ? to.spt   : \"?\";\n        \n        var str = \"<table><tr><th></th><th align='center'>ID</th><th align='center'>Name</th><th align='center'>Spectral Type</th><th align='center'>Planets</th></tr>\";\n        str += \"<tr><th align='left'>From</th><td align='center'>\"+fromID+\"</td><td align='center'>\"+from.name+\"</td><td align='center'>\"+fromSPT+\"</td><td align='center'>\"+fromNP+\"</td></tr>\";\n        str += \"<tr><th align='left'>To</th><td align='center'>\"+toID+\"</td><td align='center'>\"+to.name+\"</td><td align='center'>\"+toSPT+\"</td><td align='center'>\"+toNP+\"</td></tr>\";\n        str += \"</table>Distance: \";\n        var dist = v1.distanceTo(v2);\n        const distpc = dist.toFixed(3);\n        str += distpc + \" pc / \";\n        const distly = (dist*3.26156).toFixed(3);\n        str += distly + \" ly\";\n        this.starMessage(str);\n    }\n\n    parseTime(year) {\n        if (!isNaN(year)) {\n            return (year-2000)/100 * Constants.CENTURY;\n        }  else {\n            return 0;\n        }\n    }\n}\n\nexport default LocalGalaxy;","/** This function solves Kepler's equation to find\n *  the eccentric anomaly as a function of the mean anomaly.\n// For orbits with eccentricity near 1 we need\n// to be careful when MA is near 0 or Pi.  There is a vast art on this\n// problem but for the nonce we are using a simple but likely inefficient\n// approach.  Note the functions defined.  Nominally this should work\n// for both elliptical and hyperbolic orbits.\n * \n */\n \nimport Constants from \"../std/Constants.js\";\nimport Util      from \"../std/Util.js\";\n\nconst Kepler = function(ma, ecc) {\n\n    if (ecc < 0) {\n        throw new Error(\"Illegal argument to kepler:\"+ma+\" \"+ecc);\n    }\n    \n    // For periodic orbits set the range to 0 to 2*PI.\n    if (ecc < 1) {\n        if (ma < 0 || ma > 2*Math.PI) {\n            ma = ma%(2*Math.PI);\n            if (ma < 0) {\n                ma += 2*Math.PI;\n            }\n        }\n    }\n    \n    \n\n    // Mean anomaly from eccentric anomaly and eccentricity\n    function fma(ea, ecc) {\n\n        var val;\n        if (ecc > 1) {\n            val = ecc * Math.sinh(ea) - ea;\n        } else {\n            val = ea - ecc * Math.sin(ea);\n        }\n        return val;\n    }\n\n    // Derivative of ma with respect to ea.\n    function fdma(ea, ecc) {\n        if (ecc > 1) {\n            return (ecc * Math.cosh(ea) - 1);\n        } else {\n            return (1 - ecc * Math.cos(ea));\n        }\n    }\n\n    if (ecc < Constants.SHAPE_RATIO) {\n        // Circular orbit, so ma = ea = ta\n        return ma;\n    }\n\n    // Now we just iterate till we converge.  We know\n    // that if ma is between 0-pi, or pi-2pi, then ea is\n    // in same range so we can limit overshoots.\n    // Use initial guess\n\n    var emin, emax;\n        // Somewhat to my surprise a using just ma as the initial\n        // value seemed to be fastest although using ma/(1-e) for\n        // small ma seems like it should be better.  That does\n        // do slightly fewer evaluations, but overall seems to\n        // take longer.  There may be something\n        // else that needs to be fixed.    \n    var eaTest = ma;\n    if (ecc < 1) {\n        emin = 0;\n        if (ma > Math.PI) {\n            emin = Math.PI;\n        }\n        emax = emin + Math.PI;\n        \n    } else {\n        // The maximum value for the true anomaly is acos(-1/e), but\n        // we believe that the eccentric anomaly is not constrained,\n        // so we set the limits to rather large values.\n        \n        if (ma <= 0) {\n            emin = -1.e10;\n            emax = 0;\n        }  else {\n            emin = 0;\n            emax =  1.e10;\n        }\n        if (Math.abs(ma) > 2*Math.PI) {\n            eaTest = Math.asinh(ma/ecc);            \n        }\n    }\n\n    if (eaTest > emax) {\n        eaTest = emax;\n    }\n    if (eaTest < emin) {\n        eaTest = emin;\n    } \n\n    var maTest = fma(eaTest, ecc);\n    var dmadea = fdma(eaTest, ecc);\n\n    var iter = 0;\n\n    while (true) {\n        \n        \n        iter += 1;\n        if (iter > 1000) {\n            Util.log(\"EA calculation: Too many iterations:\" + ecc + \" \" + ma);            \n            return null;\n        }\n        var delta = ma - maTest;\n\n        if (Math.abs(delta) < Constants.HALT_RATIO) {\n            return eaTest;\n        }\n        // May need to be more generous if MA is very large for hyperbolic orbit.\n        if (Math.abs(ma)  > 100 ) {\n            if (Math.abs(delta/ma) < Constants.HALT_RATIO) {\n                return eaTest;                \n            }\n        }\n        dmadea    = fdma(eaTest, ecc);\n\n\n        if (delta > 0) {\n            emin = eaTest;\n        } else {\n            emax = eaTest;\n        }\n\n        var eaDelta = delta / dmadea;\n\n        var maNew;\n        var eaNew;\n        var smaller = false;  // Flag if we jump too far.\n\n        // Loop to adjust the size we jump on this iteration.\n        // We may be either jumping too far such that\n        // the delta is increasing, or too little so that\n        // we don't significantly reduce the delta.\n        var subiter = 0;\n        while (true) {\n            subiter += 1;\n            if (subiter > 100) {\n                return null;\n            }\n\n            // Make sure we don't go past the firm boundaries\n            // for the EA.\n            eaNew = eaTest + eaDelta;\n            if (eaNew > emax) {\n                eaNew = emax;\n            } else if (eaNew < emin) {\n                eaNew = emin;\n            }\n            \n\n            // Try the Newton's method value.\n            maNew = fma(eaTest + eaDelta, ecc);\n            var deltaNew = ma - maNew;\n\n\n            // If we decreased the delta by a lot, then this is good enough.\n            if (Math.abs(deltaNew / delta) < 0.5) {\n                break;\n            }\n\n            // The delta got worse, we jumped too far.\n            if (Math.abs(deltaNew / delta) > 1) {\n\n                // Moved too far...\n                eaDelta /= 2;\n                smaller = true;\n\n            } else {\n\n                // The delta got smaller, but not by very much.\n                // Maybe we could try to jump a little further?\n\n                if (smaller) {\n                    // Not this time...\n                    // In a prior iteration we'd been reducing the size of the jump\n                    // because it was actually increasing delta.  Now\n                    // that we've begun decreasing delta we'll accept this\n                    // value for this iteration.  If we need to we can\n                    // try increasing it next iteration.\n                    break;\n                }\n                // Test doubling eaDelta and see if it's better\n                // If so we'll stay in this loop with the value.  If not\n                // we break and use the old value for eaDelta.\n                var maX = fma(eaTest + 2 * eaDelta, ecc);\n                if (Math.abs(maX - ma) < Math.abs(maNew - ma)) {\n                    eaDelta *= 2;\n                } else {\n                    break;\n                }\n            }\n        }\n        \n        eaTest = eaNew;\n        maTest = maNew;\n        \n    }\n};\n\nexport default Kepler;\n","import Kepler from \"./Kepler.js\";\nimport Util   from \"../std/Util.js\";\n\n/** This is a smaller orbit class that only provides a method\n *  for finding the position as a function of time.\n */\nclass QOrb {\n\n    scale   = 1;\n    doLog   = false;\n    lastT   = 1.e50;\n    lastTA  = 1.e50;\n    \n    constructor(input) {        \n        this.rot = input.rot;    // The rotation info\n        this.e   = input.e;      // The eccentricity scalar\n        this.a   = input.a;      // The semimajor axis\n        this.t0  = input.t0;     // The time of periapsis\n        this.per = input.per;    // The period of the orbit\n        this.coords = null;\n        \n        this.precession = false;  // Allow for precession of the orbit.\n        this.precessData = null;\n        if (this.e < 1) {\n            this.Lm   = 2*Math.PI*this.a*this.a*Math.sqrt(1-this.e*this.e)/this.per;\n        }\n    }\n    // Add precession of the line of nodes and the argument of perigee to \n    // the orbit. \n    //   ep0 is the epoch when the arguments in the rot vector are valid.\n    //   fOmega and fNu are the frequencies of the prcession (2pi/period)\n    //   in the Omega and nu terms.\n    addPrecession(ep0, fOmega, fNu) {\n        this.precession  = true;\n        this.ep0         = ep0;\n        this.fOmega      = fOmega;\n        this.fNu         = fNu;\n    }\n    \n    /** If the orbit is in a different coordinate system\n     *  than the frame we want to display in, provide\n     *  a coordinate converter.  Note that this affects\n     *  the position,state and orbitXYZ functions, but not the posTA\n     *  call which returns the position in the local coordinate frame.\n     */\n    addCoords(coords) {\n        this.coords = coords;\n    }\n    \n    // Get the rotation blob, possibly corrected for precession.\n    getRot(time) {\n        if (!this.precession  || time == null) {\n            return this.rot;\n        }\n        const dt     = time-this.ep0;\n        const dOmega = this.fOmega*dt;\n        const dNu    = this.fNu*dt;\n        const updRot = [...this.rot];\n        \n        // Recall definition of rot:\n//                            [co,  -so*ci,  // co = cos(Omega), ci= cos(inclination), .... \n//                             so,   co*ci,  // so = sin(Omega), ...//                             \n//                             si,           //\n//                             nu]            // \n\n        // Can fix nu immediately!\n        updRot[5] += dNu;\n        \n        const cd = Math.cos(dOmega);\n        const sd = Math.sin(dOmega);\n        \n        // Now use trig formulas to get new value for sin/cos omega\n        // and update the first four values appropriately.\n        const so = updRot[2]*cd + sd*updRot[0]; // sin(a+b) = sin(a)cos(b) + sin(b)cos(a)\n        const co = updRot[0]*cd - updRot[2]*sd; // cos(a+b) = cos(a)cos(b) - sin(a)*sin(b\n        \n        // Use update values to update products first.  The inclination does not change.\n        updRot[1] *= so/updRot[2];  // i.e., *= so_new/so_old\n        updRot[3] *= co/updRot[0];  //  *= co_new/co_old\n        //  Now we can update the last two terms\n        updRot[0] = co;\n        updRot[2] = so;\n        \n        // The inclination does not change during precession, so neither does updRot[4]\n        \n        return updRot;                \n    }\n    \n    // Get the position as a function of time.\n    position(t) {\n        const ta = this.ta(t);       \n        let   r  = this.posTA(ta, t);\n        if (this.coords) {\n            r = this.coords.vTransform(r);\n        }\n        return r;\n    }\n    \n    // Get both position and velocity.\n    state(t) {\n        const ta = this.ta(t);\n        const rs = this.posTA(ta, t);\n        let   r  = Util.times(1./this.scale, rs);   // Get r in meters.\n        const rm = Util.mag(r);\n        const sn  = Math.sin(ta);\n        const p   = this.a*(1-this.e*this.e);\n        \n        const rot = this.getRot(t);\n        const nu  = rot[5];            \n        const cos = Math.cos(nu+ta);\n        const sin = Math.sin(nu+ta);\n            \n        const vrad = Util.times(this.Lm*this.e*sn/(rm*p) , r);\n                        \n        const f    = this.Lm/rm;\n        const vtan = [   -f*(rot[0]*sin - rot[1]*cos),\n                         -f*(rot[2]*sin - rot[3]*cos),\n                          f*rot[4]*cos ];\n        let vtot = Util.vadd(vrad, vtan);\n        \n        if (this.coords) {\n            r    = this.coords.vTransform(r);\n            vtot = this.coords.vTransform(vtot);\n        }\n                \n        return [r,vtot];\n    }\n    \n    ta(t) {       \n        var e = this.e;\n        var ma;\n        ma = (t - this.t0) / this.per * 2 * Math.PI;\n        if (e < 1) {\n            ma = ma % (2 * Math.PI);\n        }\n\n        const ea  = Kepler(ma, e);\n        let tan;\n        if (e < 1) {\n            tan = Math.tan(ea/2);\n        } else {\n            tan = Math.tanh(ea/2);\n        }\n        \n        const tmp = Math.sqrt((1 + e) / Math.abs(1 - e)) * tan;\n\n        let ta =  2 * Math.atan(tmp);\n        return ta;        \n    }\n    \n    // Get the position as a function of the true anomaly.\n    posTA(ta, t) {\n        const e = this.e;\n        \n        // Get the magnitude of the radius vector\n        // Note Math.abs to handle hyperbolic orbits.\n        const rm = this.a * Math.abs(1 - e * e) / (1 + e * Math.cos(ta))* this.scale;\n        \n\n        // TA and nu are rotations along the same axis so we can\n        // combine them wand we're left with a somewhat simpler\n        // transformation than the full ZXZ rotation matrix with nu,i,Omega.\n        // We also put rm in here since it saves a multiplication.\n\n        // First extract nu for the rot blob.\n        const rot = this.getRot(t);\n        const nu  = rot[5];\n        \n        const cos = rm*Math.cos(nu+ta);\n        const sin = rm*Math.sin(nu+ta);\n        // Now use rot information.\n        let vec = [\n                     rot[0]*cos + rot[1]*sin,\n                     rot[2]*cos + rot[3]*sin,\n                     rot[4]*sin\n                    ];\n        return vec;\n    }\n    \n    // Get the orbit curve as a sequence of positions.\n    // For closed orbits start at the periapsis, while\n    // for open orbits we are centered at periapsis.\n    // Note that this function does not require the phase\n    // of the orbit to be known.\n    orbitXYZ(n) {\n        \n        // For hyperbolic orbits not all values of TA are allowed...\n        var taMin = 0;\n        var taMax = 2*Math.PI;\n        if (this.e > 1) {\n            // trying to get ta[i] = -ta[n-i];\n            // bit we need to come in a little since the radius at the limits is infinity.\n            taMax = Math.acos(-1/this.e);\n            const tdelta = (2*taMax)/n;\n            taMax -= tdelta/2;\n            taMin  = -taMax;\n        }\n        \n        var ta = taMin;\n        const data  = [];\n        const delta = (taMax-taMin)/n;\n        for (var i=0; i<n; i += 1) {\n            var p = this.posTA(ta);  // Note that we do not have a time here\n                                     // Precessing orbits will be as of epoch of ephemeris.\n            data.push(p);\n            ta += delta;            \n        }\n        return data;        \n    }\n    \n    xperiod() {\n        if (this.e < 1) {\n            return this.per*(1-this.e);\n        } else {\n            return this.per;\n        }\n    }\n}\n\nexport default QOrb;","import Util from '../std/Util.js';\r\nimport ParameterFactory from './ParameterFactory.js';\r\n\r\nclass Parameter {\r\n    static  SCALAR = 0;\r\n    static  VECTOR = 1; \r\n    static  MATRIX = 2;\r\n    static  BLOB   = 3;  // Non-standard structure.\r\n    \r\n    constructor(name, value, dim, varies, renderer, unit) {\r\n        this.name     = name;\r\n        this.dim      = dim;\r\n        this.varies   = varies;\r\n        this.value    = value\r\n        this.renderer = renderer;\r\n        this.unit     = unit;\r\n    }\r\n\r\n    render() {\r\n        if (!this.renderer) {            \r\n            return this.value;\r\n        }\r\n        const val = this.renderer(this.value, this.unit);\r\n        return val;\r\n    }\r\n    \r\n    rerender() {\r\n        const info = ParameterFactory.getParamInfo(this.name);\r\n        const units = info.units;\r\n        if (!units) {\r\n            Util.log(\"No units for parameter\");\r\n            return;\r\n        }\r\n        var i;\r\n        for (i=0; i<units.length; i += 1 ) {\r\n            // If a unit was specified and they match,\r\n            // or no unit was specified and the scale is 1\r\n            // then we've found the current unit.\r\n            if ((this.unit && (units[i].unit === this.unit.unit)) ||\r\n                (!this.unit && (units[i].scale === 1))) {\r\n                break;\r\n            }\r\n        }\r\n        if (i > units.length) {\r\n            Util.log(\"Unit not found in rerender: \"+this.name+\" \"+this.unit.unit);\r\n            return;            \r\n        }\r\n        i = (i+1) % units.length;\r\n        this.unit = units[i];\r\n        const res = this.render();\r\n        return res;\r\n    }\r\n    setUnit(unit) {\r\n        this.unit = unit;\r\n    }\r\n    \r\n    getDim(dim) {\r\n        return this.dim;\r\n    }\r\n   \r\n    getName() {\r\n        return this.name;\r\n    }\r\n    \r\n    getType() {\r\n        return this.dim;\r\n    }\r\n        \r\n\r\n    getScalar() {\r\n        switch (this.dim){\r\n            case Parameter.SCALAR:\r\n                return this.value;\r\n                \r\n            // For vector quantities return the magnitude of the vector.\r\n            case Parameter.VECTOR:                \r\n                return Util.mag(this.value);\r\n                \r\n            // For matrix quantities return the determinant\r\n            // We assume 3d matrices.\r\n            case Parameter.MATRIX:\r\n                return Util.determinant3(this.value);\r\n                \r\n            default:\r\n                throw new Error(\"Unsupported dimensionality \"+this.dim+\" for \"+this.name);\r\n        }\r\n    }\r\n\r\n    getVector() {\r\n        if (this.dim === Parameter.VECTOR  || this.dim === Parameter.BLOB) {\r\n            return this.value;\r\n        } else {\r\n                throw new Error(\"Vector request for non-vector parameter \"+this.name); \r\n        }\r\n    }\r\n    \r\n    getMatrix() {\r\n        if (this.dim === Parameter.MATRIX) {\r\n            return this.value;\r\n        } else {\r\n            throw new Error(\"Matrix request for non-matrix parameter \"+this.name);\r\n        }\r\n    }\r\n\r\n    isScalar() {\r\n        return this.dim === Parameter.SCALAR;\r\n    }\r\n    \r\n    isVector() {\r\n        return this.dim === Parameter.VECTOR;\r\n    }\r\n    \r\n    isMatrix() {\r\n        return this.dim === Parameter.MATRIX;\r\n    }\r\n}\r\n\r\nexport default Parameter;\r\n","/** This file contains the generators for all of the orbital parameters that\n *  can be determined from other parameters.\n *  \n *  We use the Parameter.addGenerator method to add each generator to\n *  the parameter factory. This method has three arguments that define\n *  each generator:\n *     - A string giving the standard name of the parameter which can be\n *       inferred from known parameters. (\"a\" in the first generator)\n *     - An array of strings giving the standard names of the parameters that\n *       are needed to infer the new parameter.  Default values for constants\n *       can be inferred using an 0 length array. (\"G\", \"M\", \"E\" in the first generator)\n *     - A function which describes how the new parameter can be determined from\n *       the existing parameters.  It takes one argument: a hash of the known\n *       parameters, called params here.  E.g., in the first generator we calculate\n *       the semimajor axis using a = -.5GM/E (recalling that the energy for a bound\n *       orbit is negative).\n *       \n *  The may be multiple generators for a given output parameter, and these \n *  will be checked in order specified to see if the prerequisite parameters\n *  are known.  \n *  \n *  In a few special situations, even when all of the prerequisite parameters\n *  are known, the parameter cannot be determined, so that the function returns a null.\n *  \n *  The ParameterFactory.genParameter function adds the type and and varies information\n *  to the value of the parameter that we determine here. \n *  \n */\n\nimport Constants        from \"../std/Constants.js\";\nimport Util             from \"../std/Util.js\";\nimport ParameterFactory from \"./ParameterFactory.js\";\nimport Kepler           from \"./Kepler.js\";\n\nconst LoadOrigins = function () {\n    // We enclose all of this in a function to enable localization internal\n    // variables and functions.\n    // \n    // Shortcut names.\n    const gadd = ParameterFactory.addGenerator;\n    const pgen = ParameterFactory.genParam;\n\t\n\tif (ParameterFactory.generators != null) {\n\t\treturn;\n\t}\n\t\n\tParameterFactory.generators = {};\n\n    /** a: the semimajor axis of the orbit.  This is undefined for\n     *  parabolas, and negative for hyperbolas.\n     */\n\n    gadd(\"a\", [\"G\", \"M\", \"E\"],\n            function (params) {\n                // a = GM/2E\n                const G = params[\"G\"].value;\n                const M = params[\"M\"].value;\n                const E = params[\"E\"].value;\n                if (E === 0) {\n                    Util.log(\"Parabolic orbit, a is undefined from E\");\n                    return pgen(\"a\", Math.NaN);\n                }\n                const val = -0.5 * G * M / E;\n        \n                return pgen(\"a\", val);\n            }\n    );\n    \n    gadd(\"a\", [\"G\", \"M\", \"m1\", \"Per\"],\n      // Kepler's law\n      // a = cbrt(g(M+m1)p^2 /  4pi^2)\n      function(params) {\n          const g = params[\"G\"].value;\n          const p = params[\"Per\"].value;\n          const m = params[\"M\"].value;\n          const dm = params[\"m1\"].value;\n          const a = Math.cbrt(g*(m+dm)*p*p/(4*Math.PI*Math.PI));\n          return pgen(\"a\", a);\n      }\n    );\n\n    /** b: the semiminor axis */\n    gadd(\"b\", [\"Ecc\", \"a\"],\n            function (params) {\n                const e = Util.mag(params[\"Ecc\"].value);\n                const a = params[\"a\"].value;\n                var sign = 1;\n                if (e > 1) {\n                    sign = -1;\n                }\n                \n                return pgen(\"b\", a * Math.sqrt(sign*(1 - e * e)));\n            }\n    );\n\n    /** C: The center of the ellipse relative to the focus of rotation. */\n    gadd(\"C\", [\"a\", \"Ecc\"],\n            function (params) {\n\n                // The center of the eccentricity vector is pointing\n                // To the periapsis and has a magnitude of the eccentricity.\n                // The distance between the focus and the center is just the\n                // eccentricty x the semimajor axis.\n                const e = params[\"Ecc\"].value;\n                const em = Util.mag(e);\n\n                const a = params[\"a\"].value;\n\n                if (em < 1.e-12) {\n                    return pgen(\"C\", [0, 0, 0]);\n\n                } else if (Math.abs(em - 1) < 1.e-12) {\n                    Util.log(\"Center not defined for parabola\");\n                    return null;\n\n                } else {\n                    // In the opposite direction from the periapsis\n                    // reduced from a by eccentricity, which is\n                    // conveniently already in the eccentricity vector.\n                    // Not that for hyperbolic orbits a is negative, and\n                    // the other focus is further out than the periapsis point.\n                    const c = Util.times(-a, e);\n                    return pgen(\"C\", c);\n                }\n            }\n    );\n\n    /**\n     * E: The energy of the orbit.\n     */\n    gadd(\"E\", [\"G\", \"M\", \"r\", \"v\"],\n            function (params) {\n\n                const v = params[\"v\"].getScalar();\n                const r = params[\"r\"].getScalar();\n                const g = params[\"G\"].value;\n                const m = params[\"M\"].value;\n                return pgen(\"E\", v * v / 2 - g * m / r);\n            }\n    );\n\n    gadd(\"E\", [\"G\", \"M\", \"a\"],\n            function (params) {\n                const g = params[\"G\"].value;\n                const m = params[\"M\"].value;\n                const a = params[\"a\"].value;\n                return pgen(\"E\", -0.5 * g * m / a);\n            }\n    );\n\n    /**\n     * EA: The eccentric anomaly.\n     * The angle between the periapsis and a projection of the particle onto the\n     * circle in which the ellipse is embedded,\n     * using a projection perpendicular to the vector to periapsis.\n     */\n    gadd(\"EA\", [\"TA\", \"Ecc\"],\n            function (params) {\n                const em = params[\"Ecc\"].getScalar();\n                const ta = params[\"TA\"].value;\n\n                // tan (ta/2) = sqrt((1+e)/(1-e)) * tan (ea/2)\n                var sign = 1;\n                if (em > 1) {\n                    sign = -1;\n                }\n\n                var ea = Math.sqrt(sign*(1 - em) / (1 + em)) * Math.tan(ta / 2);\n                if (em < 1) {\n                    ea = 2*Math.atan(ea);\n                    // For periodic orbits make range 0 to 2PI\n                    if (ta > Math.PI && ea < Math.PI) {\n                        ea = 2 * Math.PI - ea;\n                    }\n                } else {\n                    // For unbound we want will leave range centered on 0.\n                    ea = 2*Math.atanh(ea);\n                }\n\n\n\n                return pgen(\"EA\", ea);\n            }\n    );\n    \n\n    gadd(\"EA\", [\"MA\", \"Ecc\"],\n            function (params) {\n                \n                const ma  = params[\"MA\"].value;\n                const ecc = params[\"Ecc\"].getScalar();\n                const ea  = Kepler(ma, ecc);\n                if (ea == null) {\n                    return null;\n                } else {                    \n                    return pgen(\"EA\", ea);\n                }\n            }\n    );\n\n    /**\n     * Ecc: The eccentricity vector of the ellipse which points to the periapsis and\n     * has a magnitude equal to the eccentricity.\n     */\n    gadd(\"Ecc\", [\"G\", \"M\", \"r\", \"v\"],\n            function (params) {\n                const r = params[\"r\"].value;\n                const v = params[\"v\"].value;\n                const rm = Util.mag(r);\n                const G = params[\"G\"].value;\n                const M = params[\"M\"].value;\n                const f1 = Util.times(1/(G*M), Util.cross(v, Util.cross(r,v)));\n                const f2 = Util.times(-1/rm, r) \n                return pgen(\"Ecc\", Util.vadd(f1,f2));\n            }\n    );\n\n    gadd(\"Ecc\", [\"Eccen\", \"Rot\", \"nu\"],\n            function (params) {\n                const e = params[\"Eccen\"].getScalar();\n                const rot = params[\"Rot\"].value;\n                const nu  = rot[5];\n                \n                // We want the point where TA is 0.\n                \n                const cos = e*Math.cos(nu);\n                const sin = e*Math.sin(nu);\n                \n                const vec = [rot[0]*cos + rot[1]*sin,\n                             rot[2]*cos + rot[3]*sin,\n                             rot[4]*sin];\n                         \n                return pgen(\"Ecc\", vec);\n            }\n    );\n\n    /** The scalar eccentricity is not generally used internally\n     *  but is often supplied as input.  We include it here for completeness.\n     */\n    gadd(\"Eccen\", [\"Ecc\"],\n            function (params) {\n                return pgen(\"Eccen\", params[\"Ecc\"].getScalar());\n            }\n    );\n\n\n    /**\n     * eF2: The energy scaled vector to the second focus.\n     * Note that this goes to invinity only as the energy of the orbit goes to infinity.\n     */\n    gadd(\"eF2\", [\"Ecc\", \"E\", \"a\"],\n            function (params) {\n\n                // The second focus is 2ea from the primary focus\n                // in the opposite direction of the Ecc vector.\n                const eccv = params[\"Ecc\"].value;\n                const e = params[\"E\"].value;\n                const a = params[\"a\"].value;\n\n                const ef2 = Util.times(-2 * a * e, eccv);\n                return pgen(\"eF2\", ef2);\n            }\n    );\n\n    /** G: Gravitational constant.  MKS by default. */\n    gadd(\"G\", {},\n            function (params) {\n                return pgen(\"G\", Constants.G);\n            }\n    );\n\n    /**\n     * i: The inclination of the orbital plane relative to the equatorial plane of the coordinate system\n     *    (the ecliptic for solar orbits).  For non-radial orbits we\n     * can get this from the angular momentum vector but for radial orbits\n     * we need to use the position or velocity vectors.\n     */\n    gadd(\"i\", [\"L\"],\n            function (params) {\n                const L = params[\"L\"].value;\n                const mag = Util.mag(L);\n                if (mag === 0) {\n                    Util.log(\"Radial orbit so computation of inclination from angular momentum fails.\");\n                    return null;\n                } else {\n                    const dot = Util.dot(L, [0, 0, 1]) / Util.mag(L);\n                    return pgen(\"i\", Math.acos(dot));\n                }\n            }\n    );\n\n    // From r,v.  This works for radial orbits too.\n    gadd(\"i\", [\"r\", \"v\"],\n            function (params) {\n                var rv = params[\"r\"].value;\n                var rm = Util.mag(rv);\n                const vv = params[\"v\"].value;\n                const vm = Util.mag(vv);\n\n                const L = Util.cross(rv, vv);\n                const Lm = Util.mag(L);\n\n                // Check for redial orbit...\n                if (Lm > Constants.SHAPE_RATIO * rm * vm) {\n                    const dot = Util.dot(L, [0, 0, 1]) / Util.mag(L);\n                    return pgen(\"i\", Math.acos(dot));\n                } else {\n                    // A radial orbit doesn't have a direction of revolution,\n                    // so we will always pick a positive inclination.\n                    if (rm === 0) {  // Substitute the velocity vector if we are at the origin.\n                        rv = vv;\n                        rm = vm;\n                    }\n                    if (rm === 0) {\n                        Util.log(\"Inclination undefined: Singular orbit, stationary at origin\");\n                        return null;\n                    }\n                    var dot = Util.dot(rv, [0, 0, 1]) / rm;\n                    dot = Math.abs(dot);\n                    return pgen(\"i\", Math.PI / 2 - Math.acos(dot));\n                }\n            }\n    );\n\n    /** L: The angular momentum vector */\n    gadd(\"L\", [\"r\", \"v\"],\n    \n            function (params) {\n                const r = params[\"r\"].value;\n                const v = params[\"v\"].value;\n                const l = Util.cross(r, v);\n\n                return pgen(\"L\", l);\n            }\n    );\n\n    gadd(\"L\", [\"G\", \"M\", \"Eccen\", \"E\", \"Rot\"],\n            function (params) {\n                const E   = params[\"E\"].value;\n                const rot = params[\"Rot\"].value;\n                \n                // Note that this is the eccentricity scalar, not vector\n                \n                const ecc = params[\"Eccen\"].value;\n                const g   = params[\"G\"].value;\n                const m   = params[\"M\"].value;\n\n                // Get the magnitude of the angular momentum.\n                const Lm = g * m * Math.sqrt((ecc * ecc - 1) /(2 * E));\n                                // Six element vector with to make efficient position computations.\n//                rot       = [0:co,  1:-so*ci,  // Coefficients for x \n//                             2:so,  3:co*ci,   // Coefficients for y\n//                             4:si,             // Coefficients for z\n//                             5:n]              // Save nu so all rotation information stored in rot.    \n\n                \n                // L = Lm [so si, -co si, co]\n                // Rot is intended to rotate the x axis, so we have to play\n                // a little to rotate the z axis.\n                \n                var l = [Lm*rot[2]*rot[4], -Lm*rot[0]*rot[4], Lm*rot[3]/rot[0] ];\n\n                return pgen(\"L\", l);\n            }\n    );\n\n    /**\n     * LonP: Longitude of Perihelion.\n     * This seems to be just the argument of perihelion+the longitude of the ascending node.\n     */\n    gadd(\"LonP\", [\"Omega\", \"nu\"],\n            function (params) {\n                const nu = params[\"nu\"].value;\n                const omega = params[\"Omega\"].value;\n\n                return pgen(\"LonP\", nu + omega);\n            }\n    );\n    \n\n    /** M: Mass of the central object: defaults to mass of the Sun */\n    gadd(\"M\", [],\n            function (params) {\n                return pgen(\"M\", Constants.MSun);\n            }\n    );\n    \n    /** m1: The mass of the orbiting body.  Defaults to 0 */\n    gadd(\"m1\", [],\n        function(params) {\n            return pgen(\"m1\", 0);\n        }\n    );\n    \n\n    /** MA: The mean anomaly is a uniform measure of time as phase along the orbit,\n     *  E.g., as in our first definition: just 2*PI*(t-t0)/period where t0 is the time of periapsis \n     **/\n    gadd(\"MA\", [\"t\", \"t0\", \"Per\"],\n            function (params) {\n                // The Mean anomaly is defined as\n                // MA = 2*Pi*(t-t0)/Period.\n                const p = params[\"Per\"].value;\n                if (p === Number.POSITIVE_INFINITY) {\n                    return null;\n                }\n                \n                const t = params[\"t\"].value;\n                const t0 = params[\"t0\"].value;\n\n                var ma = (t - t0) / p;\n                ma = ma - Math.floor(ma);\n                ma *= 2 * Math.PI;\n\n                return pgen(\"MA\", ma);\n            }\n    );\n    \n\n    gadd(\"MA\", [\"EA\", \"Ecc\"],\n            function (params) {\n                const e = params[\"Ecc\"].getScalar();\n                const ea = params[\"EA\"].value;\n                if (e < Constants.SHAPE_RATIO) {\n                    // If the orbit is circular then MA = EA\n                    return pgen(\"MA\", ea);\n                }\n\n                var ma;\n                // Kepler's equation in the easy direction\n                if (e < 1) {                    \n                    ma = ea - e * Math.sin(ea);\n                } else {\n                    ma = e*Math.sinh(ea) - ea;\n                }\n                return pgen(\"MA\", ma);\n            }\n    );\n    \n    // This definition might get used for hyperbolic orbits.\n    gadd(\"MA\", [\"t\", \"t0\", \"G\", \"M\", \"a\"],\n            function(params) {\n                 const t   = params[\"t\"].value;\n                 const t0  = params[\"t0\"].value;\n                 const G   = params[\"G\"].value;\n                 const M   = params[\"M\"].value;\n                 // For hyperbolic orbits a < 0.\n                 const a   = Math.abs(params[\"a\"].value);\n                 const ma = Math.sqrt(G*M/(a*a*a)) * (t-t0);\n                 return pgen(\"MA\", ma);\n             }\n    );\n\n    gadd(\"MA\", [\"MLon\", \"Omega\", \"nu\"],\n            function (params) {\n                const ml = params[\"MLon\"].value;\n                const omega = params[\"Omega\"].value;\n                const nu = params[\"nu\"].value;\n                return pgen(\"MA\", ml - omega - nu);\n            }\n    );\n\n    /**\n     * MLon: Mean longitude\n     * This seems to be just the argument of perihelion+the longitude of the ascending node.\n     */\n    gadd(\"MLon\", [\"MA\", \"Omega\", \"nu\"],\n            function (params) {\n                const ma    = params[\"MA\"].value;\n                const nu    = params[\"nu\"].value;\n                const omega = params[\"Omega\"].value;\n\n                return pgen(\"MLon\", ma + nu + omega);\n            }\n    );\n    \n    /**\n     * N0: Mean motion in orbits/day\n     */\n    gadd(\"N0\", [\"Per\"],\n        function(params) {\n           return pgen(\"N0\", 86400./params[\"Per\"].value);\n        }\n    );\n\n    /**\n     * nu: Argument of periapsis.\n     * This is the angle between the line of nodes and \n     * the vector to the periapsis.\n     */\n    gadd(\"nu\", [\"Ecc\", \"Pnode\", \"L\"],\n            function (params) {\n                var p = params[\"Pnode\"].value;\n                var e = params[\"Ecc\"].value;\n                var L = params[\"L\"].value;\n\n                if ((Util.mag(p) === 0) || (Util.mag(e) === 0)) {\n                    Util.log(\"Circular orbit or in plane so  argument of periapsis not defined. using 0\");\n                    return pgen(\"nu\", 0);\n                } else {\n                    const cs = Util.dot(p, e) / Util.mag(p) / Util.mag(e);\n                    var   nu = Math.acos(cs);\n                    // Chech whether we are in 0-PI or PI-2PI\n                    const cross = Util.cross(p, e);\n                    const dir = Util.dot(cross, L);\n                    if (dir < 0) {\n                        nu = 2*Math.PI - nu;\n                    }\n                    return pgen(\"nu\", nu);\n                }\n            }\n    );\n\n    gadd(\"nu\", [\"LonP\", \"Omega\"],\n            function (params) {\n                const lp = params[\"LonP\"].value;\n                const omega = params[\"Omega\"].value;\n\n                return pgen(\"nu\", lp - omega);\n            }\n    );\n\n    /**\n     * Omega: The longitude of the ascending node.  Normally the\n     * longitude of the point at which the orbit crosses the equator going up.\n     * This is ill defined for radial, circular or equatorial orbits.\n     * If the orbit is in the equatorial plane, the longitude of the periapsis is used.\n     * If the orbit is radial, then the direction of the orbit when it rising through the\n     * plane is used.  If the orbit is radial in the z direction, or circular in the \n     * equatorial plane, the the value is set to 0.\n     */\n\n    gadd(\"Omega\", [\"Pnode\"],\n            function (params) {\n\n                // Just the longitude of the Pnode vector.\n                // Returned in radians.\n\n                var pnode = params[\"Pnode\"].value;\n                pnode = Util.times(1 / Util.mag(pnode), pnode);\n                const x = pnode[0];\n                const y = pnode[1];\n                var res = 0;\n                if (Math.abs(x) > Constants.PLANAR_RATIO || Math.abs(y) >= Constants.PLANAR_RATIO) {\n                    res = Math.atan2(y, x);\n                    return pgen(\"Omega\", res);\n                } else {\n                    // In the plane or radial\n                    return null;\n                }\n            }\n    );\n\n    /** Per: The period of the orbit in seconds */\n    gadd(\"Per\", [\"N0\"],\n        function(params) {\n           return pgen(\"Per\", 86400.*360/params[\"N0\"].value);\n        }\n    );\n\n\n    gadd(\"Per\", [\"a\", \"b\", \"L\"],\n    \n            // The area of the ellipse is pi a b \n            // The rate at which we are sweeping out area is 1/2 rv where we have\n            // the 1/2 since we are sweeping out little triangles, not rectangles.\n            function (params) {\n                const a = params[\"a\"].value;\n                if (a <= 0) {\n                    // Unbound orbit\n                    return pgen(\"Per\", Number.POSITIVE_INFINITY);\n                }\n                const b = params[\"b\"].value;\n                const L = params[\"L\"].getScalar();\n                // while \n                if (a * b === 0 || L === 0) {\n                    Util.log(\"Cannot calculate period for radial orbit\");\n                    return null;\n                } else {\n                    return pgen(\"Per\", 2*Math.PI * a * b / L);\n                }\n            }\n    );\n    \n    gadd(\"Per\", [\"a\", \"G\", \"M\", \"m1\"],\n            function(params) {\n                const a = params[\"a\"].value;\n                if (a <= 0) {\n                    // Unbound orbit\n                    return pgen(\"Per\", Number.POSITIVE_INFINITY);\n                }\n                const G = params[\"G\"].value;\n                const M = params[\"M\"].value;\n                const m1 = params[\"m1\"].value;\n                return pgen(\"Per\", 2*Math.PI/Math.sqrt(G*(M+m1)) * Math.pow(a, 1.5));\n            }\n    );\n    \n\n    /**\n     * Pnode: A vector along the line of nodes.  As discussed with the parameter Omega there\n     * are a number of special cases when the line of nodes is not well defined.\n     * and various 'backup' definitions are used.  \n     */\n    gadd(\"Pnode\", [\"L\"],\n            function (params) {\n                // p = z x L  where z is the z unit vector.\n\n                const l = params[\"L\"].value;\n                const mag = Util.mag(l);\n                const z = [0, 0, 1];\n                const pnode = Util.cross(z, l);\n                const pmag = Util.mag(pnode);\n                // If the magnitude of the angular momentum perpendicular to\n                // the z axis is too small we may have a circular orbit.\n                if (pmag / mag < Constants.PLANAR_RATIO) {\n                    return null;\n                }\n                // Make it a unit vector...\n                return pgen(\"Pnode\", Util.times(1/pmag, pnode));\n            }\n    );\n\n    gadd(\"Pnode\", [\"L\", \"Ecc\"],\n            function (params) {\n\n                // If this generator is called, then L is defined,\n                // but the previous generator returned null.  This means that\n                // The orbit is in the plane or radial.\n\n                const ecc = params[\"Ecc\"].value;\n                const eccm = Util.mag(ecc);\n                const x = ecc[0];\n                const y = ecc[1];\n\n                // If the orbit is cicular or along the z axis, the choice of\n                // the vector to the node is arbitrary and we just have it point along\n                // the x axis.\n                if ((eccm < Constants.SHAPE_RATIO) ||\n                        (Math.abs(x) < Constants.SHAPE_RATIO && Math.abs(y) < Constants.SHAPE_RATIO)) {\n                    return pgen(\"Pnode\", [1, 0, 0]);\n                }\n                return pgen(\"Pnode\", Util.times(1 / eccm, ecc));\n\n            }\n    );\n\n    /**\n     * r: The instantaneous position vector of the object.\n     * In this context we are deriving the position at a given time (using TA)\n     * given the orbital elements of the system.  Presumably i and Omega were\n     * used in computing Rot.\n     */\n    gadd(\"r\", [\"Rot\", \"Ecc\", \"a\", \"TA\"],\n            function (params) {\n                \n                const rot = params[\"Rot\"].value;\n                const e   = params[\"Ecc\"].getScalar();\n                const a   = params[\"a\"].value;\n                const ta  = params[\"TA\"].value;\n                \n                \n                // First we compute the position vector in the plane of the orbit with\n                // x pointing to the periapsis.\n                // The radius as a function of TA is                \n                const  r = a * Math.abs(1 - e * e) / (1 + e * Math.cos(ta));\n                // So the vector in the plane is just\n                \n                const nu  = rot[5];\n                const cos = r*Math.cos(ta+nu);\n                const sin = r*Math.sin(ta+nu);\n\n                const rv = [rot[0]*cos + rot[1]*sin, \n                            rot[2]*cos + rot[3]*sin,\n                            rot[4]*sin];\n                        \n                return pgen(\"r\", rv);\n            }\n    );\n\n\n    /**\n     * Rot: information used in the rotation computation  \n     *  Given the scalar radius rm, we get the components of r_i using\n     *   r_i = r* ( rot[i][0]*cos(TA+nu) + rot[i][1]*sin(TA+nu)   ) \n     *   To get back standard angles:\n     *       nu    = rot5\n     *       Omega = atan2(rot2, rot0)\n     *       i     = atan2(rot4, rot3/rot0)\n     */\n    gadd(\"Rot\", [\"Omega\", \"i\", \"nu\"],\n            function (params) {\n                \n                const o  = params[\"Omega\"].value;\n                const co = Math.cos(o);\n                const so = Math.sin(o);\n                \n                const i  = params[\"i\"].value;\n                const ci = Math.cos(i);\n                const si = Math.sin(i)\n                \n                const n  = params[\"nu\"].value;\n                \n                // Six element vector with to make efficient position computations.\n                const vec = [co,  -so*ci,  // Coefficients for x \n                             so,   co*ci,  // Coefficients for y\n                             si,           // Coefficients for z\n                             n]            // Save nu so all rotation information stored in rot.    \n                return pgen(\"Rot\", vec);\n            }\n    );\n    \n    /**\n     * t: the current time.  Note that this is modulo the orbital period\n     * for bound orbits.\n     */\n    gadd(\"t\", [\"t0\", \"MA\", \"Per\"],\n            function (params) {\n                const per = params[\"Per\"].value;\n                if (per === Number.POSITIVE_INFINITY) {\n                    return null;  // Hyperbolic orbit, need different info.\n                }\n                const t0 = params[\"t0\"].value;\n                const ma = params[\"MA\"].value;\n                const t = t0 - ma / (2 * Math.PI) * per;\n                return pgen(\"t\", t);\n            }\n    );\n    gadd(\"t\", [\"t0\", \"MA\", \"Per\", \"a\", \"G\", \"M\"],\n            function (params) {\n                // To get here, we must have had the period be infinite in\n                // the previous generator, so we have a hyperbolic orbit.\n                // Don't need the period, but it's a needed argument\n                // to ensure that precondition is met.\n                const t0 = params[\"t0\"].value;\n                const ma = params[\"MA\"].value;\n                const a = Math.abs(params[\"a\"].value);  // negative for hyperbolic\n                const G = params[\"G\"].value;\n                const M = params[\"M\"].value;\n                \n                const tx = ma*Math.sqrt(a*a*a/(G*M));  // tx = t-t0\n                return pgen(\"t\", t0+tx);\n            }\n    );\n    \n\n    /**\n     * t0: The time of periapsis passage.\n     * \n     */\n    gadd(\"t0\", [\"t\", \"MA\", \"Per\"],\n            function (params) {\n                const per = params[\"Per\"].value;\n                if (per === Number.POSITIVE_INFINITY) {\n                    return null;  // Hyperbolic orbit, need eccentricity\n                }\n                const t = params[\"t\"].value;\n                const ma = params[\"MA\"].value;\n                const t0 = t - ma / (2 * Math.PI) * per;\n                return pgen(\"t0\", t0);\n            }\n    );\n    \n    gadd(\"t0\", [\"t\", \"MA\", \"Per\", \"a\", \"G\", \"M\"],\n            function (params) {\n                // To get here, we must have had the period be infinite in\n                // the previous generator, so we have a hyperbolic orbit.\n                // Don't need the period, but it's a needed argument\n                // to ensure that precondition is met.\n                const t = params[\"t\"].value;\n                const ma = params[\"MA\"].value;\n                const a = Math.abs(params[\"a\"].value);  // negative for hyperbolic\n                const G = params[\"G\"].value;\n                const M = params[\"M\"].value;\n                \n                const tx = ma*Math.sqrt(a*a*a/(G*M));  // tx = t-t0\n                return pgen(\"t0\", t-tx);\n            }\n    );\n\n    /**\n     * TA: The true anomaly.  This is the angle between the periapsis and the position of the\n     * object measured from the origin (which is at one of the focuses of the orbit.\n     */\n    gadd(\"TA\", [\"EA\", \"Ecc\"],\n            function (params) {\n\n                // The true anomaly is related to the mean anomay by:\n                // tan (TA/2) =  (1+e)/(1-e)  tan (EA/2)\n                //   [replacing tan(EA/2), with tanh(EA/2) for\n                //    hyperbolic orbits]\n                const e  = params[\"Ecc\"].getScalar();\n                const EA = params[\"EA\"].value;\n                \n                var tan;\n                if (e > 1) {\n                    tan = Math.tanh(EA/2);\n                } else {\n                    tan = Math.tan(EA/2);\n                }                    \n                var val = Math.sqrt((1 + e) / (1 - e)) * tan;\n                val = 2 * Math.atan(val);\n                \n                if (e < 1 && val < 0) {\n                    val += 2*Math.PI;\n                }\n\n                return pgen(\"TA\", val);\n            }\n    );\n    \n    gadd(\"TA\", [\"r\", \"Ecc\", \"L\"],\n             function (params) {\n                 // Just the angle between r and Ecc.  We need L to tell\n                 // the range.\n                 const r     = params[\"r\"].value;\n                 const e     = params[\"Ecc\"].value;\n                 const l     = params[\"L\"].value;\n                 const dot   = Util.dot(r, e)/(Util.mag(r)*Util.mag(e));\n                 const cross = Util.cross(e,r);  // Order matters here.\n                 var   angle = Math.acos(dot);\n                 if (Util.dot(cross,l) < 0) {\n                     angle = 2*Math.PI/angle;\n                 }\n                 return pgen(\"TA\", angle);\n             }\n    );\n\n    // v: the instantaneous velocity of the body.\n    gadd(\"v\", [\"L\", \"Rot\", \"r\", \"a\", \"Ecc\", \"TA\"],\n        function(params) {\n            const Lm  = params[\"L\"].getScalar();\n            const r   = params[\"r\"].value;\n            const rm  = Util.mag(r);\n            const e   = params[\"Ecc\"].getScalar();\n            const a   = params[\"a\"].value;\n            const rot = params[\"Rot\"].value;\n            const ta  = params[\"TA\"].value;\n            \n            const p   = a*(1-e*e);\n            const nu  = rot[5];\n            \n            const sn  = Math.sin(ta);\n            const cos = Math.cos(nu+ta);\n            const sin = Math.sin(nu+ta);\n            \n            const vrad = Util.times(Lm*e*sn/(rm*p) , r);\n                        \n// \n// Six element vector with to make efficient position computations.\n//                rot       = [0:co,  1:-so*ci,  // Coefficients for x \n//                             2:so,  3: co*ci,   // Coefficients for y\n//                             4:si,             // Coefficients for z\n//                             5:n]              // Save nu so all rotation information stored in rot.    \n            const f    = Lm/rm;\n            const vtan = [   -f*(rot[0]*sin - rot[1]*cos),\n                             -f*(rot[2]*sin - rot[3]*cos),\n                              f*rot[4]*cos ];\n            const vtot = Util.vadd(vrad, vtan);\n            return pgen(\"v\", vtot);\n        }\n    );\n    // Use any of the anomalies to get the velocity.\n/*    gadd(\"v\", [\"G\", \"M\", \"r\", \"a\", \"L\", \"TA\"],\n            function (params) {\n                const ta = params[\"TA\"].value;\n                return vcalc(params, ta);\n            }\n    );\n    gadd(\"v\", [\"G\", \"M\", \"r\", \"a\", \"L\", \"EA\"],\n            function (params) {\n                const ea = params[\"EA\"].value;\n                return vcalc(params, ea);\n            }\n    );\n    gadd(\"v\", [\"G\", \"M\", \"r\", \"a\", \"L\", \"MA\"],\n            function (params) {\n                const ma = params[\"MA\"].value;\n                return vcalc(params, ma);\n            }\n    );*/\n}\n\nexport default LoadOrigins;\n","import Constants   from \"../std/Constants.js\";\r\nimport Util        from '../std/Util.js';\r\nimport Parameter   from './Parameter.js';\r\nimport LoadOrigins from './Origins.js';\r\n\r\nclass ParameterFactory {\r\n    \r\n\r\n    /** This is the map of all the legal parameters.  The fiducial name\r\n     *  points to the name, dimensionality,\r\n     *  and description, and indicates if the parameter is a constant of the motion\r\n     *  or varies along the orbit.\r\n     */\r\n    static legalParameters = {};\r\n    \r\n    /** This is a mapping to the fiducial capitalization of the parameter.\r\n     *  it maps String.toLowerCase() -> String.fiducial. \r\n     */\r\n    static caseConv        = {};\r\n    \r\n    \r\n    /** This is the mapping between fiducial names and arrays of generators to\r\n     *  create them.\r\n     */\r\n    static generators       = null;\r\n    \r\n    static constants        = [];\r\n    static variables        = [];\r\n    \r\n    /** Add a parameter into the list of legal parameters */\r\n    static addParam(name, dim, varies, descrip, units) {\r\n        if (ParameterFactory.caseConv[name.toLowerCase()] != null ) {\r\n            throw new Error(\"Redundant defintion for parameter name:\"+name);\r\n        }\r\n        ParameterFactory.legalParameters[name] = {\r\n            name: name,\r\n            dim: dim,\r\n            varies: varies,\r\n            descrip: descrip,\r\n            units: units\r\n        };\r\n        ParameterFactory.caseConv[name.toLowerCase()] = name;\r\n        if (varies) {\r\n            this.variables.push(name);\r\n        } else {\r\n            this.constants.push(name); \r\n        }\r\n    }\r\n    \r\n    /** Get the informatino about a parameter */\r\n    static getParamInfo(name) {\r\n        return ParameterFactory.legalParameters[ParameterFactory.fiducial(name)];        \r\n    }\r\n    \r\n    /** Get the list of variable parameters */\r\n    static getVariables() {\r\n        var variables = [];\r\n        for (var name in Object.keys(ParameterFactory.legalParameters)) {\r\n            var p = ParameterFactory.legalParameters[name];\r\n            if (p.varies) {\r\n                variables.push(name);\r\n            }\r\n        }\r\n        return variables;\r\n    }\r\n    \r\n    /** Convert the case of the input to the fiducial name for that parameter */\r\n    static fiducial(name) {\r\n        return ParameterFactory.caseConv[name.toLowerCase()];\r\n    }\r\n   \r\n    /** Check if the name and type of a parameter are consistent */\r\n    static checkName(name, type) {\r\n        var pt = ParameterFactory.getParamInfo(name);\r\n        return (pt != null) && (pt.dim === type);\r\n    }\r\n    \r\n\r\n    \r\n    /** Return the list of valid parameter names */\r\n    static getNames() {\r\n        const keys = Object.keys(ParameterFactory.legalParameters);\r\n        return keys;\r\n    }\r\n    \r\n    /** Find the first generator where are prerequisites are met */\r\n    static findGenerator(name, knownParams) {\r\n        \r\n        // Get the array of generators for this parameters.\r\n        const gens = ParameterFactory.generators[name];\r\n        if (gens == null || gens.length === 0) {\r\n            // No generators for this parameter\r\n            return null;\r\n        }\r\n        \r\n        // Loop over the generators ...\r\n        for (var g=0; g<gens.length; g += 1) {\r\n            const gen  = gens[g];\r\n            const reqs = gen.reqs;\r\n            \r\n            var allFound = true;            \r\n            // ... check that we have all needed prerequisites\r\n            for (var r=0; r<reqs.length; r += 1) {\r\n                var req = reqs[r];\r\n                if (!knownParams[req]) {\r\n                    allFound = false;\r\n                    break;\r\n                } \r\n            }\r\n            if (allFound) {\r\n                return gen;\r\n            }\r\n        }\r\n        return null;            \r\n    }\r\n    \r\n    \r\n    /** Generate the parameter\r\n     *  in terms of other known parameters.\r\n     */\r\n    static deriveParameter(xname, knownParams) {\r\n        const name  = ParameterFactory.fiducial(xname);\r\n        if (name == null) {\r\n            throw new Error(\"Attempt to create invalid parameter: \"+xname);\r\n        }\r\n        \r\n        if (ParameterFactory.generators == null) {\r\n            ParameterFactory.generators = {};\r\n            LoadOrigins();\r\n        }\r\n\t\t\r\n        // Get the array of generators for this parameters.\r\n        const gens = ParameterFactory.generators[name];\r\n        if (gens == null || gens.length === 0) {\r\n            // No generators for this parameter\r\n            return null;\r\n        }\r\n        \r\n        var param = null;\r\n        \r\n        // Loop over the generators ...\r\n        for (var g=0; g<gens.length; g += 1) {\r\n            const gen  = gens[g];\r\n            const reqs = gen.reqs;\r\n            \r\n            var allFound = true;            \r\n            // ... check that we have all needed prerequisites\r\n            for (var r=0; r<reqs.length; r += 1) {\r\n                var req = reqs[r];\r\n                if (!knownParams[req]) {\r\n                    allFound = false;\r\n                    break;\r\n                } \r\n            }\r\n            \r\n            if (allFound) {\r\n                // ... then generate the parameters from the known parameters.\r\n                param = gen.generate(knownParams);\r\n                \r\n                // Might still fail to generate parameter.\r\n                if (param != null) {\r\n                    break;\r\n                }\r\n            }\r\n            // Otherwise we'll just return a null.\r\n            \r\n        }\r\n        return param;\r\n    }\r\n    \r\n    // Add a generator for the given parameter name, with the \r\n    // specified prequisites and a function for generating the parameters \r\n    // from a set of known parameters.\r\n    static addGenerator(xname, reqs, func) {\r\n        if (xname == null || reqs == null || func == null) {\r\n            throw new Error(\"Invalid generator, null element\");\r\n        }\r\n        const name = ParameterFactory.fiducial(xname);\r\n        if (name == null) {\r\n            throw new Error(\"Adding generator for unknown parameter\");\r\n        }\r\n        const gens = ParameterFactory.generators;\r\n        var arr = gens[name];\r\n        if (arr == null) {\r\n            arr        = [];\r\n            gens[name] = arr;\r\n        }\r\n        arr.push({reqs: reqs, generate:func});\r\n    }\r\n    \r\n    \r\n    \r\n    static baseRender = function(inp, unit, called) {\r\n        var add   = 4;  // Show scalars to higher precision\r\n        var max   = 1.e10;\r\n        if (called) {\r\n            add = 0;\r\n            max   = 1.e6;\r\n        }\r\n        \r\n        var str;\r\n        if (Array.isArray(inp)) {\r\n            str = \"[ \";\r\n            for (var i=0; i<inp.length; i += 1) {\r\n                str += ParameterFactory.baseRender(inp[i], unit, true)+\"  \";\r\n            }\r\n            str += \" ] \";\r\n        } else {\r\n            \r\n            if (unit) {\r\n               inp /= unit.scale;\r\n               if (unit.offset) {\r\n                   inp += unit.offset;\r\n               }\r\n            }\r\n            \r\n            const abs = Math.abs(inp);\r\n            if (abs !== 0 && (abs < .001 || abs > max)) {\r\n                str = inp.toExponential(5+add);\r\n            } else {\r\n                str = inp.toPrecision(6+add);\r\n            }\r\n        }\r\n        if (unit && !called) {\r\n            str += \" \"+unit.unit;\r\n        }\r\n        return str;\r\n    }\r\n    \r\n    // Create a parameter with the given name and value.\r\n    static genParam(name, value, unit) {\r\n        const info = ParameterFactory.getParamInfo(name);\r\n        if (info == null) {\r\n            Util.log(\"Attempt to generate invalid parameter:\"+name);\r\n        }\r\n        return new Parameter(name, value, info.dim, info.varies, ParameterFactory.baseRender, unit);        \r\n    }\r\n\r\n}\r\n\r\nexport default ParameterFactory;\r\n// \r\n// Load the list of valid parameters.\r\n//                               NAME             DIM             VARIES  DESCRIP\r\n// Constants of the orbit\r\nParameterFactory.addParam(\"a\",     Parameter.SCALAR, false, \"Semimajor axis\",\r\n   Constants.radUnits);\r\nParameterFactory.addParam(\"b\",     Parameter.SCALAR, false, \"Semiminor axis\",\r\n   Constants.radUnits);\r\nParameterFactory.addParam(\"C\",     Parameter.VECTOR, false, \"The center of the ellipse\",\r\n   Constants.radUnits);\r\nParameterFactory.addParam(\"E\",     Parameter.SCALAR, false, \"The energy of the orbit\");\r\nParameterFactory.addParam(\"Ecc\",   Parameter.VECTOR, false, \"The eccentricity vector\");\r\nParameterFactory.addParam(\"Eccen\", Parameter.SCALAR, false, \"The eccentricity scalar\");\r\nParameterFactory.addParam(\"eF2\",   Parameter.VECTOR, false, \"The energy-scaled position vector of the second focus\");\r\nParameterFactory.addParam(\"G\",     Parameter.SCALAR, false, \"The gravitational constant (defaults to MKS)\");\r\nParameterFactory.addParam(\"i\",     Parameter.SCALAR, false, \"The inclination of the orbit\",\r\n   Constants.angUnits);\r\nParameterFactory.addParam(\"L\",     Parameter.VECTOR, false, \"The angular momentum of the orbit\");        \r\nParameterFactory.addParam(\"LonP\",  Parameter.SCALAR, false, \"The longitude of periapsis\",\r\n   Constants.angUnits);\r\nParameterFactory.addParam(\"M\",     Parameter.SCALAR, false, \"Mass of the central body (defaults to Ms)\",\r\n   Constants.massUnits);\r\nParameterFactory.addParam(\"m1\",    Parameter.SCALAR, false, \"Mass of the orbiting body (defaults to 0)\",\r\n   Constants.massUnits);\r\nParameterFactory.addParam(\"N0\",    Parameter.SCALAR, false, \"Orbits per day\");\r\n\r\nParameterFactory.addParam(\"nu\",    Parameter.SCALAR, false, \"Argument of periapsis\",\r\n   Constants.angUnits);\r\nParameterFactory.addParam(\"Omega\", Parameter.SCALAR, false, \"The longitude of the ascending node\",\r\n   Constants.angUnits);\r\nParameterFactory.addParam(\"Per\",   Parameter.SCALAR, false, \"The period of the orbit\",\r\n   Constants.intervUnits);\r\nParameterFactory.addParam(\"Pnode\", Parameter.VECTOR, false, \"The vector pointing the the ascending node\");\r\nParameterFactory.addParam(\"Rot\",   Parameter.BLOB,   false, \"Packaged rotation information\");\r\nParameterFactory.addParam(\"t0\",    Parameter.SCALAR, false, \"The reference time for the orbit\",\r\n   Constants.timeUnits);\r\n\r\n// Elements that vary during the orbit (i.e., as a function of time)\r\nParameterFactory.addParam(\"EA\",    Parameter.SCALAR, true, \"The eccentric anomaly\",\r\n   Constants.angUnits);\r\nParameterFactory.addParam(\"MA\",    Parameter.SCALAR, true, \"The mean anomaly\",\r\n   Constants.angUnits);\r\nParameterFactory.addParam(\"MLon\",  Parameter.SCALAR, true, \"The mean longitude\",\r\n   Constants.angUnits);\r\nParameterFactory.addParam(\"r\",     Parameter.VECTOR, true, \"Position of the object\",\r\n   Constants.radUnits);\r\nParameterFactory.addParam(\"t\",     Parameter.SCALAR, true, \"The current time\",\r\n   Constants.timeUnits);\r\nParameterFactory.addParam(\"TA\",    Parameter.SCALAR, true, \"The true anomaly\",\r\n   Constants.angUnits);\r\nParameterFactory.addParam(\"v\",     Parameter.VECTOR, true, \"Velocity of the object\",\r\n   Constants.velUnits);\r\n   \r\nif (!ParameterFactory.generators) {\r\n\tLoadOrigins();\r\n}","import Constants from        \"../std/Constants.js\";\nimport Util      from        \"../std/Util.js\";\n\nimport QOrb      from        \"../orbits/QOrb.js\";\nimport ParameterFactory from \"../orbits/ParameterFactory.js\";\nimport Parameter from        \"../orbits/Parameter.js\";\n\nclass Orbit {\n    \n    \n    constructor (name) {\n        this.name       = name;\n        this.parameters = {};\n    }\n    \n    getOrbitName() {\n        return this.name;\n    }\n    \n    setOrbitName(newName) {\n        this.name = newName;\n    }\n        \n    /** Reset the orbit to completely undefined */\n    clear() {\n        this.parameters = {};\n    }\n    \n    /** Clear 0 or more parameters */\n    clearParameters(...params) {\n        if (params && params[0]) {\n            params = params[0];\n        } else {\n            return;\n        }\n        for (var i=0; i<params.length; i += 1) {\n            delete this.parameters[params[i]];\n        }\n    }\n    \n    /** Known variable parameters, i.e., vary along the orbit */\n    variables() {\n        return this.conOrVar(true);\n    }\n    \n    /** Known orbital constants */\n    constants() {\n        return this.conOrVar(false);\n    }\n    \n    conOrVar(flag) {\n        const have = Object.keys(this.parameters);\n        const constants = [];\n        const params = this.parameters;\n        have.forEach(                \n            function(name) {\n                if (params[name].varies === flag) {\n                    constants.push(name);\n                }\n            }\n        );\n        return constants;        \n    }\n\n    /** Allow updates to varying parameters */\n    update(name, value) {\n        if (this.parameters[name]) {\n            if (this.parameters[name].varies) {\n                this.parameters[name].value = value;\n            }\n        }\n    }\n    \n    /** Create and add a parameter.  Note that unit is often null */\n    addParam(name, value, unit) {\n        const info = ParameterFactory.getParamInfo(name);\n        if (info == null) {\n            Util.log(\"Attempt to generate invalid parameter:\"+name);\n        } else {\n            this.addParameter(new Parameter(name, value, info.dim, info.varies, ParameterFactory.baseRender, unit));\n        }\n    }\n    \n    /** Add the specified parameter to the list of known parameters */\n    addParameter(p) {\n        const name = p.getName();\n        if (this.parameters[name]) {\n            Util.log(\"Replacing existing parameter:\" + name);\n        }\n        this.parameters[name] = p;        \n    }\n    \n    /** Add a structure of parameters into the orbit */\n    addStructure(str) {\n        for (let name in str) {\n            this.addParameter(ParameterFactory.genParam(name, str[name]));\n        }\n    }\n    \n\n    /** Return the specified parameter.\n     *  If it is already known just return it.\n     *  If not see if we can try to calculate it,\n     *  either immediately or after seeing what\n     *  other parameters are calcuable.\n     */\n    getParameter(name, cycle) {\n        \n        // Do we already know this parameter?\n        if (this.parameters[name]) {\n            return this.parameters[name];\n            \n        }\n        \n        \n        // Is this a knowable parameter\n        if (ParameterFactory.getParamInfo(name) == null) {\n            Util.log(\"Attempt to retrieve illegal parameter:\"+name);\n            return null;\n        }                \n\n        // Start a cycle where we look at all of the currently\n        // unknown parameters and see if we can compute one.\n        // If we can then we'll try to see if we can compute\n        // the desired parameter. If we are unable to compute any parameters\n        // then we stop, otherwise we go until we find we can't compute any more.\n        var updateParam = true;\n        while (updateParam) {\n            \n            // May have computed it below..\n            if (this.parameters[name]) {\n                return this.parameters[name];\n            }\n            \n            \n            // Can we compute the parameter we want now?\n            var pn = this.newComputable(name);\n            if (pn != null) {\n                // We could.  So just return it!\n                this.parameters[name] = pn;\n                return pn;\n            }\n            \n            // Not found yet.  Do we want to cycle and try again?\n            if (!cycle) {\n                return null;\n            }\n            \n            // Couldn't.  Try to compute any unknown parameter.\n            // If we are successful, then maybe that was the missing\n            // prerequiste for what we want and we can try again.\n            updateParam = false;\n            var names = ParameterFactory.getNames();\n            for (var i=0; i < names.length; i += 1) {\n                const param = names[i];\n                pn = this.newComputable(param);\n                if (pn != null) {\n                    updateParam = true;\n                    this.parameters[param] = pn;\n                } else {\n                }               \n            }\n            // If updateParam is still false, then we\n            // can't compute any more and we'll just exit the loot and return.\n        }\n        \n        var knowns = Object.keys(this.parameters).sort();\n        \n        Util.log(\"Unable to find antecedents to parameter:\"+name+\" with known parameters:\"+knowns);\n        return null; \n\n    }\n    \n    \n    /** If the parameter is unknown but computable, return the computed value. */\n    newComputable(name) {\n        \n        if (this.parameters[name]) {\n            return null;\n        }\n        \n\n        // If knowable but not yet known then see if we can compute it...\n        return ParameterFactory.deriveParameter(name, this.parameters);\n    }\n    \n    \n    /** Return a copy of the orbit */\n    copy() {\n        var c = new Orbit(this.name);\n        // Copy in the parameters.\n        for (var key in this.parameters) {\n            c.parameters[key] = ParameterFactory.genParam(key, this.parameters[key].value);\n        }\n        return c;        \n    }\n    \n    /** A quickorbit saves just the minimal information to compute the position or velocity\n     *  as a function of time.\n     */\n    quickOrbit() {\n        \n        if (this.parameters[\"Rot\"] && this.parameters[\"Ecc\"] &&\n            this.parameters[\"a\"]   && this.parameters[\"Per\"]) {\n            const params = {\n                rot: this.parameters[\"Rot\"].value,   // This encodes the three orbit angles.\n                e:   this.parameters[\"Ecc\"].getScalar(),\n                per: this.parameters[\"Per\"].value,  \n                a:   this.parameters[\"a\"].value,\n            }\n            \n            // May only know shape of orbit, not phase.\n            // OrbitXYZ should still work.\n            if (this.parameters[\"t0\"]) {\n                params[\"t0\"] = this.parameters[\"t0\"].value;\n            }\n            \n            if (params.e < 1) {\n                if (this.parameters[\"Per\"]) {\n                    params.per = this.parameters[\"Per\"].value;\n                } else {\n                    Util.log(\"No period given for elliptic orbit\");\n                    return null;                    \n                }\n            } else {\n                // While the true period is infinite, we need\n                // something that scales MA to time.\n                const a  =  params.a;\n                const G  =  this.getParameter(\"G\").value;\n                const M  =  this.getParameter(\"M\").value;\n                params.per = 2*Math.PI * Math.sqrt(-(a*a*a)/(G*M));\n            }\n            \n            const qorb = new QOrb(params);\n            qorb.scale = 1./Constants.AU;\n            \n            return qorb;\n            \n        } else {\n            \n            Util.log(\"Attempt to get quick orbit with undefined constants\");\n            Util.log(\"   Available:\"+Object.keys(this.parameters));\n            return null;\n        }\n    }\n}\n\nexport default Orbit;","/**\n * Solar system planets, orbital elements.\n * Derived from\n *    https://ssd.jpl.nasa.gov/txt/aprx_pos_planets.pdf\n * Keplerian Elements for Approximate Positions of the Planets\n * E M Standish\n * Solar System Dynamics Group\n * JPL /Caltech\n * \n * Planetary masses and diameters from:\n * https://nssdc.gsfc.nasa.gov/planetary/factsheet/\n * \n */\n \n\nimport Constants from \"../std/Constants.js\";\nimport Util      from \"../std/Util.js\";\nimport Orbit     from \"../orbits/Orbit.js\";\n\nclass Planets {\n    \n    static bases = null;  \n    \n    /** Get the elements for the planets for a specific time. */\n    static getElements(name, time) {\n\tif (!Planets.bases) { \n\t\t\tPlanets.initialize();\n        }\n        // Convert t from seconds to centuries...\n        const t = time/Constants.CENTURY;\n        const elems = {};\n        const p = Planets.bases[name];\n        elems.a     = (p.elems[0] + t*p.derivs[0])*Constants.AU;\n        elems.Eccen = p.elems[1] + t*p.derivs[1];\n        elems.i     = Util.toRadians(p.elems[2] + t*p.derivs[2]);\n        // Defer conversion to radians.\n        var   ML    = p.elems[3] + t*p.derivs[3];\n        var   LonP  = Util.toRadians(p.elems[4] + t*p.derivs[4]);\n        elems.Omega = Util.toRadians(p.elems[5] + t*p.derivs[5]);\n        elems.Per   = 360./p.derivs[3] * Constants.CENTURY;\n        \n        elems.nu    = LonP - elems.Omega;\n        \n        let MA      = Util.toRadians(ML) - LonP;\n        if (p.corrections != null) {\n            let corr =  p.corrections[0]*t*t + \n                        // Paper doesn't explicitly indicate that the trig functions\n                        // are in degrees, but in other cases in paper they clearly are.\n                        p.corrections[1]*Math.cos(Util.toRadians(p.corrections[3]*t)) +\n                        p.corrections[2]*Math.sin(Util.toRadians(p.corrections[3]*t));\n             MA += Util.toRadians(corr);\n        }\n        MA = MA % (2*Math.PI);\n        \n        elems.t0    = time - MA/(2*Math.PI) * elems.Per;\n        return {elements: elems, mass: p.mass, diameter: p.diameter, ringAngle: p.ringAngle, color: p.color, ringColor: p.ringColor};\n    }\n    \n    /** Add an entry to the planets list */\n    static add(name, elems, derivs, corrections, mass, diameter, color, ringAngle, ringColor) {\n        const base = {};\n        base.elems = elems;\n        base.derivs = derivs;\n        base.mass = mass;\n        base.diameter = diameter;\n        base.color = color;\n        base.ringAngle = ringAngle;\n        base.ringColor = ringColor;\n        if (corrections) {\n            base.corrections = corrections;\n        }\n        Planets.bases[name] = base;\n    }\n    \n    /** Add the data for each planet. */\n    static initialize() {\n\t   Planets.bases = {};\n\t   \n       Planets.add(\"Mercury\",\n//                  a            e            i,              ML          LonP          Omega\n         [ 0.38709843,  0.20563661,  7.00559432,    252.25166724,  77.45771895,     48.33961819],\n         [ 0.00000000,  0.00002123, -0.00590158, 149472.67486623,   0.15940013,     -0.12214182],\n         null, 0.33e24, 4879, 0xAAAAFF,  null);\n       \n       Planets.add(\"Venus\",\n         [ 0.72332102,  0.00676399,  3.39777545,    181.97970850, 131.76755713,  76.67261496],\n         [-0.00000026, -0.00005107,  0.00043494,  58517.81560260,   0.05679648,  -0.27274174],\n         null, 4.87e24, 12104, 0xFFFFFF, null);\n         \n       Planets.add(\"EM Bary\",\n         [ 1.00000018,  0.01673163, -0.00054346,    100.46691572, 102.93005885,  -5.11260389],\n         [-0.00000003, -0.00003661, -0.01337178,  35999.37306329,   0.31795260,  -0.24123856],\n         null, 5.97e24, 12756, 0x0000FF, null);\n       Planets.add(\"Mars\",\n          [ 1.52371243,   0.09336511,  1.85181869,     -4.56813164, -23.91744784,  49.71320984],\n          [ 0.00000097,   0.00009149, -0.00724757,  19140.29934243,   0.45223625,  -0.26852431],\n         null, 0.642e24, 6792, 0xFF0000, null);\n       Planets.add(\"Jupiter\",\n          [ 5.20248019,   0.04853590,  1.29861416,     34.33479152,  14.27495244, 100.29282654],\n          [-0.00002864,   0.00018026, -0.00322699,   3034.90371757,   0.18199196,   0.13024619],\n          [-0.00012452,   0.06064060, -0.35635438,     38.35125000],\n          1898e24, 142984, 0x00FF00, null\n          );\n       Planets.add(\"Saturn\",\n         [ 9.54149883,   0.05550825,  2.49424102,     50.07571329,  92.86136063, 113.63998702],\n         [-0.00003065,  -0.00032044,  0.00451969,   1222.11494724,   0.54179478,  -0.25015002],\n         [ 0.00025899,  -0.13434469,  0.87320147,     38.35125000],\n         568e24, 120536, 0xAAFFAA, 26.7, 0xffff00\n       );\n       Planets.add(\"Uranus\",\n         [19.18797948,   0.04685740,  0.77298127,    314.20276625, 172.43404441,  73.96250215],\n         [-0.00020455,  -0.00001550, -0.00180155,    428.49512595,   0.09266985,   0.05739699],\n         [ 0.00058331,  -0.97731848,  0.17689245,      7.67025000],\n         86.8e24, 51118, 0xAAFFFF, null\n       );\n       Planets.add(\"Neptune\",\n         [30.06952752,   0.00895439,  1.77005520,    304.22289287,  46.68158724, 131.78635853],\n         [ 0.00006447,   0.00000818,  0.00022400,    218.46515314,   0.01009938,  -0.00606302],\n         [-0.00041348,   0.68346318, -0.10162547,      7.67025000],\n         102e24, 49528, 0x00FFFF, null\n        );\n       Planets.add(\"Pluto\",\n         [39.48686035,   0.24885238, 17.14104260,    238.96535011, 224.09702598, 110.30167986],\n         [ 0.00449751,   0.00006016,  0.00000501,    145.18042903,  -0.00968827,  -0.00809981],\n         [-0.01262724,   0,           0,               0],\n         0.0146e24, 2370, 0xFFFFFF, null\n        );\n         \n       Planets.bases[\"Earth\"] = Planets.bases[\"EM Bary\"];\n    }\n    \n    // Get the orbit for a planet at a given time.\n    static getOrbit(pname, time) {\n        const planetData = Planets.getElements(pname, time);\n        const elems = planetData.elements;\n\n        const orb = new Orbit(pname);\n\n        for (var key in elems) {\n            orb.addParam(key, elems[key]);\n        }\n        orb.addParam(\"t\", time);\n        // Make sure we can get positions.\n        const r0 = orb.getParameter(\"r\", true);\n        if (r0 == null) {\n            return null;\n        }\n        return orb.quickOrbit();\n    }\n}\n\nexport default Planets;","import Util from      \"../std/Util.js\";\nimport Constants from \"../std/Constants.js\";\nimport Orbit from     \"../orbits/Orbit.js\";\nimport ParameterFactory from \"../orbits/ParameterFactory.js\";\n\n\nconst loadMPCData = function (startTime, callback) {\n    Util.log(\"Initiating loading of MPC data\");\n    let xhr  = new XMLHttpRequest();\n    xhr.open('GET', \"data/combG.json\", true);\n    xhr.onload  = function() {\n        let stars = xhr.responseText;\n        let json = JSON.parse(stars);\n        let zz;\n        for (zz in json) {\n            break;\n        }\n        parseMPCData(startTime, callback, json[zz]);\n    };\n    \n    xhr.onerror = function() {\n        Util.log(\"Called error function when loading asteroids and comets!\");\n    }\n    \n    xhr.send(null);\n}\n\n// Called as callback in loadMPCData\nconst parseMPCData = function(startTime, callback, mpcdata) {\n    const info  = [];\n    var nskip       = 0;\n    var nhyper      = 0;\n    var nAst        = 0;\n    var nCom        = 0;\n    var unknowns = 0;\n    Util.log(\"Number of MPC small bodies:\"+mpcdata.length)\n    for (var i=0; i<mpcdata.length; i += 1) {\n        const elements = mpcdata[i];\n        var name = elements.Name;\n        if (!name) {\n            name = elements.Designation_and_name;\n        } \n        if (!name) {\n            unknowns += 1;\n            name = \"Unnamed_\"+unknowns;\n        }\n\n        const orb      = new Orbit(name);\n\n        const e = elements.e;\n        const type = elements.Orbit_type;\n        if (e == null || e === 1) {\n            // Skipping parabolic and radial orbits for the nonce\n            nskip += 1;\n            continue;\n        }\n\n        if (e > 1) {\n            nhyper += 1;\n        }\n\n\n        orb.addParameter(ParameterFactory.genParam(\"Eccen\", e));\n        orb.addParameter(ParameterFactory.genParam(\"i\", Util.toRadians(elements.i)));\n        orb.addParameter(ParameterFactory.genParam(\"nu\", Util.toRadians(elements.Peri)));\n        orb.addParameter(ParameterFactory.genParam(\"Omega\", Util.toRadians(elements.Node)));\n\n        // Comets give the time of perihelion and perihelion distance, \n        // while asteroids give the Mean anomaly at epoch and semimajor axis.\n        if (type === \"C\" || type === \"P\"  || type === \"A\"  || type === \"I\") {\n\n            const year = elements.Year_of_perihelion;\n            const mon  = elements.Month_of_perihelion;\n            const day  = elements.Day_of_perihelion;\n            const d    = new Date(year, mon-1, Math.floor(day));\n            var t1970  = d.setDate(Math.floor(day))/1000;\n            t1970     += 86400 * (day-Math.floor(day));  // Seconds in unix epoch.\n            var t0     = t1970 - Constants.Epoch0;\n            orb.addParameter(ParameterFactory.genParam(\"t0\", t0));\n            var peridist = elements.Perihelion_dist*Constants.AU;            \n            orb.addParameter(ParameterFactory.genParam(\"a\", peridist/(1 - e)));\n            nCom += 1;\n\n        } else {\n\n            orb.addParameter(ParameterFactory.genParam(\"a\", elements.a*Constants.AU));\n            const epoch = (elements.Epoch - Constants.JD0)*86400;\n            // To find t0, we take the mean anomaly at the epoch and use the mean motion to compute\n            // the number of days we are past.\n            const delta = (elements.M / elements.n)*86400;\n            orb.addParameter(ParameterFactory.genParam(\"t0\", epoch-delta));\n            nAst += 1;\n        }\n\n        orb.addParameter(ParameterFactory.genParam(\"t\", startTime));\n        const r = orb.getParameter(\"r\", true);\n\n        if (r == null) {\n            nskip += 1;\n            continue;\n        }\n        const qorb = orb.quickOrbit();\n        if (qorb == null) {\n            Util.log(\"Found null orbit at index:\"+i);\n        }\n\n        info.push({type: type, name: name, orbit: orb.quickOrbit(), H:elements.H});\n    }\n    \n    Util.log(\"Parsed MPC data\");\n    Util.log(\"    \"+info.length +\" total bodies\");\n    Util.log(\"    \"+nAst        +\" asteroids\");\n    Util.log(\"    \"+nCom        +\" comets\");\n    Util.log(\"    \"+nhyper      +\" hyperbolic orbits\");\n    Util.log(\"    \"+nskip       +\" orbits skipped (parabolic or missing information)\");\n    callback(info);    \n}\n\n\nexport default loadMPCData;","import {LineBasicMaterial, BufferGeometry,Line, Vector3} from \"three\";\n\n// This returns an orbit with the distances scaled to AU by default.\nconst OrbitPlot = function (name, orbit, color) {\n    const orbitR = orbit.orbitXYZ(360);\n    const points = [];\n    for (var pi=0; pi<orbitR.length; pi += 1) {\n        const r = orbitR[pi];\n        points.push(new Vector3(r[0], r[1], r[2]));\n    }\n   \n    const material = new LineBasicMaterial( { color: color } );\n    const geometry = new BufferGeometry().setFromPoints( points );\n    const line     = new Line(geometry, material );\n    return {component: line, name:name+\"Orbit\", render: null};\n}\n\nexport default OrbitPlot;","import {SphereGeometry, MeshBasicMaterial, Mesh} from \"three\";\nimport Util from \"../std/Util.js\";\nimport Constants from \"../std/Constants.js\";\n\nconst Planet = function(name, start, qorbit, size, color, wireFrame, useSize){\n    \n \n    // We're going to make things smaller than the Sun, but \n    // can't scale directly or they will disappear...\n    \n    var ratio = (Math.log10(size/10000)+1)*.03;\n    if (useSize) {\n        ratio = size;\n    }\n    \n    const geometry = new SphereGeometry(ratio, 8, 8);\n    const material = new MeshBasicMaterial({wireframe: wireFrame, color: color });\n    const sphere   = new Mesh(geometry, material);\n    const p        = qorbit.position(start);\n    sphere.position.set(p[0], p[1], p[2]);\n    let count = 0;\n        \n    const ret = \n      {component: sphere, name: name+\"Body\",\n        \n      render: function(time) {\n          // Update planet positions.\n           var r = qorbit.position(time);\n           // Using ret.component vs just sphere\n           // allows us to replace the component externally.\n           ret.component.position.set(r[0], r[1], r[2]);\n      }};\n    return ret;\n};\n\nexport default Planet;\n\n","import {RingGeometry, MeshBasicMaterial, Mesh} from \"three\";\nconst Ring = function(name, start, orbit, size, color){\n \n    // We're going to make things smaller than the Sun, but \n    // can't scale directly or they will disappear...\n    var ratio = (Math.log10(size/10000)+1)*.03;\n\n    const geometry = new RingGeometry(1.1*ratio, 2*ratio, 8);\n    const material = new MeshBasicMaterial({wireframe: true, color: color });\n    const ring     = new Mesh(geometry, material);\n    const p        = orbit.position(start);\n    ring.position.set(p[0], p[1], p[2]);\n    \n    return {\n      component: ring,\n      name: name+\"Ring\",        \n      render:function(time) {\n          // Update planet positions.\n           var r = orbit.position(time);\n           ring.position.set(r[0], r[1], r[2]);\n      }\n  };\n}\n\nexport default Ring;\n\n","/** This class started as a direct copy of the Points class.\n *  The testPoint method has been adapted to use an angular offset criterion\n *  during the raycast rather than the linear projected offset.  Since testPoint\n *  is not a method within Points, but a method defined in parallel in the Points\n *  module, we cannot [I think] simply update this method in this class but would\n *  need to copy the update the raycast method too... So we just do a complete\n *  copy instead.\n */\n\nimport { Sphere, Ray, Matrix4, Object3D, Vector3, PointsMaterial, BufferGeometry } from 'three';\nimport Util from \"../std/Util.js\";\n\nconst _inverseMatrix = /*@__PURE__*/ new Matrix4();\nconst _ray           = /*@__PURE__*/ new Ray();\nconst _sphere        = /*@__PURE__*/ new Sphere();\nconst _position      = /*@__PURE__*/ new Vector3();\n\nclass AngPoints extends Object3D {\n\n    constructor(geometry = new BufferGeometry(), material = new PointsMaterial()) {\n\n        super();\n\n        this.type = 'AngPoints';\n\n        this.geometry = geometry;\n        this.material = material;\n\n        this.updateMorphTargets();\n        this.maxAngSq   = 0.00005;\n\n    }\n\n    copy(source) {\n\n        super.copy(source);\n\n        this.material = source.material;\n        this.geometry = source.geometry;\n\n        return this;\n\n    }\n\n    raycast(raycaster, intersects) {\n\n        const geometry = this.geometry;\n        const matrixWorld = this.matrixWorld;\n        const threshold = raycaster.params.Points.threshold;\n        const drawRange = geometry.drawRange;\n\n        // Checking boundingSphere distance to ray\n\n        if (geometry.boundingSphere === null)\n            geometry.computeBoundingSphere();\n\n        _sphere.copy(geometry.boundingSphere);\n        _sphere.applyMatrix4(matrixWorld);\n        _sphere.radius += threshold;\n\n        if (raycaster.ray.intersectsSphere(_sphere) === false)\n            return;\n\n        //\n\n        _inverseMatrix.copy(matrixWorld).invert();\n        _ray.copy(raycaster.ray).applyMatrix4(_inverseMatrix);\n\n        const localThreshold = threshold / ((this.scale.x + this.scale.y + this.scale.z) / 3);\n        const localThresholdSq = localThreshold * localThreshold;\n\n        if (geometry.isBufferGeometry) {\n\n            const index = geometry.index;\n            const attributes = geometry.attributes;\n            const positionAttribute = attributes.position;\n\n            if (index !== null) {\n\n                const start = Math.max(0, drawRange.start);\n                const end = Math.min(index.count, (drawRange.start + drawRange.count));\n\n                for (let i = start, il = end; i < il; i++) {\n\n                    const a = index.getX(i);\n\n                    _position.fromBufferAttribute(positionAttribute, a);\n\n                    testPoint(_position, a, this.maxAngSq, matrixWorld, raycaster, intersects, this);\n\n                }\n\n            } else {\n\n                const start = Math.max(0, drawRange.start);\n                const end = Math.min(positionAttribute.count, (drawRange.start + drawRange.count));\n\n                for (let i = start, l = end; i < l; i++) {\n                    _position.fromBufferAttribute(positionAttribute, i);\n                    testPoint(_position, i, this.maxAngSq, matrixWorld, raycaster, intersects, this);\n                }\n            }\n        } else {\n            console.error('THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');\n        }\n    }\n\n    updateMorphTargets() {\n\n        const geometry = this.geometry;\n\n        if (geometry.isBufferGeometry) {\n\n            const morphAttributes = geometry.morphAttributes;\n            const keys = Object.keys(morphAttributes);\n\n            if (keys.length > 0) {\n\n                const morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n                if (morphAttribute !== undefined) {\n\n                    this.morphTargetInfluences = [];\n                    this.morphTargetDictionary = {};\n\n                    for (let m = 0, ml = morphAttribute.length; m < ml; m++) {\n\n                        const name = morphAttribute[ m ].name || String(m);\n\n                        this.morphTargetInfluences.push(0);\n                        this.morphTargetDictionary[ name ] = m;\n                    }\n                }\n            }\n        } else {\n            const morphTargets = geometry.morphTargets;\n            if (morphTargets !== undefined && morphTargets.length > 0) {\n                console.error('THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.');\n            }\n        }\n    }\n}\n\nAngPoints.prototype.isPoints = true;\n\nfunction testPoint(point, index, localThresholdSq, matrixWorld, raycaster, intersects, object) {\n\n    const rayPointDistanceSq = _ray.distanceSqToPoint(point);\n    const distanceSq         = _ray.origin.distanceToSquared(point);\n\n    if (rayPointDistanceSq/distanceSq < localThresholdSq) {\n\n        const intersectPoint = new Vector3();\n\n        _ray.closestPointToPoint(point, intersectPoint);\n        intersectPoint.applyMatrix4(matrixWorld);\n\n        const distance = raycaster.ray.origin.distanceTo(intersectPoint);\n\n        if (distance < raycaster.near || distance > raycaster.far)\n            return;\n\n        const dist = raycaster.ray.origin.distanceTo(point);\n        const xoffset = intersectPoint.distanceTo(point);\n        intersects.push({\n\n            distance:      distance,\n            distanceToRay: Math.sqrt(rayPointDistanceSq),\n            point:         intersectPoint,\n            index:         index,\n            face:          null,\n            object:        object\n\n        });\n    }\n}\n\nexport default AngPoints;\n\n\n","import {Color, BufferGeometry, PointsMaterial, Float32BufferAttribute, Vector3} from \"three\";\nimport AngPoints from \"../elems/AngPoints.js\";\nimport Util from \"../std/Util.js\";\n\nconst SmallBodies = function(smbData, colorLookup, startTime) {\n    let xcount = 0;\n    function getPositions(data, time) {\n        xcount += 1;\n        const px = [];\n        for (var i=0; i<data.length; i += 1) {\n            if (data[i].orbit == null) {\n                Util.log(\"No orbit for \"+i+\" \"+data.name);\n            }\n            const p = data[i].orbit.position(time);\n            px.push(p[0], p[1], p[2]);\n        }\n        return new Float32BufferAttribute(px,3);\n    }\n    \n    function getColors(data, colorLookup) {\n        \n            var allTypes = {\n\"A\":              0xbfef45,\n\"Amor\":           0x1f8231,\n\"Apollo\":         0xfabed4,\n\"Aten\":           0xdcbeff,\n\"Atira\":          0x469990,\n\"C\":              0xf032e6,\n\"Distant Object\": 0x3cb44b,\n\"Hilda\":          0xffd8b1,\n\"Hungaria\":       0xaaffc3,\n\"I\":              0x9a6324,\n\"Jupiter Trojan\": 0x42d4f4,\n\"MBA\":            0xffe119,\n\"Object with perihelion distance < 1.665 AU\": 0x4363d8,\n\"P\":              0xe6194b,\n\"Phocaea\":        0xfffac8\n    };\n        const colors = [];\n        \n        for (var i=0; i < data.length; i += 1) {\n            const t   = data[i].type;\n            const h   = data[i].H;\n            var col = 0xFFFFFF;\n            if (allTypes[t]) {\n                col = allTypes[t];\n            } else {\n                Util.log(\"Cannot find type for: \"+i);\n            }\n            const c3 = new Color(col);\n            var fac = 1;\n            if (t !== \"P\") {\n                fac = 0.2;\n            }\n            if (h > 5) {\n                fac = 5/h;\n            }\n            colors.push(c3.r*fac, c3.g*fac, c3.b*fac);\n            \n        }\n        return new Float32BufferAttribute( colors, 3 );\n\n    }\n\n\n    const geometry = new BufferGeometry();        \n    // Should the time here be 0?\n    geometry.setAttribute( 'position', getPositions(smbData, startTime));\n    geometry.setAttribute( 'color',    getColors(smbData, colorLookup));\n        \n    const material       = new PointsMaterial( {sizeAttenuation: false, size: 2, vertexColors: true } );\n    const points         = new AngPoints(geometry, material );\n    \n    // Add this function to the component.\n    points.getIndexedName = function(index) {\n        return smbData[index].name;\n    };\n    \n    return {component: points,\n      render:function(time) {\n        geometry.setAttribute( 'position', getPositions(smbData, time));\n      }\n    };\n}\n\nexport default SmallBodies;","import  {SphereGeometry,MeshBasicMaterial,Mesh} from \"three\";\n\nconst Sun = function(settings) {\n\n    if (!settings) {\n        settings = {};\n    }\n    const sunSize     = settings.sunSize      || 0.1;\n    const sunColor    = settings.sunColor     || 0xFFFF00;\n    const sunWire     = settings.sunWire      || false;\n    const sunSegments = settings.sunSegements || 8;\n    const sunName     = settings.sunName      || \"SunBody\";\n    const sunPosition = settings.sunPosition  || [0,0,0];\n        \n    var geometry = new SphereGeometry(sunSize, sunSegments, sunSegments);\n    var material = new MeshBasicMaterial({wireframe: sunWire, color: sunColor});\n    var sphere   = new Mesh(geometry, material);\n \n    sphere.position.set(sunPosition[0], sunPosition[1], sunPosition[2]);\n    return {component: sphere, name: sunName, \n           render: null};        \n}\n\nexport default Sun;\n    \n\n\n","import Util from \"../std/Util.js\";\n\nclass SecondaryOrbit {\n    constructor(primary, secondary, secScale) {\n        this.prime = primary;\n        this.sec   = secondary;\n        this.scale = secScale;\n    }\n    \n    position(time) {\n        let p = this.sec.position(time);\n        if (this.scale) {\n            p = Util.times(this.scale, p);\n        }\n        return Util.vadd(this.prime.position(time),p);\n    }\n    \n    state(time) {\n        const pstate = this.prime.state(time);\n        const sstate = this.sec.state(time);\n        return [\n            Util.vadd(pstate[0], sstate[0]),\n            Util.vadd(pstate[1], sstate[1])\n        ];\n    }\n}\n\nexport default SecondaryOrbit;\n\n","import Util from \"../std/Util.js\";\nimport Orbit from \"../orbits/Orbit.js\";\nimport SecondaryOrbit from \"../orbits/SecondaryOrbit.js\";\nimport Planets from \"../solarsystem/Planets.js\";\n\n// \n// // This class allows us to define a \n// chain of orbits to define the position\n// of a object which is subject to changing conditions\n// either due to the evolution of an orbit or active\n// control.\n\n// Note that this class does not inherit from existing\n// orbit classes and only defines the 'position' method\n// (we should add the state method ultimately if we need\n// velocities).\n\n// For each interval we define define a start time and\n// stop time for which these elements are useful.  We may\n// either assume the elements are exactly correct for the entire\n// interval, or exactly correct for the beginning of the interval\n// followed by a time in which we wish to linearly interpolate\n// with the following set of elements.\n// \n// We may anticipate discontinuities in the orbit if we do\n// not include an interpolation interval.  (We can set\n// the times such that the entire interval is interpolated).\n////\n// The behavior prior to the first or after the last interval\n// can either extrapolate the extermum orbits, or we can return\n// an object at the origin (which will normally be hidden behind something else)\n// So if we wish to simulate a space mission beginning on some date we\n// supply the orbit chain and indicate that we should return the origin for\n// the prior times.  If the mission ends destructively we may do the same\n// for the subsequent time.\n\nclass ChainedOrbit {\n    constructor() {\n        this.orbits     = [];    // The orbits in the chain\n        this.name       = null;  // The name for this chain (e.g., the mission name)\n        this.usePrior   = false; // Use the first orbit before its start time.\n        this.useSubseq  = false; // Use the last orbit after its end time\n        this.index      =  0;    // The index of the current orbit\n        this.norbit     =  0;    // The number of orbits in the chain\n        this.isPrior    = false; // We are currently prior to the first interval\n        this.isSubseq   = false; // We are currently subsequent to the last interval\n        this.interp     = false; // We are interpolating?\n        this.startTime  = null;  // The start time of the first orbit in the chain\n        this.stopTime   = null;  // The end time of the last orbit in the chain\n        this.count      = 0;\n    }\n    \n    addOrbit(orbit, start, stop, interp, scale) {\n        \n        Util.log(\"Adding orbit:\", start, stop, interp);\n        \n        if (stop <= start) {\n            Util.log(\"Invalid orbit chain interval:\"+orbit.name+\" \"+this.norbits);\n            return;\n        }\n        if (!interp) {\n            interp = stop;\n        } else if (interp < start || interp > stop) {\n            Util.log(\"Invalid orbit chain interpolation time: \"+interp+\" not between \"+start+\" and \"+stop);\n            return;\n        }\n        \n        \n        if (this.norbit <= 0) {\n            this.startTime = start;\n        }\n        \n        if (this.norbit > 0) {\n            if (start != this.stopTime) {\n                Util.log(\"Orbit gap:\"+this.name+\" index:\"+this.norbit, this.startTime, this.stopTime, start, stop);\n                return;\n            }\n        }\n        \n        this.stopTime = stop;\n        \n        if (!this.name && this.orbit.name) {\n            this.name = this.orbit.name;\n        }\n        \n        this.orbits.push({start: start, interp: interp, stop: stop, orbit:orbit, scale: scale});        \n        this.norbit = this.orbits.length;\n    }\n    \n    // Do we extend the initial orbit prior\n    // to its start time?  If not the\n    // orbit will return position and velocity\n    // as 0.\n    setPrior(flag) {\n        if (flag != null) {\n            this.usePrior = flag;\n        } else {\n            this.usePrior = true;\n        }\n    }\n    \n    // Do we extend the final orbit subsequent\n    // to its stop time?  If not the\n    // orbit will return position adn velocity\n    // as 0.\n    setSubseq(flag) {\n        if (flag != null) {\n            this.useSubseq = flag;\n        } else {\n            this.useSubseq = true;\n        }\n    }\n    \n    // Make sure we use the correct orbit[s] for this\n    // time\n    setOrbit(time) {\n        \n        if (this.norbit < 0) {\n            throw new Error(\"No elements in orbit chain\");\n        }\n        this.isPrior  = time < this.startTime;\n        this.isSubseq = time > this.stopTime;\n        \n        \n        while (time > this.orbits[this.index].stop) {\n            if (this.index < this.norbit-1) {\n                this.index += 1;\n                Util.log(\"Increase index at:\"+time+\" to \"+this.index+\" \"+this.orbits[this.index-1].start+\" \"+this.orbits[this.index-1].stop+\" -- \"+this.orbits[this.index].start);\n                Util.log(\"Scale is now:\"+this.orbits[this.index].scale);\n            } else {\n                break;\n            }\n        }\n        while (time < this.orbits[this.index].start) {\n            if (this.index > 0) {\n                this.index -= 1;\n                Util.log(\"Decrease index at:\"+time+ \" to \"+this.index);\n                Util.log(\"Scale is now:\"+this.orbits[this.index].scale);\n            } else {\n                break;\n            }\n        }\n        // Should we be interpolating?\n        this.interp =  (time > this.orbits[this.index].interp && this.index < this.norbit-1);\n    }\n    \n    \n    // The the position of the item at the specified time.\n    position(time) {\n        const interp = this.setOrbit(time);\n        let r0;\n        \n        // If beyond the range of the chain, do we still\n        // want to use these orbits?\n        if ( (this.isPrior  && !this.usePrior) ||\n             (this.isSubseq && !this.useSubseq) ) {\n            r0 = [0,0,0];\n        \n        // Just use the current (first or last) orbit if prior or subseqent.\n        // (since we've already checked that we don't want to use the origin then)\n        } else if (this.isPrior || this.isSubseq) {\n            r0 = this.orbits[this.index].orbit.position(time);\n            \n        } else {\n        \n            if (interp) {\n                let curr = this.orbits[this.index];\n                // OK need to interpolate between two orbits.\n                let f1 = (time - curr.interp)/(curr.stop-curr.interp);\n                let f0 = 1-f1;\n                    r0 = curr.orbit.position(time);\n                    let r1 = this.orbits[this.index+1].orbit.position(time);\n                    r0 = [f0*r0[0] + f1*r1[0], \n                          f0*r0[1] + f1*r1[1], \n                          f0*r0[2] + f1*r1[2]\n                         ];\n            } else {\n                let orb = this.orbits[this.index];\n                r0 = orb.orbit.position(time);\n            }\n        }\n        \n        if (this.orbits[this.index].scale) {\n            r0 = Util.times(this.orbits[this.index].scale, r0);\n        }\n        return r0;\n    }\n    \n    static createChain(name, chainDescrip) {\n        \n        let chain = new ChainedOrbit();\n        \n        chain.name = name;\n        \n        if (chainDescrip.prior) {\n            chain.setPrior(chainDescrip.prior);\n        }\n        if (chainDescrip.subseq) {\n            chain.setSubseq(chainDescrip.subseq);\n        }\n        \n        for (let i=0; i<chainDescrip.orbits.length; i += 1) {\n            Util.log(\"Parsing orbit:\"+i);\n            let orb = chainDescrip.orbits[i];\n            let start = orb.start;\n            let stop  = orb.stop;\n            let interp = orb.interp;\n            let elems = orb.elems;\n            let scale = orb.scale;\n            let orbit = new Orbit();\n            orbit.addStructure(elems);\n            // Set a time so we can get the position.\n            let t = orbit.getParameter(\"t\", true);\n            if (t == null) {\n                orbit.addParam(\"t\", 0);\n            }\n            let r  = orbit.getParameter(\"r\", true);\n            if (!r) {\n                Util.log(\"Unable to get position in chain \"+this.name+\" at index:\"+i);\n                \n            }  else {\n                let qorb = orbit.quickOrbit();\n                if (orb.primary) {\n                    Util.log(\"Adding primary:\"+orb.primary,\"at\", orb.elems.t);\n                    let porb = Planets.getOrbit(orb.primary, orb.elems.t);\n                    Util.log(\"Got porb:\"+porb);\n                    qorb = new SecondaryOrbit(porb, qorb, -1);\n                    Util.log(\"qorb now secondary\");\n                } else {\n                    Util.log(\"Direct orbit\");\n                }\n                Util.log(\"About to add orbit\");\n                chain.addOrbit(qorb, start, stop, interp, scale);\n            }\n            Util.log(\"Got orbit\");\n        }\n        return chain;\n    }\n}\n\nexport default ChainedOrbit;","import Util         from \"../std/Util.js\";\nimport ChainedOrbit from \"../orbits/ChainedOrbit.js\";\n\nimport {ConeGeometry,MeshBasicMaterial,Mesh} from \"three\";\n\nconst dr = Math.PI/180;\nconst missions= {\n    \"Voyager 1\": {\n        subseq: true,\n        src: \"https://horizons.jpl.nasa.gov\",\n        color: 0xFFFF00,\n        orbits: [\n{ \n elems:{\"Eccen\":0.7966178726891545, \"a\":7.386580478370929E11, \"t\":-6.8256E8, \"MA\":0.3962466096823593, \"i\":0.018077815956358816, \"Omega\":5.987039498346579, \"nu\":6.267084083575824, \"N0\":86400*1.040409909445762E-6},\n start: -7.043328E8,\n interp:-6.599232E8,\n stop:  -6.5664E8\n},{\n elems: {\"Eccen\":2.243517251961277, \"a\":-6.209011202172114E11, \"t\":-6.305472E8, \"MA\":0.8430454767839691, \"i\":0.043076021340335384, \"Omega\":1.979144169402659, \"nu\":6.259609485932485, \"N0\":86400*1.350006830313782E-6},\n start:  -6.5664E8,\n interp: -6.046272E8,\n stop:   -6.03072E8,\n scale: -1\n},{\n elems: {\"Eccen\":3.727892163607967, \"a\":-4.809636759676893E11, \"t\":-5.887296E8, \"MA\":1.5009442882593584, \"i\":0.6239113801837114, \"Omega\":3.12345890953474, \"nu\":5.904547814309696, \"N0\":86400*1.980164241431777E-6},\n start:  -6.03072E8,\n stop:    1.e15,\n scale:   -1\n}\n]\n    },\n    \"Voyager 2\": {\n            name: \"Voyager 2\",\n            subseq: true,\n            color: 0xFFFF00,\n            src: \"https://horizons.jpl.nasa.gov\",\n            orbits: \n[\n{\nstart:  -7.057152E8,\ninterp: -6.519744E8,\nstop: -6.509376E8,\nelems: {\"Eccen\":0.7239374428818847, \"a\":5.4064525822601953E11, \"t\":-6.787584E8, \"MA\":0.7577879327770214, \"i\":0.08443062880861185, \"Omega\":5.719591616956302, \"nu\":0.20088671111208994, \"N0\":86400*1.66150263127667E-6}\n},{\nstart: -6.509376E8,\ninterp: -6.473088E8,\nstop: -6.44544E8,\nelems: {\"Eccen\":0.7529549885932587, \"a\":5.4579185405676794E11, \"t\":-6.490368E8, \"MA\":1.5373829358810955, \"i\":0.09580572997520241, \"Omega\":5.689270850947595, \"nu\":0.2231761445882901, \"N0\":86400*1.638057175793603E-6}\n},{\nstart: -6.44544E8,\ninterp: -5.795712E8,\nstop: -5.773248E8,\nscale: -1,\nelems: {\"Eccen\":1.285011243429409, \"a\":-2.6369973371355664E12, \"t\":-6.170688E8, \"MA\":0.12876419565032976, \"i\":0.044564704282920545, \"Omega\":2.0838411990805397, \"nu\":6.129231004166061, \"N0\":86400*1.542428687457976E-7}\n},{\nstart: -5.773248E8,\ninterp: -4.39776E8,\nstop: -4.390848E8,\nscale: -1,\nelems: {\"Eccen\":3.435450911272889, \"a\":-5.891607024873676E11, \"t\":-5.13216E8, \"MA\":1.7395185144637684, \"i\":0.04649142366972772, \"Omega\":1.3524675972224496, \"nu\":1.9606873896702157, \"N0\":86400*1.460558558387454E-6}\n},{\nstart: -4.390848E8,\ninterp: -3.269376E8,\nstop: -3.260736E8,\nscale: -1,\nelems: {\"Eccen\":5.801308690567341, \"a\":-4.484264639805909E11, \"t\":-3.829248E8, \"MA\":6.0154438194065065, \"i\":0.04354825051955592, \"Omega\":4.545836986275263, \"nu\":5.475581902857643, \"N0\":86400*2.199544632115605E-6}\n},{\nstart: -3.260736E8,\nstop:  1.e12,\nscale: -1,\nelems: {\"Eccen\":6.27702732130978, \"a\":-6.021079542527599E11, \"t\":-3.143232E8, \"MA\":5.226329405779206, \"i\":1.374811661548822, \"Omega\":1.7737959338775438, \"nu\":2.269935826771261, \"N0\":86400*1.413702688884032E-6}\n}\n]\n        \n        },\n    \"Pioneer 11\": {\n        name: \"Pioneer 11\",\n        subseq: true,\n        color: 0xFF00FF,\n        src: \"https://horizons.jpl.nasa.gov\",\n        orbits: [\n{\nstart:   -8.43696E8,\ninterp:  -7.966944E8,\nstop:    -7.956576E8,\nelems: {\"Eccen\":0.714824165633028, \"a\":5.219759943329492E11, \"t\":-8.201952E8, \"MA\":0.7208721801110817, \"i\":0.05349377663971372, \"Omega\":0.28698017917093877, \"nu\":3.1234483625657847, \"N0\":86400*1.751434238830982E-6},\n},{\nstart:  -7.956576E8,\ninterp: -7.947936E8,\nstop:   -7.89264E8,\nelems:{\"Eccen\":0.729497855392165, \"a\":5.291353224817861E11, \"t\":-7.956576E8, \"MA\":1.4142488950793428, \"i\":0.05586112540082972, \"Omega\":0.26156068580408387, \"nu\":3.150473882912482, \"N0\":86400*1.716008758199956E-6},\n},{\nstart:  -7.89264E8,\ninterp: -6.427296E8,\nstop:   -6.394464E8,\nelems:{\"Eccen\":0.7710727636622045, \"a\":2.4344992699756772E12, \"t\":-7.177248E8, \"MA\":0.11209234319022165, \"i\":0.26700111136517285, \"Omega\":6.190900903849311, \"nu\":1.045564411904801, \"N0\":86400*1.738822126343553E-7},\n},{\nstart: -6.394464E8,\nstop:   1.e12,\nscale: -1,\nelems: {\"Eccen\":2.154708305810858, \"a\":-1.210566755413992E12, \"t\":-6.176736E8, \"MA\":0.13989980227308388, \"i\":0.2906802015641304, \"Omega\":2.8001276590628326, \"nu\":0.22177750139284944, \"N0\":86400*4.958913309973344E-7}\n}]},\n\n    \"Pioneer 10\": {\n        name: \"Pioneer 10\",\n        color: 0xFF00FF,\n        subseq: true,\n        src: \"https://horizons.jpl.nasa.gov\",\n        orbits: \n[\n{\nstart:  -8.781696E8,\ninterp: -8.30304E8,\nstop:   -8.292672E8,\nelems: {\"Eccen\":0.7112614595879153, \"a\":5.1021459643470386E11, \"t\":-8.543232E8, \"MA\":0.7605406077728052, \"i\":0.036440380223287605, \"Omega\":5.984753642893556, \"nu\":3.0905381226248414, \"N0\":0.15658640554930045},\n},{\nstart: -8.292672E8,\ninterp: -8.23392E8,\nstop:   -8.208E8,\nelems: {\"Eccen\":0.7283770143428079, \"a\":5.138282703778954E11, \"t\":-8.266752E8, \"MA\":1.5824194564290883, \"i\":0.03929713712783018, \"Omega\":5.943617747230043, \"nu\":3.1291999280582634, \"N0\":0.1549374417143899},\n},{\nstart: -8.208E8,\nstop:   1.e12,\nscale: -1,\nelems: {\"Eccen\":1.744584950056999, \"a\":-1.0161108187951279E12, \"t\":-8.066304E8, \"MA\":0.18414887606373667, \"i\":0.05525385131789587, \"Omega\":5.799355334549315, \"nu\":6.047577558650538, \"N0\":0.05571495193787393}\n}\n]\n    },\n    \"New Horizons\": {\n        name: \"New Horizons\",\n        subseq: true,\n        color: 0x00FFFF,\n        src: \"https://horizons.jpl.nasa.gov\",\n        orbits:     \n[\n{\n    start:  1.910304E8,\n    interp: 2.25072E8,\n    stop:   2.274912E8,\n    scale: -1,\n    elems: {\"Eccen\":1.029420362157596, \"a\":-4.980107748413639E12, \"t\":2.06064E8, \"MA\":0.01557369596080671, \"i\":0.015170716085229257, \"Omega\":2.0948843213656034, \"nu\":6.272482600712312, \"N0\":0.005134820479268871}\n},{\n    start:   2.274912E8,\n    interp:  4.898016E8,\n    stop:    4.9032E8,\n    scale:  -1,\n    elems: {\"Eccen\":1.399440183467084, \"a\":-8.471207923775452E11, \"t\":3.524256E8, \"MA\":2.364413921810773, \"i\":0.040943673952841236, \"Omega\":4.006155449207598, \"nu\":5.025499394631626, \"N0\":0.07319229433785926}\n},{\n    start:  4.9032E8,\n    interp: 4.9896E8,\n    stop:   4.9896E8,\n    scale: -1,\n    elems: {\"Eccen\":1.396468877258367, \"a\":-8.478362515499032E11, \"t\":4.9464E8, \"MA\":4.461198018810772, \"i\":0.04236049531403136, \"Omega\":4.051710147479757, \"nu\":4.977244751987759, \"N0\":0.07309966728422156}\n},{\n    start: 4.9896E8,\n    stop:  1.e12,\n    scale: -1,\n    elems: {\"Eccen\":1.41596563337368, \"a\":-8.450619990602666E11, \"t\":5.234976E8, \"MA\":4.91633950802896, \"i\":0.0390764682057387, \"Omega\":3.934252924535493, \"nu\":5.1125120445743475, \"N0\":0.07345993070331767}\n}\n]\n    }\n};\n\nfunction tm(str) {\n    let res = Util.datetime(str);\n    return res;\n}\n\nfunction Missions(start) {\n    let results = [];\n    for (let miss in missions) {\n        let chain = ChainedOrbit.createChain(miss, missions[miss]);\n        let time = chain.startTime;\n        const geometry = new ConeGeometry(.02, 0.04, 8);\n        const material = new MeshBasicMaterial({wireframe: true, color: miss.color});\n        const sphere   = new Mesh(geometry, material);\n        const p        = chain.position(start);\n        sphere.position.set(p[0], p[1], p[2]);\n        let count = 0;\n    \n        const ret = \n            {component: sphere, name: miss, chain: chain,\n        \n             render: function(time) {\n              // Update planet positions.\n                var r = chain.position(time);\n                \n                  // Using ret.component vs just sphere\n                  // allows us to replace the component externally.\n                  ret.component.position.set(r[0], r[1], r[2]);\n        }};\n        results.push(ret);\n\n    } \n    return results;\n}\n\nexport default Missions;","import  {Component}  from \"react\";\r\n\r\nimport Animation     from    \"../elems/Animation.js\";\r\nimport Anims         from    \"../animations/AnimationFactory\";\r\n \r\nimport Util          from    \"../std/Util.js\";\r\nimport Constants     from    \"../std/Constants.js\";\r\nimport OptionsSelector from  \"../elems/OptionsSelector.js\";\r\nimport TextInput     from    \"../elems/TextInput.js\";\r\nimport Action        from    \"../elems/Action.js\";\r\nimport LocalGalaxy   from    \"./LocalGalaxy.js\";\r\n\r\nimport Planets       from    \"../solarsystem/Planets.js\";\r\n\r\nimport ParameterFactory from \"../orbits/ParameterFactory\";\r\nimport Orbit         from    \"../orbits/Orbit.js\";\r\nimport loadMPCData  from    \"../parsers/ParseMPC.js\";\r\n\r\nimport OrbitPlot     from    \"../solarsystem/OrbitPlot.js\";\r\nimport Planet        from    \"../solarsystem/Planet.js\";\r\nimport Ring          from    \"../solarsystem/Ring.js\";\r\nimport SmallBodies   from    \"../solarsystem/SmallBodies.js\";\r\nimport Sun           from    \"../solarsystem/Sun.js\";\r\nimport Missions      from    \"../solarsystem/Missions.js\";\r\n\r\nclass SolarSystem extends Animation {\r\n    \r\n    \r\n    constructor(inputs) {\r\n        super(inputs);\r\n        \r\n        const fields = {\r\n            planets: [\"Mercury\", \"Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\", \"Neptune\", \"Pluto\"],\r\n            timeID:  \"timeDisp\",\r\n            name:    \"Solar System\",\r\n            baseAnimation: \"Local Galactic Neighborhood\",\r\n            longClickTime: 1500          // How long a mouse click needs to be to be classified as a long click.\r\n        };\r\n        for (var key in fields) {\r\n            if (!inputs || !inputs[key]) {   // Don't override anything specified by user.\r\n                this[key] = fields[key];\r\n            }\r\n        }\r\n        \r\n        if (this.timeID) {\r\n            this.timeElem = document.getElementById(this.timeID);\r\n        }\r\n\r\n        this.addSun();\r\n        this.addPlanets();\r\n        this.addSmallBodies();\r\n        this.time = -710130702;\r\n        if (this.timeElem) {\r\n            this.addTimeDisplay();\r\n        }\r\n        this.frame.renderer.domElement.addEventListener(\"longClick\",\r\n          this.longClickEvt.bind(this));\r\n        \r\n        let miss = Missions(this.time);\r\n        Util.log(\"Got missions:\"+miss+\" \"+miss.length);\r\n        for (let i=0; i<miss.length; i += 1) {\r\n            this.addElement(miss[i].name, miss[i]);\r\n        }\r\n        this.optionState = \"empty\";\r\n    }\r\n    longClickEvt(e) {\r\n        // We want this to be handled by the current animation\r\n        // which may not be the solar system, so\r\n        // we make sure to call the current doLongClick handler.\r\n        if (this.frame.animation.doLongClick) {\r\n           this.frame.animation.doLongClick(e);\r\n        }\r\n    }\r\n    \r\n    doLongClick(e) {\r\n        \r\n        const matched = this.frame.raycast(e.detail);\r\n        let found = null;\r\n        \r\n        for (let name in matched) {\r\n            if (name.endsWith(\"Body\")) {\r\n                const test = name.substring(0, name.length-4);\r\n                if (Anims.isAnimation(test)) {\r\n                    found = test;\r\n                    break;\r\n                }\r\n            } else if (name.endsWith(\"Orbit\")) {\r\n                const test = name.substring(0, name.length-5);\r\n                if (Anims.isAnimation(test)) {\r\n                    found = test;\r\n                    break;\r\n                }\r\n            }\r\n            \r\n        }\r\n        Util.log(\"Found:\"+found);\r\n        if (found) {\r\n            this.setAnim(found);\r\n        } else {\r\n            super.doLongClick(e);\r\n        }\r\n    }\r\n    \r\n    \r\n    foundBodies(e) {\r\n        var detail = e.detail;\r\n        detail = Object.entries(detail).sort((a, b) => a[1] - b[1]);\r\n        const data = [];\r\n        for (var i in detail) {\r\n            if (detail[i][1] > 0) {\r\n                detail[i][1] = detail[i][1].toFixed(4);                \r\n            }\r\n            data.push({name: detail[i][0], d: detail[i][1]});\r\n        }\r\n        this.setState({nearby: data});\r\n    }\r\n\r\n    addBody(name) {\r\n\r\n        if (!name || name.length < 2) {\r\n            return;\r\n        }\r\n        const body = this.findBody(name);\r\n        if (body) {\r\n            this.addElement(name + \"Orbit\", OrbitPlot(name, body.orbit, 0x00FFFF));\r\n            const planetBody = Planet(name, this.time, body.orbit, 4000, 0xFFFF00, true);\r\n            this.addElement(planetBody.name, planetBody);            \r\n        }\r\n    }\r\n    \r\n    findBody(name) {\r\n        for (var i = 0; i < this.smbData.length; i += 1) {\r\n            const body = this.smbData[i];\r\n            if (body.name === name) {\r\n                return body;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    \r\n\r\n\r\n    // Add the fixed sun\r\n    addSun() {\r\n        this.addElement(\"Sun\", Sun());\r\n    }\r\n\r\n    // Add the planets\r\n    addPlanets() {\r\n\r\n        const names = this.planets;\r\n\r\n        // Add each planet in the list.\r\n        for (var xi = 0; xi < names.length; xi += 1) {\r\n            const pname = names[xi];\r\n            Util.log(\"Processing \" + pname);\r\n\r\n            const planetData = Planets.getElements(pname, this.time);\r\n            const qorb       = Planets.getOrbit(pname, this.time);\r\n            if (qorb == null) {\r\n                Util.log(\"Unable to process orbit for \"+pname);\r\n                continue;\r\n            }\r\n            // Add the orbit line (which is invariant)\r\n            const orbitLine = OrbitPlot(pname, qorb, planetData.color);\r\n            this.addElement(orbitLine.name, orbitLine);\r\n\r\n            const planetBody = Planet(pname, this.time, qorb, planetData.diameter, planetData.color, true);\r\n            this.addElement(planetBody.name, planetBody);\r\n\r\n            // Does this planet have a ring?\r\n            if (planetData.ringAngle) {\r\n                const ringElement = Ring(pname, this.time, qorb, planetData.diameter, planetData.ringColor);\r\n                this.addElement(ringElement.name, ringElement);\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    // Add the small bodies point array.\r\n    addSmallBodies() {\r\n        Util.log(\"Adding small bodies\");\r\n        loadMPCData(this.time, this.smbCallback.bind(this));\r\n    }\r\n    smbCallback(smbData) {\r\n        this.smbData = smbData;\r\n        this.addElement(\"SmallBodies\", SmallBodies(this.smbData, this.colorLookup, this.time));    \r\n    }\r\n    \r\n    options() {\r\n        \r\n        const names = [\r\n                 \"Solar System\",\r\n                 \"Set time\",\r\n                 \"Show object orbit\",\r\n                 \"Define orbit parameters\",\r\n                 \"Trajectory conrols\",\r\n                 \"The Earth and environs\",\r\n                 \"Local Galactic Neightborhood\",\r\n                 \"Nearby Galaxies (TBD)\",\r\n                 \"Help\"\r\n        ];\r\n        const opts = [];\r\n        for (var i=0; i<names.length; i += 1) {\r\n            const entry = {};\r\n            const val   = names[i];\r\n            entry.value = names[i];\r\n            const key = \"ka\"+i;\r\n            switch (val) {\r\n               \r\n            // Note that we need to ensure that we have separate\r\n            // keys for the elements (at least those that are the same compound types)\r\n            case \"Set time\":\r\n                entry.elem = <TextInput key={key} placeholder=\"...time...\"\r\n                               callback={this.updateTime.bind(this)} /> ;\r\n                break;\r\n            case \"Show object orbit\":\r\n                entry.elem = <TextInput key={key} placeholder=\"...object name..\"\r\n                               callback={this.addBody.bind(this)} /> ;\r\n                break;\r\n                \r\n            case \"Define orbit parameters\":\r\n                entry.elem = <Action key={key} action={this.openParams} />\r\n                break;\r\n                \r\n            case \"The Earth and environs\":\r\n                entry.elem = <Action key={key} args=\"The Earth and environs\" action={this.setAnim.bind(this)} />\r\n                break;\r\n                \r\n            case \"Local Galactic Neightborhood\":\r\n                entry.elem = <Action key={key} args=\"Local Galactic Neighborhood\" action={this.setAnim.bind(this)} />;\r\n                break;\r\n                \r\n            case \"Help\":\r\n                entry.elem = <Action key={key} action={this.openHelp} />;\r\n                break;\r\n                \r\n            default:\r\n                entry.elem = <div key={key}>Just the {val}</div> ;\r\n            }\r\n            \r\n        \r\n            opts.push(entry);\r\n        }\r\n        const res =  <OptionsSelector options={opts} /> ;\r\n        return res;\r\n    }\r\n    \r\n    \r\n    \r\n    raycastResult(results) {\r\n        const elem = document.getElementById(\"clickTarget\");\r\n        var str =\"<hr/><table><tr><th>Object</th><th>Offset (au)</th></tr>\";\r\n        var resArr = [];\r\n        for (var name in results) {\r\n            var dist = results[name];\r\n            if (!dist) {\r\n                dist = \"-\";\r\n            } else {\r\n                dist = dist.toPrecision(2);\r\n            }\r\n            resArr.push({name: name, dist: dist});\r\n        }\r\n        if (resArr.length > 0) {\r\n            resArr = resArr.sort(function(a,b) {\r\n                if (a.dist == b.dist) {\r\n                    return 0;\r\n                }\r\n                if (a.dist === \"-\") {\r\n                    return -1;\r\n                }\r\n                if (b.dist === \"-\") {\r\n                    return 1;\r\n                }\r\n                return a.dist-b.dist;\r\n            });\r\n        }\r\n        for (var i=0; i<resArr.length; i += 1) {\r\n            if (i == 5) {\r\n                break;\r\n            }\r\n            var name = resArr[i].name;\r\n            var dist = resArr[i].dist;        \r\n            str += \"<tr><td>\"+name+\"</td><td>\"+dist+\"</td></tr>\";\r\n        }\r\n        str += \"</table>\";\r\n        if (resArr.length > 5) {\r\n            str += \"and \"+(resArr.length-5)+\" more\";\r\n        }\r\n        \r\n        elem.innerHTML = str;\r\n    }\r\n    \r\n    addExternalOrbit(name, orbit) {\r\n    \r\n        this.addElement(name+\"Orbit\", OrbitPlot(name, orbit, 0xAAFFAA));\r\n        // If the phase of the orbit has been specified add the body too.\r\n        if (orbit.t0 != null) {\r\n            const userBody = Planet(name+\"Body\", this.time, orbit, 4000, 0xFFAAFF, true);\r\n            this.addElement(userBody.name, userBody);\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default SolarSystem;","import Animation from \"../elems/Animation\";\nimport Util from \"../std/Util\";\n\nimport {Scene, Vector3, Euler, DirectionalLight, AmbientLight} from \"three\";\n\nclass Satellite extends Animation {\n    constructor(params) {\n        super(params);\n        \n        this.delta         = 20;\n        this.longClickTime = 1000;  // A little shorter since\n                                    // we do less clicking here.\n\n        this.scene       = new Scene();\n        this.textShowing = true;\n        \n        this.cameraPos = new Vector3(0,0,2.5);\n        this.cameraRot = new Euler(0,0,0,\"XYZ\");\n        this.baseAnimation = this.primary;\n        \n        const here = this; \n        \n        const r0         = this.planetOrbit.position(this.time);\n\n        const sunlight = new DirectionalLight(0xffffff, 1);\n        sunlight.position.x = -1000*r0[0];\n        sunlight.position.y = -1000*r0[1];\n        sunlight.position.z = -1000*r0[2];\n        \n        \n        this.addElement(\"sunlight\", {name: \"sunlight\", component: sunlight,\n                         render: function(time) {\n                             const r0 = here.planetOrbit.position(time);\n                             \n                             sunlight.position.x = -1000*r0[0];\n                             sunlight.position.y = -1000*r0[1];\n                             sunlight.position.z = -1000*r0[2];\n                         }});\n                     \n        this.scene.add(new AmbientLight(0x333333));\n\n        var radius = 1;\n                \n        this.addElement(this.name, this.createSatellite(this.name, radius, this.texture));\n        this.addTimeDisplay();                       \n    }\n    \n    createSatellite(name, radius, texture) {\n        const moon = this.createSphere(radius, this.segments, texture, null);\n        const here = this;\n        return {\n            name:      name,\n            component: moon,\n            render:    function(time) {\n                let r = here.satelliteOrbit.position(time);\n                // Assume tidally locked (but initial phase would be nice too!)\n                let phase = Math.atan2(r[1], r[0]);\n                moon.rotation.y = phase; \n            }\n        }      \n    }\n    raycastResult(){};  // Don't do anything on clicks.\n    \n    doLongClick(event)  {\n        \n        this.textShowing = !this.textShowing;\n        var text = \"<hr/>\";\n        if (this.textShowing) {\n            text += \"Satellite: \"+this.name+\"<br>\";\n            text += \"Source:    \"+this.texture.src;\n        }\n        const elem = document.getElementById(\"clickTarget\");\n        elem.innerHTML = text;\n        \n        super.doLongClick(event);\n    }\n    \n}\n\nexport default Satellite;\n","import Util from \"../std/Util\";\n\nclass CoordTrans {\n    // Construct a transformation  between coordinate systems\n    // using coordinates of the poles.\n    // \n    // ang = [alphaG, deltaG, lonE]\n    //    alphaG,deltaG  = longitude/latitude of the pole of \n    //    the destination system in the original system,\n    //    lonE =  the longitude of the pole\n    //    of the original system in the destination system.\n    \n    constructor(ang) {\n        this.sin_dg = Math.sin(ang[1]);\n        this.cos_dg = Math.cos(ang[1]); \n        this.alphaG = ang[0];\n        this.deltaG = ang[1];\n        this.lonE   = ang[2];\n        \n        \n        // Transform the unit vectors to get the full transformation\n        // matrix\n        const vx = this.toVector(this.transform(0.,        0.));\n        const vy = this.toVector(this.transform(Math.PI/2, 0.));\n        const vz = this.toVector(this.transform(0.,        Math.PI/2));\n        this.mat = [vx, vy, vz];\n    }\n    \n    static RADIAN = Math.PI/180;\n    static coordDefs = {\n        \n        eqgal: [192.859481, 27.128251, 122.931918],\n        eqec:  [270.,       66.560709,  90.],\n        galeq: [122.931918, 27.128251, 192.859481],\n        eceq:  [ 90.000000, 66.560709, 270.],\n        ecgal: [180.023217, 29.811440,  96.383971],\n        galec: [ 96.383971, 29.811440, 180.023217]\n    };\n    static transformations = {};\n    \n    static getCoords(name_or_angles) {\n        if (Array.isArray(name_or_angles)) {\n            // User is specifying angles directly.\n            // so names is really a\n            return new CoordTrans(name_or_angles);\n        }\n        let name = name_or_angles.toLowerCase();\n        \n        if (!CoordTrans.transformations[name]) {\n            if (!CoordTrans.coordDefs[name]) {\n                Util.log(\"Unknown coordinate System:\"+name);\n            }            \n            CoordTrans.transformations[name] = new CoordTrans(Util.times(CoordTrans.RADIAN, CoordTrans.coordDefs[name]));\n        }\n        return CoordTrans.transformations[name];\n    }\n        \n    // radians to radians\n    transform(a,d) { \n        const cos_d = Math.cos(d);\n        const sin_d = Math.sin(d);\n        const cos_delta = Math.cos(a-this.alphaG);\n        const sin_delta = Math.sin(a-this.alphaG);\n        \n        const sin_b = sin_d*this.sin_dg + \n                      cos_d*this.cos_dg*cos_delta;\n        \n              \n        const b     = Math.asin(sin_b);  // Range is OK...\n        const cos_b = Math.cos(b);\n        \n        const num   = cos_d*sin_delta;\n        const denom = sin_d*this.cos_dg - cos_d*this.sin_dg*cos_delta;\n        var l     = this.lonE - Math.atan2(num, denom);\n        l %= 2*Math.PI;\n        if (l < 0) {\n            l += 2*Math.PI;\n        }\n        return [l,b];\n    }\n        \n    \n    // Degrees to degrees\n    transformd(a,d) {        \n        return Util.times(1/CoordTrans.RADIAN,\n           this.transform(a*CoordTrans.RADIAN, d*CoordTrans.RADIAN)\n        );\n    }\n    \n    toVector(crd) {\n        const a = crd[0];\n        const d = crd[1];\n        const vec =  [\n            Math.cos(a)*Math.cos(d), \n            Math.sin(a)*Math.cos(d), \n            Math.sin(d)\n        ];\n        return vec;\n    }\n    \n    vTransform(v) {\n        if (!v.length || v.length != 3) {\n            return null;\n        }\n        // Get the vector in the new coordinate system\n        var result =    Util.times(v[0], this.mat[0]);\n        result = Util.vadd(result, Util.times(v[1], this.mat[1]));\n        result = Util.vadd(result, Util.times(v[2], this.mat[2]));\n        return result;\n    }\n}\n\nexport default CoordTrans.getCoords;\n\nfunction test() {\n  for (var name in CoordTrans.coordDefs) {\n    var coords = CoordTrans.getCoords(name);\n    Util.log(\"Testing matrix transformation for: \"+name);\n    var testCoord = [Math.random(), Math.random()];\n    var testVec   = coords.toVector(testCoord);\n    var tranCoord = coords.transform(testCoord[0], testCoord[1]);\n    var tranVec   = coords.vTransform(testVec);\n    Util.log(\"Initial coords:\"+testCoord);\n    Util.log(\"Initial vec:\"+testVec);\n    Util.log(\"Transformed coords:\"+tranCoord);\n    Util.log(\"Transformed vector:\"+tranVec);\n    Util.log(\"Implied coordinates:\",\n       Math.atan2(tranVec[1], tranVec[0]),\n       Math.asin(tranVec[2]));\n  }\n}\n","// Calculate the precession rates for the longitude\n// of the ascending node and the argument of perigee\n// for Earth satellites.  Source:\n// https://science.nasa.gov/science-pink/s3fs-public/atoms/files/GDC_OrbitPrimer.pdf\n\nimport Constants from \"../std/Constants\";\nclass SatPrecession {\n    \n    constructor(orbit) {\n        \n        let a  = orbit.a;\n        let rE = Constants.rEarth;\n        let mE = Constants.MEarth;\n        let G  = Constants.G;\n        let e  = orbit.e;\n        let e2 = e*e;\n        let cos_i = orbit.rot[3]/orbit.rot[0];\n        let sin_i = orbit.rot[4]\n        \n        // This term depends upon the shape of the Earth.\n        let j2 = 1.08262668e-3; //https://ai-solutions.com/_freeflyeruniversityguide/j2_perturbation.htm\n        \n        // if p = 3 sqrt(GM/a^3) J2 rE^2 / [2 a^2 (1-e^2)^2)\n        //    nodeP = -p*cos(i)\n        //    argP  =  p*(4-5sin(i)^2)/2  \n        \n        let p = 3*Math.sqrt(G * mE/(a*a*a)) * j2 * rE*rE / (2*a*a*(1-e2)*(1-e2));\n        this.fOmega    = -p*cos_i;\n        this.fNu =  p*(4-5*sin_i*sin_i)/2;\n    }\n}\n\nexport default SatPrecession;","import Util             from \"../std/Util\";\nimport Orbit            from \"../orbits/Orbit\";\nimport ParameterFactory from \"../orbits/ParameterFactory\";\nimport Constants        from \"../std/Constants\";\nimport SatPrecession    from \"../earth/SatPrecession\";\n\nfunction NoradReader(url, callback) {\n    const xhr = new XMLHttpRequest();\n    const here = this;\n    const xhrHandler = function() {\n        \n        if (xhr.readyState === XMLHttpRequest.DONE) {\n            const data = parseNorad(xhr.responseText);\n        };\n    }\n    xhr.open('GET', url);\n    xhr.onreadystatechange = xhrHandler;\n    xhr.send();\n    \n    var latestEpoch = -1e30;\n    var smallestA   = 1.e10;\n    \n    function parseNorad(text) {\n        var lines = text.split(\"\\n\");\n        var start = 0;\n        const data = [];\n        while (start < lines.length) {\n            if (lines[start].charAt(0) == \"0\") {\n                const res = parseLines(lines[start], lines[start+1], lines[start+2]);\n                if (res) {\n                    let satp = new SatPrecession(res.orbit);\n                    res.orbit.addPrecession(res.orbit.ep0, satp.fOmega, satp.fNu);\n                    data[data.length] = res;\n                }\n                start += 3;                \n            } else {\n                if (lines[start].trim().length > 0) {\n                    Util.log(\"Unexpected line in tle:\\n  \",lines[start]);\n                }\n                // Need to have 0 line to start.\n                start += 1;\n            }\n        }\n        if (callback) {\n            callback(latestEpoch, data);\n        }\n        \n    }\n    \n    var count = 0;\n    function parseLines(l0,l1,l2) {\n        count += 1;\n        if (!l1.charAt(0) == \"1\"  || !l2.charAt(0) == \"2\") {\n            Util.log(\"Invalid TLE detected:\\n  \", l0,\"\\n  \", l1,\"\\n  \", l2 );            \n            return null;\n        }\n        var name  = l0.substring(2).trim();\n        if (name.startsWith(\"TBA \")) {\n            name=\"TBA\";\n        }\n        var id    = l1.substring(2,7).trim();\n        var desig = l1.substring(9,17).trim();\n        var yr = l1.substring(18,20);\n        if (yr.charAt(0) > '4') {\n            yr = \"19\" +yr;            \n        } else {\n            yr = \"20\"+yr;\n        }\n        yr = parseInt(yr);\n        var yday = l1.substring(20,32).trim();\n        yday = parseFloat(yday);\n        \n        var inclination = l2.substring(8,16).trim();\n        var ascNode     = l2.substring(17,25).trim();\n        var ecc         = \"0.\"+l2.substring(26,33).trim();\n        var argPerigee  = l2.substring(34,42).trim();\n        var ma          = l2.substring(43,51).trim();\n        var mm          = l2.substring(52,63).trim();\n        var idays       = (yr-2000) * 365;  // Completedyears\n        // Leap days in the current year are handled in the yday\n        // but we need to add them for previous years.  (Just handling since 2000)\n        // Recall that 2000 is a leap year.  Note that 2004 has only\n        // one special leapday, since if we are past 2/28 this is included\n        // in yday.\n        var leap = 0;\n        if (yr > 2000) {\n           leap = Math.floor( (yr-2001)/4) + 1;  // 2001 -> 1, 2004 -> 1, 2005 -> 2           \n        }\n        var days  = idays + leap + yday;\n        var t = Constants.SOLAR_DAY * days;\n        \n        if (t > latestEpoch  || count < 3) {\n            latestEpoch = t;\n        }\n        \n        var orbit = new Orbit(name);\n        const pgen = ParameterFactory.genParam;\n        orbit.addParameter(pgen(\"M\",     Constants.MEarth));\n        orbit.addParameter(pgen(\"t\",     t));\n        orbit.addParameter(pgen(\"N0\",    mm*360));\n        orbit.addParameter(pgen(\"i\",     inclination*Math.PI/180));\n        orbit.addParameter(pgen(\"nu\",    argPerigee*Math.PI/180));\n        orbit.addParameter(pgen(\"Omega\", ascNode*Math.PI/180));\n        orbit.addParameter(pgen(\"MA\",    ma*Math.PI/180));\n        orbit.addParameter(pgen(\"Eccen\", ecc));\n        \n        var rot = orbit.getParameter(\"Rot\", true);\n        var a   = orbit.getParameter(\"a\", true);\n        var t0  = orbit.getParameter(\"t0\", true);\n        var per = orbit.getParameter(\"per\", true);\n        var e   = orbit.getParameter(\"Eccen\", true);\n        if (a.value < smallestA) {\n            smallestA = a.value;\n        }\n        var qorb = orbit.quickOrbit();\n        qorb.ep0 = t;\n        qorb.scale = 1./Constants.rEarth;\n        return {name: name+\"_\"+desig+\"_\"+id, id: id, orbit: qorb};\n    }\n}\n\nexport default NoradReader;\n\n\n","import {Color, BufferGeometry, PointsMaterial, Float32BufferAttribute, Vector3} from \"three\";\nimport AngPoints from \"../elems/AngPoints.js\";\nimport Util from \"../std/Util.js\";\n\nconst Satellites = function(satData, startTime) {\n    function getPositions(data, time) {\n        \n        const px = [];\n        for (var i=0; i<data.length; i += 1) {\n            \n            if (data[i].orbit == null) {\n                Util.log(\"No orbit for \"+i+\" \"+data.name);\n            }\n            const p = data[i].orbit.position(time);\n            px.push(p[0], p[1], p[2]);\n        }\n        return new Float32BufferAttribute(px,3);\n    }\n    \n\n    const geometry = new BufferGeometry();        \n    // Should the time here be 0?\n    geometry.setAttribute( 'position', getPositions(satData, startTime));\n    geometry.setAttribute( 'color',    getColors(satData));\n        \n    const material       = new PointsMaterial( {sizeAttenuation: false, size: 2,  vertexColors: true} );\n    const points         = new AngPoints(geometry, material );\n    \n    // Add this function to the component.  This allows us to find\n    // a specific satellite.\n    points.getIndexedName = function(index) {\n        return satData[index].name;\n    };\n    \n    return {component: points,\n      render:function(time) {\n        geometry.setAttribute( 'position', getPositions(satData, time));\n      }\n    };\n    \n    function getColors(data) {\n        const colors = [];\n        for (var i=0; i<data.length; i += 1) {\n            var sat = data[i];\n            var sn = sat.name.toUpperCase();\n            if (sn.indexOf(\"DEB\") > 0) {\n                colors.push(1,0,0);\n            } else if (sn.indexOf(\"STARLINK\") >= 0) {\n                colors.push(0,1,0);\n            } else {\n                colors.push(1,1,1);\n            }            \n        }\n        return new Float32BufferAttribute(colors, 3 );\n    }\n\n}\n\nexport default Satellites;","import Animation from \"../elems/Animation\";\nimport Util from \"../std/Util\";\nimport Constants from \"../std/Constants\";\n\nimport {createRef} from \"react\";\nimport Satellite from \"../animations/Satellite\";\n\nimport OptionsSelector from  \"../elems/OptionsSelector\";\nimport TextInput     from    \"../elems/TextInput\";\nimport Action        from    \"../elems/Action\";\n\n\nimport getCoords from \"../std/Coords\";\nimport Orbit   from \"../orbits/Orbit\";\nimport ParameterFactory from \"../orbits/ParameterFactory\";\nimport Planets from \"../solarsystem/Planets\";\n\n\nimport NoradReader from \"../earth/NoradReader\";\nimport Satellites  from \"../earth/Satellites\";\n\nimport {Scene, AmbientLight, DirectionalLight} from \"three\";\nimport {Mesh, TextureLoader, Color, MeshPhongMaterial} from \"three\";\nimport {SphereGeometry, Vector3} from \"three\";\n\nclass Earth extends Animation { \n\n    constructor(params) {\n        super(params);\n        \n        this.longClickTime = 1000;\n        this.name          = \"Earth\";\n        this.moonRef       = createRef();\n        this.lunarOrbitData = \n            {\n                base: {\n                    t:      12*3600, // Given as 2000 Jan 1.50 TT\n                    a:      3.844e8,\n                    Eccen:  0.0554,\n                    nu:   318.15 * Math.PI/180,\n                    MA:   135.27 * Math.PI/180,\n                    i:      5.16 * Math.PI/180,\n                    Omega:125.08 * Math.PI/180,\n                    N0:    13.176358 / 360\n                },\n                prec: {\n                    ep0:    12*3600,\n                    fNu:    2*Math.PI / (5.997*Constants.CENTURY/100),\n                    fOmega: 2*Math.PI / (18.600*Constants.CENTURY/100)\n                    \n                }\n            };\n        this.lunarTexture = {\n                           map:'images/moon.jpg', \n                           src:\"TBD\",\n                           copyright:\"TBD\"\n                       };\n        this.delta = 2;\n        this.cameraPos = new Vector3(0,0,2.5);\n        this.baseAnimation = \"Solar System\";\n\n        this.scene = new Scene();        \n        this.eceq = getCoords(\"EcEq\");  // Transform Earth orbit to Equatorial coordinates.\n        const here = this;\n\n        var sunlight = new DirectionalLight(0xffffff, 1);\n        this.addElement(\"sunlight\", {name: \"sunlight\", component: sunlight,\n                         render: function(time) {\n                             var r0 = here.earthOrbit.position(time);\n                             r0 = here.eceq.vTransform(r0);\n                             \n                             sunlight.position.x = -1000*r0[0];\n                             sunlight.position.y = -1000*r0[1];\n                             sunlight.position.z = -1000*r0[2];\n                         }});\n        this.scene.add(new AmbientLight(0x333333));\n\n        var radius     = 1;\n        var segments   = 30;\n        this.moonScale = 10;\n        var earth = this.createEarthSphere(radius, segments);\n        \n        Util.log(\"Transform earth coordinates to Equatorial\");\n        \n        // Note comments below on how three.js renders spheres.\n        this.addElement(\"Earth\", {name: \"Earth\", component: earth,\n                         render: function(time) {\n                             var rot = 360*(time/Constants.SIDEREAL_DAY);\n                             rot += Constants.SIDEREAL_ANGLE_AT_EPOCH;\n                             rot %= 360;\n                             rot *= Math.PI/180;\n                             earth.rotation.y = rot; \n                         }});\n                     \n        // Relative to the Earth;\n        const lorb = new Orbit(\"Moon\");\n        lorb.addStructure(this.lunarOrbitData.base);\n        const rm = lorb.getParameter(\"r\", true);\n        const qlorb = lorb.quickOrbit();\n        qlorb.addPrecession(\n            this.lunarOrbitData.prec.ep0,\n            this.lunarOrbitData.prec.fOmega,\n            this.lunarOrbitData.prec.fNu\n        );\n        this.moonOrbit = qlorb;\n        qlorb.scale = 1/Constants.rEarth;\n        var moon = this.createMoonSphere(0.2727, segments);\n        this.addElement(\"Moon\", {name: \"Moon\", component: moon,\n                          render: function(time) {\n                              let r = here.moonOrbit.position(time);\n                              moon.position.x = r[0]*here.moonScale/60;\n                              moon.position.y = r[1]*here.moonScale/60;\n                              moon.position.z = r[2]*here.moonScale/60;\n                              // We couple rotation to revolution\n                              // which isn't right, but probably not\n                              // disastrously wrong, need to check\n                              // that the phase is right.\n                              // \n                              // We don't handle the inclination of the\n                              // lunar rotation to the equatorial plane.\n                              let rotAng = Math.atan2(r[1],r[0]);\n                              moon.rotation.y = Math.PI + rotAng;\n                          }});\n        this.addTimeDisplay();\n        NoradReader(\"data/norad.tle\", this.addSatellites.bind(this));\n        const pData = Planets.getElements(\"Earth\", this.time);\n        const elems = pData.elements;\n        \n        // Relative to the Sun\n        const orb = new Orbit(\"Earth\");\n\n        for (var key in elems) {\n            orb.addParameter(ParameterFactory.genParam(key, elems[key]));\n        }\n        orb.addParameter(ParameterFactory.genParam(\"t\", this.time));\n        // Make sure we can get positions.\n        const r0 = orb.getParameter(\"r\", true);\n        \n        this.earthOrbit = orb.quickOrbit();\n        sunlight.position.x = -1000*r0[0];\n        sunlight.position.y = -1000*r0[0];\n        sunlight.position.z = -1000*r0[0];\n        \n    }\n    \n    options() {\n        const names = [\n                 \"The Earth and environs\",\n                 \"Moon orbit scaling\",\n                 \"Set time\",\n                 \"Show object orbit\",\n                 \"Define orbit parameters\",\n                 \"Trajectory conrols\",\n                 \"Solar System\",\n                 \"Local Galactic Neightborhood\",\n                 \"Nearby Galaxies (TBD)\",\n                 \"Help\"\n        ];\n        const opts = [];\n        for (var i=0; i<names.length; i += 1) {\n            const entry = {};\n            const val   = names[i];\n            entry.value = names[i];\n            const key = \"ka\"+i;\n            switch (val) {\n               \n            case \"Set time\":\n                entry.elem = <TextInput key={key} placeholder=\"...year...\"\n                               callback={this.updateTime.bind(this)} /> ;\n                break;\n                \n            /*case \"Show object orbit\":\n                entry.elem = <TextInput key={key} placeholder=\"...object name..\"\n                               callback={this.addBody.bind(this)} /> ;\n                break; \n                entry.elem = \n                 <div> Lunar orbit radius (rE): <input\n                    type=\"range\" min=\"0\" max=\"100\" /> <div>;\n                break;*/\n                \n            case \"Moon orbit scaling\":\n                entry.elem = <div> <input\n                 onChange={this.setMoonScale.bind(this)}\n                 ref={this.moonRef}\n                 id=\"moonScaling\"\n                 type=\"range\" min=\"1\" max=\"60\" defaultValue={this.moonScale} /></div>;\n                break;\n                                \n            case \"Define orbit parameters\":\n                entry.elem = <Action key={key} action={this.openParams} />\n                break;\n                                \n            case \"Solar System\":\n                entry.elem = <Action key={key} args=\"Solar System\" action={this.setAnim.bind(this)} />;\n                break;\n                \n            case \"Local Galactic Neightborhood\":\n                entry.elem = <Action key={key} args=\"Local Galactic Neighborhood\" action={this.setAnim.bind(this)} />;\n                break;\n                \n            case \"Help\":\n                entry.elem = <Action key={key} action={this.openHelp} />;\n                break;\n                \n            default:\n                entry.elem = <div key={key}>TBD: {val}</div> ;\n            }\n                   \n            opts.push(entry);\n        }\n        const res =  <OptionsSelector options={opts} /> ;\n        return res;\n    }    \n\n    setMoonScale(e) {\n        this.moonScale = e.target.value;\n    }\n    \n    addSatellites(epoch, data) {\n        Util.log(\"NORAD epoch for satellites: \"+epoch/(365.25*86400));\n        Util.log(\"Number of satellites: \"+data.length);\n        this.baseTime = epoch;\n        this.setTime(epoch);\n        this.addElement(\"satellites\", Satellites(data, epoch));\n    }\n    \n    // When loading a texture onto a sphere from a cartesian map,\n    // three.js renders the y axis of the map onto the y axis of the\n    // sphere, while the x and z axes are composed from x axis.\n    // This renders the center of the map at the 'north pole'.\n    // Since we want to use the proper coordinate system for the\n    // satellite and orbit data, we need to adjust to initially render\n    // the object and to ensure that we rotate along the appropriate axis.\n\n    createEarthSphere(radius, segments) {\n        \n        // The map, bump and specular textures were originally found on\n        //  https://blog.mastermaps.com/2013/09/creating-webgl-earth-with-threejs.html\n        // but are credited to \n        //  http://www.shadedrelief.com/natural3/\n        // which includes the statement:\n        //  \"Natural Earth III is free and without use restrictions.\" (as of 2021-08-18)\n        var mesh = new Mesh(\n            new SphereGeometry(radius, segments, segments),\n            new MeshPhongMaterial({\n                map:     new TextureLoader().load('images/earth.jpg'),\n                bumpMap: new TextureLoader().load('images/bump.jpg'),\n                bumpScale: 0.005,\n                specularMap: new TextureLoader().load('images/spec.jpg'),\n                specular: new Color('grey')\n            })\n        );\n        mesh.rotateX(Math.PI/2);  // Move the pole where it should be!\n        return mesh;\n    }\n    createMoonSphere(radius, segments) {\n        var mesh = new Mesh(\n            new SphereGeometry(radius, segments, segments),\n            new MeshPhongMaterial({\n                map: new TextureLoader().load(this.lunarTexture.map)\n            })\n        );\n        mesh.rotateX(Math.PI/2);\n        return mesh;\n    }\n    \n    timeFormatter(time) {\n        var note = \"\";\n        if (Math.abs(time-this.baseTime) > 180*Constants.SOLAR_DAY) {\n            note = \" <br>More than 6 months from satellite ephemeris epoch\";\n        }\n        return super.timeFormatter(time)+note;\n    }\n    \n    raycastResult(results) {\n        const elem = document.getElementById(\"clickTarget\");\n \n        var str = \"Results:<table><tr><th>Object</th><th>Offset (rE)</th></tr>\";\n        var resArr = [];\n        for (var name in results) {\n            var dist = results[name];\n            if (!dist) {\n                dist = \"-\";\n            } else {\n                dist = dist.toPrecision(2);\n            }\n            resArr.push({name: name, dist: dist});\n        }\n        if (resArr.length > 0) {\n            resArr = resArr.sort(function(a,b) {\n                if (a.dist == b.dist) {\n                    return 0;\n                }\n                if (a.dist === \"-\") {\n                    return -1;\n                }\n                if (b.dist === \"-\") {\n                    return 1;\n                }\n                return a.dist-b.dist;\n            });\n        }\n        for (var i=0; i<resArr.length; i += 1) {\n            var name = resArr[i].name;\n            var dist = resArr[i].dist;        \n            str += \"<tr><td>\"+name+\"</td><td>\"+dist+\"</td></tr>\";\n        }\n        str += \"</table>\";\n        elem.innerHTML = str;\n    }\n    \n    doLongClick(event) {\n        const matched = this.frame.raycast(event.detail);\n        for (let name in matched) {\n            if (name == \"Moon\") {\n                let anim = new Satellite({\n                    frame: this.frame,\n                    timeID: this.timeID,\n                    name: name,\n                    planet: this.name,\n                    planetOrbit: this.earthOrbit,\n                    primary: this.name,\n                    satelliteOrbit: this.moonOrbit,\n                    texture: this.lunarTexture\n                });\n                this.frame.setAnimation(anim);\n            }\n        }\n        super.doLongClick(event);\n    }\n}\n\nexport default Earth;","class TransformedOrbit {\n    \n    constructor(orbit) {\n        this.orbit = orbit;\n        this.transforms = [];\n    }\n    addTransform(trans) {\n        this.transforms.push(trans);\n    }\n    position(time) {\n        return this.transform(this.orbit.position(time));\n    }\n    \n    transform(r) {\n        for (let i=0; i<this.transforms.length; i += 1) {\n            r = this.transforms[i].vTransform(r);\n        }\n        return r;\n    }\n    \n    orbitXYZ(n) { \n        let vec = this.orbit.orbitXYZ(n);\n        return this.multi(vec);\n    }\n    \n    state(time) {\n        // State just returns two vectors, r and v\n        return multi(this.orbit.state(time));\n    }\n    \n    multi(vec) {\n        for (let i=0; i<vec.length; i += 1) {\n            vec[i] = this.transform(vec[i]);\n        }\n        return vec;\n    }\n}\n\nexport default TransformedOrbit;\n\n\n","import Animation from \"../elems/Animation\";\nimport Util from \"../std/Util\";\nimport Dump from \"../std/Dump\";\nimport Constants from \"../std/Constants\";\nimport OptionsSelector from \"../elems/OptionsSelector\";\n\nimport Satellite from \"../animations/Satellite\";\n\n\nimport getCoords from \"../std/Coords\";\nimport Orbit   from \"../orbits/Orbit\";\nimport TransformedOrbit from \"../orbits/TransformedOrbit\";\nimport Planet  from \"../solarsystem/Planet\";\nimport ParameterFactory from \"../orbits/ParameterFactory\";\nimport Planets from \"../solarsystem/Planets\";\n\nimport {Scene, Vector3, Euler, AmbientLight, DirectionalLight} from \"three\";\nimport {Mesh, Color, MeshPhongMaterial} from \"three\";\n\nclass PlanetarySystem extends Animation { \n\n    constructor(params) {\n        super(params);\n\n        this.delta         = 2;\n        this.moons         = {};\n        this.longClickTime = 1000;  // A little shorter since\n                                    // we do less clicking here.\n\n        this.scene = new Scene();\n        \n        this.cameraPos = new Vector3(0,0,2.5);\n        this.baseAnimation = \"Solar System\";\n        \n        this.segments = 40;\n        const here = this;\n        // \n        // For displaying a planetary system we want\n        // the reference plane to be the equatorial plane of the\n        // planet.\n        this.eceqE = getCoords(\"eceq\");\n        // transformation from Earth equatorial to planet equatorial\n        let  angs = [this.rotAxis.ra, this.rotAxis.dec, Math.PI/2];\n        this.eqEeqP = getCoords(angs);\n        \n        this.planetOrbit = this.getOrbit(this.planetName, this.time);\n        // Convert to local equator.\n        this.planetOrbit = new TransformedOrbit(this.planetOrbit);\n        this.planetOrbit.addTransform(this.eceqE);\n        this.planetOrbit.addTransform(this.eqEeqP);\n        \n        \n        const r0         = this.planetOrbit.position(this.time);\n\n        const sunlight = new DirectionalLight(0xffffff, 1);\n        sunlight.position.x = -1000*r0[0];\n        sunlight.position.y = -1000*r0[1];\n        sunlight.position.z = -1000*r0[2];\n        sunlight.castShadow = true;\n        \n        \n        this.addElement(\"sunlight\", {name: \"sunlight\", component: sunlight,\n                         render: function(time) {\n                             const r0 = here.planetOrbit.position(time);\n                             \n                             sunlight.position.x = -1000*r0[0];\n                             sunlight.position.y = -1000*r0[1];\n                             sunlight.position.z = -1000*r0[2];\n                         }});\n                     \n        this.scene.add(new AmbientLight(0x333333));\n\n        var radius   = 1;\n                \n        this.addElement(this.planetName, this.createPlanet(this.planetName, radius, this.texture, this.ring));\n        this.addTimeDisplay();\n        \n        if (this.moonInfo) {\n            this.addMoons(this.moonInfo);\n        }\n    }\n        \n    options() {\n        this.frame.userControls.setState({showingOptions: true});\n        let content = <div><div>{this.name}</div><div id=\"pContent\"></div></div>;\n        return <OptionsSelector direct=\"true\" directContent={content} options={[]} />;\n    }\n        \n    addMoons(moonInfo) {\n        for (let moonName in moonInfo) {\n            const md   = moonInfo[moonName];\n            let   morb = this.getMoonOrbit(moonName, md);\n            if (md.frame && md.frame.type != \"Equatorial\") {\n                // Need to tranform the frame of the orbit from\n                // the frame in which it was computed, into the\n                // equatorial frame of the planet.\n                morb = new TransformedOrbit(morb);\n                if (md.frame == \"Ecliptic\" ) {\n                    // Same transformation as for planet orbit.\n                    morb.addTransform(this.eceqE);\n                    morb.addTransform(this.eqEeqP);\n                } else if (md.frame == \"Laplace\") {\n                    // Need the transform from Earth\n                    // equatorial to the Laplace frame.\n                    const lapTrans = getCoords([md.frame.ra,md.frame.dec,Math.PI/2]);\n                    morb.addTransform(this.eceqE);\n                    morb.addTransform(lapTrans);\n                }\n            }\n            var rad = 0.2;\n            if (md.render && md.render.frac) {\n                rad = md.render.frac;\n            }\n            var moon;\n            var color = md.render.color? md.render.color: 0xFFFF00;\n            \n            moon = Planet(moonName, this.time, \n                          morb, rad, color, false, true);\n                          \n            if (md.render && md.render.texture) {\n                // Replace the featureless sphere\n                let pos = morb.position(this.time);\n                let texturedSphere = this.createSphere(rad, this.segments, md.render.texture);               \n                texturedSphere.position.set(pos[0], pos[1], pos[2]);\n                moon.component = texturedSphere;\n            }\n            \n            this.addElement(moonName+\"Body\", moon);\n            this.moons[moonName] = {rendering: moon, data: md, orbit: morb};\n        }\n\n    }\n    \n    createPlanet(name, radius, texture, ring) {\n        const planet = this.createSphere(radius, this.segments, texture, ring);\n        const here = this;\n        return {\n            name:      name,\n            component: planet,\n            render:    function(time) {\n                let phase = here.rotationPhase + 2*Math.PI * (time/here.rotationPeriod);\n                phase %= 2*Math.PI;\n                planet.rotation.y = phase; \n            }\n        }      \n    }\n    \n    getOrbit(name, time) {\n        const pData = Planets.getElements(name, time);\n        const elems = pData.elements;\n        this.planetRadius = pData.diameter*1000/2;  // diameter in km to radius in m.\n        \n        const orb = new Orbit(name);\n\n        for (var key in elems) {\n            orb.addParameter(ParameterFactory.genParam(key, elems[key]));\n        }\n        \n        orb.addParameter(ParameterFactory.genParam(\"t\", time));\n        // Make sure we can get positions.\n        const r0 = orb.getParameter(\"r\", true);;        \n        \n        return orb.quickOrbit();\n    }\n    \n    getMoonOrbit(name, moonData) {\n        let  morb = new Orbit(name);\n        const mElems = moonData.elems;\n        if (!mElems.t) {\n            if (moonData.prec) {\n                mElems.t = moonData.prec.ep0;\n            } else {\n                mElems.t = this.time;\n            }\n        }\n        morb.addStructure(moonData.elems);\n        const rm = morb.getParameter(\"r\", true);\n        morb = morb.quickOrbit();  // Just get this...\n        if (morb.prec) {\n            morb.addPrecession(\n                moonData.prec.ep0,\n                moonData.prec.fOmega,\n                moonData.prec.fNu\n            );\n        }\n        morb.scale = 1/this.planetRadius;\n        if (moonData.moonScale) {\n            morb.scale /= moonData.moonScale;\n        }\n        return morb;\n    }\n    \n    raycastResult(results) {\n        const elem = document.getElementById(\"clickTarget\");\n\n        var str = \"<hr/><table></tr>\";\n        for (var name in results) {\n            if (name.endsWith(\"Body\")) {\n                name=name.substring(0, name.length-4);\n            }\n            str += \"<tr><td>\"+name+\"</td></tr>\";\n        }\n        str += \"</table>\";\n        elem.innerHTML = str;\n    }\n\n    options() {\n        \n        const names = [\n                 this.name,\n        ];\n        const opts = [];\n        for (var i=0; i<names.length; i += 1) {\n            const entry = {};\n            const val   = names[i];\n            entry.value = names[i];\n            const key = \"ka\"+i;\n            switch (val) {\n                               \n            default:\n                entry.elem = <div key={key}></div> ;\n            }\n            \n        \n            opts.push(entry);\n        }\n        const res =  <OptionsSelector options={opts} /> ;\n        return res;\n    }\n\n\n    doLongClick(event) {\n      \n        const matched = this.frame.raycast(event.detail);\n        let found = null;\n        \n        for (let name in matched) {\n            if (name.indexOf(\"Body\") > 0) {\n                let sub = name.substring(name,name.length-4);\n                \n                if (this.moonInfo[sub].render.texture) {\n                    Util.log(\"Doing animation for satellite \"+sub+\" of \"+this.name);\n                    let anim = new Satellite({\n                        frame: this.frame,\n                        timeID: this.timeID,\n                        name: sub,\n                        planet: this.name,\n                        planetOrbit: this.planetOrbit,\n                        primary: this.name,\n                        satelliteOrbit: this.moons[sub].orbit,\n                        texture: this.moonInfo[sub].render.texture\n                    });\n                    Util.log(\"Found textured moon...\",name,anim);\n                    this.frame.setAnimation(anim);\n                    return;\n                }\n            }\n        }\n        super.doLongClick(event);\n    }\n    \n}\n\nexport default PlanetarySystem;","import PlanetarySystem from \"../animations/PlanetarySystem\";\nimport Constants from \"../std/Constants\";\n\nclass Mercury extends PlanetarySystem { \n    constructor(params) {\n        \n    \n        const dr = Math.PI/180;\n        const yr = Constants.CENTURY/100;\n        const fq = 2*Math.PI/yr;\n\n        params.name       = \"Mercury\";\n        params.planetName = \"Mercury\";\n        params.rotationPhase = 0;\n        params.rotationPeriod = 58.646 * 86400;\n        params.rotAxis = {ra: 281.01*dr, dec: 61.45*dr};\n        params.texture = {\n            map:\"images/2k_mercury.jpg\",\n            src:\"https://www.solarsystemscope.com/textures/download/2k_mercury.jpg\",\n            copyright:\"https://creativecommons.org/licenses/by/4.0/\"\n        };\n        \n        super(params);\n    }\n}\n\nexport default Mercury;","import PlanetarySystem from \"../animations/PlanetarySystem\";\nimport Constants from \"../std/Constants\";\n\nclass Venus extends PlanetarySystem { \n    constructor(params) {\n        const dr = Math.PI/180;\n        const yr = Constants.CENTURY/100;\n        const fq = 2*Math.PI/yr;\n\n        params.name       = \"Venus\";\n        params.planetName = \"Venus\";\n        params.rotationPhase = 0;\n        params.rotationPeriod = -243.0226 * 86400;\n        params.rotAxis = {ra: 272.76 *dr, dec: 67.16 *dr}; \n        params.texture = {\n            map:\"images/2k_venus_surface.jpg\",\n            src:\"https://www.solarsystemscope.com/textures/download/2k_venus_surface.jpg\",\n            copyright:\"https://creativecommons.org/licenses/by/4.0/\"\n        };\n        \n        super(params);\n    }\n}\n\nexport default Venus;","import PlanetarySystem from \"../animations/PlanetarySystem\";\nimport Constants from \"../std/Constants\";\n\nclass Mars extends PlanetarySystem { \n    constructor(params) {\n        \n        const dr = Math.PI/180;\n        const yr = Constants.CENTURY/100;\n        const fq = 2*Math.PI/yr;\n        \n        params.name       = \"Mars\";\n        params.planetName = \"Mars\";\n        params.rotationPhase = 0;\n        params.rotationPeriod = 1.025957 * 86400;\n        params.rotAxis = {ra: 317.68142 *dr, dec: 52.88650 *dr},\n        params.texture = {\n            map:\"images/2k_mars.jpg\",\n            src:\"https://www.solarsystemscope.com/textures/download/2k_mars.jpg\",\n            copyright:\"https://creativecommons.org/licenses/by/4.0/\"\n\n        };\n        params.moonInfo = {\n            Phobos: {\n              elems:{\n                a:    9376000,\n                Eccen:   0.0151,\n                nu:    150.057 * dr,\n                MA:     91.059 * dr,\n                i:       1.075 * dr,\n                Omega: 207.785 * dr,\n                N0:   1128.8447569 / 360,\n              },\n              prec: {\n                 ep0:   -50 * yr,\n                 pNu:    fq/1.1316,\n                 pOmega: fq/2.2617\n              },\n              r: 11266.7,\n              render: {frac: .1, color: 0xFFFF00}\n            },\n            Deimos: {\n              elems: {\n                a:     23458000,\n                Eccen:     0.0002,\n                nu:      260.729 * dr,\n                MA:      325.729 * dr,\n                i:         1.788 * dr,\n                Omega:    24.525 * dr,\n                N0:      285.161879 / 360,\n              },\n              prec: {\n                ep0:   -50 * yr,\n                pNu:    fq/27.3703,\n                pOmega: fq/54.5367\n              },\n              radius: 6200,\n              render: {frac: 0.05, color: 0xFF0000}\n            }            \n        };        \n        super(params);\n    }\n}\n\nexport default Mars;","import PlanetarySystem from \"../animations/PlanetarySystem\";\nimport Constants from \"../std/Constants\";\n\nclass Jupiter extends PlanetarySystem { \n    constructor(params) {\n        \n        const dr = Math.PI/180;\n        const yr = Constants.CENTURY/100;\n        const fq = 2*Math.PI/yr;\n        \n        params.name          = \"Jupiter\";\n        params.planetName    = \"Jupiter\";\n        params.rotationPhase = 0;\n        params.rotationPeriod = 1.025957 * 86400;\n        params.rotAxis = {ra: 268.057 *dr, dec: 64.495* dr},\n        params.texture = {\n            map:\"images/2k_jupiter.jpg\",\n            src:\"https://www.solarsystemscope.com/textures/download/2k_jupiter.jpg\",\n            copyright:\"https://creativecommons.org/licenses/by/4.0/\"\n        };\n        params.moonInfo = {\nIo: {\n    elems: {a: 421800.*1000, Eccen: 0.0041, nu: 84.129 *dr, \n            MA: 342.021 *dr, i: 0.036 *dr, Omega: 43.977 *dr, N0: 203.4889583 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/1.625, fOmega: fq/7.420},\n    frame: {type: \"Laplace\", ra: 268.057 *dr, dec: 64.495 *dr},\n    render: {frac: 0.2, color: 0xFF0000,\n             texture: {map: \"images/iomap-planet-text-maps-fandom.png\",\n                       src: \"https://planet-texture-maps.fandom.com/wiki/Io\",\n                       copyright: \"Creative Commons Attribution-Share Alike License 3.0\",\n                      }\n            },\n    size:   100000\n},\nEuropa: {\n    elems: {a: 671100.*1000, Eccen: 0.0094, nu: 88.970 *dr, \n            MA: 171.016 *dr, i: 0.466 *dr, Omega: 219.106 *dr, N0: 101.3747242 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/1.394, fOmega: fq/30.184},\n    frame: {type: \"Laplace\", ra: 268.084 *dr, dec: 64.506 *dr},\n    render: {frac: 0.2, color: 0xFF0000,\n             texture: {\n                 map: \"images/europa_texture_map__20k__by_askaniy_dcqbaif-pre.jpg\",\n                 src: \"https://www.deviantart.com/askaniy/art/Europa-Texture-Map-20K-769790967\",\n                 copyright:\"Creative Commons Attribution-Noncommercial-Share Alike 3.0 License\"\n             }\n    },\n    size:   100000\n},\nGanymede: {\n    elems: {a: 1070400.*1000, Eccen: 0.0013, nu: 192.417 *dr, \n            MA: 317.540 *dr, i: 0.177 *dr, Omega: 63.552 *dr, N0: 50.3176072 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/63.549, fOmega: fq/132.654},\n    frame: {type: \"Laplace\", ra: 268.168 *dr, dec: 64.543 *dr},\n    render: {frac: 0.2, color: 0xFF0000,\n             texture: {\n                 map: \"images/ganymede_texture_map__11k__by_askaniy_dddhxoy-pre.jpg\",\n                 src: \"https://www.deviantart.com/askaniy/art/Ganymede-Texture-Map-11K-808732114\",\n                 copyright: \"Creative Commons Attribution-Noncommercial-Share Alike 3.0 License\"\n             },\n    },\n    size:   100000\n},\nCallisto: {\n    elems: {a: 1882700.*1000, Eccen: 0.0074, nu: 52.643 *dr, \n            MA: 181.408 *dr, i: 0.192 *dr, Omega: 298.848 *dr, N0: 21.5710728 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/205.75, fOmega: fq/338.82},\n    frame: {type: \"Laplace\", ra: 268.639 *dr, dec: 64.749 *dr},\n    render: {frac: 0.2, color: 0xFF0000,\n            texture: {\n                map: \"images/callisto_texture_map__8k__by_askaniy_dddit1h-pre.jpg\",\n                src: \"https://www.deviantart.com/askaniy/art/Callisto-Texture-Map-8K-808772741\",\n                copyright: \"Creative Commons Attribution-Noncommercial-Share Alike 3.0 License\"                \n            }\n    },\n    size:   100000\n},\nAmalthea: {\n    elems: {a: 181400.*1000, Eccen: 0.0032, nu: 155.873 *dr, \n            MA: 185.194 *dr, i: 0.380 *dr, Omega: 108.946 *dr, N0: 722.6317143 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/0.196, fOmega: fq/0.393},\n    frame: {type: \"Laplace\", ra: 268.057 *dr, dec: 64.495 *dr},\n    render: {frac: 0.08, color: 0x0000FF},\n    size:   100000\n},\nThebe: {\n    elems: {a: 221900.*1000, Eccen: 0.0176, nu: 234.269 *dr, \n            MA: 135.956 *dr, i: 1.080 *dr, Omega: 235.694 *dr, N0: 533.7002568 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/0.398, fOmega: fq/0.797},\n    frame: {type: \"Laplace\", ra: 268.057 *dr, dec: 64.495 *dr},\n    render: {frac: 0.08, color: 0x0000FF},\n    size:   100000\n},\nAdrastea: {\n    elems: {a: 129000.*1000, Eccen: 0.0018, nu: 328.047 *dr, \n            MA: 135.673 *dr, i: 0.054 *dr, Omega: 228.378 *dr, N0: 1206.9988064 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/0.058, fOmega: fq/0.116},\n    frame: {type: \"Laplace\", ra: 268.057 *dr, dec: 64.496 *dr},\n    render: {frac: 0.08, color: 0x0000FF},\n    size:   100000\n},\nMetis: {\n    elems: {a: 128000.*1000, Eccen: 0.0012, nu: 297.177 *dr, \n            MA: 276.047 *dr, i: 0.019 *dr, Omega: 146.912 *dr, N0: 1221.2545982 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/0.057, fOmega: fq/0.115},\n    frame: {type: \"Laplace\", ra: 268.057 *dr, dec: 64.496 *dr},\n    render: {frac: 0.08, color: 0x0000FF},\n    size:   100000\n},\nHimalia: {\n    elems: {a: 11460000.*1000, Eccen: 0.1586, nu: 331.234 *dr, \n            MA: 66.874 *dr, i: 28.612 *dr, Omega: 64.798 *dr, N0: 1.4367562 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/139.38, fOmega: fq/292.57},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nElara: {\n    elems: {a: 11740000.*1000, Eccen: 0.2108, nu: 142.001 *dr, \n            MA: 330.985 *dr, i: 27.945 *dr, Omega: 115.511 *dr, N0: 1.3865315 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/128.07, fOmega: fq/265.30},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nPasiphae: {\n    elems: {a: 23629000.*1000, Eccen: 0.4062, nu: 169.226 *dr, \n            MA: 279.769 *dr, i: 151.413 *dr, Omega: 314.223 *dr, N0: 0.4841223 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/81.20, fOmega: fq/81.17},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nSinope: {\n    elems: {a: 23942000.*1000, Eccen: 0.2552, nu: 354.541 *dr, \n            MA: 165.352 *dr, i: 158.189 *dr, Omega: 309.199 *dr, N0: 0.4743772 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/88.72, fOmega: fq/87.40},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nLysithea: {\n    elems: {a: 11717000.*1000, Eccen: 0.1161, nu: 49.670 *dr, \n            MA: 330.475 *dr, i: 27.663 *dr, Omega: 5.326 *dr, N0: 1.3888891 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/131.19, fOmega: fq/292.04},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nCarme: {\n    elems: {a: 23401000.*1000, Eccen: 0.2546, nu: 26.416 *dr, \n            MA: 233.375 *dr, i: 164.994 *dr, Omega: 114.854 *dr, N0: 0.4903501 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/80.98, fOmega: fq/88.32},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nAnanke: {\n    elems: {a: 21254000.*1000, Eccen: 0.2332, nu: 95.772 *dr, \n            MA: 253.384 *dr, i: 148.693 *dr, Omega: 15.959 *dr, N0: 0.5716125 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/144.92, fOmega: fq/110.12},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nLeda: {\n    elems: {a: 11164000.*1000, Eccen: 0.1624, nu: 269.393 *dr, \n            MA: 230.352 *dr, i: 27.882 *dr, Omega: 219.181 *dr, N0: 1.4942407 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/144.79, fOmega: fq/301.94},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nCallirrhoe: {\n    elems: {a: 24099000.*1000, Eccen: 0.2796, nu: 23.909 *dr, \n            MA: 107.962 *dr, i: 147.080 *dr, Omega: 283.104 *dr, N0: 0.4744232 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/120.06, fOmega: fq/89.03},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nThemisto: {\n    elems: {a: 7504000.*1000, Eccen: 0.2435, nu: 217.147 *dr, \n            MA: 313.051 *dr, i: 42.977 *dr, Omega: 192.288 *dr, N0: 2.7688033 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/686.41, fOmega: fq/528.39},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nMegaclite: {\n    elems: {a: 23814000.*1000, Eccen: 0.4156, nu: 288.882 *dr, \n            MA: 135.272 *dr, i: 152.781 *dr, Omega: 280.575 *dr, N0: 0.4781658 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/76.90, fOmega: fq/79.23},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nTaygete: {\n    elems: {a: 23363000.*1000, Eccen: 0.2523, nu: 231.540 *dr, \n            MA: 94.756 *dr, i: 165.253 *dr, Omega: 305.114 *dr, N0: 0.4915209 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/81.04, fOmega: fq/88.59},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nChaldene: {\n    elems: {a: 23181000.*1000, Eccen: 0.2503, nu: 243.878 *dr, \n            MA: 267.454 *dr, i: 165.155 *dr, Omega: 134.240 *dr, N0: 0.4974208 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/81.66, fOmega: fq/89.52},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nHarpalyke: {\n    elems: {a: 21106000.*1000, Eccen: 0.2296, nu: 134.505 *dr, \n            MA: 215.956 *dr, i: 148.759 *dr, Omega: 29.834 *dr, N0: 0.5775515 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/147.17, fOmega: fq/111.64},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nKalyke: {\n    elems: {a: 23565000.*1000, Eccen: 0.2466, nu: 218.934 *dr, \n            MA: 255.702 *dr, i: 165.121 *dr, Omega: 43.864 *dr, N0: 0.4851490 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/80.76, fOmega: fq/87.67},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nIocaste: {\n    elems: {a: 21272000.*1000, Eccen: 0.2152, nu: 64.727 *dr, \n            MA: 213.675 *dr, i: 149.411 *dr, Omega: 269.613 *dr, N0: 0.5699784 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/145.78, fOmega: fq/111.18},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nErinome: {\n    elems: {a: 23286000.*1000, Eccen: 0.2655, nu: 10.274 *dr, \n            MA: 267.136 *dr, i: 164.914 *dr, Omega: 317.497 *dr, N0: 0.4941719 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/80.51, fOmega: fq/88.33},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nIsonoe: {\n    elems: {a: 23231000.*1000, Eccen: 0.2471, nu: 116.879 *dr, \n            MA: 124.941 *dr, i: 165.250 *dr, Omega: 130.961 *dr, N0: 0.4956884 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/81.80, fOmega: fq/89.52},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nPraxidike: {\n    elems: {a: 21148000.*1000, Eccen: 0.2274, nu: 190.862 *dr, \n            MA: 117.480 *dr, i: 148.885 *dr, Omega: 280.956 *dr, N0: 0.5756381 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/144.77, fOmega: fq/111.16},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nAutonoe: {\n    elems: {a: 24037000.*1000, Eccen: 0.3152, nu: 54.793 *dr, \n            MA: 142.035 *dr, i: 152.364 *dr, Omega: 272.817 *dr, N0: 0.4730563 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/92.33, fOmega: fq/85.00},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nThyone: {\n    elems: {a: 21197000.*1000, Eccen: 0.2307, nu: 97.023 *dr, \n            MA: 238.786 *dr, i: 148.595 *dr, Omega: 233.022 *dr, N0: 0.5739872 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/147.58, fOmega: fq/110.93},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nHermippe: {\n    elems: {a: 21297000.*1000, Eccen: 0.2095, nu: 300.836 *dr, \n            MA: 131.854 *dr, i: 150.740 *dr, Omega: 330.393 *dr, N0: 0.5679040 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/136.92, fOmega: fq/110.64},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nAitne: {\n    elems: {a: 23317000.*1000, Eccen: 0.2627, nu: 99.401 *dr, \n            MA: 105.000 *dr, i: 165.048 *dr, Omega: 8.679 *dr, N0: 0.4930702 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/80.36, fOmega: fq/88.19},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nEurydome: {\n    elems: {a: 23146000.*1000, Eccen: 0.2755, nu: 223.631 *dr, \n            MA: 287.689 *dr, i: 150.271 *dr, Omega: 302.470 *dr, N0: 0.5018735 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/111.58, fOmega: fq/93.30},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nEuanthe: {\n    elems: {a: 21039000.*1000, Eccen: 0.2320, nu: 320.635 *dr, \n            MA: 333.101 *dr, i: 148.915 *dr, Omega: 254.297 *dr, N0: 0.5802269 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/144.52, fOmega: fq/111.71},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nEuporie: {\n    elems: {a: 19336000.*1000, Eccen: 0.1438, nu: 89.904 *dr, \n            MA: 70.243 *dr, i: 145.740 *dr, Omega: 60.143 *dr, N0: 0.6537221 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/337063.88, fOmega: fq/139.45},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nOrthosie: {\n    elems: {a: 21158000.*1000, Eccen: 0.2807, nu: 216.805 *dr, \n            MA: 204.517 *dr, i: 146.004 *dr, Omega: 221.949 *dr, N0: 0.5782402 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/142.35, fOmega: fq/107.53},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nSponde: {\n    elems: {a: 23790000.*1000, Eccen: 0.3112, nu: 61.885 *dr, \n            MA: 174.044 *dr, i: 150.997 *dr, Omega: 116.363 *dr, N0: 0.4810760 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/98.08, fOmega: fq/87.01},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nKale: {\n    elems: {a: 23306000.*1000, Eccen: 0.2597, nu: 44.233 *dr, \n            MA: 212.853 *dr, i: 164.944 *dr, Omega: 60.170 *dr, N0: 0.4934152 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/80.91, fOmega: fq/88.57},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nPasithee: {\n    elems: {a: 23091000.*1000, Eccen: 0.2682, nu: 231.920 *dr, \n            MA: 215.443 *dr, i: 165.117 *dr, Omega: 327.729 *dr, N0: 0.5003695 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/80.82, fOmega: fq/89.25},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nHegemone: {\n    elems: {a: 23575000.*1000, Eccen: 0.3445, nu: 197.144 *dr, \n            MA: 236.950 *dr, i: 154.164 *dr, Omega: 318.902 *dr, N0: 0.4866038 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/85.66, fOmega: fq/84.87},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nMneme: {\n    elems: {a: 21033000.*1000, Eccen: 0.2258, nu: 40.542 *dr, \n            MA: 256.860 *dr, i: 148.585 *dr, Omega: 13.467 *dr, N0: 0.5806001 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/148.06, fOmega: fq/112.26},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nAoede: {\n    elems: {a: 23974000.*1000, Eccen: 0.4325, nu: 59.739 *dr, \n            MA: 197.676 *dr, i: 158.272 *dr, Omega: 173.392 *dr, N0: 0.4728089 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/69.17, fOmega: fq/76.83},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nThelxinoe: {\n    elems: {a: 21160000.*1000, Eccen: 0.2201, nu: 313.183 *dr, \n            MA: 268.013 *dr, i: 151.390 *dr, Omega: 169.962 *dr, N0: 0.5732248 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/130.58, fOmega: fq/110.42},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nArche: {\n    elems: {a: 23352000.*1000, Eccen: 0.2495, nu: 171.632 *dr, \n            MA: 39.713 *dr, i: 165.015 *dr, Omega: 339.210 *dr, N0: 0.4918707 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/81.40, fOmega: fq/88.73},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nKallichore: {\n    elems: {a: 23276000.*1000, Eccen: 0.2509, nu: 9.836 *dr, \n            MA: 55.937 *dr, i: 165.102 *dr, Omega: 30.339 *dr, N0: 0.4943462 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/81.56, fOmega: fq/89.16},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nHelike: {\n    elems: {a: 21065000.*1000, Eccen: 0.1498, nu: 299.482 *dr, \n            MA: 43.659 *dr, i: 154.842 *dr, Omega: 89.749 *dr, N0: 0.5747808 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/127.40, fOmega: fq/114.52},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nCarpo: {\n    elems: {a: 17056000.*1000, Eccen: 0.4317, nu: 90.372 *dr, \n            MA: 337.062 *dr, i: 51.624 *dr, Omega: 50.597 *dr, N0: 0.7889862 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/711550.25, fOmega: fq/112.82},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nEukelade: {\n    elems: {a: 23323000.*1000, Eccen: 0.2619, nu: 309.685 *dr, \n            MA: 204.846 *dr, i: 165.265 *dr, Omega: 193.558 *dr, N0: 0.4929260 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/80.24, fOmega: fq/88.16},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nCyllene: {\n    elems: {a: 23800000.*1000, Eccen: 0.4155, nu: 187.429 *dr, \n            MA: 128.345 *dr, i: 150.336 *dr, Omega: 252.611 *dr, N0: 0.4787365 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/80.19, fOmega: fq/79.71},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nKore: {\n    elems: {a: 24482000.*1000, Eccen: 0.3313, nu: 138.071 *dr, \n            MA: 33.416 *dr, i: 145.173 *dr, Omega: 313.355 *dr, N0: 0.4634134 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/108.39, fOmega: fq/84.47},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nHerse: {\n    elems: {a: 23408000.*1000, Eccen: 0.2541, nu: 330.295 *dr, \n            MA: 141.667 *dr, i: 164.964 *dr, Omega: 295.702 *dr, N0: 0.4901154 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/80.98, fOmega: fq/88.27},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\n\"S/2000 J 11\": {\n    elems: {a: 12297000.*1000, Eccen: 0.2320, nu: 173.544 *dr, \n            MA: 309.734 *dr, i: 28.631 *dr, Omega: 294.497 *dr, N0: 1.2939791 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/117.58, fOmega: fq/241.93},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\n\"S/2003 J 2\": {\n    elems: {a: 28347000.*1000, Eccen: 0.4100, nu: 165.201 *dr, \n            MA: 237.932 *dr, i: 157.291 *dr, Omega: 344.782 *dr, N0: 0.3671484 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/60.25, fOmega: fq/62.87},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\n\"S/2003 J 3\": {\n    elems: {a: 20221000.*1000, Eccen: 0.1969, nu: 66.338 *dr, \n            MA: 311.780 *dr, i: 147.547 *dr, Omega: 231.489 *dr, N0: 0.6165779 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/181.96, fOmega: fq/122.74},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\n\"S/2003 J 4\": {\n    elems: {a: 23929000.*1000, Eccen: 0.3624, nu: 197.401 *dr, \n            MA: 260.480 *dr, i: 149.589 *dr, Omega: 179.131 *dr, N0: 0.4766663 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/90.17, fOmega: fq/82.96},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\n\"S/2003 J 5\": {\n    elems: {a: 23495000.*1000, Eccen: 0.2476, nu: 90.066 *dr, \n            MA: 336.636 *dr, i: 165.248 *dr, Omega: 176.683 *dr, N0: 0.4873118 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/80.95, fOmega: fq/88.10},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\n\"S/2003 J 9\": {\n    elems: {a: 23385000.*1000, Eccen: 0.2632, nu: 292.662 *dr, \n            MA: 348.415 *dr, i: 165.047 *dr, Omega: 44.321 *dr, N0: 0.4909185 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/80.27, fOmega: fq/87.93},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\n\"S/2003 J 10\": {\n    elems: {a: 23042000.*1000, Eccen: 0.4299, nu: 170.833 *dr, \n            MA: 258.937 *dr, i: 165.073 *dr, Omega: 151.911 *dr, N0: 0.5026172 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/68.06, fOmega: fq/80.34},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\n\"S/2003 J 12\": {\n    elems: {a: 17830000.*1000, Eccen: 0.4904, nu: 13.288 *dr, \n            MA: 38.543 *dr, i: 151.003 *dr, Omega: 65.530 *dr, N0: 0.7351860 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/97.93, fOmega: fq/109.42},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\n\"S/2003 J 15\": {\n    elems: {a: 22627000.*1000, Eccen: 0.1899, nu: 18.405 *dr, \n            MA: 58.865 *dr, i: 146.492 *dr, Omega: 236.674 *dr, N0: 0.5219082 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/187.83, fOmega: fq/105.37},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\n\"S/2003 J 16\": {\n    elems: {a: 21097000.*1000, Eccen: 0.2281, nu: 57.681 *dr, \n            MA: 307.563 *dr, i: 148.683 *dr, Omega: 16.883 *dr, N0: 0.5779589 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/146.70, fOmega: fq/111.64},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\n\"S/2003 J 18\": {\n    elems: {a: 20508000.*1000, Eccen: 0.0895, nu: 130.894 *dr, \n            MA: 202.160 *dr, i: 146.077 *dr, Omega: 158.247 *dr, N0: 0.6018719 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/506.86, fOmega: fq/131.88},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\n\"S/2003 J 19\": {\n    elems: {a: 23533000.*1000, Eccen: 0.2552, nu: 176.668 *dr, \n            MA: 223.035 *dr, i: 165.116 *dr, Omega: 27.442 *dr, N0: 0.4862156 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/80.17, fOmega: fq/87.39},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\n\"S/2003 J 23\": {\n    elems: {a: 23567000.*1000, Eccen: 0.2746, nu: 255.114 *dr, \n            MA: 144.222 *dr, i: 146.424 *dr, Omega: 41.706 *dr, N0: 0.4914942 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/130.10, fOmega: fq/92.90},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\n\"S/2010 J 1\": {\n    elems: {a: 23449000.*1000, Eccen: 0.2491, nu: 189.230 *dr, \n            MA: 160.525 *dr, i: 165.100 *dr, Omega: 282.871 *dr, N0: 0.4887995 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/81.18, fOmega: fq/88.33},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\n\"S/2010 J 2\": {\n    elems: {a: 21004000.*1000, Eccen: 0.2267, nu: 18.252 *dr, \n            MA: 312.074 *dr, i: 148.673 *dr, Omega: 5.802 *dr, N0: 0.5817371 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/147.06, fOmega: fq/112.35},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\n\"S/2011 J 1\": {\n    elems: {a: 23446000.*1000, Eccen: 0.2534, nu: 31.514 *dr, \n            MA: 256.027 *dr, i: 165.318 *dr, Omega: 250.728 *dr, N0: 0.4888998 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/80.45, fOmega: fq/87.91},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\n\"S/2011 J 2\": {\n    elems: {a: 23124000.*1000, Eccen: 0.3493, nu: 270.154 *dr, \n            MA: 285.597 *dr, i: 153.597 *dr, Omega: 24.866 *dr, N0: 0.5011321 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/87.78, fOmega: fq/87.00},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n}\n        };        \n        super(params);\n    }\n}\n\nexport default Jupiter;","import PlanetarySystem from \"../animations/PlanetarySystem\";\nimport Constants from \"../std/Constants\";\n\nclass Saturn extends PlanetarySystem { \n    constructor(params) {\n        \n        const dr = Math.PI/180;\n        const yr = Constants.CENTURY/100;\n        const fq = 2*Math.PI/yr;\n        \n        params.name       = \"Saturn\";\n        params.planetName = \"Saturn\";\n        params.rotationPhase = 0;\n        params.rotationPeriod = 10*3600 + 33*60 + 38;\n        params.rotAxis = {ra: 40.589*dr, dec: 83.537 *dr};\n        params.texture = {\n            map:\"images/2k_saturn.jpg\",\n            src:\"https://www.solarsystemscope.com/textures/download/2k_saturn.jpg\",\n            copyright:\"https://creativecommons.org/licenses/by/4.0/\"\n\n        };\n        \n        params.ring  = {\n            texture: {\n                map:\"images/saturn_rings_fargetanik.png\",\n                src:\"https://www.deviantart.com/fargetanik/art/Saturn-Rings-Texture-Map-13k-814720659\",\n                copyright:\"Creative Commons Attribution-Share Alike License 3.0\",\n                transparent: true\n            },\n            innerRadius: 1.239,  // https://nssdc.gsfc.nasa.gov/planetary/factsheet/satringfact.html\n            outerRadius: 2.320\n        }\n        params.moonInfo = {\nMimas: {\n    elems: {a: 185539.*1000, Eccen: 0.0196, nu: 332.499 *dr, \n            MA: 14.848 *dr, i: 1.574 *dr, Omega: 173.027 *dr, N0: 381.9944948 /360},\n    prec:  {ep0:  12*3600,\n            fNu: fq/0.493, fOmega: fq/0.986},\n    frame: {type: \"Laplace\", ra: 40.589 *dr, dec: 83.536 *dr},\n    render: {frac: 0.05, color: 0xFFFF00},\n    size:   100000\n},\nEnceladus: {\n    elems: {a: 238042.*1000, Eccen: 0.0000, nu: 0.076 *dr, \n            MA: 199.686 *dr, i: 0.003 *dr, Omega: 342.507 *dr, N0: 262.7318978 /360},\n    prec:  {ep0:  12*3600,\n            fNu: fq/1.184, fOmega: fq/2.360},\n    frame: {type: \"Laplace\", ra: 40.586 *dr, dec: 83.536 *dr},\n    render: {frac: 0.05, color: 0xFFFF00},\n    size:   100000\n},\nTethys: {\n    elems: {a: 294672.*1000, Eccen: 0.0001, nu: 45.202 *dr, \n            MA: 243.367 *dr, i: 1.091 *dr, Omega: 259.842 *dr, N0: 190.6979109 /360},\n    prec:  {ep0:  12*3600,\n            fNu: fq/2.490, fOmega: fq/4.982},\n    frame: {type: \"Laplace\", ra: 40.578 *dr, dec: 83.537 *dr},\n    render: {frac: 0.05, color: 0xFFFF00},\n    size:   100000\n},\nDione: {\n    elems: {a: 377415.*1000, Eccen: 0.0022, nu: 284.315 *dr, \n            MA: 322.232 *dr, i: 0.028 *dr, Omega: 290.415 *dr, N0: 131.5349307 /360},\n    prec:  {ep0:  12*3600,\n            fNu: fq/5.852, fOmega: fq/11.709},\n    frame: {type: \"Laplace\", ra: 40.544 *dr, dec: 83.540 *dr},\n    render: {frac: 0.05, color: 0xFFFF00},\n    size:   100000\n},\nRhea: {\n    elems: {a: 527068.*1000, Eccen: 0.0002, nu: 241.619 *dr, \n            MA: 179.781 *dr, i: 0.333 *dr, Omega: 351.042 *dr, N0: 79.6900459 /360},\n    prec:  {ep0:  12*3600,\n            fNu: fq/17.939, fOmega: fq/35.832},\n    frame: {type: \"Laplace\", ra: 40.328 *dr, dec: 83.559 *dr},\n    render: {frac: 0.05, color: 0xFFFF00},\n    size:   100000\n},\nTitan: {\n    elems: {a: 1221865.*1000, Eccen: 0.0288, nu: 180.532 *dr, \n            MA: 163.310 *dr, i: 0.306 *dr, Omega: 28.060 *dr, N0: 22.5769756 /360},\n    prec:  {ep0:  12*3600,\n            fNu: fq/352.12, fOmega: fq/704.60},\n    frame: {type: \"Laplace\", ra: 36.214 *dr, dec: 83.949 *dr},\n    render: {frac: 0.3, color: 0xFF0000,\n      texture: {\n          map: \"images/titan_texture_map_8k_by_fargetanik_db0f8m0-fullview.jpg\",\n          src: \"https://www.deviantart.com/fargetanik/art/Titan-Texture-Map-8k-665838936\",\n          copyright:\"Creative Commons Attribution-Share Alike License 3.0\"\n      }\n    },\n    size:   100000\n},\nHyperion: {\n    elems: {a: 1500933.*1000, Eccen: 0.0232, nu: 303.178 *dr, \n            MA: 86.342 *dr, i: 0.615 *dr, Omega: 263.847 *dr, N0: 16.9199503 /360},\n    prec:  {ep0:  12*3600,\n            fNu: fq/127.99, fOmega: fq/154.66},\n    frame: {type: \"Laplace\", ra: 36.372 *dr, dec: 83.862 *dr},\n    render: {frac: 0.05, color: 0xFFFF00},\n    size:   100000\n},\nIapetus: {\n    elems: {a: 3560854.*1000, Eccen: 0.0293, nu: 271.606 *dr, \n            MA: 201.789 *dr, i: 8.298 *dr, Omega: 81.105 *dr, N0: 4.5379416 /360},\n    prec:  {ep0:  12*3600,\n            fNu: fq/1676.69, fOmega: fq/3438.73},\n    frame: {type: \"Laplace\", ra: 284.715 *dr, dec: 78.749 *dr},\n    render: {frac: 0.05, color: 0xFFFF00},\n    size:   100000\n},\nPhoebe: {\n    elems: {a: 12947918.*1000, Eccen: 0.1634, nu: 342.500 *dr, \n            MA: 53.038 *dr, i: 175.243 *dr, Omega: 241.086 *dr, N0: 0.6569114 /360},\n    prec:  {ep0:  12*3600,\n            fNu: fq/460.92, fOmega: fq/723.17},\n    frame: {type: \"Laplace\", ra: 275.954 *dr, dec: 67.455 *dr},\n    render: {frac: 0.05, color: 0xFFFF00},\n    size:   100000\n},\nJanus: {\n    elems: {a: 151450.*1000, Eccen: 0.0098, nu: 16.012 *dr, \n            MA: 17.342 *dr, i: 0.165 *dr, Omega: 154.175 *dr, N0: 518.3431513 /360},\n    prec:  {ep0:  12*3600,\n            fNu: fq/0.240, fOmega: fq/0.482},\n    frame: {type: \"Laplace\", ra: 40.585 *dr, dec: 83.538 *dr},\n    render: {frac: 0.03, color: 0xFFFF00},\n    size:   100000\n},\nEpimetheus: {\n    elems: {a: 151450.*1000, Eccen: 0.0161, nu: 88.975 *dr, \n            MA: 80.377 *dr, i: 0.353 *dr, Omega: 192.762 *dr, N0: 518.0979676 /360},\n    prec:  {ep0:  12*3600,\n            fNu: fq/0.240, fOmega: fq/0.482},\n    frame: {type: \"Laplace\", ra: 40.585 *dr, dec: 83.538 *dr},\n    render: {frac: 0.03, color: 0xFFFF00},\n    size:   100000\n},\nHelene: {\n    elems: {a: 377444.*1000, Eccen: 0.0000, nu: 33.134 *dr, \n            MA: 43.186 *dr, i: 0.213 *dr, Omega: 163.112 *dr, N0: 131.5349306 /360},\n    prec:  {ep0:  12*3600,\n            fNu: fq/2.562, fOmega: fq/11.706},\n    frame: {type: \"Laplace\", ra: 40.544 *dr, dec: 83.540 *dr},\n    render: {frac: 0.03, color: 0xFFFF00},\n    size:   100000\n},\nTelesto: {\n    elems: {a: 294720.*1000, Eccen: 0.0002, nu: 119.135 *dr, \n            MA: 260.157 *dr, i: 1.180 *dr, Omega: 229.182 *dr, N0: 190.6979089 /360},\n    prec:  {ep0:  12*3600,\n            fNu: fq/2.489, fOmega: fq/4.982},\n    frame: {type: \"Laplace\", ra: 40.578 *dr, dec: 83.537 *dr},\n    render: {frac: 0.03, color: 0xFFFF00},\n    size:   100000\n},\nCalypso: {\n    elems: {a: 294721.*1000, Eccen: 0.0005, nu: 17.470 *dr, \n            MA: 156.660 *dr, i: 1.500 *dr, Omega: 314.226 *dr, N0: 190.6979089 /360},\n    prec:  {ep0:  12*3600,\n            fNu: fq/2.487, fOmega: fq/4.983},\n    frame: {type: \"Laplace\", ra: 40.578 *dr, dec: 83.537 *dr},\n    render: {frac: 0.03, color: 0xFFFF00},\n    size:   100000\n},\nAtlas: {\n    elems: {a: 137774.*1000, Eccen: 0.0011, nu: 210.851 *dr, \n            MA: 283.282 *dr, i: 0.003 *dr, Omega: 236.422 *dr, N0: 598.3147505 /360},\n    prec:  {ep0:  12*3600,\n            fNu: fq/0.171, fOmega: fq/0.344},\n    frame: {type: \"Laplace\", ra: 40.585 *dr, dec: 83.538 *dr},\n    render: {frac: 0.03, color: 0xFFFF00},\n    size:   100000\n},\nPrometheus: {\n    elems: {a: 139429.*1000, Eccen: 0.0022, nu: 37.514 *dr, \n            MA: 96.886 *dr, i: 0.007 *dr, Omega: 319.176 *dr, N0: 587.2860142 /360},\n    prec:  {ep0:  12*3600,\n            fNu: fq/0.179, fOmega: fq/0.359},\n    frame: {type: \"Laplace\", ra: 40.585 *dr, dec: 83.538 *dr},\n    render: {frac: 0.02, color: 0xFFFF00},\n    size:   100000\n},\nPandora: {\n    elems: {a: 141810.*1000, Eccen: 0.0042, nu: 66.248 *dr, \n            MA: 125.112 *dr, i: 0.050 *dr, Omega: 147.272 *dr, N0: 572.7878754 /360},\n    prec:  {ep0:  12*3600,\n            fNu: fq/0.190, fOmega: fq/0.381},\n    frame: {type: \"Laplace\", ra: 40.585 *dr, dec: 83.538 *dr},\n    render: {frac: 0.02, color: 0xFFFF00},\n    size:   100000\n},\nPan: {\n    elems: {a: 133585.*1000, Eccen: 0.0000, nu: 103.331 *dr, \n            MA: 351.187 *dr, i: 0.000 *dr, Omega: 52.076 *dr, N0: 626.0317341 /360},\n    prec:  {ep0:  12*3600,\n            fNu: fq/0.154, fOmega: fq/0.309},\n    frame: {type: \"Laplace\", ra: 40.583 *dr, dec: 83.538 *dr},\n    render: {frac: 0.02, color: 0xFFFF00},\n    size:   100000\n},\nMethone: {\n    elems: {a: 194402.*1000, Eccen: 0.0000, nu: 134.636 *dr, \n            MA: 71.189 *dr, i: 0.013 *dr, Omega: 313.562 *dr, N0: 356.5949252 /360},\n    prec:  {ep0:  12*3600,\n            fNu: fq/0.250, fOmega: fq/1.158},\n    frame: {type: \"Laplace\", ra: 40.589 *dr, dec: 83.536 *dr},\n    render: {frac: 0.02, color: 0xFFFF00},\n    size:   100000\n},\nPallene: {\n    elems: {a: 212282.*1000, Eccen: 0.0040, nu: 16.074 *dr, \n            MA: 356.229 *dr, i: 0.001 *dr, Omega: 123.180 *dr, N0: 312.0270737 /360},\n    prec:  {ep0:  12*3600,\n            fNu: fq/0.862, fOmega: fq/1.899},\n    frame: {type: \"Laplace\", ra: 40.579 *dr, dec: 83.537 *dr},\n    render: {frac: 0.02, color: 0xFFFF00},\n    size:   100000\n},\nPolydeuces: {\n    elems: {a: 377222.*1000, Eccen: 0.0191, nu: 311.847 *dr, \n            MA: 89.307 *dr, i: 0.175 *dr, Omega: 67.936 *dr, N0: 131.5349306 /360},\n    prec:  {ep0:  12*3600,\n            fNu: fq/5.811, fOmega: fq/11.695},\n    frame: {type: \"Laplace\", ra: 40.543 *dr, dec: 83.540 *dr},\n    render: {frac: 0.02, color: 0xFFFF00},\n    size:   100000\n},\nDaphnis: {\n    elems: {a: 136504.*1000, Eccen: 0.0000, nu: 266.931 *dr, \n            MA: 113.790 *dr, i: 0.003 *dr, Omega: 132.867 *dr, N0: 605.9791512 /360},\n    prec:  {ep0:  12*3600,\n            fNu: fq/0.166, fOmega: fq/0.334},\n    frame: {type: \"Laplace\", ra: 40.583 *dr, dec: 83.538 *dr},\n    render: {frac: 0.02, color: 0xFFFF00},\n    size:   100000\n},\nAnthe: {\n    elems: {a: 196888.*1000, Eccen: 0.0011, nu: 138.902 *dr, \n            MA: 190.473 *dr, i: 0.015 *dr, Omega: 287.852 *dr, N0: 347.3587167 /360},\n    prec:  {ep0:  12*3600,\n            fNu: fq/0.617, fOmega: fq/1.232},\n    frame: {type: \"Laplace\", ra: 40.583 *dr, dec: 83.537 *dr},\n    render: {frac: 0.02, color: 0xFFFF00},\n    size:   100000\n},\nAegaeon: {\n    elems: {a: 167425.*1000, Eccen: 0.0002, nu: 152.905 *dr, \n            MA: 322.771 *dr, i: 0.001 *dr, Omega: 317.202 *dr, N0: 445.4934177 /360},\n    prec:  {ep0:  12*3600,\n            fNu: fq/0.343, fOmega: fq/0.688},\n    frame: {type: \"Laplace\", ra: 40.584 *dr, dec: 83.537 *dr},\n    render: {frac: 0.02, color: 0xFFFF00},\n    size:   100000\n},\nYmir: {\n    elems: {a: 23128000.*1000, Eccen: 0.3338, nu: 21.352 *dr, \n            MA: 228.673 *dr, i: 173.497 *dr, Omega: 192.937 *dr, N0: 0.2737369 /360},\n    prec:  {ep0:  0,\n            fNu: fq/217.61, fOmega: fq/277.53},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nPaaliaq: {\n    elems: {a: 15204000.*1000, Eccen: 0.3325, nu: 237.522 *dr, \n            MA: 321.654 *dr, i: 46.228 *dr, Omega: 330.022 *dr, N0: 0.5240567 /360},\n    prec:  {ep0:  0,\n            fNu: fq/576.14, fOmega: fq/535.71},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nTarvos: {\n    elems: {a: 18243000.*1000, Eccen: 0.5382, nu: 274.104 *dr, \n            MA: 265.783 *dr, i: 33.725 *dr, Omega: 102.504 *dr, N0: 0.3886226 /360},\n    prec:  {ep0:  0,\n            fNu: fq/194.18, fOmega: fq/272.97},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nIjiraq: {\n    elems: {a: 11408000.*1000, Eccen: 0.2717, nu: 92.899 *dr, \n            MA: 17.328 *dr, i: 47.485 *dr, Omega: 130.779 *dr, N0: 0.7974868 /360},\n    prec:  {ep0:  0,\n            fNu: fq/13807.37, fOmega: fq/935.12},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nSuttungr: {\n    elems: {a: 19468000.*1000, Eccen: 0.1139, nu: 34.281 *dr, \n            MA: 321.133 *dr, i: 175.815 *dr, Omega: 227.259 *dr, N0: 0.3540952 /360},\n    prec:  {ep0:  0,\n            fNu: fq/292.79, fOmega: fq/402.20},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nKiviuq: {\n    elems: {a: 11384000.*1000, Eccen: 0.3325, nu: 90.205 *dr, \n            MA: 172.018 *dr, i: 46.764 *dr, Omega: 353.584 *dr, N0: 0.8013951 /360},\n    prec:  {ep0:  0,\n            fNu: fq/19973.94, fOmega: fq/840.86},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nMundilfari: {\n    elems: {a: 18653000.*1000, Eccen: 0.2097, nu: 309.694 *dr, \n            MA: 92.821 *dr, i: 167.439 *dr, Omega: 82.856 *dr, N0: 0.3778328 /360},\n    prec:  {ep0:  0,\n            fNu: fq/312.23, fOmega: fq/417.31},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nAlbiorix: {\n    elems: {a: 16393000.*1000, Eccen: 0.4797, nu: 55.932 *dr, \n            MA: 32.828 *dr, i: 34.060 *dr, Omega: 102.512 *dr, N0: 0.4595027 /360},\n    prec:  {ep0:  0,\n            fNu: fq/249.88, fOmega: fq/358.14},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nSkathi: {\n    elems: {a: 15635000.*1000, Eccen: 0.2718, nu: 203.517 *dr, \n            MA: 114.689 *dr, i: 152.633 *dr, Omega: 286.599 *dr, N0: 0.4944382 /360},\n    prec:  {ep0:  0,\n            fNu: fq/474.36, fOmega: fq/546.69},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nErriapus: {\n    elems: {a: 17602000.*1000, Eccen: 0.4722, nu: 282.522 *dr, \n            MA: 294.829 *dr, i: 34.481 *dr, Omega: 150.985 *dr, N0: 0.4132539 /360},\n    prec:  {ep0:  0,\n            fNu: fq/219.90, fOmega: fq/323.49},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nSiarnaq: {\n    elems: {a: 18182000.*1000, Eccen: 0.2802, nu: 65.929 *dr, \n            MA: 201.288 *dr, i: 45.809 *dr, Omega: 47.826 *dr, N0: 0.4020067 /360},\n    prec:  {ep0:  0,\n            fNu: fq/457.40, fOmega: fq/454.20},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nThrymr: {\n    elems: {a: 20418000.*1000, Eccen: 0.4659, nu: 125.404 *dr, \n            MA: 30.075 *dr, i: 177.659 *dr, Omega: 285.762 *dr, N0: 0.3296678 /360},\n    prec:  {ep0:  0,\n            fNu: fq/875.11, fOmega: fq/139002.09},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nNarvi: {\n    elems: {a: 19349000.*1000, Eccen: 0.4296, nu: 169.959 *dr, \n            MA: 114.172 *dr, i: 145.731 *dr, Omega: 174.435 *dr, N0: 0.3585873 /360},\n    prec:  {ep0:  0,\n            fNu: fq/341.38, fOmega: fq/347.42},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nAegir: {\n    elems: {a: 20751000.*1000, Eccen: 0.2524, nu: 242.651 *dr, \n            MA: 26.017 *dr, i: 166.668 *dr, Omega: 179.064 *dr, N0: 0.3220526 /360},\n    prec:  {ep0:  0,\n            fNu: fq/273.91, fOmega: fq/350.18},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nBebhionn: {\n    elems: {a: 17116000.*1000, Eccen: 0.4682, nu: 358.141 *dr, \n            MA: 168.045 *dr, i: 35.101 *dr, Omega: 199.128 *dr, N0: 0.4312114 /360},\n    prec:  {ep0:  0,\n            fNu: fq/236.57, fOmega: fq/342.06},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nBergelmir: {\n    elems: {a: 19336000.*1000, Eccen: 0.1420, nu: 133.400 *dr, \n            MA: 306.494 *dr, i: 158.557 *dr, Omega: 202.164 *dr, N0: 0.3579396 /360},\n    prec:  {ep0:  0,\n            fNu: fq/359.70, fOmega: fq/424.95},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nBestla: {\n    elems: {a: 20209000.*1000, Eccen: 0.5145, nu: 81.185 *dr, \n            MA: 239.156 *dr, i: 145.136 *dr, Omega: 288.308 *dr, N0: 0.3308757 /360},\n    prec:  {ep0:  0,\n            fNu: fq/284.99, fOmega: fq/299.08},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nFarbauti: {\n    elems: {a: 20390000.*1000, Eccen: 0.2414, nu: 342.995 *dr, \n            MA: 282.813 *dr, i: 156.520 *dr, Omega: 135.109 *dr, N0: 0.3312924 /360},\n    prec:  {ep0:  0,\n            fNu: fq/330.77, fOmega: fq/374.34},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nFenrir: {\n    elems: {a: 22454000.*1000, Eccen: 0.1347, nu: 120.982 *dr, \n            MA: 131.678 *dr, i: 164.963 *dr, Omega: 226.595 *dr, N0: 0.2856343 /360},\n    prec:  {ep0:  0,\n            fNu: fq/276.77, fOmega: fq/332.99},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nFornjot: {\n    elems: {a: 25146000.*1000, Eccen: 0.2077, nu: 324.787 *dr, \n            MA: 214.499 *dr, i: 170.372 *dr, Omega: 259.946 *dr, N0: 0.2409497 /360},\n    prec:  {ep0:  0,\n            fNu: fq/223.68, fOmega: fq/267.44},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nHati: {\n    elems: {a: 19868000.*1000, Eccen: 0.3710, nu: 21.286 *dr, \n            MA: 163.640 *dr, i: 165.808 *dr, Omega: 324.380 *dr, N0: 0.3460954 /360},\n    prec:  {ep0:  0,\n            fNu: fq/262.48, fOmega: fq/339.97},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nHyrrokkin: {\n    elems: {a: 18440000.*1000, Eccen: 0.3359, nu: 273.076 *dr, \n            MA: 291.841 *dr, i: 151.536 *dr, Omega: 45.402 *dr, N0: 0.3863203 /360},\n    prec:  {ep0:  0,\n            fNu: fq/375.76, fOmega: fq/406.45},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nKari: {\n    elems: {a: 22093000.*1000, Eccen: 0.4756, nu: 163.935 *dr, \n            MA: 286.021 *dr, i: 156.067 *dr, Omega: 281.211 *dr, N0: 0.2924012 /360},\n    prec:  {ep0:  0,\n            fNu: fq/228.81, fOmega: fq/270.06},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nLoge: {\n    elems: {a: 23059000.*1000, Eccen: 0.1862, nu: 32.821 *dr, \n            MA: 337.237 *dr, i: 167.689 *dr, Omega: 343.811 *dr, N0: 0.2745228 /360},\n    prec:  {ep0:  0,\n            fNu: fq/251.72, fOmega: fq/307.35},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nSkoll: {\n    elems: {a: 17668000.*1000, Eccen: 0.4636, nu: 193.115 *dr, \n            MA: 44.965 *dr, i: 161.010 *dr, Omega: 296.623 *dr, N0: 0.4099120 /360},\n    prec:  {ep0:  0,\n            fNu: fq/286.68, fOmega: fq/369.06},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nSurtur: {\n    elems: {a: 22941000.*1000, Eccen: 0.4459, nu: 303.662 *dr, \n            MA: 136.191 *dr, i: 169.688 *dr, Omega: 236.537 *dr, N0: 0.2775384 /360},\n    prec:  {ep0:  0,\n            fNu: fq/202.95, fOmega: fq/259.66},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nJarnsaxa: {\n    elems: {a: 19354000.*1000, Eccen: 0.2178, nu: 237.422 *dr, \n            MA: 198.750 *dr, i: 163.649 *dr, Omega: 22.519 *dr, N0: 0.3575194 /360},\n    prec:  {ep0:  0,\n            fNu: fq/312.48, fOmega: fq/396.92},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nGreip: {\n    elems: {a: 18457000.*1000, Eccen: 0.3146, nu: 152.160 *dr, \n            MA: 314.541 *dr, i: 174.800 *dr, Omega: 349.350 *dr, N0: 0.3841491 /360},\n    prec:  {ep0:  0,\n            fNu: fq/280.23, fOmega: fq/385.90},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nTarqeq: {\n    elems: {a: 17962000.*1000, Eccen: 0.1675, nu: 34.767 *dr, \n            MA: 161.020 *dr, i: 46.291 *dr, Omega: 83.291 *dr, N0: 0.4067094 /360},\n    prec:  {ep0:  0,\n            fNu: fq/896.54, fOmega: fq/593.15},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\n\"S/2004 S 7\": {\n    elems: {a: 21000000.*1000, Eccen: 0.5290, nu: 84.036 *dr, \n            MA: 79.762 *dr, i: 165.693 *dr, Omega: 341.236 *dr, N0: 0.3157314 /360},\n    prec:  {ep0:  0,\n            fNu: fq/211.18, fOmega: fq/273.22},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\n\"S/2004 S 12\": {\n    elems: {a: 19886000.*1000, Eccen: 0.3268, nu: 87.128 *dr, \n            MA: 1.599 *dr, i: 165.261 *dr, Omega: 307.942 *dr, N0: 0.3441326 /360},\n    prec:  {ep0:  0,\n            fNu: fq/273.22, fOmega: fq/351.49},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\n\"S/2004 S 13\": {\n    elems: {a: 18406000.*1000, Eccen: 0.2591, nu: 346.186 *dr, \n            MA: 41.077 *dr, i: 168.798 *dr, Omega: 205.701 *dr, N0: 0.3856043 /360},\n    prec:  {ep0:  0,\n            fNu: fq/302.01, fOmega: fq/409.39},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\n\"S/2004 S 17\": {\n    elems: {a: 19448000.*1000, Eccen: 0.1795, nu: 180.792 *dr, \n            MA: 228.545 *dr, i: 168.239 *dr, Omega: 26.664 *dr, N0: 0.3548169 /360},\n    prec:  {ep0:  0,\n            fNu: fq/300.99, fOmega: fq/397.14},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\n\"S/2006 S 1\": {\n    elems: {a: 18780000.*1000, Eccen: 0.1412, nu: 154.950 *dr, \n            MA: 96.596 *dr, i: 156.180 *dr, Omega: 336.641 *dr, N0: 0.3741294 /360},\n    prec:  {ep0:  0,\n            fNu: fq/405.14, fOmega: fq/453.57},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\n\"S/2006 S 3\": {\n    elems: {a: 22428000.*1000, Eccen: 0.3792, nu: 188.728 *dr, \n            MA: 167.147 *dr, i: 158.631 *dr, Omega: 206.993 *dr, N0: 0.2868177 /360},\n    prec:  {ep0:  0,\n            fNu: fq/245.54, fOmega: fq/287.39},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\n\"S/2007 S 2\": {\n    elems: {a: 16718000.*1000, Eccen: 0.1791, nu: 57.720 *dr, \n            MA: 84.066 *dr, i: 174.057 *dr, Omega: 111.277 *dr, N0: 0.4454603 /360},\n    prec:  {ep0:  0,\n            fNu: fq/342.95, fOmega: fq/496.45},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\n\"S/2007 S 3\": {\n    elems: {a: 18938000.*1000, Eccen: 0.1853, nu: 111.854 *dr, \n            MA: 292.691 *dr, i: 177.595 *dr, Omega: 276.824 *dr, N0: 0.3681825 /360},\n    prec:  {ep0:  0,\n            fNu: fq/1079.63, fOmega: fq/161352.07},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n}\n        }\n        \n \n        super(params);\n    }\n}\n\nexport default Saturn;","import PlanetarySystem from \"../animations/PlanetarySystem\";\nimport Constants from \"../std/Constants\";\n\nclass Uranus extends PlanetarySystem { \n    constructor(params) {\n        \n        const dr = Math.PI/180;\n        const yr = Constants.CENTURY/100;\n        const fq = 2*Math.PI/yr;\n        \n        params.name       = \"Uranus\";\n        params.planetName = \"Uranus\";\n        params.rotationPhase = 0;\n        params.rotationPeriod = -0.71833 * 86400;\n        params.rotAxis = {ra: 257.311 *dr, dec: -15.175 *dr},\n        params.texture = {\n            map:\"images/2k_uranus.jpg\",\n            src:\"https://www.solarsystemscope.com/textures/download/2k_uranus.jpg\",\n            copyright:\"https://creativecommons.org/licenses/by/4.0/\"\n\n        };\n        params.moonInfo = {\nAriel: {\n    elems: {a: 190900.*1000, Eccen: 0.0012, nu: 115.349 *dr, \n            MA: 39.481 *dr, i: 0.041 *dr, Omega: 22.394 *dr, N0: 142.8356579 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/28.788, fOmega: fq/57.248},\n    frame: {type: \"Equatorial\"},\n    render: {frac: 0.05, color: 0xFFFF00},\n    size:   100000\n},\nUmbriel: {\n    elems: {a: 266000.*1000, Eccen: 0.0039, nu: 84.709 *dr, \n            MA: 12.469 *dr, i: 0.128 *dr, Omega: 33.485 *dr, N0: 86.8688879 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/63.146, fOmega: fq/126.951},\n    frame: {type: \"Equatorial\"},\n    render: {frac: 0.05, color: 0xFFFF00},\n    size:   100000\n},\nTitania: {\n    elems: {a: 436300.*1000, Eccen: 0.0011, nu: 284.400 *dr, \n            MA: 24.614 *dr, i: 0.079 *dr, Omega: 99.771 *dr, N0: 41.3514246 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/161.525, fOmega: fq/195.369},\n    frame: {type: \"Equatorial\"},\n    render: {frac: 0.05, color: 0xFFFF00},\n    size:   100000\n},\nOberon: {\n    elems: {a: 583500.*1000, Eccen: 0.0014, nu: 104.400 *dr, \n            MA: 283.088 *dr, i: 0.068 *dr, Omega: 279.771 *dr, N0: 26.7394888 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/161.52, fOmega: fq/195.37},\n    frame: {type: \"Equatorial\"},\n    render: {frac: 0.04, color: 0xFFFF00},\n    size:   100000\n},\nMiranda: {\n    elems: {a: 129900.*1000, Eccen: 0.0013, nu: 68.312 *dr, \n            MA: 311.330 *dr, i: 4.338 *dr, Omega: 326.438 *dr, N0: 254.6906576 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/8.913, fOmega: fq/17.727},\n    frame: {type: \"Equatorial\"},\n    render: {frac: 0.04, color: 0xFFFF00},\n    size:   100000\n},\nCordelia: {\n    elems: {a: 49800.*1000, Eccen: 0.0003, nu: 136.827 *dr, \n            MA: 254.805 *dr, i: 0.085 *dr, Omega: 38.374 *dr, N0: 1074.5183162 /360},\n    prec:  {ep0:  (-14*365-3 + 18.5) * 86400,\n            fNu: fq/0.328, fOmega: fq/0.657},\n    frame: {type: \"Equatorial\"},\n    render: {frac: 0.04, color: 0xFFFF00},\n    size:   100000\n},\nOphelia: {\n    elems: {a: 53800.*1000, Eccen: 0.0099, nu: 17.761 *dr, \n            MA: 116.259 *dr, i: 0.104 *dr, Omega: 164.048 *dr, N0: 956.4283330 /360},\n    prec:  {ep0:  (-14*365-3 + 18.5) * 86400,\n            fNu: fq/0.431, fOmega: fq/0.862},\n    frame: {type: \"Equatorial\"},\n    render: {frac: 0.04, color: 0xFFFF00},\n    size:   100000\n},\nBianca: {\n    elems: {a: 59200.*1000, Eccen: 0.0009, nu: 8.293 *dr, \n            MA: 138.486 *dr, i: 0.193 *dr, Omega: 93.220 *dr, N0: 828.3879607 /360},\n    prec:  {ep0:  (-14*365-3 + 18.5) * 86400,\n            fNu: fq/0.603, fOmega: fq/1.206},\n    frame: {type: \"Equatorial\"},\n    render: {frac: 0.03, color: 0xFFFF00},\n    size:   100000\n},\nCressida: {\n    elems: {a: 61800.*1000, Eccen: 0.0004, nu: 44.236 *dr, \n            MA: 233.795 *dr, i: 0.006 *dr, Omega: 99.403 *dr, N0: 776.5824144 /360},\n    prec:  {ep0:  (-14*365-3 + 18.5) * 86400,\n            fNu: fq/0.701, fOmega: fq/1.402},\n    frame: {type: \"Equatorial\"},\n    render: {frac: 0.03, color: 0xFFFF00},\n    size:   100000\n},\nDesdemona: {\n    elems: {a: 62700.*1000, Eccen: 0.0001, nu: 183.285 *dr, \n            MA: 184.627 *dr, i: 0.113 *dr, Omega: 306.089 *dr, N0: 760.0555393 /360},\n    prec:  {ep0:  (-14*365-3 + 18.5) * 86400,\n            fNu: fq/0.737, fOmega: fq/1.474},\n    frame: {type: \"Equatorial\"},\n    render: {frac: 0.03, color: 0xFFFF00},\n    size:   100000\n},\nJuliet: {\n    elems: {a: 64400.*1000, Eccen: 0.0007, nu: 223.819 *dr, \n            MA: 244.696 *dr, i: 0.065 *dr, Omega: 200.155 *dr, N0: 730.1261349 /360},\n    prec:  {ep0:  (-14*365-3 + 18.5) * 86400,\n            fNu: fq/0.809, fOmega: fq/1.619},\n    frame: {type: \"Equatorial\"},\n    render: {frac: 0.03, color: 0xFFFF00},\n    size:   100000\n},\nPortia: {\n    elems: {a: 66100.*1000, Eccen: 0.0001, nu: 222.433 *dr, \n            MA: 218.312 *dr, i: 0.059 *dr, Omega: 260.067 *dr, N0: 701.4864814 /360},\n    prec:  {ep0:  (-14*365-3 + 18.5) * 86400,\n            fNu: fq/0.888, fOmega: fq/1.777},\n    frame: {type: \"Equatorial\"},\n    render: {frac: 0.02, color: 0xFFFF00},\n    size:   100000\n},\nRosalind: {\n    elems: {a: 69900.*1000, Eccen: 0.0001, nu: 140.477 *dr, \n            MA: 136.181 *dr, i: 0.279 *dr, Omega: 12.847 *dr, N0: 644.6304183 /360},\n    prec:  {ep0:  (-14*365-3 + 18.5) * 86400,\n            fNu: fq/1.081, fOmega: fq/2.163},\n    frame: {type: \"Equatorial\"},\n    render: {frac: 0.02, color: 0xFFAAAA},\n    size:   100000\n},\nBelinda: {\n    elems: {a: 75300.*1000, Eccen: 0.0001, nu: 42.406 *dr, \n            MA: 357.224 *dr, i: 0.031 *dr, Omega: 279.337 *dr, N0: 577.3602885 /360},\n    prec:  {ep0:  (-14*365-3 + 18.5) * 86400,\n            fNu: fq/1.397, fOmega: fq/2.796},\n    frame: {type: \"Equatorial\"},\n    render: {frac: 0.02, color: 0xFFFF00},\n    size:   100000\n},\nPuck: {\n    elems: {a: 86000.*1000, Eccen: 0.0001, nu: 177.094 *dr, \n            MA: 245.796 *dr, i: 0.319 *dr, Omega: 268.734 *dr, N0: 472.5445878 /360},\n    prec:  {ep0:  (-14*365-3 + 18.5) * 86400,\n            fNu: fq/2.224, fOmega: fq/4.448},\n    frame: {type: \"Equatorial\"},\n    render: {frac: 0.02, color: 0xFFFF00},\n    size:   100000\n},\nPerdita: {\n    elems: {a: 76417.*1000, Eccen: 0.0116, nu: 253.925 *dr, \n            MA: 192.405 *dr, i: 0.470 *dr, Omega: 309.376 *dr, N0: 564.2469590 /360},\n    prec:  {ep0:  (3*365 + 237.5)*86400,\n            fNu: fq/1.479, fOmega: fq/2.958},\n    frame: {type: \"Equatorial\"},\n    render: {frac: 0.02, color: 0xFFFF00},\n    size:   100000\n},\nMab: {\n    elems: {a: 97736.*1000, Eccen: 0.0025, nu: 249.565 *dr, \n            MA: 273.769 *dr, i: 0.134 *dr, Omega: 350.737 *dr, N0: 390.0501070 /360},\n    prec:  {ep0:  (3*365 + 237.5)*86400,\n            fNu: fq/3.502, fOmega: fq/7.004},\n    frame: {type: \"Equatorial\"},\n    render: {frac: 0.02, color: 0xFFFF00},\n    size:   100000\n},\nCupid: {\n    elems: {a: 74392.*1000, Eccen: 0.0013, nu: 247.608 *dr, \n            MA: 163.830 *dr, i: 0.099 *dr, Omega: 182.793 *dr, N0: 587.4436490 /360},\n    prec:  {ep0:  (3*365 + 237.5)*86400,\n            fNu: fq/1.346, fOmega: fq/2.693},\n    frame: {type: \"Equatorial\"},\n    render: {frac: 0.02, color: 0xFFFF00},\n    size:   100000\n},\nCaliban: {\n    elems: {a: 7231100.*1000, Eccen: 0.1812, nu: 354.339 *dr, \n            MA: 7.271 *dr, i: 141.529 *dr, Omega: 171.189 *dr, N0: 0.6209758 /360},\n    prec:  {ep0:  (12*3600),\n            fNu: fq/8936.31, fOmega: fq/6445.52},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nSycorax: {\n    elems: {a: 12179400.*1000, Eccen: 0.5219, nu: 20.103 *dr, \n            MA: 266.583 *dr, i: 159.420 *dr, Omega: 263.034 *dr, N0: 0.2794217 /360},\n    prec:  {ep0:  (12*3600),\n            fNu: fq/1393.43, fOmega: fq/1863.29},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nProspero: {\n    elems: {a: 16276800.*1000, Eccen: 0.4445, nu: 174.152 *dr, \n            MA: 233.586 *dr, i: 151.830 *dr, Omega: 319.003 *dr, N0: 0.1819679 /360},\n    prec:  {ep0:  (12*3600),\n            fNu: fq/1155.47, fOmega: fq/1370.39},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nSetebos: {\n    elems: {a: 17420400.*1000, Eccen: 0.5908, nu: 359.953 *dr, \n            MA: 179.449 *dr, i: 158.235 *dr, Omega: 250.235 *dr, N0: 0.1617921 /360},\n    prec:  {ep0:  (12*3600),\n            fNu: fq/823.91, fOmega: fq/1044.20},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nStephano: {\n    elems: {a: 8007400.*1000, Eccen: 0.2248, nu: 14.956 *dr, \n            MA: 270.163 *dr, i: 143.819 *dr, Omega: 191.411 *dr, N0: 0.5313866 /360},\n    prec:  {ep0:  (12*3600),\n            fNu: fq/5484.23, fOmega: fq/5182.20},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nTrinculo: {\n    elems: {a: 8505200.*1000, Eccen: 0.2194, nu: 158.688 *dr, \n            MA: 180.374 *dr, i: 166.971 *dr, Omega: 193.755 *dr, N0: 0.4803847 /360},\n    prec:  {ep0:  (12*3600),\n            fNu: fq/2592.77, fOmega: fq/4273.04},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nFrancisco: {\n    elems: {a: 4282900.*1000, Eccen: 0.1324, nu: 140.644 *dr, \n            MA: 3.202 *dr, i: 147.250 *dr, Omega: 100.738 *dr, N0: 1.3478663 /360},\n    prec:  {ep0:  (12*3600),\n            fNu: fq/12574.36, fOmega: fq/14080.40},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nMargaret: {\n    elems: {a: 14146700.*1000, Eccen: 0.6772, nu: 90.017 *dr, \n            MA: 322.187 *dr, i: 57.367 *dr, Omega: 7.067 *dr, N0: 0.2167366 /360},\n    prec:  {ep0:  (12*3600),\n            fNu: fq/12057739.22, fOmega: fq/987.08},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nFerdinand: {\n    elems: {a: 20430000.*1000, Eccen: 0.3993, nu: 156.298 *dr, \n            MA: 26.163 *dr, i: 169.793 *dr, Omega: 217.350 *dr, N0: 0.1290311 /360},\n    prec:  {ep0:  (12*3600),\n            fNu: fq/747.30, fOmega: fq/1001.70},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n}\n        };        \n        super(params);\n    }\n}\n\nexport default Uranus;","import PlanetarySystem from \"../animations/PlanetarySystem\";\nimport Constants from \"../std/Constants\";\n\nclass Neptune extends PlanetarySystem { \n    constructor(params) {\n        \n        const dr = Math.PI/180;\n        const yr = Constants.CENTURY/100;\n        const fq = 2*Math.PI/yr;\n        \n        params.name       = \"Neptune\";\n        params.planetName = \"Neptune\";\n        params.rotationPhase = 0;\n        params.rotationPeriod = 0.67125 * 86400;\n        params.rotAxis = {ra: 299.3 *dr, dec: 42.95 *dr},\n        params.texture = {\n            map:\"images/2k_neptune.jpg\",\n            src:\"https://www.solarsystemscope.com/textures/download/2k_neptune.jpg\",\n            copyright:\"https://creativecommons.org/licenses/by/4.0/\"\n        };\n        params.moonInfo = {\nTriton: {\n    elems: {a: 354759.*1000, Eccen: 0.0000, nu: 66.142 *dr, \n            MA: 352.257 *dr, i: 156.865 *dr, Omega: 177.608 *dr, N0: 61.2572638 /360},\n    prec:  {ep0:  12*3600,\n            fNu: fq/386.371, fOmega: fq/687.446},\n    frame: {type: \"Laplace\", ra: 299.456 *dr, dec: 43.414 *dr},\n    render: {frac: 0.2, color: 0xFF0000},\n    size:   100000\n},\nNereid: {\n    elems: {a: 5513818.*1000, Eccen: 0.7507, nu: 281.117 *dr, \n            MA: 216.692 *dr, i: 7.090 *dr, Omega: 335.570 *dr, N0: 0.9996276 /360},\n    prec:  {ep0:  12*3600,\n            fNu: fq/8091.45, fOmega: fq/9455.73},\n    frame: {type: \"Laplace\", ra: 269.302 *dr, dec: 69.117 *dr},\n    render: {frac: 0.1, color: 0xFFFF00},\n    size:   100000\n},\nNaiad: {\n    elems: {a: 48227.*1000, Eccen: 0.0003, nu: 2.045 *dr, \n            MA: 30.035 *dr, i: 4.691 *dr, Omega: 42.279 *dr, N0: 1222.8435847 /360},\n    prec:  {ep0:  12*3600,\n            fNu: fq/0.289, fOmega: fq/0.575},\n    frame: {type: \"Laplace\", ra: 299.431 *dr, dec: 42.940 *dr},\n    render: {frac: 0.06, color: 0xFFFF00},\n    size:   100000\n},\nThalassa: {\n    elems: {a: 50074.*1000, Eccen: 0.0002, nu: 237.065 *dr, \n            MA: 262.923 *dr, i: 0.135 *dr, Omega: 145.980 *dr, N0: 1155.7559749 /360},\n    prec:  {ep0:  12*3600,\n            fNu: fq/0.327, fOmega: fq/0.654},\n    frame: {type: \"Laplace\", ra: 299.431 *dr, dec: 42.939 *dr},\n    render: {frac: 0.06, color: 0xFFFF00},\n    size:   100000\n},\nDespina: {\n    elems: {a: 52526.*1000, Eccen: 0.0002, nu: 176.857 *dr, \n            MA: 230.812 *dr, i: 0.068 *dr, Omega: 77.060 *dr, N0: 1075.7330674 /360},\n    prec:  {ep0:  12*3600,\n            fNu: fq/0.387, fOmega: fq/0.774},\n    frame: {type: \"Laplace\", ra: 299.431 *dr, dec: 42.937 *dr},\n    render: {frac: 0.06, color: 0xFFFF00},\n    size:   100000\n},\nGalatea: {\n    elems: {a: 61953.*1000, Eccen: 0.0001, nu: 343.011 *dr, \n            MA: 65.999 *dr, i: 0.034 *dr, Omega: 37.247 *dr, N0: 839.6613030 /360},\n    prec:  {ep0:  12*3600,\n            fNu: fq/0.690, fOmega: fq/1.380},\n    frame: {type: \"Laplace\", ra: 299.430 *dr, dec: 42.925 *dr},\n    render: {frac: 0.06, color: 0xFFFF00},\n    size:   100000\n},\nLarissa: {\n    elems: {a: 73548.*1000, Eccen: 0.0014, nu: 249.891 *dr, \n            MA: 166.246 *dr, i: 0.205 *dr, Omega: 308.127 *dr, N0: 649.0540770 /360},\n    prec:  {ep0:  12*3600,\n            fNu: fq/1.257, fOmega: fq/2.516},\n    frame: {type: \"Laplace\", ra: 299.429 *dr, dec: 42.897 *dr},\n    render: {frac: 0.06, color: 0xFFFF00},\n    size:   100000\n},\nProteus: {\n    elems: {a: 117646.*1000, Eccen: 0.0005, nu: 67.968 *dr, \n            MA: 250.938 *dr, i: 0.075 *dr, Omega: 315.131 *dr, N0: 320.7656245 /360},\n    prec:  {ep0:  12*3600,\n            fNu: fq/6.380, fOmega: fq/12.727},\n    frame: {type: \"Laplace\", ra: 299.406 *dr, dec: 42.432 *dr},\n    render: {frac: 0.06, color: 0xFFFF00},\n    size:   100000\n},\n\"S/2004 N 1\": {\n    elems: {a: 105284.*1000, Eccen: 0.0000, nu: 0.000 *dr, \n            MA: 302.652 *dr, i: 0.000 *dr, Omega: 0.000 *dr, N0: 378.9061402 /360},\n    prec:  {ep0:  12*3600,\n            fNu: fq/0.000, fOmega: fq/0.000},\n    frame: {type: \"Laplace\", ra: 299.373 *dr, dec: 42.944 *dr},\n    render: {frac: 0.06, color: 0xFFFF00},\n    size:   100000\n},\nHalimede: {\n    elems: {a: 16681000.*1000, Eccen: 0.2909, nu: 162.119 *dr, \n            MA: 105.258 *dr, i: 112.898 *dr, Omega: 217.288 *dr, N0: 0.1915578 /360},\n    prec:  {ep0:  (366+365+160)*86400,\n            fNu: fq/5673.19, fOmega: fq/18501.48},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nPsamathe: {\n    elems: {a: 46705000.*1000, Eccen: 0.4617, nu: 144.158 *dr, \n            MA: 190.027 *dr, i: 137.679 *dr, Omega: 298.074 *dr, N0: 0.0394359 /360},\n    prec:  {ep0:  (366+365+160)*86400,\n            fNu: fq/1477.62, fOmega: fq/1304.72},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nSao: {\n    elems: {a: 22619000.*1000, Eccen: 0.2827, nu: 65.047 *dr, \n            MA: 168.139 *dr, i: 49.907 *dr, Omega: 60.354 *dr, N0: 0.1233230 /360},\n    prec:  {ep0:  (366+365+160)*86400,\n            fNu: fq/436880.78, fOmega: fq/5382.39},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nLaomedeia: {\n    elems: {a: 23613000.*1000, Eccen: 0.4339, nu: 140.107 *dr, \n            MA: 285.863 *dr, i: 34.049 *dr, Omega: 59.124 *dr, N0: 0.1133637 /360},\n    prec:  {ep0:  (366+365+160)*86400,\n            fNu: fq/2245.08, fOmega: fq/3325.44},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nNeso: {\n    elems: {a: 50258000.*1000, Eccen: 0.4243, nu: 86.441 *dr, \n            MA: 260.648 *dr, i: 131.265 *dr, Omega: 49.151 *dr, N0: 0.0364349 /360},\n    prec:  {ep0:  (366+365+160)*86400,\n            fNu: fq/23936.86, fOmega: fq/1094.07},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n}\n        };        \n        super(params);\n    }\n}\n\nexport default Neptune;","import PlanetarySystem from \"../animations/PlanetarySystem\";\nimport Constants from \"../std/Constants\";\n\nclass Pluto extends PlanetarySystem { \n    constructor(params) {\n        \n        const dr = Math.PI/180;\n        const yr = Constants.CENTURY/100;\n        const fq = 2*Math.PI/yr;\n        \n        params.name       = \"Pluto\";\n        params.planetName = \"Pluto\";\n        params.rotationPhase = 0;\n        params.rotationPeriod = -6.387230 * 86400;\n        params.rotAxis = {ra: 132.993 *dr, dec: -6.163 *dr};\n\n        params.texture = {\n          map: \"images/pluto_texture_map_16k_by_fargetanik_dandu2y-fullview.jpg\",\n          src: \"https://www.deviantart.com/fargetanik/art/Pluto-Texture-Map-16k-643938442\",\n          copyright: \"Creative Commons Attribution-Share Alike License 3.0\"\n          \n        };\n        params.moonInfo = {\n            Charon: {\n                elems: {                \n                    a:    19591000.,\t\n                    Eccen:       0.0002, \n                    nu:        146.106 *dr,\t \n                    MA:        131.070 *dr,\t\n                    i:           0.080 *dr,\t\n                    Omega:      26.928 *dr,                    \n                    N0:         -56.3625210/360\n                },\n                prec: {\n                    ep0:   0,\n                    fNu:    fq/10178.040,\n                    fOmega: fq/ 9020.398\n                },\n                size: {\n                    radius: 1212000 / 2\n                },\n                render: {\n                    texture: {\n                        map: \"images/charon_map_magentameteorite_art.jpg\",\n                        src: \"https://www.deviantart.com/magentameteorite/art/Charon-Texture-Map-794040506\",\n                        copyright:\"Quote: 'give me credit if u want to use this map'\"\n                    },\n                    frac:    0.51  // Actual ratio\n                }\n            },\n            Nix: {\n                elems: {\n                    a:      48671000.,\n                    Eccen:         0.0000,\n                    nu:          324.463 *dr,\n                    MA:          284.405 *dr,\n                    i:             0.000,\n                    Omega:       203.400 *dr,\t\n                    N0:           -14.4841304/360\n                },\n                size: {\n                    radius: 37200 / 2,  // Cube root of ellipsoid\n                    ellipsoid: [49800/2,33200/2,31100/2]\n                },\n                render: {\n                    frac: 0.15\n                }\n            },\n            \n            Hydra: { \n                elems: {\n                    a:    64698000.,\n                    Eccen:       0.0056,\n                    nu:        153.307 *dr,\n                    MA:        326.678 *dr,\n                    i:           0.304 *dr,\n                    Omega:     113.173 *dr,\n                    N0:          -9.4235386/360\n                },\n                prec: {\n                    ep0:       0,\n                    fNu:    fq/ 7.19,\n                    fOmega: fq/14.38\n                },\n                size: {\n                    radius: 38400 /2 ,\n                    ellipsoid: [50900/2, 36100/2, 30900/2]\n                },\n                render: {\n                    frac: 0.15\n                }\n            },\n            Kerberos: {\n                elems: { \n                    a:       57729000.,\n                    Eccen:          0.0000,\n                    nu:           160.629 *dr,\n                    MA:           161.061 *dr,\n                    i:              0.426 *dr,\n                    Omega:        305.871 *dr,\n                    N0:            -11.1913026/360,\n                },\n                prec: {\n                   ep0: 0,\n                   fNu:    0.000,\n                   fOmega: fq/9.27\n               },\n               size: {\n                   radius:    12.0/2 ,\n                   ellipsoid:  [19000/2, 10000/2, 9000/2]\n               },\n               render: {\n                   frac: 0.1\n               }\n            },\n            Styx: {\n                elems: {\n                    a:      42393000.,\n                    Eccen:         0.0006,\n                    nu:          330.244 *dr,\n                    MA:          194.546 *dr,\n                    i:             0.080 *dr,\n                    Omega:        26.956 *dr,\n                    N0:           -17.8551357 / 360,\n                },\n                prec: {\n                   ep0: \t    0,\n                   fNu:    fq/3710.58,\n                   fOmega: fq/5162.64\n                },\n                size: {\n                    radius: 10500/2,\n                    ellipsoid: [16000/2, 9000/2, 8000/2]\n                },\n                render: {\n                    frac: 0.1\n                }\n            }\n        };\n        \n        super(params);\n    }\n}\n\nexport default Pluto;","import LocalGalaxy from \"./LocalGalaxy\";\nimport SolarSystem from \"./SolarSystem\";\nimport Earth       from \"./Earth\";\nimport Mercury     from \"./Mercury\";\nimport Venus       from \"./Venus\";\nimport Mars        from \"./Mars\";\nimport Jupiter     from \"./Jupiter\";\nimport Saturn      from \"./Saturn\";\nimport Uranus      from \"./Uranus\";\nimport Neptune     from \"./Neptune\";\nimport Pluto       from \"./Pluto\";\n\nclass AnimationFactory {\n  \n    constructor(){\n        this.cache = {};\n    };\n    \n    available = {\n        mercury: 1,\n        venus: 1,\n        earth: 1,\n        mars: 1,\n        jupiter: 1,\n        saturn: 1,\n        uranus: 1,\n        neptune: 1,\n        pluto: 1,\n        \"solar system\": 1,\n        \"local galactic neighborhood\": 1,\n        \"the earth and environs\": 1\n    };\n    \n    getAnimation(name, args) {\n        name = name.toLowerCase();\n        if (!this.cache[name]) {\n            switch (name) {\n              case \"mercury\":\n                this.cache[name] = new Mercury(args);\n                break;\n                \n              case \"venus\":\n                this.cache[name] = new Venus(args);\n                break;\n                \n              case \"earth\":\n                this.cache[name] = new Earth(args);\n                break;\n                \n              case \"mars\":\n                this.cache[name] = new Mars(args);\n                break;\n                \n              case \"jupiter\":\n                this.cache[name] = new Jupiter(args);\n                break;\n                \n              case \"saturn\":\n                this.cache[name] = new Saturn(args);\n                break;\n                \n              case \"uranus\":\n                this.cache[name] = new Uranus(args);\n                break;\n                \n              case \"neptune\":\n                this.cache[name] = new Neptune(args);\n                break;\n                \n              case \"pluto\":\n                this.cache[name] = new Pluto(args);\n                break;\n                \n              case \"solar system\":                    \n                this.cache[name] = new SolarSystem(args);\n                break;\n                \n              case \"local galactic neighborhood\":\n                this.cache[name] = new LocalGalaxy(args);\n                break;\n                \n              case \"the earth and environs\":\n                this.cache[name] = new Earth(args);\n                break;\n            }\n            \n        }\n        return this.cache[name];\n    }\n    \n    isAnimation(name) {\n        return this.available[name.toLowerCase()];\n    }\n}\nconst singleton = new AnimationFactory();\n\n// Export the instance not the class.\nexport default singleton;","function UnitLegend() {\n    return (\n  <div>\n    <strong>Unit legend:</strong>\n    <ul>\n        <li key=\"1\"> au: astronomical units </li> \n        <li key=\"2\"> au/day: astronomical units per day </li>\n        <li key=\"3\"> <strong>d: degrees (&deg;)</strong> </li>\n        <li key=\"4\"> day: days </li>\n        <li key=\"5\"> jd: Julian days </li>\n        <li key=\"6\"> <strong>kg: kilograms </strong></li>\n        <li key=\"7\"> km/s: kilometers/second </li>\n        <li key=\"8\"> <strong>m: meters </strong></li>\n        <li key=\"9\"> <strong>m/s: meters/second</strong> </li>     \n        <li key=\"10\"> Me: Earth masses </li>            \n        <li key=\"11\"> Ms: Solar masses </li>\n        <li key=\"12\"> rad: radians</li>            \n        <li key=\"13\"> rE: Earth radii </li> \n        <li key=\"14\"> <strong>s: seconds</strong></li>\n        <li key=\"15\"> y: years </li>    \n    </ul>\n    Any of these can be used as suffixes to values.\n    Units in <strong>bold</strong> are assumed if no units are specified.\n  </div>\n\n    )\n}\n\nexport default UnitLegend;\n\n","import {Component} from \"react\";\nimport Util from \"../std/Util.js\";\n\nclass Units extends Component {\n    \n    constructor(args) {\n        super(args);\n        this.units = args.units;\n        this.name  = args.name;\n        this.row   = args.row;\n    }\n    \n    render() {\n        if (this.units == null || this.units.length == 0) {\n            return <span></span>;\n        }\n        const elems = [];\n        const here = this;\n        elems.push(\n          <button \n            key=\"0\" \n            onClick={here.row.cycleUnits.bind(here.row)}\n            hidden={!this.props.value}>\n               &gt;&gt;\n          </button>\n        );\n        elems.push(<span key=\"-1\">&nbsp;&nbsp;</span>)\n        for (var i=0; i<this.units.length; i += 1) {\n            const unit = this.units[i];\n            if (unit.unit == 'd' || (unit.scale == 1  && unit.unit != 'rad')) {\n                elems.push(<span key={i+1}><strong>{unit.unit} </strong></span>);\n            } else {\n                elems.push(<span key={i+1}>{unit.unit} </span>);\n            }\n        }\n        \n        return <span>{elems}</span>;\n    }\n}\n\nexport default Units;\n\n","function status(msg) {\n    document.getElementById(\"statusContent\").innerHTML = msg;\n}\nexport default status;\n\n\n","import {Component} from \"react\";\nimport Units from \"./Units.js\";\nimport status from \"./Status.js\";\n\nimport ParameterFactory from \"../orbits/ParameterFactory.js\";\nimport Parameter from \"../orbits/Parameter.js\";\n\nimport Util from \"../std/Util.js\";\n\nclass Row extends Component {\n    constructor(args) {\n        super(args);\n        this.param = args.param;\n        this.validated = false;\n        this.unitIndex = -1;\n        this.parameter =  null;\n        this.showingUnit = false;\n        this.state = {value: '', computed: false};\n        this.values = null;\n    }\n    \n    // This is called every time the value changes.\n    handleChange(event) {\n        this.validated = false;\n        this.setState({value: event.target.value});\n    }\n    \n    // This is only called when the user enters a return.\n    validate(val) {\n        var initVal = val;\n        // Check if this is just a unit change.\n        if (this.unitIndex >= 0  && this.values) {\n            if (val == this.values[this.unitIndex]) {\n                this.validated = true;\n                return;\n            }\n        }\n        this.parameter = null;\n        this.unitIndex = -1;\n        if (this.state.computed) {\n            this.setState({computed: false});\n        }\n        this.values = null;\n        if (val == null || val.length == 0) {\n            this.validated = false;\n            return;\n        }\n        \n        val = val.trim();\n        \n        // Allow commas as separators.\n        // Get rid of [] that may have been displayed.\n        val = val.replace(/,/g, ' ');\n        val = val.replace('[', ' ');\n        val = val.replace(']', ' ');\n\n        // Replace multiple spaces (or tab or ...) with a single space.\n        val = val.replace(/\\s+/g, \" \");\n        var elems = val.split(\" \");\n        var dim = null;\n        if (elems.length === 2 || elems.length === 4 || elems.length === 10) {\n            dim = elems.pop().toLowerCase();\n        }\n        var unit = null;\n        if (dim && this.param.units) {            \n            this.unitIndex = -1;\n            var i;\n            for (i = 0; i < this.param.units.length; i += 1) {\n                const xunit = this.param.units[i];\n                if (xunit.unit.toLowerCase() === dim) {\n                    unit = this.param.units[i];\n                    this.unitIndex = i;\n                    break;\n                }\n            }\n            \n            if (this.unitIndex < 0) {\n                status(\"Error: Unknown unit:\"+dim+\" for parameter \"+this.param.name+\". Last token ignored.\");\n                return;\n            }\n        }\n        if (this.unitIndex < 0 && this.param.units) {\n            this.unitIndex = this.getDftUnit();\n            unit = this.param.units[this.unitIndex];\n        }\n        \n        var scale = 1;\n        var offset = 0;\n        if (unit) {\n            scale = unit.scale;\n            if (unit.offset) {\n                offset = unit.offset;\n            }\n        }\n        var p;\n        if (elems.length === 1) {\n            if (this.param.dim !== Parameter.SCALAR) {\n                status(\"Scalar specification for non-scalar parameter\");\n                return;\n            }\n            var val = elems[0];\n            if (isNaN(val)) {\n                status(\"Not a numerical value\");\n                return;\n            }\n            val = (Number.parseFloat(val)-offset)*scale;\n            this.parameter = ParameterFactory.genParam(this.param.name, \n                               val, unit);\n\n        } else if (elems.length === 3) {\n            if (this.param.dim !== Parameter.VECTOR) {\n                status(\"Vector specification for non-vector\");\n                return;\n            }\n            if (isNaN(elems[0])  || isNaN(elems[1] || isNaN(elems[2]))) {\n                status(\"Not a numeric vector\");\n                return;\n            }\n            this.parameter = ParameterFactory.genParam(this.param.name,\n                    [Number.parseFloat(elems[0]) * scale,\n                     Number.parseFloat(elems[1]) * scale,\n                     Number.parseFloat(elems[2]) * scale], unit);\n            \n        } else {\n            status(\"Unexpected number of tokens in parameter:\" + elems.length);\n            return;\n        }\n        // Now generate the values for all of the units.\n        if (unit) {\n            // Pass the input value so that it can be used for the current\n            // unit\n            this.genValues(initVal);\n        }\n        this.validated = true;\n        status(\"\");\n    }\n    \n    genValues(input) {\n        if (!this.param.units) {\n            return;\n        }\n        const units = this.param.units;\n        this.values = [];\n        for (var i=0; i<units.length; i += 1) {\n            if (i == this.unitIndex) {\n                this.values[i] = input;\n            } else {\n                this.values[i] = this.renderToUnit(units[i]);\n            }\n        }\n    } \n    \n    getDftUnit() {\n        for (var i=0; i<this.param.units.length; i += 1) {\n            const unit = this.param.units[i];\n            if (unit.unit == \"d\" || (unit.scale == 1  && unit.unit != 'rad')) {\n                return i;\n            }\n        }\n        Util.log(\"No default unit found:\"+this.param.name);\n    }\n    \n    cycleUnits() {\n        if (!this.validated) {\n            this.validate(this.state.value);\n        }\n        if (!this.validated) {\n            status(\"Invalid entry, cannot cycle units\");\n            return;\n        }        \n        this.unitIndex = (this.unitIndex + 1)%this.param.units.length;\n        this.setState({value: this.values[this.unitIndex]});\n    }\n    \n    renderNow() {\n        return this.valuesArr[this.unitIndex] + this.param.units[this.unitIndex].unit;\n    }\n    \n    renderToUnit(unit) {\n        if (!this.parameter) {\n            return \"\";\n        }\n        const scale  = unit.scale;\n        const offset = unit.offset? unit.offset: 0;\n        \n        if (this.param.dim == Parameter.SCALAR) {\n            return this.dispScalar(this.parameter.getScalar(), 7, scale, offset)+\" \"+unit.unit;\n        } else {\n            const vec = this.parameter.getVector();\n            return \"[ \"+this.dispVector(vec, 5, scale, offset)+\" ] \"+unit.unit;\n        }\n    }\n    \n    dispScalar(val, prec, scale, offset) {\n        return (val/scale+offset).toPrecision(prec);\n    }\n    dispVector(vec, prec, scale, offset) {\n        var str = \"\";\n        var prefix = \"\";\n        for (var i=0; i<vec.length; i += 1) {\n            str += prefix + this.dispScalar(vec[i], prec, scale, offset);\n            prefix = \" \";\n        }\n        return str;\n    }\n    \n    render() {\n        const param = this.param;\n        const here = this;\n        const cname = this.state.computed? \"yellow\": \"white\";\n        return (\n                <tr key={param.name} className={cname}>\n                    <th align=\"right\">{param.name}</th>\n                    <td><input size=\"18\"\n                          value={this.state.value}\n                          onChange={this.handleChange.bind(this)}\n                          onKeyUp={\n                            (event) => {\n                              if (event.key === 'Enter') {\n                                  here.validate(event.target.value);                       \n                              }\n                             }\n                           }/></td>\n                    <td><Units row={this} value={this.state.value} name={param.name} units={param.units} /></td>\n                    <td>{param.descrip}</td>\n                </tr>\n        );\n    }\n    \n    setParameter(p) {\n        this.unitIndex = -1;\n        this.parameter = p;\n        this.validated = true;\n        if (this.param.units) {\n            \n            this.genValues(\"\");\n            this.unitIndex = this.getDftUnit() - 1;  // Might be -1, but that's ok.\n            this.cycleUnits();\n            this.setState({computed: true});\n        } else {\n            // No units\n            var dispVal;\n            if (this.param.dim == Parameter.SCALAR) {\n                dispVal = this.dispScalar(p.getScalar(), 7, 1,0);\n            } else if (this.param.dim == Parameter.VECTOR) {\n                dispVal = this.dispVector(p.getVector(), 5,1,0);\n            } else if (this.param.dim == Parameter.BLOB) {\n                dispVal = this.dispVector(p.getVector(), 4, 1, 0);\n            }\n            this.setState({value: dispVal, computed: true});\n        }\n    }\n}\n\nexport default Row;\n","\n\nimport  {Component, createRef}  from \"react\";\nimport Util             from \"../std/Util.js\";\nimport Constants        from \"../std/Constants.js\";\nimport ParameterFactory from \"../orbits/ParameterFactory.js\";\nimport Parameter        from \"../orbits/Parameter.js\";\nimport Orbit            from \"../orbits/Orbit.js\";\nimport Planets from \"../solarsystem/Planets.js\";\nimport Missions from \"../solarsystem/Missions.js\";\nimport Kepler  from \"../orbits/Kepler.js\";\n\nimport UnitLegend       from \"./UnitLegend.js\";\n\nimport Row       from \"./Row.js\";\nimport status    from \"./Status.js\";\nimport TextInput from \"../elems/TextInput.js\";\n\n\n\nclass Debug extends Component {\n    \n    constructor(props) {\n        super(props);\n    }\n    \n    diffCalc(r1, r2) {\n        let diff = [r1[0]-r2[0], r1[1]-r2[1], r1[2]-r2[2]];\n        let res = Util.mag(diff)/Math.sqrt(Util.mag(r1)*Util.mag(r2));\n        res = res.toFixed(6);\n        return res;\n    }\n\n    // It seems like the first time we create the objects we \n    // can get proper references to them, but later entries don't\n    // seem to work.  So we only compute the references the first\n    // time.  Probably something dodgy going on here.\n    render() {\n        Util.log(\"Start 1\");\n        let ecc  = 1.318976;\n        let ma   = 63.07526296164796;\n        Util.log(\"Limit is:\"+Math.acos(-1/ecc));\n        Util.log(\"Value is:\"+Kepler(ma, ecc));\n        Util.log(\"Time of encounter:\"+Util.datetime(\"1980-11-01T00:00:00\"));\n        let dr = Math.PI/180;\n        let str = \"\";\n        let miss = Missions(0);\n        str += \"Missions:\"+miss+\"\\n\";\n        str += \"Length:\"+miss.length+\"\\n\";\n        let voy = miss[1];\n        str += \"Got voyager2:\"+voy+\"\\n\";\n        str += \"Name: \"+voy.name+\" \"+voy.component+\"\\n\";\n        let chain = voy.chain;\n        \n        let time = Util.datetime(\"1986-03-30T00:00:00\");\n        let p = chain.position(time);\n        str += \"Time:\"+time+\" \"+p+\"\\n\";\n        str += \"Index is :\"+chain.index+\"\\n\";\n        time = Util.datetime(\"1986-01-01T00:00:00\");\n        str += \"Time early:\"+time+\" \"+p+\"\\n\";\n        str += \"Index is :\"+chain.index+\"\\n\";\n        for (let i=0; i<2000; i += 1) {\n            str += i+\" \"+time +\":\"+chain.position(time)+\" \\n\";\n            time += 86400;\n        }\n        return (\n        <pre> {str} </pre>        \n               );\n    }    \n}\n\nexport default Debug;","\n\nimport  {Component, createRef}  from \"react\";\nimport Util             from \"../std/Util.js\";\nimport ParameterFactory from \"../orbits/ParameterFactory.js\";\nimport Parameter        from \"../orbits/Parameter.js\";\nimport Orbit            from \"../orbits/Orbit.js\";\n\nimport UnitLegend       from \"./UnitLegend.js\";\n\nimport Row       from \"./Row.js\";\nimport status    from \"./Status.js\";\nimport TextInput from \"../elems/TextInput.js\";\n\nclass OrbitCalculator extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.params = ParameterFactory.legalParameters;\n        this.orbit  = null;\n        this.fixed = null;\n        this.varies = null;\n        this.fixedRef = [];\n        this.variesRef = [];\n        this.orbitName = null;\n        this.animFactory = null;\n        this.displayCount = 0;\n    }\n\n    // It seems like the first time we create the objects we \n    // can get proper references to them, but later entries don't\n    // seem to work.  So we only compute the references the first\n    // time.  Probably something dodgy going on here.\n    render() {\n        const here = this;\n        this.varies = [];\n        this.fixed  = [];\n        var doRef = true;\n        if (this.fixedRef.length > 0) {\n            doRef = false;\n        }\n        for (var name in this.params) {\n            const param = this.params[name];\n            var ref;\n            var elem;\n            if (doRef) {\n                ref = createRef();\n                elem = <Row ref={ref} param={param} />;\n            } else {\n                elem = <Row param={param} />;\n            }\n            if (param.varies) {\n                this.varies.push(elem);\n                if (doRef) {\n                    this.variesRef.push(ref);\n                }\n            } else {\n                this.fixed.push(elem);\n                if (doRef) {\n                    this.fixedRef.push(ref);\n                }\n            }\n        }        \n        return (\n<div>\n    Name for orbit:&nbsp; \n    <TextInput placeholder=\"Optional name\"\n       callback={function(name) {here.setOrbitName(name);}} />\n    <p />\n    Status: <div id=\"statusContent\"></div>\n    <p />\n    \n  <table><tbody>\n    <tr key=\"hdr\"><th>Name</th><th>Value</th><th>Units</th><th align=\"left\">Description</th></tr>\n    <tr key=\"div1\"><td colSpan='4' align='center'> <i>Orbit Constants</i></td></tr>\n    {this.fixed}\n    <tr key=\"div2\"><td colSpan='4' align='center'><i>Orbit Variables</i></td></tr>\n    {this.varies}\n    </tbody>\n  </table>\n  <table><tbody>\n            <tr>\n            <td key=\"1\"><button\n              onClick={this.compute.bind(this)}\n            >Compute</button></td>\n            <td key=\"2\"><button\n              onClick={this.displayOrbit.bind(this)}\n            >Render orbit</button></td>\n            <td key=\"3\"><button\n               onClick={this.clearAll.bind(this)}\n            >Clear all</button></td>\n            <td key=\"4\"><button\n               onClick={this.clearVarying.bind(this)}\n            >Clear variables only</button></td>\n            </tr>\n      </tbody>\n    </table>\n    <p />\n    <hr/>\n    <UnitLegend />\n    </div>    \n    );\n    }\n    \n    // This may be from an invoking page.\n    setAnimFactory(animFactory) {\n        this.animFactory = animFactory;\n    }\n    \n    clearAll() {\n        this.clear(this.fixedRef);\n        this.clear(this.variesRef);\n    }\n    \n    clearVarying() {\n        this.clear(this.variesRef);\n    }\n    \n    clear(rows) {\n        for (var i=0; i<rows.length; i += 1) {\n            const row = rows[i].current;\n            \n            if (row.state && row.state.value) {\n                row.setState({value: \"\", computed: false});\n            }\n            row.parameter = null;\n            row.validated = false;\n        }\n    }\n    \n    compute() {\n        // Compute all of the parameters that we can given the \n        // current inputs.\n        \n        // First make sure all current inputs are valid.\n        const all = this.fixedRef.concat(this.variesRef);\n        const orbit = new Orbit(this.orbitName);\n        for (var i=0; i<all.length; i += 1) {                    \n            const row = all[i].current;\n            if (row.state && row.state.value) {\n                if (!row.validated) {\n                    row.validate(row.state.value);\n                    if (!row.validated) {\n                        status(\"Invalid entry for parameter:\"+row.param.name);\n                        return;\n                    }\n                }\n                orbit.addParameter(row.parameter);\n            }\n        }\n        status(\"\");\n        \n        var updated = true;\n        var totalUpdates = 0;\n        while (updated) {\n            updated = false;\n            // Loop overa all parameters and see if we can update them.\n            for (var i=0; i<all.length; i += 1) {\n                const row = all[i].current;\n                if (!row.parameter) {\n                    const name = row.param.name;\n                    const newPar = orbit.getParameter(name, true);\n                    if (newPar != null) {\n                        updated = true;\n                        totalUpdates += 1;\n                        row.setParameter(newPar);\n                    }\n                }\n            }\n        }\n        this.orbit = orbit;\n        status(totalUpdates+\" parameters computed\");\n    }\n    \n    displayOrbit() {\n        this.compute();\n        this.displayCount += 1;\n        var qorb = this.orbit.quickOrbit();\n        if (qorb == null) {\n            status(\"Insufficient known orbital parameters to determine orbit\");\n        } else {\n            var name = this.orbit.getOrbitName();\n            if (!name) {\n                name = \"UserOrbit\";\n            }\n            \n            name += this.orbitCount;\n            \n            // Use the central mass to decide where to show the orbit.\n            var mass = this.orbit.getParameter(\"M\").value;\n            var mrat = mass/Constants.MSun;\n            let anim = null;\n            if (mrat > 0.999999 && mrat < 1.000001) {\n                anim = \"Solar System\";\n            } else {\n                mrat = mass/Constants.MEarth;\n                if (mrat > 0.999999 && mrat < 1.000001) {\n                    amim = \"The Earth and environs\";\n                }                \n            }\n            \n            if (anim) {\n                this.animFactory.getAnimation(anim).addExternalOrbit(name, qorb);\n            } else {\n                status(\"Central orbit mass not consistent with Earth or sun\")\n            }\n        }        \n    }\n    \n    setOrbitName(name) {\n        this.orbitName = name;\n    }\n}\n\nexport default OrbitCalculator;","import {Component, createRef} from 'react';\n\nimport Util           from \"./std/Util.js\";\nimport Settings       from \"./std/Settings.js\";\n\n// Used in animations\nimport Frame          from \"./elems/Frame.js\";\nimport UserControls   from \"./elems/UserControls.js\";\nimport animFactory    from \"./animations/AnimationFactory.js\";\nimport Debug          from \"./calc/Debug.js\";\n\n// Used in OrbitCalculator\nimport OrbitCalculator from \"./calc/OrbitCalculator.js\";\n\nimport getCoords from \"./std/Coords\";\n\nclass App extends Component {\n    \n    constructor(props) {\n        super(props);\n        \n        // The use of orbParams is a kludge to allow us to define multiple pages\n        // within the react framework easily.  While this may nominally\n        // require the download of the entire JS code for the\n        // OrbitCalculator, this will normally be cached in the browser\n        // already.  Their is a lot of mystery about routing and such,\n        // but it is unclear if that will allow us to serve two different\n        // pages simultaneously and in any case requires higher level\n        // wizardry than I am capable of.\n        this.appKey = Settings[\"app\"];\n        const url = window.location.href;\n        this.controls = createRef();\n        \n        if (this.appKey) {\n            return;\n        }\n        this.frame = null;\n    }\n    \n    onWindowResize() {\n        if (this.appKey) {\n            return;\n        }\n        const dx = window.innerWidth;\n        const dy = window.innerHeight;\n        this.frame.resize(dx, dy);\n    }\n    \n    \n    render() {\n        if (this.appKey) {\n            if (this[\"render\"+this.appKey]) {\n                return this[\"render\"+this.appKey]();\n            }\n            return;\n        }\n        \n        const dx = window.innerWidth;\n        const dy = window.innerHeight;\n        return (\n            <div>\n               <div style={{\n                  height:dx+\"px\", \n                  width:dy+\"px\"\n                }} id=\"baseCanvas\"></div>\n               <UserControls ref={this.controls} />\n            </div>\n        );\n    }\n    renderDebug() {\n        return <Debug />\n    }\n    \n    renderOrbParams() {\n        return <OrbitCalculator ref={this.controls} />;\n    }\n    \n    componentDidMount() {\n        if (this.appKey) {\n            if (this[\"componentDidMount\"+this.appKey]) {\n               this[\"componentDidMount\"+this.appKey]();\n               return;                \n            }\n            return;\n        } else {\n            window.addEventListener( 'resize', this.onWindowResize.bind(this) );\n            this.frame = new Frame({animDiv: \"baseCanvas\", size:[window.innerWidth, window.innerHeight]});\n            \n            this.solar = animFactory.getAnimation(\"Solar System\", {timeID:\"timeDisplay\", frame:this.frame});\n            \n            this.frame.setUserControls(this.controls.current);\n            this.frame.setAnimation(this.solar);\n        }\n        window.GLOBALS = {animFactory: animFactory};\n    }\n    \n    componentDidMountOrbParams() {\n        // This kludgey bit allows the calculator to send\n        // orbits to the solar system even though it's on\n        // a different page.\n        let win = window.opener;\n        if (win) {\n            this.controls.current.setAnimFactory(win.GLOBALS.animFactory);\n        }\n    }\n    \n    componentDidMountDebug() {\n        \n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}