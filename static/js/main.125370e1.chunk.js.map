{"version":3,"sources":["std/Util.js","std/Constants.js","elems/Frame.js","elems/UserControls.js","elems/Animation.js","stars/StarReader.js","stars/PrepStar.js","elems/Action.js","elems/TextInput.js","elems/OptionsSelector.js","elems/FromTo.js","stars/StarFinder.js","stars/Connecter.js","animations/LocalGalaxy.js","solarsystem/Planets.js","orbits/Parameter.js","orbits/Kepler.js","orbits/Origins.js","orbits/ParameterFactory.js","orbits/QOrb.js","orbits/Orbit.js","parsers/ParseMPC.js","solarsystem/OrbitPlot.js","solarsystem/Planet.js","solarsystem/Ring.js","elems/AngPoints.js","solarsystem/SmallBodies.js","solarsystem/Sun.js","animations/SolarSystem.js","std/Coords.js","earth/SatPrecession.js","earth/NoradReader.js","earth/Satellites.js","animations/Earth.js","orbits/TransformedOrbit.js","three/RingGeometry.js","animations/PlanetarySystem.js","animations/Mercury.js","animations/Venus.js","animations/Mars.js","animations/Jupiter.js","animations/Saturn.js","animations/Uranus.js","animations/Neptune.js","animations/Pluto.js","animations/AnimationFactory.js","calc/UnitLegend.js","calc/Units.js","calc/Status.js","calc/Row.js","calc/OrbitCalculator.js","App.js","index.js"],"names":["Util","msg","div","i","arguments","length","console","log","a","sum","c","Math","sqrt","b","Error","Array","isArray","map","x","a0","z","times","dot","n","res","angle","axis","m","cos","sin","toFixed","toRadians","PI","toDegrees","Constants","MEarth","MSun","GMSun","G","AU","CENTURY","JD0","Epoch0","Date","getTime","dSun","rEarth","SOLAR_DAY","SIDEREAL_DAY","SIDEREAL_ANGLE_AT_EPOCH","PLANAR_RATIO","SHAPE_RATIO","HALT_RATIO","radUnits","unit","scale","angUnits","timeUnits","offset","velUnits","massUnits","intervUnits","Frame","inputs","defaults","camera","renderer","controls","animation","userControls","key","this","mouseTime","startedRun","setupTHREE","animDiv","anim","name","cameraPos","position","clone","cameraRot","rotation","copy","updateProjectionMatrix","setAnimation","showOptions","initialShowOptions","setState","options","empty","showingOptions","run","trace","here","render","requestAnimationFrame","loading","update","scene","now","e","longClickTime","domElement","dispatchEvent","CustomEvent","detail","elem","document","getElementById","body","PerspectiveCamera","cameraFoV","camNear","camFar","WebGLRenderer","antialias","setClearColor","setSize","size","resize","OrbitControls","raycaster","Raycaster","params","Line","threshold","Points","near","far","appendChild","canvas","addEventListener","mouseTimeUp","bind","mouseTimeDown","clickListener","raycast","raycastResult","rect","getBoundingClientRect","floor","clientX","left","right","width","y","clientY","top","bottom","height","mouse","setFromCamera","intersects","intersectObjects","children","found","inter","object","elementName","getIndexedName","index","instanceId","distanceToRay","aspect","window","innerWidth","innerHeight","UserControls","props","state","running","paused","currentTarget","pos","ind","reverse","pauseStart","speed","newShow","animOptions","img","className","onClick","timeClick","id","src","optionClick","Component","Animation","startup","Vector3","Euler","sceneElements","runOne","counter","time","delta","Scene","quiet","timeID","timeElem","updateElements","rfunc","elemName","sceneElement","component","add","Object","keys","remove","faster","open","animFactory","getAnimation","frame","newTime","parseTime","setTime","indexOf","date","parse","addElement","innerHTML","timeFormatter","dateLocal","toISOString","substring","baseAnimation","setAnim","loadStars","callback","xhr","XMLHttpRequest","onload","zz","stars","responseText","json","JSON","onerror","send","colorChar","spt","startsWith","charAt","PrepStar","star","v","u","w","sizes","factor","cc","getSize","color","SptColors","getColor","np","ring","clr","Action","opts","action","args","TextInput","placeholder","value","onKeyUp","event","target","OptionsSelector","nullDiv","direct","directContent","selection","evt","val","opt","onChange","change","FromTo","fromDft","toDft","fromPlaceholder","toPlaceholder","mouseDown","mouseUp","contentID","fromRef","createRef","toRef","from","current","to","stopPropagation","idPrefix","ref","defaultValue","onMouseDown","mouseDownF","onMouseUp","mouseUpF","StarFinder","Stars","simbadCache","nameLC","toLowerCase","getFromCatalog","getFromSimbadCache","getFromSimbad","d","url","encodeURIComponent","onreadystatechange","readyState","DONE","simb","parseSimbad","text","lines","split","getTok","str","flds","data","inIds","line","setHIP_ID","l","Number","parseInt","pmr","pmd","rv","fld","trim","Connecter","starFinder","getStar","fromStar","toStar","LocalGalaxy","fields","savedLine","finishConstruction","starData","ringIndices","push","material","MeshBasicMaterial","wireframe","baseStar","SphereGeometry","baseRing","RingGeometry","theStars","InstancedMesh","mat","Matrix4","makeScale","setPosition","setMatrixAt","setColorAt","Color","theRings","r","instanceColor","needsUpdate","scl","getMatrixAt","instanceMatrix","addTimeDisplay","yr","names","entry","updateTime","drawLine","hideLine","openHelp","results","showString","dist","distPC","distLY","connecter","connect","lineDrawer","starMessage","v1","v2","vertices","LineBasicMaterial","geometry","BufferGeometry","setFromPoints","fromNP","toNP","fromID","toID","fromSPT","toSPT","distanceTo","year","isNaN","Planets","bases","initialize","t","elems","p","derivs","Eccen","ML","LonP","Omega","Per","nu","corrections","t0","elements","mass","diameter","ringAngle","ringColor","base","Parameter","dim","varies","units","ParameterFactory","getParamInfo","SCALAR","VECTOR","mag","MATRIX","determinant3","BLOB","Kepler","ma","ecc","fma","ea","sinh","fdma","cosh","emin","emax","eaTest","abs","asinh","maTest","iter","maNew","eaNew","eaDelta","smaller","subiter","deltaNew","maX","LoadOrigins","gadd","addGenerator","pgen","genParam","generators","M","E","NaN","g","dm","cbrt","sign","em","getScalar","ta","tan","atan","atanh","rm","f1","cross","f2","vadd","rot","vec","eccv","ef2","L","acos","vv","vm","Lm","omega","POSITIVE_INFINITY","ml","cs","lp","pnode","atan2","m1","pow","pmag","eccm","o","co","so","ci","si","per","tx","EA","tanh","sn","vrad","f","vtan","vtot","descrip","caseConv","legalParameters","variables","constants","fiducial","type","pt","knownParams","gens","gen","reqs","allFound","xname","param","generate","func","arr","info","baseRender","inp","called","max","toExponential","toPrecision","addParam","QOrb","input","doLog","lastT","lastTA","coords","precession","precessData","ep0","fOmega","fNu","dt","dOmega","dNu","updRot","cd","sd","posTA","vTransform","rs","getRot","tmp","taMin","taMax","Orbit","parameters","newName","conOrVar","flag","have","forEach","getName","addParameter","cycle","updateParam","pn","newComputable","getNames","knowns","sort","deriveParameter","getParameter","qorb","parseMPCData","startTime","mpcdata","nskip","nhyper","nAst","nCom","unknowns","Name","Designation_and_name","orb","Orbit_type","Peri","Node","Year_of_perihelion","mon","Month_of_perihelion","day","Day_of_perihelion","t1970","setDate","peridist","Perihelion_dist","epoch","Epoch","quickOrbit","orbit","H","loadMPCData","OrbitPlot","orbitR","orbitXYZ","points","pi","Planet","start","qorbit","wireFrame","useSize","ratio","log10","sphere","Mesh","set","ret","Ring","_inverseMatrix","_ray","Ray","_sphere","Sphere","_position","AngPoints","PointsMaterial","updateMorphTargets","maxAngSq","source","matrixWorld","drawRange","boundingSphere","computeBoundingSphere","applyMatrix4","radius","ray","intersectsSphere","invert","isBufferGeometry","positionAttribute","attributes","il","min","count","getX","fromBufferAttribute","testPoint","error","morphAttributes","morphAttribute","undefined","morphTargetInfluences","morphTargetDictionary","String","morphTargets","Object3D","point","localThresholdSq","rayPointDistanceSq","distanceSqToPoint","origin","distanceToSquared","intersectPoint","closestPointToPoint","distance","face","prototype","isPoints","SmallBodies","smbData","colorLookup","getPositions","px","Float32BufferAttribute","setAttribute","allTypes","colors","h","col","c3","fac","getColors","sizeAttenuation","vertexColors","Sun","settings","sunSize","sunColor","sunWire","sunSegments","sunSegements","sunName","sunPosition","SolarSystem","planets","addSun","addPlanets","addSmallBodies","longClickEvt","optionState","doLongClick","matched","endsWith","test","Anims","isAnimation","entries","nearby","findBody","planetBody","xi","pname","planetData","getElements","orbitLine","ringElement","smbCallback","addBody","openParams","resArr","userBody","CoordTrans","ang","sin_dg","cos_dg","alphaG","deltaG","lonE","vx","toVector","transform","vy","vz","cos_d","sin_d","cos_delta","sin_delta","sin_b","asin","num","denom","RADIAN","crd","result","name_or_angles","transformations","coordDefs","eqgal","eqec","galeq","eceq","ecgal","galec","SatPrecession","rE","mE","e2","cos_i","sin_i","NoradReader","parseLines","satp","addPrecession","latestEpoch","parseNorad","smallestA","l0","l1","l2","desig","yday","parseFloat","inclination","ascNode","argPerigee","mm","idays","leap","Satellites","satData","toUpperCase","Earth","moonRef","lunarOrbitData","MA","N0","prec","getCoords","sunlight","DirectionalLight","r0","earthOrbit","AmbientLight","moonScale","earth","createEarthSphere","lorb","addStructure","qlorb","moonOrbit","moon","createMoonSphere","rotAng","addSatellites","setMoonScale","baseTime","segments","mesh","MeshPhongMaterial","TextureLoader","load","bumpMap","bumpScale","specularMap","specular","rotateX","note","TransformedOrbit","transforms","trans","multi","innerRadius","outerRadius","thetaSegments","phiSegments","thetaStart","thetaLength","indices","normals","uvs","radiusStep","vertex","uv","Vector2","j","segment","thetaSegmentLevel","setIndex","PlanetarySystem","moons","eceqE","angs","rotAxis","ra","dec","eqEeqP","planetOrbit","getOrbit","planetName","addTransform","castShadow","createPlanet","texture","moonInfo","addMoons","moonName","md","morb","getMoonOrbit","lapTrans","rad","frac","texturedSphere","createSphere","rendering","planet","phase","rotationPhase","rotationPeriod","pData","planetRadius","moonData","mElems","loader","bump","spec","specColor","receiveShadow","ringG","rMat","side","DoubleSide","ringM","Mercury","dr","copyright","Venus","Mars","fq","Phobos","pNu","pOmega","Deimos","Jupiter","Io","Europa","Ganymede","Callisto","Amalthea","Thebe","Adrastea","Metis","Himalia","Elara","Pasiphae","Sinope","Lysithea","Carme","Ananke","Leda","Callirrhoe","Themisto","Megaclite","Taygete","Chaldene","Harpalyke","Kalyke","Iocaste","Erinome","Isonoe","Praxidike","Autonoe","Thyone","Hermippe","Aitne","Eurydome","Euanthe","Euporie","Orthosie","Sponde","Kale","Pasithee","Hegemone","Mneme","Aoede","Thelxinoe","Arche","Kallichore","Helike","Carpo","Eukelade","Cyllene","Kore","Herse","Saturn","transparent","Mimas","Enceladus","Tethys","Dione","Rhea","Titan","Hyperion","Iapetus","Phoebe","Janus","Epimetheus","Helene","Telesto","Calypso","Atlas","Prometheus","Pandora","Pan","Methone","Pallene","Polydeuces","Daphnis","Anthe","Aegaeon","Ymir","Paaliaq","Tarvos","Ijiraq","Suttungr","Kiviuq","Mundilfari","Albiorix","Skathi","Erriapus","Siarnaq","Thrymr","Narvi","Aegir","Bebhionn","Bergelmir","Bestla","Farbauti","Fenrir","Fornjot","Hati","Hyrrokkin","Kari","Loge","Skoll","Surtur","Jarnsaxa","Greip","Tarqeq","Uranus","Ariel","Umbriel","Titania","Oberon","Miranda","Cordelia","Ophelia","Bianca","Cressida","Desdemona","Juliet","Portia","Rosalind","Belinda","Puck","Perdita","Mab","Cupid","Caliban","Sycorax","Prospero","Setebos","Stephano","Trinculo","Francisco","Margaret","Ferdinand","Neptune","Triton","Nereid","Naiad","Thalassa","Despina","Galatea","Larissa","Proteus","Halimede","Psamathe","Sao","Laomedeia","Neso","Pluto","Charon","Nix","ellipsoid","Hydra","Kerberos","Styx","singleton","available","mercury","venus","mars","jupiter","saturn","uranus","neptune","pluto","cache","UnitLegend","Units","row","cycleUnits","hidden","status","Row","validated","unitIndex","parameter","showingUnit","computed","values","initVal","replace","pop","getDftUnit","genValues","renderToUnit","validate","valuesArr","dispScalar","getVector","dispVector","prefix","cname","align","handleChange","dispVal","OrbitCalculator","fixed","fixedRef","variesRef","orbitName","displayCount","doRef","setOrbitName","colSpan","compute","displayOrbit","clearAll","clearVarying","clear","rows","all","concat","updated","totalUpdates","newPar","setParameter","getOrbitName","orbitCount","mrat","amim","addExternalOrbit","App","orbParams","location","href","dx","dy","renderOrbParams","style","componentDidMountOrbParams","onWindowResize","solar","setUserControls","GLOBALS","win","opener","setAnimFactory","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.125370e1.chunk.js","sourcesContent":["class Util {\r\n    \r\n    static log() {\r\n        var msg = \"\";\r\n        var div = \"\";\r\n        for (var i=0; i<arguments.length; i += 1) {\r\n            msg += div + arguments[i];\r\n            div = \" \";\r\n        }\r\n        console.log(msg);\r\n    }\r\n    \r\n    static determinant3(a) {\r\n        const x =  a[0][0]*( (a[1][1]*a[2][2]) - (a[1][2]*a[2][1]) );\r\n        const y = -a[0][1]*( (a[1][0]*a[2][2]) - (a[1][2]*a[2][0]) );\r\n        const z =  a[0][2]*( (a[1][0]*a[2][1]) - (a[1][1]*a[2][0]) );\r\n        return x+y+z;\r\n    }    \r\n    \r\n    static mag(a) {\r\n        var sum = 0;\r\n        for (var c in a) {\r\n            sum += a[c]*a[c];\r\n        }\r\n        return Math.sqrt(sum);\r\n    }\r\n    \r\n    static dot(a, b) {\r\n        if (a.length !== b.length) {\r\n            throw new Error(\"Incompatible vectors in dot product\");\r\n        }\r\n        var sum = 0;\r\n        for (var i=0; i<a.length; i += 1) {\r\n            sum += a[i]*b[i];\r\n        }\r\n        return sum;\r\n    }\r\n    \r\n    static times(a, b) {\r\n        // We support \r\n        //    scalar*vector\r\n        //    matrix*vector\r\n        //    matrix*matrix\r\n        \r\n        if (!Array.isArray(b)) {\r\n            throw new Error(\"Second element in times is scalar, not vector or matrix\");\r\n        }\r\n        \r\n        \r\n        if (!Array.isArray(a)) {\r\n            return b.map(x => a*x);\r\n        }\r\n        \r\n        var a0 = a[0];\r\n        // Check that the first element is a matrix\r\n        if (!Array.isArray(a0)) {\r\n            throw new Error(\"First element in times not scalar or matrix\");\r\n        }\r\n                \r\n        if (!Array.isArray(b[0])) {\r\n            \r\n            // Second element is vector so multiply it by matrix\r\n            return [\r\n                Util.dot(a[0], b),\r\n                Util.dot(a[1], b),\r\n                Util.dot(a[2], b)\r\n            ];\r\n        } else {\r\n            // Second element is matrix, so we do matrix multiply here.\r\n            var z = [];\r\n            for (var i=0; i<3; i += 1) {\r\n                z[i] = Util.times(a, b[i]);\r\n            }\r\n            return z;\r\n        }\r\n    }\r\n    \r\n    // Get a row vector from a matrix (given as a vector of columns)\r\n    static rvec(a, n) {\r\n        var res =  [a[0][n], a[1][n], a[2][n]];\r\n        return res;\r\n    }\r\n        \r\n\r\n    // Add two vectors.\r\n    static vadd(a, b) {\r\n        if (a.length !== b.length) {\r\n            throw new Error(\"Incompatible vectors in add\");\r\n        }\r\n        var res = [...a];\r\n        for (var i=0; i < res.length; i += 1) {\r\n            res[i] += b[i];\r\n        }\r\n        return res;\r\n    }\r\n    \r\n    // Cross product of two vectors.\r\n    static cross(a, b) {\r\n        \r\n        return [\r\n           a[1]*b[2] - a[2]*b[1],\r\n          -a[0]*b[2] + a[2]*b[0],\r\n           a[0]*b[1] - a[1]*b[0]\r\n        ];\r\n    }\r\n\r\n    // Rotation matrix for a rotation of the given angle around the specified axis.\r\n    static rot(angle, axis) {\r\n        \r\n        var a,b,c;\r\n        switch (axis) {\r\n            case \"x\":\r\n                a=1;\r\n                b=2;\r\n                c=0;\r\n                break;\r\n            case \"y\":\r\n                a=0;\r\n                b=2;\r\n                c=1;\r\n                break;\r\n            case \"z\":\r\n                a=0;\r\n                b=1;\r\n                c=2;\r\n                break;\r\n            default: throw new Error(\"Unknown axis\");\r\n        }\r\n        \r\n        var m = [[0,0,0],[0,0,0],[0,0,0]];\r\n        \r\n        m[c][c] = 1;\r\n        m[b][b] =  m[a][a] = Math.cos(angle);\r\n        m[a][b] =  Math.sin(angle);\r\n        m[b][a] = -m[a][b];\r\n        return m;\r\n    }\r\n    \r\n    static toRadians = function(a) {\r\n        return a*Math.PI/180;\r\n    }\r\n    \r\n    static toDegrees = function(a) {\r\n        return a*180/Math.PI;\r\n    }\r\n\r\n    static printMatrix(a) {\r\n        Util.log(\"Matrix: \");        \r\n        for (var i=0; i<3; i += 1) {\r\n            Util.log(\"    \"+a[0][i].toFixed(5)+\" \"+a[1][i].toFixed(5)+\" \"+a[2][i].toFixed(5));            \r\n        }\r\n    }\r\n}\r\n\r\nexport default Util;","class Constants {\r\n    \r\n    //// Physics and Astronomy\r\n    \r\n    /** Product of  G and MSun which is known better than either individually. */\r\n    static GMSun = 1.32712440018e20;   // [m3/s2] \r\n    \r\n    /** Gravitational constant. */\r\n    static G     = 6.6743E-11;         // [m3/kg/s2]\r\n    \r\n    /** The mass of the sun */\r\n    static MSun  = Constants.GMSun/Constants.G;            // [kg] 1.989E30;\r\n    \r\n    /** Mass of the earth */\r\n    static MEarth = 1/332946.0487 * Constants.MSun;\r\n    \r\n    /** The length of an astronomical unit */\r\n    static AU    = 149597870700.;      // [m]    \r\n    \r\n    /** Length of century...  assuming 24.25 leap days/century */\r\n    static CENTURY = (365*100 + 24.25)*86400; // [s] \r\n    \r\n    /** Julian day of 2000-01-01 */\r\n    static JD0 = 2451544.5;                   // [days]\r\n    \r\n    /** Unix epoch of 2000-01-01  */\r\n    static Epoch0 = new Date(2000, 0, 1).getTime()/1000;   // [s] \r\n    \r\n    /** Diameter of the Sun */\r\n    static dSun = 1.392e9;  // m \r\n    \r\n    /** Radius of the Earth */\r\n    static rEarth = 6.3781e6; // m\r\n    \r\n    static SOLAR_DAY    = 86400;      // s\r\n    static SIDEREAL_DAY = 86164.0905; // s \r\n    \r\n    // Angle of Earth's rotation at 2000.0\r\n    static SIDEREAL_ANGLE_AT_EPOCH = 175.1731379442;   // d (from http://neoprogrammics.com/sidereal_time_calculator/index.php\r\n \r\n    //// Programmatic constants\r\n    \r\n    /** Criterion for planar orbit (to prefer periapsis vector to line of nodes) */\r\n    static PLANAR_RATIO = 1.e-10;\r\n    \r\n    /** Criterion for radial (1-e) or circular (e) orbit. */\r\n    static SHAPE_RATIO = 1.e-10;\r\n        \r\n    /** Delta required to halt Newton-Raphson.  Note that you\r\n     *  can just use the values for angles in radians without scaling.\r\n     */\r\n    static  HALT_RATIO = 1.e-12;\r\n    \r\n    \r\n    // Units\r\n    static radUnits = [{unit: \"au\", scale: Constants.AU}, {unit: \"km\", scale: 1000}, {unit: \"m\", scale: 1}, \r\n                  {unit: \"rE\", scale: Constants.rEarth}];\r\n\r\n    static angUnits =  [{unit: \"d\", scale: Math.PI/180}, {unit: \"rad\", scale:1}];\r\n\r\n    static timeUnits = [{unit: \"day\",    scale: 86400}, {unit: \"s\", scale:1}, \r\n                   {unit:\"jd\", scale: 86400, offset: Constants.JD0}];\r\n\r\n    static velUnits = [{unit: \"au/day\", scale: Constants.AU/86400}, \r\n                       {unit: \"km/s\", scale: 1000}, {unit: \"m/s\", scale: 1}];\r\n                   \r\n    static massUnits = [{unit: \"Ms\", scale: Constants.MSun}, {unit: \"Me\", scale: Constants.MEarth},\r\n        {unit:\"kg\", scale: 1}];\r\n    \r\n    static intervUnits = [{unit: \"day\", scale: 86400}, {unit: \"y\", scale: 31558149.76}, \r\n                         {unit: \"s\", scale: 1}];\r\n\r\n}\r\n\r\nexport default Constants;","/**\n * This class defines the framework in which animations are displayed.\n * We use a single framework for all animations.\n */\nimport {PerspectiveCamera, WebGLRenderer, Raycaster} from \"three\";\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\n\nimport Util from \"../std/Util.js\";\nimport Constants from \"../std/Constants.js\";\n\nclass Frame {\n \n    \n    // Build the orrery frameword. \n    // The OrreryBuilder will actually add the components to\n    // the orrery.\n    constructor(inputs) {\n        const defaults = {            \n            camera:       null,  // The camera associated with the frame\n            renderer:     null,  // The renderer used\n            controls:     null,  // The controls used                                  \n            animation:    null,   // The animation being run\n            userControls: null  // User control widget.                                    \n        };\n        \n        for (var key in defaults) {\n            this[key] = defaults[key];\n        }\n        \n        this.mouseTime = null;\n        \n        // Override defaults.\n        if (inputs) {\n            for (var key in inputs) {\n                this[key] = inputs[key];\n            }\n        }\n        \n        this.startedRun       = false;\n        \n        this.setupTHREE(this.animDiv);\n    }\n    \n    setUserControls(controls) {\n        this.userControls = controls;\n    }\n    \n    setAnimation(anim) {\n        \n        var oldAnim = this.animation;\n        if (this.animation) { \n            // Save the camera position of current animation.\n            Util.log(\"Switching animations from \",this.animation.name,\"to\",anim.name);\n            this.animation.cameraPos = this.camera.position.clone();\n            this.animation.cameraRot = this.camera.rotation.clone();\n        } else {\n            Util.log(\"Starting initial animation \",anim.name);\n        }\n        this.animation = anim;\n        \n        this.camera.position.copy(anim.cameraPos);\n        this.camera.rotation.copy(anim.cameraRot);\n        \n        this.camera.updateProjectionMatrix();        \n        this.userControls.setAnimation(anim);\n        \n        let showOptions = false;\n        if (anim.initialShowOptions) {\n            showOptions = true;\n        }\n        \n        this.userControls.setState({options: this.empty,\n                                   showingOptions: showOptions})\n            \n        if (!this.startedRun) {\n            this.run();\n        }\n    }\n        \n    // Run the animations.  Note that when\n    // we change animations, the underlying this.animation will\n    // change, but we are still using the same frame and sequence\n    // of render calls.\n    run (){\n        \n        if (this.startedRun) {\n            Util.log(\"Attempt to start second animation run\");\n            console.trace();\n            return;\n        }\n        \n        this.startedRun = true;\n        // Save context for render\n        const here   = this;\n        var cnter = 0;        \n        const render = function () {\n            cnter += 1;\n            \n            requestAnimationFrame(render);\n            if (here.animation.loading) {\n                Util.log(\"Loading \"+here.animation.name);\n\n            } else {\n                here.animation.update();\n                here.controls.update(1);\n                here.renderer.render(here.animation.scene, here.camera);\n            }\n        }\n        render();\n    }\n    \n    mouseTimeDown() {\n        if (!this.mouseTime) {\n            this.mouseTime = Date.now();\n        }\n    }\n    \n    mouseTimeUp(e) {        \n        if (!this.mouseTime) {\n        } else if (this.animation.longClickTime) {\n            if ((Date.now() - this.mouseTime) > this.animation.longClickTime) {\n                this.renderer.domElement.dispatchEvent(\n                   new CustomEvent(\"longClick\", {detail:e})\n                );               \n            }\n        }\n        this.mouseTime = null;\n    }\n    \n    // Define the THREE.js framework.\n    setupTHREE(div) {\n        \n        var elem;\n        if (div) {\n            elem = document.getElementById(div);\n        }\n        if (!elem) {\n            elem = document.body;\n        }\n        \n        this.camera   = new PerspectiveCamera( this.cameraFoV, 1, this.camNear, this.camFar );\n        this.renderer = new WebGLRenderer({antialias: true});\n\n        this.renderer.setClearColor(\"#050505\");\n        \n        this.renderer.setSize(this.size[0], this.size[1]);\n        this.resize(this.size[0], this.size[1]);\n\t\t\n        this.controls = new OrbitControls (this.camera, this.renderer.domElement);\n        this.raycaster = new Raycaster();\n        this.raycaster.params.Line   = { threshold: .12 };\n\tthis.raycaster.params.Points = { threshold: .05 };\n        this.raycaster.near = 0;\n        this.raycaster.far  = 500;\n        \n        elem.appendChild(this.renderer.domElement);\n        \n        const canvas = this.renderer.domElement;\n        \n        canvas.addEventListener(\"mouseup\",        this.mouseTimeUp.bind(this));\n        canvas.addEventListener(\"mousedown\",      this.mouseTimeDown.bind(this));\n        canvas.addEventListener(\"click\",          this.clickListener.bind(this));\n    }\n    \n    clickListener(e) {\n        let res = this.raycast(e);\n        this.animation.raycastResult(res);\n    }\n    \n    // This method take an event and uses the mouse position to look for\n    // nearby objects.  The intersecting or nearby objects are returned.\n    \n    raycast(e) {\n        \n        //1. sets the mouse position with a coordinate system where the center\n        //   of the screen is the origin\n        const canvas = this.renderer.domElement;\n        var rect = canvas.getBoundingClientRect();\n        const x = Math.floor( ( e.clientX - rect.left ) / ( rect.right - rect.left ) * canvas.width );\n        const y = Math.floor( ( e.clientY - rect.top ) / ( rect.bottom - rect.top ) * canvas.height );\n        \n        const mouse = {};\n        mouse.x =   ( x / canvas.width ) * 2 - 1;\n        mouse.y = - ( y/ canvas.height ) * 2 + 1;\n\n        //2. set the picking ray from the camera position and mouse coordinates\n        this.raycaster.setFromCamera( mouse, this.camera ); \n\n        //3. compute intersections\n        var intersects = this.raycaster.intersectObjects( this.animation.scene.children, true );\n\n        const found = {};\n        for ( var i = 0; i < intersects.length; i++ ) {\n            const inter = intersects[i];\n            var name    = inter.object.elementName;\n            // A composite object may have different names\n            // associated with each index.\n            if (inter.object.getIndexedName) {\n                // Points use index, InstancedMesh's using instanceId\n                const index = inter.index  || inter.instanceId;\n                name = inter.object.getIndexedName(index);\n            }\n            if (found[name]) {\n                if (inter.distanceToRay < found[name]) {\n                    found[name] = inter.distanceToRay;\n                }\n            } else {\n                found[name] = inter.distanceToRay;\n            }\n        }\n        return found;\n    }\n    \n    // Respond to a resize in the window.\n    resize(width, height) {\n        if (!this.camera || ! this.renderer) {\n            Util.log(\"Frame.resize called prematurely\");\n            return;\n        }\n        this.camera.aspect = width / height;\n        this.camera.updateProjectionMatrix();\n        this.renderer.setSize( window.innerWidth, window.innerHeight );\n    }\n};\n\nexport default Frame;","import {Component} from 'react';\nimport Util from \"../std/Util.js\";\nclass UserControls extends Component {\n    constructor(props) {\n        super(props);\n        this.animation = null;\n        this.empty = <div></div> ;\n        this.state = {\n            options: this.empty,\n            showingOptions: false,\n            running: true\n        };\n    }\n    \n    setAnimation(anim) {\n        this.animation = anim;\n        this.setState({running: !anim.paused});\n    }\n    \n    timeClick(e) {\n        if (!this.animation) {\n            return;\n        }\n        const cx = e.clientX;\n        const cy = e.clientY;\n        const targ = e.currentTarget;\n        const rect = targ.getBoundingClientRect();\n        const pos = (e.clientX - rect.left ) / ( rect.right - rect.left );\n        var ind = 0;\n        if (pos > 0.2 && pos <= 0.45) {\n            ind = 1;\n        } else if (pos > 0.45 && pos <= 0.67) {\n            ind = 2;\n        } else if (pos > 0.67) {\n            ind = 3;\n        }\n        // 0 = reverse, 1 = pause/restart, 2 = slower, 3 = faster\n        if (this.state.running) {\n            switch(ind) {\n                case 0: { this.animation.reverse(); break}\n                case 1: { this.animation.pauseStart(); break}\n                case 2: { this.animation.speed(false); break}\n                case 3: { this.animation.speed(true); break}\n            }\n        } else {\n            if (ind == 1) {\n                this.animation.pauseStart();\n            }\n        }\n        if (ind == 1) {\n            this.setState({running: !this.state.running});\n        }\n    }\n    \n    \n    optionClick() {\n        const newShow = !this.state.showingOptions;\n        if (!this.animation) {\n            return;\n        }\n        \n        \n        if (newShow) {\n            var animOptions = this.animation.options(this, \"optBox\");            \n            this.setState({options: animOptions, showingOptions: true});\n        } else {\n            this.setState({options: this.empty,\n                showingOptions: false});\n        }\n    }\n    \n    render() {\n        const here = this;\n        var img = this.state.running? 'runningT.png': 'stoppedT.png';\n        return (\n          <div className='glasspane'>\n            <div>\n              <img onClick={here.timeClick.bind(here)} height='38' width='86' id='speedButtons' src={img}/>\n              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n              <img onClick={here.optionClick.bind(here)} height='38' src='dotsT.png' />   \n            </div>                  \n            <strong>Time:</strong>\n            <span id=\"timeDisplay\"></span>\n            {this.state.options}\n            <div  id=\"clickTarget\"></div>\n          </div>\n        );\n    }\n}\n\nexport default UserControls;\n","/** An animation is a scene comprised of elements\n * whose state varies with time. This class addresses non-scene specific management\n * of the animation. \n */\n\nimport {Scene, Vector3, Euler} from \"three\";\n\nimport Util from \"../std/Util\";\nimport Constants   from \"../std/Constants\"\nimport animFactory from \"../animations/AnimationFactory\";\n\nclass Animation {\n    \n    // Set defaults and create basic Three framework\n    constructor(inputs) {\n        \n        // Defaults\n        const startup = {\n            cameraPos:     new Vector3(0,0,6),      // Initial position of camera\n            cameraRot:     new Euler(0,0,0,\"XYZ\"),  // Initial rotation.\n            \n            cameraFoV:     75,       // Width of field of view.\n            camNear:       0.0001,   // Nearest object we can see\n            camFar:        2000.,    // Most distant object we can see\n            \n            sceneElements: {},       // The elements that comprise the scene.\n            \n            paused:        false,    // Has the user paused the time updates?\n            runOne:        false,    // Run a single animation frame, then stop.\n            \n            counter:       0,        // The number of renders    \n            time:          Date.now()/1000 - Constants.Epoch0,  // The current time\n            \n            delta:         21600,     // The interval between steps (in seconds=6 hours)\n            scene:         new Scene(), // The scene that holds this animation.\n            name:          \"Generic\", // Place holder name\n            quiet:         false,     // Can suppress messages about loading components.\n            loading:       false      // Set if something needs to be loaded before display\n        };\n \n        // Set defaults\n        for (var key in startup) {\n            this[key] = startup[key];\n        }\n        \n        // Override defaults.\n        if (inputs) {\n            for (var key in inputs) {\n                this[key] = inputs[key];\n            }\n        }\n        \n        // Specify where the time is to be displayed.\n        if (this.timeID) {\n            this.timeElem = document.getElementById(this.timeID);\n        }\n\n    }\n\n    // Update the content of the animation for the next frame.\n    // This does not do the animation, it only does any updates\n    // needed to do the rendering.\n    update (){\n        this.counter += 1;\n        \n        if (!this.paused) {\n            this.time += this.delta;\n            this.updateElements();\n        }\n    }\n    \n    // Update each element that has been added to the animation.\n    updateElements() {\n        for (var key in this.sceneElements) {\n            \n            // If the element has a function to be called for\n            // each rendering call it with the curren time.\n            var rfunc = this.sceneElements[key].render;\n            if (rfunc) {\n                rfunc(this.time);\n            }\n        }\n    }\n\n    // Add an element to the animation\n    // The sceneElement has three components:\n    //     name: A name (often the first as the elemName argument)\n    //     component: An element to be rendered in the scene\n    //         (optional: e.g., the time rendering has no associated three.js component)\n    //     render: A function to be called before doing the render.\n    //         (optional: e.g., a static component like the Sun may not need any updating.)\n    //   \n    addElement(elemName, sceneElement) {\n        \n        if (this.sceneElements[elemName]) {\n            Util.log(\"Attempt to duplicate element \"+elemName+\" in \"+this.name);\n            return;\n        }\n        this.sceneElements[elemName] = sceneElement;\n        if (sceneElement.component) {\n            sceneElement.component.elementName = elemName;\n            this.scene.add(sceneElement.component);\n        }\n        \n        // If adding lots of components, may wish to set quiet flag.\n        if (!this.quiet) {\n            Util.log(\"Added element #\"+Object.keys(this.sceneElements).length+\": \"+elemName+\" to \"+this.name);\n        }\n    }\n    \n    // Remove an element from the scene (permanently).\n    removeElement(elemName) {\n        if (!this.sceneElements[elemName]) {\n            Util.log(\"Request to delete non-existent element \"+name+\" of \"+this.name);\n            return;\n        }\n        this.scene.remove(this.sceneElements[elemName].component);\n        if (!this.quiet) {\n            Util.log(\"Removed element \"+elemName+\" of \"+this.name);\n        }\n        \n    }\n\n    // Change the time interval between frames.\n    speed(faster) {\n        if (faster) {\n            this.delta *= Math.sqrt(2);\n        } else {\n            this.delta /= Math.sqrt(2);\n        }\n    }\n \n    // Reverse the sign of the time intervals.\n    reverse() {\n        this.delta *= -1;\n    }\n    \n    // Pause or restart the animation.\n    pauseStart() {\n        this.paused      = !this.paused;\n    }\n    \n    // Set the time for the animation (in seconds since 2000)\n    setTime(time) {                \n        this.time   = time;\n        this.updateElements();\n    }\n \n    // Open the help window.\n    openHelp() {\n        window.open(\"help_top.html\", \"help\");\n    }\n\n    // Open the orbit params window.  Note that since\n    // this window shares code with the animation window,\n    // we actually call the same base URL and distinguish\n    // the window with a CGI parameer.\n    openParams() {\n        window.open(\"?app=params\", \"params\");\n    }\n\n    // Set the animation to be used to a new animation.\n    setAnim(animation) {\n        \n        const anim = animFactory.getAnimation(animation, {frame: this.frame, timeID: this.timeID});\n        this.frame.setAnimation(anim);\n    }\n\n    // Reset the time given an unparsed input.\n    // Different children may have different parseTime methods.\n    updateTime(time) {\n        var newTime = this.parseTime(time);\n        this.setTime(newTime);\n    }\n    \n    // The default time parser which uses the \n    // funky JavaScript Data.parse function.\n    parseTime(time) {\n        if (!time || time.length < 4) {\n            return;\n        }\n        if (time.indexOf(\":\") < 0) {\n            // Kludge that fixes a particular browser...\n            time += \" 00:00\";\n        }\n        var date = Date.parse(time);\n        if (date) {\n            const newTime = date/1000 - Constants.Epoch0;\n            return newTime;\n        } else {\n            return 0;\n        }       \n    }\n\n    // Add a time display widget to the window.\n    addTimeDisplay() {\n        const here = this;\n        this.addElement(\n                \"Timer\",\n                {name: \"tdisp\",\n                    render: function (time) {\n                        here.timeElem.innerHTML = here.timeFormatter(time);\n                    }\n                });\n    }\n\n    // Format a time given the time in seconds since 2000.\n    timeFormatter(time) {    \n        const millis = (time / 86400 + Constants.JD0 - 2440587.5) * 86400000;\n        const dateLocal = new Date(millis).toISOString();                       \n        return dateLocal.substring(0,dateLocal.length-5);\n    }\n    \n    // Return a simple options response.\n    options() {\n        return <div>No options available</div>;\n    }\n    \n    \n    // Handle a long click detected in the window.\n    // This default behavior goes to the \"baseAnimation\"\n    // if the user does a longClick in a corner.\n    // Children may do more specialized actions\n    // in response and use super.doLongClick if\n    // none of these seem appropriate.\n    doLongClick(e) {\n        e = e.detail;\n        if (this.baseAnimation) {\n            const canvas = this.frame.renderer.domElement;\n            var rect = canvas.getBoundingClientRect();\n            const x = ( e.clientX - rect.left ) / ( rect.right - rect.left );\n            const y = ( e.clientY - rect.top ) / ( rect.bottom - rect.top );\n        \n            if ( ( (x <= .1 ) || (x >= .9) )  &&\n                   (y <= .1 ) || (y >= .9) ) {\n                // This covers just 4 x 0.5*.1*.1 or 2% of the surface of the canvas.\n                this.setAnim(this.baseAnimation);\n            }\n        }\n    }\n};\n\nexport default Animation;","import Util from \"../std/Util\";\n\nfunction loadStars(callback) {\n    let xhr  = new XMLHttpRequest();\n//    xhr.open('GET', \"data/idp_nearby40pc.json\", true);\n    xhr.open('GET', \"data/galaxy_all.json\", true);\n    xhr.onload  = function() {\n        let stars = xhr.responseText;\n        let json = JSON.parse(stars);\n        let zz;\n        for (zz in json) {\n            break;\n        }\n        callback(json[zz]);\n    };\n    xhr.onerror = function() {\n        Util.log(\"Called error function when loading stars!\");\n    }\n    \n    xhr.send(null);\n}\n\nexport default loadStars;\n\n","\nimport Util from \"../std/Util.js\";\nimport Dump from \"../std/Dump.js\";\n\nfunction colorChar(spt) {\n    if (spt == null) {\n        return null;\n    }\n    if (spt.length > 2) {\n        if (spt.startsWith(\"sd\")) {\n            spt = spt.substring(2);\n        }\n    }\n    if (spt.length > 1) {\n        if (spt.startsWith(\"D\")  || spt.startsWith(\"d\")) {\n            spt = spt.substring(1);\n        }\n    }\n    return spt.charAt(0);\n}\n\nfunction getSize(spt) {\n    \n    var sizes = {\n        \"M\": .15,\n        \"K\": .2,\n        \"G\": .25,\n        \"F\": 0.3,\n        \"A\": 0.35,\n        \"B\": 0.4,\n        \"O\": 0.45,\n        \"T\": 0.10,\n        \"Y\": 0.10,\n        \"W\": 0.45\n    }\n    if (!spt) {\n        return 0.01;\n    }\n            \n    let factor = 1;\n    if (spt.startsWith(\"sd\")  || spt.startsWith(\"d\")) {\n        factor *= 0.8;\n    }\n    \n    if (spt.startsWith(\"D\")) {\n        factor *= 0.5; \n    }\n    \n    let cc = colorChar(spt);\n    var size = 0.1;\n    \n    if (sizes[cc]) {\n        size = sizes[cc];\n        size *= factor;\n        if (spt.indexOf(\"IV\") > 0) {\n            size *= 1.3;\n        } else if (spt.indexOf(\"III\")) {\n            size *= 1.5;\n        } else if (spt.indexOf(\"II\")) {\n            size *= 1.7;\n        } else if (spt.indexOf(\"I\")) {\n            size *= 2.0;\n        }\n    }\n    \n    return size * .15;\n}\n\nfunction getColor(spt) {\n\n    var SptColors = {\n        \"M\": 0xff3300,\n        \"K\": 0xffaa66,\n        \"G\": 0xffff00,\n        \"F\": 0xffffaa,\n        \"A\": 0xffffff,\n        \"B\": 0xaaaaff,\n        \"D\": 0x00ff00,\n        \"O\": 0x0000ff,\n        \"s\": 0x00ff00,\n        \"W\": 0x0000FF,\n        \"T\": 0xEADDCA,\n        \"Y\": 0xEADDCA\n    };\n    \n    let col = 0x00FFFF;\n    let cc = colorChar(spt);\n    if (cc && SptColors[cc]) {\n        return SptColors[cc];\n    }\n\n    return col;\n}\n\n// Normally the size and color are derived\n// from the spectral type, but user can\n// supply it directly.\nconst PrepStar = function(star){\n    if (Array.isArray(star.x)) {\n        star.y = star.x[1];\n        star.z = star.x[2];\n        star.x = star.x[0];  // Last to avoid premature overwrite\n    }\n    if ((star.v != null) && Array.isArray(star.v)) {\n        star.u = star.v[0];\n        star.w = star.v[2];\n        star.v = star.v[1];  // Last to avoid premature overwrite\n    }\n    if (star.v == null) {\n        star.u = 0;\n        star.v = 0;\n        star.w = 0;\n    }\n\n    star.size = getSize(star.spt);\n    star.color  = getColor(star.spt);\n        \n    if (star.np > 0) {\n        star.ring = {};\n        var clr = 0x8800CC;\n        if (star.np == 2) {\n            clr = 0x00AAFF\n        } else if (star.np > 2) {\n            clr  = 0x00ff00;\n        }\n        star.ring.color = clr;\n    }\n    \n};\n\nexport default PrepStar;\n\n","import {Component} from \"react\";\nimport Util from \"../std/Util\";\n\n// This is a nothing component, but performs\n// some action when loaded.\nclass Action extends Component {\n    constructor(opts) {\n        super(opts);\n        this.action = opts.action;\n        if (opts.args) {\n            this.args = opts.args;\n        }\n    }\n    \n    render() {\n        return <span/>;\n    }\n    \n    componentDidMount() {\n        Util.log(\"In action:\"+this.action);\n        Util.log(\"   Args:\"+this.args);\n        this.action(this.args);\n    }   \n}\n\nexport default Action\n","import {Component} from \"react\";\nimport Util from \"../std/Util.js\";\n\nclass TextInput extends Component {\n    constructor(props) {\n        super(props);\n        if (props.placeholder) {\n            this.placeholder = props.placeholder;            \n        } else {\n            this.placeholder = \"Input...\";\n        }\n        if (props.callback) {\n            this.callback = props.callback;\n        } else {\n            this.callback = null;\n        }\n        this.state = {value: \"\"};\n    }\n\n    render() {\n        const here = this;\n        return (\n            <input size=\"16\" placeholder={here.placeholder}\n                onKeyUp={\n                  (event) => {\n                    if (event.key === 'Enter'  && here.callback) {\n                        here.callback(event.target.value);                       \n                    }\n                  }\n                }\n            />\n        )\n    }\n}\n\nexport default TextInput;","import {Component} from 'react';\nimport Util from \"../std/Util.js\";\nimport TextInput from \"./TextInput.js\";\n\nclass OptionsSelector extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.nullDiv = <div></div>;                \n        this.state = {\n            options:  [...props.options],\n            direct: props.direct,\n            directContent: props.directContent,\n            selection: {value: null, elem: this.nullDiv}            \n        }\n    }\n    \n    change(evt) {\n        const val = evt.target.value;\n        var   found = false;\n        var   i;\n        for (i=0; i<this.state.options.length; i += 1) {\n            if (this.state.options[i].value === val) {\n                found = true;\n                break;\n            }            \n        }\n        if (found) {\n            const opt = this.state.options[i];\n            this.setState({selection: opt});  \n        }\n    }\n    \n    render() {\n        \n        if (this.state.direct) {\n            return this.state.directContent;\n        }\n        \n        const options = this.state.options.map((elem) =>\n              <option key={elem.value}>{elem.value}</option> )\n        const elem = \n             <div>   \n                <select onChange={this.change.bind(this)} >\n                  {options}\n                </select><br/>\n                {this.state.selection.elem}\n             </div>                \n        ;\n        return elem;\n    }\n}\n\nexport default OptionsSelector;","import {Component, createRef} from \"react\";\nimport Util from \"../std/Util.js\";\n\nclass FromTo extends Component {\n    constructor(props) {\n        super(props);\n        \n        this.fromDft         = props.fromDft        ? props.fromDft:         \"\";\n        this.toDft           = props.toDft          ? props.toDft:           \"\";\n        this.fromPlaceholder = props.fromPlaceholder? props.fromPlaceholder: \"...from...\";\n        this.toPlaceholder   = props.toPlaceholder  ? props.toPlaceholder:   \"...to...\";\n        this.mouseDown       = props.mouseDown;\n        this.mouseUp         = props.mouseUp;\n        this.contentID       = props.contentID? props.contentID : \"CnctCntnt\";\n        this.fromRef         = createRef();\n        this.toRef           = createRef();\n        \n    }\n    \n    mouseDownF(event) {\n        const from = this.fromRef.current.value;\n        const to   = this.toRef.current.value;\n        if (from && from.length > 0 && to && to.length > 0) {\n            if (this.mouseDown) {\n                this.mouseDown(from, to);\n            }\n        }\n        event.stopPropagation();\n    }\n    mouseUpF(event) {\n        if (this.mouseUp) {\n            this.mouseUp();\n        }\n        event.stopPropagation();\n    }\n    \n    render() {\n        const here    = this;\n        const cntntID = this.idPrefix\n        const fromID  = this.idPrefix + \"From\";\n        const toID    = this.idPrefix + \"To\";\n        return (\n          <div>\n            <input ref={this.fromRef} defaultValue={this.fromDft} size=\"12\" placeholder={here.fromPlaceholder}/>\n            <input ref={this.toRef}   defaultValue={this.toDft}   size=\"12\" placeholder={here.toPlaceholder}  />\n            <button \n              onMouseDown={here.mouseDownF.bind(here)}\n              onMouseUp={here.mouseUpF.bind(here)}>Show</button>\n            <br />\n            <div id={this.contentID}></div>\n          </div>\n        );\n    }\n}\n\nexport default FromTo;\n\n\n","import Util from \"../std/Util.js\";\n// Find the position of a Star\nclass StarFinder {\n    \n    constructor(stars) {      \n        this.Stars       = stars;\n        this.simbadCache = {};    \n    }\n    \n    // This may either return after calling the callback\n    // or run the callback asynchronously later, so no further\n    // processing (at least any that depends upon this result)\n    // should be done here.\n    getStar(name, callback) {\n        const nameLC = name.toLowerCase();\n        if (nameLC == \"sun\"  || nameLC == \"sol\") {\n            const star = {\n                id: 0, name:\"Sol\", x:0, y:0, z:0, d:0, spt: \"G2V\", u:0, v:0, w:0, np: 9                \n            };\n            callback(star);\n            return;\n        }\n        // First try the input catalog, then\n        // previous calls to simbad and then finally\n        // try SIMBAD.\n        if (!this.getFromCatalog(name, callback)) { \n            if (!this.getFromSimbadCache(name, callback)) {\n                this.getFromSimbad(name, callback);\n                // This always processes it, but\n                // asynchronously.\n            }            \n        }\n    }\n    \n    \n    getFromCatalog(name, callback) {\n        for (var i=0; i<this.Stars.length; i += 1) {\n            const star = this.Stars[i];   \n            if (name == star.name || name== (\"\"+star.id)  || name==(\"HIP \"+star.id)) {\n                callback(star);\n                return true;\n            }\n        }\n        return false;\n    }\n    \n    getFromSimbadCache(name, callback) {\n        if (this.simbadCache[name]) {\n            callback(this.simbadCache[name]);\n            return true;\n        }\n        return false;\n    }\n    \n    getFromSimbad(name, callback) {\n//        this.setDisplayText(\"Resolving \"+name+\" using SIMBAD\");\n        const xhr = new XMLHttpRequest();\n        const here = this;\n        const xhrHandler = function() {\n            if (xhr.readyState === XMLHttpRequest.DONE) {\n                const simb = here.parseSimbad(name, xhr.responseText);\n                here.simbadCache[name] = simb;\n                callback(simb);\n            }\n        };\n        \n        const nmenc = encodeURIComponent(name);\n        // SIMBAD supports CORS requests.\n        const url   = \n                \"https://simbad.u-strasbg.fr/simbad/sim-id?Ident=\" +        \n                nmenc +\n                \"&NbIdent=1&Radius=.02&Radius.unit=arcmin&submit=submit+id&output.format=ascii&obj.bibsel=off\";\n        \n        xhr.open('GET', url);\n        xhr.onreadystatechange = xhrHandler;\n        xhr.send();  // parseSimbad will be called when we get the data.        \n    }\n    \n    parseSimbad(name, text) {\n        const lines = text.split(\"\\n\");\n        const getTok = function(str, n) {\n            const flds = str.split(/\\s+/);\n            if (flds.length > n) {\n                return flds[n];\n            } else {\n                return null;\n            }\n        }\n        const data = {};\n        data.name = name;\n        var inIds = false;\n        for (var i=0; i<lines.length; i += 1) {\n            const line = lines[i];\n            if (!inIds) {\n                if (line.startsWith(\"Coordinates(Gal\")) {\n                    data.l = getTok(line, 1);\n                    data.b = getTok(line, 2);\n                } else if (line.startsWith(\"Parallax:\")) {\n                    data.d = 1000./Number.parseInt(getTok(line,1));\n                } else if (line.startsWith(\"Proper motions:\")) {  // Note space in label\n                    data.pmr = getTok(line,2);\n                    data.pmd = getTok(line,3);\n                } else if (line.startsWith(\"Radial Velocity:\")) {\n                    data.rv = getTok(line, 2);\n                } else if (line.startsWith(\"Spectral type:\")) {\n                    data.spt = getTok(line,2);\n                } else if (line.startsWith(\"Identifier\")) {\n                    inIds = true;\n                }\n            } else {\n                if (this.setHIP_ID(line, data)) {\n                    break;\n                }\n            }\n        }\n        // Calculate x,y,z from l,b,d.  Can do uvw from d, pmr, pmd and rv,\n        // but there's a lot more math!\n        if (data.l && data.b && data.d) {\n            var l = Math.PI*data.l/180;\n            var b = Math.PI*data.b/180;\n            var d = data.d;\n            data.x = d*Math.cos(l)*Math.cos(b); \n            data.y = d*Math.sin(l)*Math.cos(b); \n            data.z = d*Math.sin(b);\n        }\n        if (data.id) {\n            // Replace with already downloaded information if HIP id's match.\n            for (i=0; i<this.Stars.length; i += 1) {                \n                if (this.Stars[i].id == data.id) {\n                    return this.Stars[i];                    \n                }\n            }\n        }\n        if (!data.id && !data.x) {\n            return null;\n        }\n        return data;\n    }\n    \n    setHIP_ID(line, data) {\n        for (var i=2; i<line.length; i += 32) {\n            if (i+30 <= line.length) {\n                var fld = line.substring(i, i+30).trim();\n                if (fld.startsWith(\"HIP \")) {\n                    data.id = fld.substring(4);\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n}\n\nexport default StarFinder;\n\n","import Util from \"../std/Util.js\";\n// This class draws a line which connects two stars (or the Sun to another star)\nclass Connecter {\n    constructor(starFinder) {\n        this.starFinder = starFinder;\n    }\n    \n    // Find a pair of positions.  This may require using\n    // one or two SIMBAD calls, in which case the callback\n    // will be invoked asynchronously.\n    connect(from, to, callback) {\n        const here = this;\n        function connect2(fromStar) {\n            if (fromStar == null) {\n                callback(null, null);\n                return;\n            }\n            \n            function connect3(toStar) {\n                callback(fromStar, toStar);\n            }\n            \n            here.starFinder.getStar(to, connect3);\n        }\n        \n        here.starFinder.getStar(from, connect2);\n    }\n}\n\nexport default Connecter;\n        \n    \n\n\n","import Animation from \"../elems/Animation\";\nimport animFactory from \"./AnimationFactory\";\n\nimport loadStars from \"../stars/StarReader\";\n\nimport PrepStar      from \"../stars/PrepStar\";\nimport Util      from \"../std/Util\";\nimport Constants from \"../std/Constants\";\n\nimport Action    from \"../elems/Action\";\nimport TextInput from \"../elems/TextInput\";\nimport OptionsSelector from \"../elems/OptionsSelector\";\nimport FromTo    from \"../elems/FromTo\";\n\nimport StarFinder  from \"../stars/StarFinder\";\nimport Connecter   from \"../stars/Connecter\";\n\nimport {Scene, Vector3, InstancedMesh, \n        SphereGeometry, RingGeometry, MeshBasicMaterial, \n        BufferGeometry, LineBasicMaterial, Line,\n        Matrix4, Color} from \"three\";\n\nclass LocalGalaxy extends Animation {\n    \n    fields = {\n        timeID:  \"timeDisp\",\n        name:    \"Local Galactic Neighborhood\",\n        delta:   Constants.CENTURY/20,\n        time:    0,\n        baseAnimation: \"Solar System\",\n        longClickTime: 1500,\n        paused:  true\n    };\n\n\n    constructor(props) {\n        super(props);\n        \n        // Add local defaults\n        for (var name in this.fields) {\n            this[name] = this.fields[name];\n        }\n        \n        // Add any properties\n        for (var name in props) {\n            this[name] = props[name];\n        }\n        \n        if (this.timeID) {\n            this.timeElem = document.getElementById(this.timeID);\n            this.timeElem.innerHTML = this.timeFormatter(this.time);\n        }\n        this.scene     = new Scene();\n        this.starFinder = null;\n        \n        // Used so that we can delete the lastLine on\n        // mouseup or a new click.\n        \n        this.savedLine = null;\n\n        this.loading    = true;\n        Util.log(\"Loading stars...\");\n        loadStars(this.finishConstruction.bind(this));\n    }\n    \n    finishConstruction(starData) {\n        Util.log(\"Stars loaded:\"+starData.length);\n        \n        this.starData = starData;\n        let ringIndices = [];\n        for (let i=0; i<starData.length; i += 1) {\n            let star = starData[i];\n            PrepStar(star);\n            if (star.ring) {\n                ringIndices.push(i);\n            }\n        }\n        \n        const material = new MeshBasicMaterial({wireframe: false});\n        const baseStar = new SphereGeometry(1.0, 20, 20);\n        const baseRing = new RingGeometry(1.1,1.4,20);\n        \n        const theStars = new InstancedMesh(baseStar, material, starData.length);\n        for (let i=0; i<starData.length; i += 1) {\n            let star = starData[i];\n            let mat = new Matrix4().makeScale(star.size, star.size, star.size);\n            mat.setPosition(star.x,star.y,star.z);\n            theStars.setMatrixAt(i, mat);\n            theStars.setColorAt(i, new Color(star.color));\n        }\n        \n        const theRings = new InstancedMesh(baseRing, material, ringIndices.length);\n        for (let r=0; r<ringIndices.length; r += 1) {\n            let i = ringIndices[r];\n            let star = starData[i];\n            let mat = new Matrix4().makeScale(star.size, star.size, star.size);\n            mat.setPosition(star.x,star.y,star.z);\n            theRings.setMatrixAt(r, mat);            \n            theRings.setColorAt(r, new Color(star.ring.color));\n        }\n        \n        theStars.instanceColor.needsUpdate = true;\n        theRings.instanceColor.needsUpdate = true;\n        this.ringIndices = ringIndices;\n        // Add this function to the component.\n        theStars.getIndexedName = function(index) {\n            let star = this.starData[index];\n            return this.starData[index].name;\n        }.bind(this);\n        theRings.getIndexedName = function(index) {\n            return this.starData[this.ringIndices[index]].name;\n        }.bind(this);\n        \n        this.addElement(\"AllStars\", {name:\"AllStars\", component: theStars,\n           render: function(time) {\n               const scl = time/30.856e12;\n               let mat = new Matrix4();\n               for (let i=0; i<starData.length; i += 1) {\n                   theStars.getMatrixAt(i, mat);\n                   let star = starData[i];\n                   mat = mat.setPosition(star.x+scl*star.u, star.y+scl*star.v, star.z+scl*star.w);\n                   theStars.setMatrixAt(i, mat);\n               }\n               theStars.instanceMatrix.needsUpdate = true;                   \n           }});\n       \n        this.addElement(\"AllRings\", {name:\"AllRings\", component: theRings,\n            render: function(time) {\n               const scl = time/30.856e12;\n               let mat = new Matrix4();\n               for (let r=0; r<ringIndices.length; r += 1) {\n                   theRings.getMatrixAt(r, mat);\n                   let i = ringIndices[r];\n                   let star = starData[i];\n                   mat = mat.setPosition(star.x+scl*star.u, star.y+scl*star.v, star.z+scl*star.w);\n                   theRings.setMatrixAt(r, mat);\n               }  \n               theRings.instanceMatrix.needsUpdate = true;                   \n           }});\n        \n        \n        this.loading = false;\n        this.addTimeDisplay();\n        Util.log(\"Local Galactic Neighborhood:\");\n        Util.log(\"   Number of stars rendered:\"+starData.length);\n        Util.log(\"   Number of planetary systems:\"+ringIndices.length);\n    }\n    \n    \n    timeFormatter(time) {\n        let yr = Math.floor((100*time/Constants.CENTURY + 2000).toFixed(0));\n        if (yr > 0) {\n            return yr+\" AD\";\n            \n        } else {\n            // No year 0.\n            yr -= 1;\n            yr  = -yr;\n            return yr + \" BC\";\n        }\n    }\n    \n    options() {\n        const names = [\n                 \"Local Galactic Neighborhood\",\n                 \"Set year\",\n                 \"Connect stars\",\n                 \"The Earth and environs\",\n                 \"Solar System\",\n                 \"Nearby Galaxies (TBD)\",\n                 \"Help\"\n        ];\n        const opts = [];\n        for (var i=0; i<names.length; i += 1) {\n            const entry = {};\n            const val   = names[i];\n            entry.value = names[i];\n            const key = \"ka\"+i;\n            switch (val) {\n               \n            // Note that we need to ensure that we have separate\n            // keys for the elements (at least those that are the same compound types)\n            case \"Set year\":\n                entry.elem = <TextInput key={key} placeholder=\"...year...\"\n                               callback={this.updateTime.bind(this)} /> ;\n                break;\n            case \"Connect stars\":\n                entry.elem = <FromTo key={key} fromDft='Sol' \n                               contentID=\"StarInfo\"\n                               mouseDown={this.drawLine.bind(this)}\n                               mouseUp={this.hideLine.bind(this)}                             />\n                break;\n                \n            case \"Solar System\":\n                entry.elem = <Action key={key} args=\"Solar System\" action ={this.setAnim.bind(this)} />;\n                break;\n                \n            case \"The Earth and environs\":\n                entry.elem = <Action key={key} args=\"The Earth and environs\" action ={this.setAnim.bind(this)} />;\n                break;\n                \n            case \"Help\":\n                entry.elem = <Action key={key} action={this.openHelp} />;\n                break;\n                \n            default:\n                entry.elem = <div key={key}>Just the {val}</div> ;\n            }\n            \n        \n            opts.push(entry);\n        }\n        const res =  <OptionsSelector options={opts} /> ;\n        return res;\n    }\n    \n    \n    raycastResult(results) {\n        const elem = document.getElementById(\"clickTarget\");\n        var found = false;\n        var name;\n        var showString;\n        for (name in results) {\n            showString =  \"<hr/>Star: \"+name;\n            found = true;\n            break;\n        } \n        \n        if (!found) {\n            elem.innerHTML = \"<hr/>\";\n            return;\n        }\n        \n        if (!this.starFinder) {\n            this.starFinder = new StarFinder(this.starData);\n        }\n        var here = this;\n        this.starFinder.getStar(name,\n             function(star) {\n                 if (star != null) {\n                     if (star.spt) {\n                         showString += \"<br/>Spectral type: \"+star.spt;\n                     }\n                     if (star.id) {\n                         showString += \"<br>ID: \"+star.id;\n                     }\n                     var vec = here.position(star, here.time);\n                     var dist = vec.length();\n                     var distPC = dist.toFixed(3);\n                     var distLY = (dist*3.26156).toFixed(3);\n                     showString += \"<br>Distance: \"+distPC+\" pc / \"+distLY+\" ly\";\n                     if (star.np) {\n                         showString += \"<br>Known planets: \"+star.np;\n                     }\n                     elem.innerHTML = showString;\n                 }                 \n             });\n    }\n\n    \n    drawLine(from,to) {\n        if (!this.starFinder) {\n            this.starFinder = new StarFinder(this.starData);\n        }\n        if (!this.connecter) {\n            this.connecter  = new Connecter(this.starFinder);\n        }\n        this.connecter.connect(from,to,this.lineDrawer.bind(this));        \n    }\n    \n    starMessage(msg) {\n        const elem = document.getElementById(\"StarInfo\");\n        elem.innerHTML = msg;\n    }\n    \n    position(star, time) {\n        \n        var v;\n        const scl = time/30.856e12;\n\n        if (star.u == null || star.v == null || star.w == null) {\n            v = [0,0,0];\n        } else {\n            v = [scl*star.u, scl*star.v, scl*star.w];\n        }\n        return new Vector3(\n            star.x+v[0], star.y+v[1], star.z+v[2]);            \n    }\n    \n    hideLine() {\n        if (this.savedLine) {\n            this.scene.remove(this.savedLine);\n            this.savedLine = null;\n        }\n    }\n    \n    lineDrawer(from, to) {\n        if (!from) {\n            this.starMessage(\"Unable to find source star\");\n            this.hideLine();\n            return;\n        } else if (!to) {\n            this.starMessage(\"Unable to find destination star\");\n            this.hideLine();\n            return;\n        }\n        \n        const v1 = this.position(from, this.time);\n        const v2 = this.position(to, this.time);\n        const vertices = [v1,v2];\n        const material = new LineBasicMaterial({color: 0x0000ff});\n        const geometry = new BufferGeometry().setFromPoints( vertices );\n        const line = new Line( geometry, material );\n        if (this.savedLine) {\n            this.scene.remove(this.savedLine);\n        }\n        this.scene.add(line);\n        this.savedLine = line;\n        \n        // Simbad doesn't say anything about planets.\n        var fromNP = from.np ? from.np : \"?\";\n        var toNP   = to.np   ? to.np   : \"?\";\n        var fromID = from.id ? from.id : \"?\";\n        var toID   = to.id   ? to.id   : \"?\";\n        var fromSPT = from.spt ? from.spt : \"?\";\n        var toSPT   = to.spt   ? to.spt   : \"?\";\n        \n        var str = \"<table><tr><th></th><th align='center'>ID</th><th align='center'>Name</th><th align='center'>Spectral Type</th><th align='center'>Planets</th></tr>\";\n        str += \"<tr><th align='left'>From</th><td align='center'>\"+fromID+\"</td><td align='center'>\"+from.name+\"</td><td align='center'>\"+fromSPT+\"</td><td align='center'>\"+fromNP+\"</td></tr>\";\n        str += \"<tr><th align='left'>To</th><td align='center'>\"+toID+\"</td><td align='center'>\"+to.name+\"</td><td align='center'>\"+toSPT+\"</td><td align='center'>\"+toNP+\"</td></tr>\";\n        str += \"</table>Distance: \";\n        var dist = v1.distanceTo(v2);\n        const distpc = dist.toFixed(3);\n        str += distpc + \" pc / \";\n        const distly = (dist*3.26156).toFixed(3);\n        str += distly + \" ly\";\n        this.starMessage(str);\n    }\n\n    parseTime(year) {\n        if (!isNaN(year)) {\n            return (year-2000)/100 * Constants.CENTURY;\n        }  else {\n            return 0;\n        }\n    }\n}\n\nexport default LocalGalaxy;","/**\n * Solar system planets, orbital elements.\n * Derived from\n *    https://ssd.jpl.nasa.gov/txt/aprx_pos_planets.pdf\n * Keplerian Elements for Approximate Positions of the Planets\n * E M Standish\n * Solar System Dynamics Group\n * JPL /Caltech\n * \n * Planetary masses and diameters from:\n * https://nssdc.gsfc.nasa.gov/planetary/factsheet/\n * \n */\n \n\nimport Constants from \"../std/Constants.js\";\nimport Util      from \"../std/Util.js\";\n\nclass Planets {\n    \n    static bases = null;  \n    \n    /** Get the elements for the planets for a specific time. */\n    static getElements(name, time) {\n\t\tif (!Planets.bases) { \n\t\t\tPlanets.initialize();\n        }\n        // Convert t from seconds to centuries...\n        const t = time/Constants.CENTURY;\n        const elems = {};\n        const p = Planets.bases[name];\n        elems.a     = (p.elems[0] + t*p.derivs[0])*Constants.AU;\n        elems.Eccen = p.elems[1] + t*p.derivs[1];\n        elems.i     = Util.toRadians(p.elems[2] + t*p.derivs[2]);\n        // Defer conversion to radians.\n        var   ML    = p.elems[3] + t*p.derivs[3];\n        var   LonP  = Util.toRadians(p.elems[4] + t*p.derivs[4]);\n        elems.Omega = Util.toRadians(p.elems[5] + t*p.derivs[5]);\n        elems.Per   = 360./p.derivs[3] * Constants.CENTURY;\n        \n        elems.nu    = LonP - elems.Omega;\n        \n        if (p.corrections != null) {\n            ML += p.corrections[0]*t*t + \n                        p.corrections[1]*Math.cos(p.corrections[3]*t) +\n                        p.corrections[2]*Math.sin(p.corrections[3]*t);             \n        }\n        ML = Util.toRadians(ML);\n        ML = ML - elems.Omega - elems.nu;\n        \n        elems.t0    = time - ML/(2*Math.PI);\n        return {elements: elems, mass: p.mass, diameter: p.diameter, ringAngle: p.ringAngle, color: p.color, ringColor: p.ringColor};\n    }\n    \n    /** Add an entry to the planets list */\n    static add(name, elems, derivs, corrections, mass, diameter, color, ringAngle, ringColor) {\n        const base = {};\n        base.elems = elems;\n        base.derivs = derivs;\n        base.mass = mass;\n        base.diameter = diameter;\n        base.color = color;\n        base.ringAngle = ringAngle;\n        base.ringColor = ringColor;\n        if (corrections) {\n            base.corrections = corrections;\n        }\n        Planets.bases[name] = base;\n    }\n    \n    /** Add the data for each planet. */\n    static initialize() {\n\t   Planets.bases = {};\n\t   \n       Planets.add(\"Mercury\",\n         [ 0.38709843,  0.20563661,  7.00559432,    252.25166724,  77.45771895,     48.33961819],\n         [ 0.00000000,  0.00002123, -0.00590158, 149472.67486623,   0.15940013,     -0.12214182],\n         null, 0.33e24, 4879, 0xAAAAFF,  null);\n       \n       Planets.add(\"Venus\",\n         [ 0.72332102,  0.00676399,  3.39777545,    181.97970850, 131.76755713,  76.67261496],\n         [-0.00000026, -0.00005107,  0.00043494,  58517.81560260,   0.05679648,  -0.27274174],\n         null, 4.87e24, 12104, 0xFFFFFF, null);\n         \n       Planets.add(\"EM Bary\",\n         [ 1.00000018,  0.01673163, -0.00054346,    100.46691572, 102.93005885,  -5.11260389],\n         [-0.00000003, -0.00003661, -0.01337178,  35999.37306329,   0.31795260,  -0.24123856],\n         null, 5.97e24, 12756, 0x0000FF, null);\n       Planets.add(\"Mars\",\n          [ 1.52371243,   0.09336511,  1.85181869,     -4.56813164, -23.91744784,  49.71320984],\n          [ 0.00000097,   0.00009149, -0.00724757,  19140.29934243,   0.45223625,  -0.26852431],\n         null, 0.642e24, 6792, 0xFF0000, null);\n       Planets.add(\"Jupiter\",\n          [ 5.20248019,   0.04853590,  1.29861416,     34.33479152,  14.27495244, 100.29282654],\n          [-0.00002864,   0.00018026, -0.00322699,   3034.90371757,   0.18199196,   0.13024619],\n          [-0.00012452,   0.06064060, -0.35635438,     38.35125000],\n          1898e24, 142984, 0x00FF00, null\n          );\n       Planets.add(\"Saturn\",\n         [ 9.54149883,   0.05550825,  2.49424102,     50.07571329,  92.86136063, 113.63998702],\n         [-0.00003065,  -0.00032044,  0.00451969,   1222.11494724,   0.54179478,  -0.25015002],\n         [ 0.00025899,  -0.13434469,  0.87320147,     38.35125000],\n         568e24, 120536, 0xAAFFAA, 26.7, 0xffff00\n       );\n       Planets.add(\"Uranus\",\n         [19.18797948,   0.04685740,  0.77298127,    314.20276625, 172.43404441,  73.96250215],\n         [-0.00020455,  -0.00001550, -0.00180155,    428.49512595,   0.09266985,   0.05739699],\n         [ 0.00058331,  -0.97731848,  0.17689245,      7.67025000],\n         86.8e24, 51118, 0xAAFFFF, null\n       );\n       Planets.add(\"Neptune\",\n         [30.06952752,   0.00895439,  1.77005520,    304.22289287,  46.68158724, 131.78635853],\n         [ 0.00006447,   0.00000818,  0.00022400,    218.46515314,   0.01009938,  -0.00606302],\n         [-0.00041348,   0.68346318, -0.10162547,      7.67025000],\n         102e24, 49528, 0x00FFFF, null\n        );\n       Planets.add(\"Pluto\",\n         [39.48686035,   0.24885238, 17.14104260,    238.96535011, 224.09702598, 110.30167986],\n         [ 0.00449751,   0.00006016,  0.00000501,    145.18042903,  -0.00968827,  -0.00809981],\n         [-0.01262724,   0,           0,               0],\n         0.0146e24, 2370, 0xFFFFFF, null\n        );\n         \n       Planets.bases[\"Earth\"] = Planets.bases[\"EM Bary\"];\n    }\n}\n\nexport default Planets;","import Util from '../std/Util.js';\r\nimport ParameterFactory from './ParameterFactory.js';\r\n\r\nclass Parameter {\r\n    static  SCALAR = 0;\r\n    static  VECTOR = 1; \r\n    static  MATRIX = 2;\r\n    static  BLOB   = 3;  // Non-standard structure.\r\n    \r\n    constructor(name, value, dim, varies, renderer, unit) {\r\n        this.name     = name;\r\n        this.dim      = dim;\r\n        this.varies   = varies;\r\n        this.value    = value\r\n        this.renderer = renderer;\r\n        this.unit     = unit;\r\n    }\r\n\r\n    render() {\r\n        if (!this.renderer) {            \r\n            return this.value;\r\n        }\r\n        const val = this.renderer(this.value, this.unit);\r\n        return val;\r\n    }\r\n    \r\n    rerender() {\r\n        const info = ParameterFactory.getParamInfo(this.name);\r\n        const units = info.units;\r\n        if (!units) {\r\n            Util.log(\"No units for parameter\");\r\n            return;\r\n        }\r\n        var i;\r\n        for (i=0; i<units.length; i += 1 ) {\r\n            // If a unit was specified and they match,\r\n            // or no unit was specified and the scale is 1\r\n            // then we've found the current unit.\r\n            if ((this.unit && (units[i].unit === this.unit.unit)) ||\r\n                (!this.unit && (units[i].scale === 1))) {\r\n                break;\r\n            }\r\n        }\r\n        if (i > units.length) {\r\n            Util.log(\"Unit not found in rerender: \"+this.name+\" \"+this.unit.unit);\r\n            return;            \r\n        }\r\n        i = (i+1) % units.length;\r\n        this.unit = units[i];\r\n        const res = this.render();\r\n        return res;\r\n    }\r\n    setUnit(unit) {\r\n        this.unit = unit;\r\n    }\r\n    \r\n    getDim(dim) {\r\n        return this.dim;\r\n    }\r\n   \r\n    getName() {\r\n        return this.name;\r\n    }\r\n    \r\n    getType() {\r\n        return this.dim;\r\n    }\r\n        \r\n\r\n    getScalar() {\r\n        switch (this.dim){\r\n            case Parameter.SCALAR:\r\n                return this.value;\r\n                \r\n            // For vector quantities return the magnitude of the vector.\r\n            case Parameter.VECTOR:                \r\n                return Util.mag(this.value);\r\n                \r\n            // For matrix quantities return the determinant\r\n            // We assume 3d matrices.\r\n            case Parameter.MATRIX:\r\n                return Util.determinant3(this.value);\r\n                \r\n            default:\r\n                throw new Error(\"Unsupported dimensionality \"+this.dim+\" for \"+this.name);\r\n        }\r\n    }\r\n\r\n    getVector() {\r\n        if (this.dim === Parameter.VECTOR  || this.dim === Parameter.BLOB) {\r\n            return this.value;\r\n        } else {\r\n                throw new Error(\"Vector request for non-vector parameter \"+this.name); \r\n        }\r\n    }\r\n    \r\n    getMatrix() {\r\n        if (this.dim === Parameter.MATRIX) {\r\n            return this.value;\r\n        } else {\r\n            throw new Error(\"Matrix request for non-matrix parameter \"+this.name);\r\n        }\r\n    }\r\n\r\n    isScalar() {\r\n        return this.dim === Parameter.SCALAR;\r\n    }\r\n    \r\n    isVector() {\r\n        return this.dim === Parameter.VECTOR;\r\n    }\r\n    \r\n    isMatrix() {\r\n        return this.dim === Parameter.MATRIX;\r\n    }\r\n}\r\n\r\nexport default Parameter;\r\n","/** This function solves Kepler's equation to find\n *  the eccentric anomaly as a function of the mean anomaly.\n// For orbits with eccentricity near 1 we need\n// to be careful when MA is near 0 or Pi.  There is a vast art on this\n// problem but for the nonce we are using a simple but likely inefficient\n// approach.  Note the functions defined.  Nominally this should work\n// for both elliptical and hyperbolic orbits.\n * \n */\n \nimport Constants from \"../std/Constants.js\";\nimport Util      from \"../std/Util.js\";\n\nconst Kepler = function(ma, ecc) {\n\n    if (ecc < 0) {\n        throw new Error(\"Illegal argument to kepler:\"+ma+\" \"+ecc);\n    }\n    \n    // For periodic orbits set the range to 0 to 2*PI.\n    if (ecc < 1) {\n        if (ma < 0 || ma > 2*Math.PI) {\n            ma = ma%(2*Math.PI);\n            if (ma < 0) {\n                ma += 2*Math.PI;\n            }\n        }\n    }\n    \n    \n\n    // Mean anomaly from eccentric anomaly and eccentricity\n    function fma(ea, ecc) {\n\n        var val;\n        if (ecc > 1) {\n            val = ecc * Math.sinh(ea) - ea;\n        } else {\n            val = ea - ecc * Math.sin(ea);\n        }\n        return val;\n    }\n\n    // Derivative of ma with respect to ea.\n    function fdma(ea, ecc) {\n        if (ecc > 1) {\n            return (ecc * Math.cosh(ea) - 1);\n        } else {\n            return (1 - ecc * Math.cos(ea));\n        }\n    }\n\n    if (ecc < Constants.SHAPE_RATIO) {\n        // Circular orbit, so ma = ea = ta\n        return ma;\n    }\n\n    // Now we just iterate till we converge.  We know\n    // that if ma is between 0-pi, or pi-2pi, then ea is\n    // in same range so we can limit overshoots.\n    // Use initial guess\n\n    var emin, emax;\n        // Somewhat to my surprise a using just ma as the initial\n        // value seemed to be fastest although using ma/(1-e) for\n        // small ma seems like it should be better.  That does\n        // do slightly fewer evaluations, but overall seems to\n        // take longer.  There may be something\n        // else that needs to be fixed.    \n    var eaTest = ma;\n    if (ecc < 1) {\n        emin = 0;\n        if (ma > Math.PI) {\n            emin = Math.PI;\n        }\n        emax = emin + Math.PI;\n        \n    } else {\n        // The maximum value for the true anomaly is acos(-1/e), but\n        // we believe that the eccentric anomaly is not constrained,\n        // so we set the limits to rather large values.\n        \n        if (ma <= 0) {\n            emin = -1.e10;\n            emax = 0;\n        }  else {\n            emin = 0;\n            emax =  1.e10;\n        }\n        if (Math.abs(ma) > 2*Math.PI) {\n            eaTest = Math.asinh(ma/ecc);            \n        }\n    }\n\n    if (eaTest > emax) {\n        eaTest = emax;\n    }\n    if (eaTest < emin) {\n        eaTest = emin;\n    } \n\n    var maTest = fma(eaTest, ecc);\n    var dmadea = fdma(eaTest, ecc);\n\n    var iter = 0;\n\n    while (true) {\n                \n\n        iter += 1;\n        if (iter > 1000) {\n            Util.log(\"EA calculation: Too many iterations:\" + ecc + \" \" + ma);            \n            return null;\n        }\n        var delta = ma - maTest;\n\n        if (Math.abs(delta) < Constants.HALT_RATIO) {\n            return eaTest;\n        }\n        dmadea    = fdma(eaTest, ecc);\n\n\n        if (delta > 0) {\n            emin = eaTest;\n        } else {\n            emax = eaTest;\n        }\n\n        var eaDelta = delta / dmadea;\n\n        var maNew;\n        var eaNew;\n        var smaller = false;  // Flag if we jump too far.\n\n        // Loop to adjust the size we jump on this iteration.\n        // We may be either jumping too far such that\n        // the delta is increasing, or too little so that\n        // we don't significantly reduce the delta.\n        var subiter = 0;\n        while (true) {\n            subiter += 1;\n            if (subiter > 100) {\n                return null;\n            }\n\n            // Make sure we don't go past the firm boundaries\n            // for the EA.\n            eaNew = eaTest + eaDelta;\n            if (eaNew > emax) {\n                eaNew = emax;\n            } else if (eaNew < emin) {\n                eaNew = emin;\n            }\n            \n\n            // Try the Newton's method value.\n            maNew = fma(eaTest + eaDelta, ecc);\n            var deltaNew = ma - maNew;\n\n\n            // If we decreased the delta by a lot, then this is good enough.\n            if (Math.abs(deltaNew / delta) < 0.5) {\n                break;\n            }\n\n            // The delta got worse, we jumped too far.\n            if (Math.abs(deltaNew / delta) > 1) {\n\n                // Moved too far...\n                eaDelta /= 2;\n                smaller = true;\n\n            } else {\n\n                // The delta got smaller, but not by very much.\n                // Maybe we could try to jump a little further?\n\n                if (smaller) {\n                    // Not this time...\n                    // In a prior iteration we'd been reducing the size of the jump\n                    // because it was actually increasing delta.  Now\n                    // that we've begun decreasing delta we'll accept this\n                    // value for this iteration.  If we need to we can\n                    // try increasing it next iteration.\n                    break;\n                }\n                // Test doubling eaDelta and see if it's better\n                // If so we'll stay in this loop with the value.  If not\n                // we break and use the old value for eaDelta.\n                var maX = fma(eaTest + 2 * eaDelta, ecc);\n                if (Math.abs(maX - ma) < Math.abs(maNew - ma)) {\n                    eaDelta *= 2;\n                } else {\n                    break;\n                }\n            }\n        }\n        \n        eaTest = eaNew;\n        maTest = maNew;\n        \n    }\n};\n\nexport default Kepler;\n","/** This file contains the generators for all of the orbital parameters that\n *  can be determined from other parameters.\n *  \n *  We use the Parameter.addGenerator method to add each generator to\n *  the parameter factory. This method has three arguments that define\n *  each generator:\n *     - A string giving the standard name of the parameter which can be\n *       inferred from known parameters. (\"a\" in the first generator)\n *     - An array of strings giving the standard names of the parameters that\n *       are needed to infer the new parameter.  Default values for constants\n *       can be inferred using an 0 length array. (\"G\", \"M\", \"E\" in the first generator)\n *     - A function which describes how the new parameter can be determined from\n *       the existing parameters.  It takes one argument: a hash of the known\n *       parameters, called params here.  E.g., in the first generator we calculate\n *       the semimajor axis using a = -.5GM/E (recalling that the energy for a bound\n *       orbit is negative).\n *       \n *  The may be multiple generators for a given output parameter, and these \n *  will be checked in order specified to see if the prerequisite parameters\n *  are known.  \n *  \n *  In a few special situations, even when all of the prerequisite parameters\n *  are known, the parameter cannot be determined, so that the function returns a null.\n *  \n *  The ParameterFactory.genParameter function adds the type and and varies information\n *  to the value of the parameter that we determine here. \n *  \n */\n\nimport Constants        from \"../std/Constants.js\";\nimport Util             from \"../std/Util.js\";\nimport ParameterFactory from \"./ParameterFactory.js\";\nimport Kepler           from \"./Kepler.js\";\n\nconst LoadOrigins = function () {\n    // We enclose all of this in a function to enable localization internal\n    // variables and functions.\n    // \n    // Shortcut names.\n    const gadd = ParameterFactory.addGenerator;\n    const pgen = ParameterFactory.genParam;\n\t\n\tif (ParameterFactory.generators != null) {\n\t\treturn;\n\t}\n\t\n\tParameterFactory.generators = {};\n\n    /** a: the semimajor axis of the orbit.  This is undefined for\n     *  parabolas, and negative for hyperbolas.\n     */\n\n    gadd(\"a\", [\"G\", \"M\", \"E\"],\n            function (params) {\n                // a = GM/2E\n                const G = params[\"G\"].value;\n                const M = params[\"M\"].value;\n                const E = params[\"E\"].value;\n                if (E === 0) {\n                    Util.log(\"Parabolic orbit, a is undefined from E\");\n                    return pgen(\"a\", Math.NaN);\n                }\n                const val = -0.5 * G * M / E;\n        \n                return pgen(\"a\", val);\n            }\n    );\n    \n    gadd(\"a\", [\"G\", \"M\", \"m1\", \"Per\"],\n      // Kepler's law\n      // a = cbrt(g(M+m1)p^2 /  4pi^2)\n      function(params) {\n          const g = params[\"G\"].value;\n          const p = params[\"Per\"].value;\n          const m = params[\"M\"].value;\n          const dm = params[\"m1\"].value;\n          const a = Math.cbrt(g*(m+dm)*p*p/(4*Math.PI*Math.PI));\n          return pgen(\"a\", a);\n      }\n    );\n\n    /** b: the semiminor axis */\n    gadd(\"b\", [\"Ecc\", \"a\"],\n            function (params) {\n                const e = Util.mag(params[\"Ecc\"].value);\n                const a = params[\"a\"].value;\n                var sign = 1;\n                if (e > 1) {\n                    sign = -1;\n                }\n                \n                return pgen(\"b\", a * Math.sqrt(sign*(1 - e * e)));\n            }\n    );\n\n    /** C: The center of the ellipse relative to the focus of rotation. */\n    gadd(\"C\", [\"a\", \"Ecc\"],\n            function (params) {\n\n                // The center of the eccentricity vector is pointing\n                // To the periapsis and has a magnitude of the eccentricity.\n                // The distance between the focus and the center is just the\n                // eccentricty x the semimajor axis.\n                const e = params[\"Ecc\"].value;\n                const em = Util.mag(e);\n\n                const a = params[\"a\"].value;\n\n                if (em < 1.e-12) {\n                    return pgen(\"C\", [0, 0, 0]);\n\n                } else if (Math.abs(em - 1) < 1.e-12) {\n                    Util.log(\"Center not defined for parabola\");\n                    return null;\n\n                } else {\n                    // In the opposite direction from the periapsis\n                    // reduced from a by eccentricity, which is\n                    // conveniently already in the eccentricity vector.\n                    // Not that for hyperbolic orbits a is negative, and\n                    // the other focus is further out than the periapsis point.\n                    const c = Util.times(-a, e);\n                    return pgen(\"C\", c);\n                }\n            }\n    );\n\n    /**\n     * E: The energy of the orbit.\n     */\n    gadd(\"E\", [\"G\", \"M\", \"r\", \"v\"],\n            function (params) {\n\n                const v = params[\"v\"].getScalar();\n                const r = params[\"r\"].getScalar();\n                const g = params[\"G\"].value;\n                const m = params[\"M\"].value;\n                return pgen(\"E\", v * v / 2 - g * m / r);\n            }\n    );\n\n    gadd(\"E\", [\"G\", \"M\", \"a\"],\n            function (params) {\n                const g = params[\"G\"].value;\n                const m = params[\"M\"].value;\n                const a = params[\"a\"].value;\n                return pgen(\"E\", -0.5 * g * m / a);\n            }\n    );\n\n    /**\n     * EA: The eccentric anomaly.\n     * The angle between the periapsis and a projection of the particle onto the\n     * circle in which the ellipse is embedded,\n     * using a projection perpendicular to the vector to periapsis.\n     */\n    gadd(\"EA\", [\"TA\", \"Ecc\"],\n            function (params) {\n                const em = params[\"Ecc\"].getScalar();\n                const ta = params[\"TA\"].value;\n\n                // tan (ta/2) = sqrt((1+e)/(1-e)) * tan (ea/2)\n                var sign = 1;\n                if (em > 1) {\n                    sign = -1;\n                }\n\n                var ea = Math.sqrt(sign*(1 - em) / (1 + em)) * Math.tan(ta / 2);\n                if (em < 1) {\n                    ea = 2*Math.atan(ea);\n                    // For periodic orbits make range 0 to 2PI\n                    if (ta > Math.PI && ea < Math.PI) {\n                        ea = 2 * Math.PI - ea;\n                    }\n                } else {\n                    // For unbound we want will leave range centered on 0.\n                    ea = 2*Math.atanh(ea);\n                }\n\n\n\n                return pgen(\"EA\", ea);\n            }\n    );\n    \n\n    gadd(\"EA\", [\"MA\", \"Ecc\"],\n            function (params) {\n                \n                const ma  = params[\"MA\"].value;\n                const ecc = params[\"Ecc\"].getScalar();\n                const ea  = Kepler(ma, ecc);\n                if (ea == null) {\n                    return null;\n                } else {                    \n                    return pgen(\"EA\", ea);\n                }\n            }\n    );\n\n    /**\n     * Ecc: The eccentricity vector of the ellipse which points to the periapsis and\n     * has a magnitude equal to the eccentricity.\n     */\n    gadd(\"Ecc\", [\"G\", \"M\", \"r\", \"v\"],\n            function (params) {\n                const r = params[\"r\"].value;\n                const v = params[\"v\"].value;\n                const rm = Util.mag(r);\n                const G = params[\"G\"].value;\n                const M = params[\"M\"].value;\n                const f1 = Util.times(1/(G*M), Util.cross(v, Util.cross(r,v)));\n                const f2 = Util.times(-1/rm, r) \n                return pgen(\"Ecc\", Util.vadd(f1,f2));\n            }\n    );\n\n    gadd(\"Ecc\", [\"Eccen\", \"Rot\", \"nu\"],\n            function (params) {\n                const e = params[\"Eccen\"].getScalar();\n                const rot = params[\"Rot\"].value;\n                const nu  = rot[5];\n                \n                // We want the point where TA is 0.\n                \n                const cos = e*Math.cos(nu);\n                const sin = e*Math.sin(nu);\n                \n                const vec = [rot[0]*cos + rot[1]*sin,\n                             rot[2]*cos + rot[3]*sin,\n                             rot[4]*sin];\n                         \n                return pgen(\"Ecc\", vec);\n            }\n    );\n\n    /** The scalar eccentricity is not generally used internally\n     *  but is often supplied as input.  We include it here for completeness.\n     */\n    gadd(\"Eccen\", [\"Ecc\"],\n            function (params) {\n                return pgen(\"Eccen\", params[\"Ecc\"].getScalar());\n            }\n    );\n\n\n    /**\n     * eF2: The energy scaled vector to the second focus.\n     * Note that this goes to invinity only as the energy of the orbit goes to infinity.\n     */\n    gadd(\"eF2\", [\"Ecc\", \"E\", \"a\"],\n            function (params) {\n\n                // The second focus is 2ea from the primary focus\n                // in the opposite direction of the Ecc vector.\n                const eccv = params[\"Ecc\"].value;\n                const e = params[\"E\"].value;\n                const a = params[\"a\"].value;\n\n                const ef2 = Util.times(-2 * a * e, eccv);\n                return pgen(\"eF2\", ef2);\n            }\n    );\n\n    /** G: Gravitational constant.  MKS by default. */\n    gadd(\"G\", {},\n            function (params) {\n                return pgen(\"G\", Constants.G);\n            }\n    );\n\n    /**\n     * i: The inclination of the orbital plane relative to the equatorial plane of the coordinate system\n     *    (the ecliptic for solar orbits).  For non-radial orbits we\n     * can get this from the angular momentum vector but for radial orbits\n     * we need to use the position or velocity vectors.\n     */\n    gadd(\"i\", [\"L\"],\n            function (params) {\n                const L = params[\"L\"].value;\n                const mag = Util.mag(L);\n                if (mag === 0) {\n                    Util.log(\"Radial orbit so computation of inclination from angular momentum fails.\");\n                    return null;\n                } else {\n                    const dot = Util.dot(L, [0, 0, 1]) / Util.mag(L);\n                    return pgen(\"i\", Math.acos(dot));\n                }\n            }\n    );\n\n    // From r,v.  This works for radial orbits too.\n    gadd(\"i\", [\"r\", \"v\"],\n            function (params) {\n                var rv = params[\"r\"].value;\n                var rm = Util.mag(rv);\n                const vv = params[\"v\"].value;\n                const vm = Util.mag(vv);\n\n                const L = Util.cross(rv, vv);\n                const Lm = Util.mag(L);\n\n                // Check for redial orbit...\n                if (Lm > Constants.SHAPE_RATIO * rm * vm) {\n                    const dot = Util.dot(L, [0, 0, 1]) / Util.mag(L);\n                    return pgen(\"i\", Math.acos(dot));\n                } else {\n                    // A radial orbit doesn't have a direction of revolution,\n                    // so we will always pick a positive inclination.\n                    if (rm === 0) {  // Substitute the velocity vector if we are at the origin.\n                        rv = vv;\n                        rm = vm;\n                    }\n                    if (rm === 0) {\n                        Util.log(\"Inclination undefined: Singular orbit, stationary at origin\");\n                        return null;\n                    }\n                    var dot = Util.dot(rv, [0, 0, 1]) / rm;\n                    dot = Math.abs(dot);\n                    return pgen(\"i\", Math.PI / 2 - Math.acos(dot));\n                }\n            }\n    );\n\n    /** L: The angular momentum vector */\n    gadd(\"L\", [\"r\", \"v\"],\n    \n            function (params) {\n                const r = params[\"r\"].value;\n                const v = params[\"v\"].value;\n                const l = Util.cross(r, v);\n\n                return pgen(\"L\", l);\n            }\n    );\n\n    gadd(\"L\", [\"G\", \"M\", \"Eccen\", \"E\", \"Rot\"],\n            function (params) {\n                const E   = params[\"E\"].value;\n                const rot = params[\"Rot\"].value;\n                \n                // Note that this is the eccentricity scalar, not vector\n                \n                const ecc = params[\"Eccen\"].value;\n                const g   = params[\"G\"].value;\n                const m   = params[\"M\"].value;\n\n                // Get the magnitude of the angular momentum.\n                const Lm = g * m * Math.sqrt((ecc * ecc - 1) /(2 * E));\n                                // Six element vector with to make efficient position computations.\n//                rot       = [0:co,  1:-so*ci,  // Coefficients for x \n//                             2:so,  3:co*ci,   // Coefficients for y\n//                             4:si,             // Coefficients for z\n//                             5:n]              // Save nu so all rotation information stored in rot.    \n\n                \n                // L = Lm [so si, -co si, co]\n                // Rot is intended to rotate the x axis, so we have to play\n                // a little to rotate the z axis.\n                \n                var l = [Lm*rot[2]*rot[4], -Lm*rot[0]*rot[4], Lm*rot[3]/rot[0] ];\n\n                return pgen(\"L\", l);\n            }\n    );\n\n    /**\n     * LonP: Longitude of Perihelion.\n     * This seems to be just the argument of perihelion+the longitude of the ascending node.\n     */\n    gadd(\"LonP\", [\"Omega\", \"nu\"],\n            function (params) {\n                const nu = params[\"nu\"].value;\n                const omega = params[\"Omega\"].value;\n\n                return pgen(\"LonP\", nu + omega);\n            }\n    );\n    \n\n    /** M: Mass of the central object: defaults to mass of the Sun */\n    gadd(\"M\", [],\n            function (params) {\n                return pgen(\"M\", Constants.MSun);\n            }\n    );\n    \n    /** m1: The mass of the orbiting body.  Defaults to 0 */\n    gadd(\"m1\", [],\n        function(params) {\n            return pgen(\"m1\", 0);\n        }\n    );\n    \n\n    /** MA: The mean anomaly is a uniform measure of time as phase along the orbit,\n     *  E.g., as in our first definition: just 2*PI*(t-t0)/period where t0 is the time of periapsis \n     **/\n    gadd(\"MA\", [\"t\", \"t0\", \"Per\"],\n            function (params) {\n                // The Mean anomaly is defined as\n                // MA = 2*Pi*(t-t0)/Period.\n                const p = params[\"Per\"].value;\n                if (p === Number.POSITIVE_INFINITY) {\n                    return null;\n                }\n                \n                const t = params[\"t\"].value;\n                const t0 = params[\"t0\"].value;\n\n                var ma = (t - t0) / p;\n                ma = ma - Math.floor(ma);\n                ma *= 2 * Math.PI;\n\n                return pgen(\"MA\", ma);\n            }\n    );\n    \n\n    gadd(\"MA\", [\"EA\", \"Ecc\"],\n            function (params) {\n                const e = params[\"Ecc\"].getScalar();\n                const ea = params[\"EA\"].value;\n                if (e < Constants.SHAPE_RATIO) {\n                    // If the orbit is circular then MA = EA\n                    return pgen(\"MA\", ea);\n                }\n\n                var ma;\n                // Kepler's equation in the easy direction\n                if (e < 1) {                    \n                    ma = ea - e * Math.sin(ea);\n                } else {\n                    ma = e*Math.sinh(ea) - ea;\n                }\n                return pgen(\"MA\", ma);\n            }\n    );\n    \n    // This definition might get used for hyperbolic orbits.\n    gadd(\"MA\", [\"t\", \"t0\", \"G\", \"M\", \"a\"],\n            function(params) {\n                 const t   = params[\"t\"].value;\n                 const t0  = params[\"t0\"].value;\n                 const G   = params[\"G\"].value;\n                 const M   = params[\"M\"].value;\n                 // For hyperbolic orbits a < 0.\n                 const a   = Math.abs(params[\"a\"].value);\n                 const ma = Math.sqrt(G*M/(a*a*a)) * (t-t0);\n                 return pgen(\"MA\", ma);\n             }\n    );\n\n    gadd(\"MA\", [\"MLon\", \"Omega\", \"nu\"],\n            function (params) {\n                const ml = params[\"MLon\"].value;\n                const omega = params[\"Omega\"].value;\n                const nu = params[\"nu\"].value;\n                return pgen(\"MA\", ml - omega - nu);\n            }\n    );\n\n    /**\n     * MLon: Mean longitude\n     * This seems to be just the argument of perihelion+the longitude of the ascending node.\n     */\n    gadd(\"MLon\", [\"MA\", \"Omega\", \"nu\"],\n            function (params) {\n                const ma    = params[\"MA\"].value;\n                const nu    = params[\"nu\"].value;\n                const omega = params[\"Omega\"].value;\n\n                return pgen(\"MLon\", ma + nu + omega);\n            }\n    );\n    \n    /**\n     * N0: Mean motion in orbits/day\n     */\n    gadd(\"N0\", [\"Per\"],\n        function(params) {\n           return pgen(\"N0\", 86400./params[\"Per\"].value);\n        }\n    );\n\n    /**\n     * nu: Argument of periapsis.\n     * This is the angle between the line of nodes and \n     * the vector to the periapsis.\n     */\n    gadd(\"nu\", [\"Ecc\", \"Pnode\", \"L\"],\n            function (params) {\n                var p = params[\"Pnode\"].value;\n                var e = params[\"Ecc\"].value;\n                var L = params[\"L\"].value;\n\n                if ((Util.mag(p) === 0) || (Util.mag(e) === 0)) {\n                    Util.log(\"Circular orbit or in plane so  argument of periapsis not defined. using 0\");\n                    return pgen(\"nu\", 0);\n                } else {\n                    const cs = Util.dot(p, e) / Util.mag(p) / Util.mag(e);\n                    var   nu = Math.acos(cs);\n                    // Chech whether we are in 0-PI or PI-2PI\n                    const cross = Util.cross(p, e);\n                    const dir = Util.dot(cross, L);\n                    if (dir < 0) {\n                        nu = 2*Math.PI - nu;\n                    }\n                    return pgen(\"nu\", nu);\n                }\n            }\n    );\n\n    gadd(\"nu\", [\"LonP\", \"Omega\"],\n            function (params) {\n                const lp = params[\"LonP\"].value;\n                const omega = params[\"Omega\"].value;\n\n                return pgen(\"nu\", lp - omega);\n            }\n    );\n\n    /**\n     * Omega: The longitude of the ascending node.  Normally the\n     * longitude of the point at which the orbit crosses the equator going up.\n     * This is ill defined for radial, circular or equatorial orbits.\n     * If the orbit is in the equatorial plane, the longitude of the periapsis is used.\n     * If the orbit is radial, then the direction of the orbit when it rising through the\n     * plane is used.  If the orbit is radial in the z direction, or circular in the \n     * equatorial plane, the the value is set to 0.\n     */\n\n    gadd(\"Omega\", [\"Pnode\"],\n            function (params) {\n\n                // Just the longitude of the Pnode vector.\n                // Returned in radians.\n\n                var pnode = params[\"Pnode\"].value;\n                pnode = Util.times(1 / Util.mag(pnode), pnode);\n                const x = pnode[0];\n                const y = pnode[1];\n                var res = 0;\n                if (Math.abs(x) > Constants.PLANAR_RATIO || Math.abs(y) >= Constants.PLANAR_RATIO) {\n                    res = Math.atan2(y, x);\n                    return pgen(\"Omega\", res);\n                } else {\n                    // In the plane or radial\n                    return null;\n                }\n            }\n    );\n\n    /** Per: The period of the orbit in seconds */\n    gadd(\"Per\", [\"a\", \"b\", \"L\"],\n    \n            // The area of the ellipse is pi a b \n            // The rate at which we are sweeping out area is 1/2 rv where we have\n            // the 1/2 since we are sweeping out little triangles, not rectangles.\n            function (params) {\n                const a = params[\"a\"].value;\n                if (a <= 0) {\n                    // Unbound orbit\n                    return pgen(\"Per\", Number.POSITIVE_INFINITY);\n                }\n                const b = params[\"b\"].value;\n                const L = params[\"L\"].getScalar();\n                // while \n                if (a * b === 0 || L === 0) {\n                    Util.log(\"Cannot calculate period for radial orbit\");\n                    return null;\n                } else {\n                    return pgen(\"Per\", 2*Math.PI * a * b / L);\n                }\n            }\n    );\n    \n    gadd(\"Per\", [\"N0\"],\n        function(params) {\n           return pgen(\"Per\", 86400./params[\"N0\"].value);\n        }\n    );\n\n    gadd(\"Per\", [\"a\", \"G\", \"M\", \"m1\"],\n            function(params) {\n                const a = params[\"a\"].value;\n                if (a <= 0) {\n                    // Unbound orbit\n                    return pgen(\"Per\", Number.POSITIVE_INFINITY);\n                }\n                const G = params[\"G\"].value;\n                const M = params[\"M\"].value;\n                const m1 = params[\"m1\"].value;\n                return pgen(\"Per\", 2*Math.PI/Math.sqrt(G*(M+m1)) * Math.pow(a, 1.5));\n            }\n    );\n    \n\n    /**\n     * Pnode: A vector along the line of nodes.  As discussed with the parameter Omega there\n     * are a number of special cases when the line of nodes is not well defined.\n     * and various 'backup' definitions are used.  \n     */\n    gadd(\"Pnode\", [\"L\"],\n            function (params) {\n                // p = z x L  where z is the z unit vector.\n\n                const l = params[\"L\"].value;\n                const mag = Util.mag(l);\n                const z = [0, 0, 1];\n                const pnode = Util.cross(z, l);\n                const pmag = Util.mag(pnode);\n                // If the magnitude of the angular momentum perpendicular to\n                // the z axis is too small we may have a circular orbit.\n                if (pmag / mag < Constants.PLANAR_RATIO) {\n                    return null;\n                }\n                // Make it a unit vector...\n                return pgen(\"Pnode\", Util.times(1/pmag, pnode));\n            }\n    );\n\n    gadd(\"Pnode\", [\"L\", \"Ecc\"],\n            function (params) {\n\n                // If this generator is called, then L is defined,\n                // but the previous generator returned null.  This means that\n                // The orbit is in the plane or radial.\n\n                const ecc = params[\"Ecc\"].value;\n                const eccm = Util.mag(ecc);\n                const x = ecc[0];\n                const y = ecc[1];\n\n                // If the orbit is cicular or along the z axis, the choice of\n                // the vector to the node is arbitrary and we just have it point along\n                // the x axis.\n                if ((eccm < Constants.SHAPE_RATIO) ||\n                        (Math.abs(x) < Constants.SHAPE_RATIO && Math.abs(y) < Constants.SHAPE_RATIO)) {\n                    return pgen(\"Pnode\", [1, 0, 0]);\n                }\n                return pgen(\"Pnode\", Util.times(1 / eccm, ecc));\n\n            }\n    );\n\n    /**\n     * r: The instantaneous position vector of the object.\n     * In this context we are deriving the position at a given time (using TA)\n     * given the orbital elements of the system.  Presumably i and Omega were\n     * used in computing Rot.\n     */\n    gadd(\"r\", [\"Rot\", \"Ecc\", \"a\", \"TA\"],\n            function (params) {\n                \n                const rot = params[\"Rot\"].value;\n                const e   = params[\"Ecc\"].getScalar();\n                const a   = params[\"a\"].value;\n                const ta  = params[\"TA\"].value;\n                \n                \n                // First we compute the position vector in the plane of the orbit with\n                // x pointing to the periapsis.\n                // The radius as a function of TA is                \n                const  r = a * Math.abs(1 - e * e) / (1 + e * Math.cos(ta));\n                // So the vector in the plane is just\n                \n                const nu  = rot[5];\n                const cos = r*Math.cos(ta+nu);\n                const sin = r*Math.sin(ta+nu);\n\n                const rv = [rot[0]*cos + rot[1]*sin, \n                            rot[2]*cos + rot[3]*sin,\n                            rot[4]*sin];\n                        \n                return pgen(\"r\", rv);\n            }\n    );\n\n\n    /**\n     * Rot: information used in the rotation computation  \n     *  Given the scalar radius rm, we get the components of r_i using\n     *   r_i = r* ( rot[i][0]*cos(TA+nu) + rot[i][1]*sin(TA+nu)   ) \n     */\n    gadd(\"Rot\", [\"Omega\", \"i\", \"nu\"],\n            function (params) {\n                \n                const o  = params[\"Omega\"].value;\n                const co = Math.cos(o);\n                const so = Math.sin(o);\n                \n                const i  = params[\"i\"].value;\n                const ci = Math.cos(i);\n                const si = Math.sin(i)\n                \n                const n  = params[\"nu\"].value;\n                \n                // Six element vector with to make efficient position computations.\n                const vec = [co,  -so*ci,  // Coefficients for x \n                             so,   co*ci,  // Coefficients for y\n                             si,           // Coefficients for z\n                             n]            // Save nu so all rotation information stored in rot.    \n                return pgen(\"Rot\", vec);\n            }\n    );\n    \n    /**\n     * t: the current time.  Note that this is modulo the orbital period\n     * for bound orbits.\n     */\n    gadd(\"t\", [\"t0\", \"MA\", \"Per\"],\n            function (params) {\n                const per = params[\"Per\"].value;\n                if (per === Number.POSITIVE_INFINITY) {\n                    return null;  // Hyperbolic orbit, need different info.\n                }\n                const t0 = params[\"t0\"].value;\n                const ma = params[\"MA\"].value;\n                const t = t0 - ma / (2 * Math.PI) * per;\n                return pgen(\"t\", t);\n            }\n    );\n    gadd(\"t\", [\"t0\", \"MA\", \"Per\", \"a\", \"G\", \"M\"],\n            function (params) {\n                // To get here, we must have had the period be infinite in\n                // the previous generator, so we have a hyperbolic orbit.\n                // Don't need the period, but it's a needed argument\n                // to ensure that precondition is met.\n                const t0 = params[\"t0\"].value;\n                const ma = params[\"MA\"].value;\n                const a = Math.abs(params[\"a\"].value);  // negative for hyperbolic\n                const G = params[\"G\"].value;\n                const M = params[\"M\"].value;\n                \n                const tx = ma*Math.sqrt(a*a*a/(G*M));  // tx = t-t0\n                return pgen(\"t\", t0+tx);\n            }\n    );\n    \n\n    /**\n     * t0: The time of periapsis passage.\n     * \n     */\n    gadd(\"t0\", [\"t\", \"MA\", \"Per\"],\n            function (params) {\n                const per = params[\"Per\"].value;\n                if (per === Number.POSITIVE_INFINITY) {\n                    return null;  // Hyperbolic orbit, need eccentricity\n                }\n                const t = params[\"t\"].value;\n                const ma = params[\"MA\"].value;\n                const t0 = t - ma / (2 * Math.PI) * per;\n                return pgen(\"t0\", t0);\n            }\n    );\n    \n    gadd(\"t0\", [\"t\", \"MA\", \"Per\", \"a\", \"G\", \"M\"],\n            function (params) {\n                // To get here, we must have had the period be infinite in\n                // the previous generator, so we have a hyperbolic orbit.\n                // Don't need the period, but it's a needed argument\n                // to ensure that precondition is met.\n                const t = params[\"t\"].value;\n                const ma = params[\"MA\"].value;\n                const a = Math.abs(params[\"a\"].value);  // negative for hyperbolic\n                const G = params[\"G\"].value;\n                const M = params[\"M\"].value;\n                \n                const tx = ma*Math.sqrt(a*a*a/(G*M));  // tx = t-t0\n                return pgen(\"t0\", t-tx);\n            }\n    );\n\n    /**\n     * TA: The true anomaly.  This is the angle between the periapsis and the position of the\n     * object measured from the origin (which is at one of the focuses of the orbit.\n     */\n    gadd(\"TA\", [\"EA\", \"Ecc\"],\n            function (params) {\n\n                // The true anomaly is related to the mean anomay by:\n                // tan (TA/2) =  (1+e)/(1-e)  tan (EA/2)\n                //   [replacing tan(EA/2), with tanh(EA/2) for\n                //    hyperbolic orbits]\n                const e  = params[\"Ecc\"].getScalar();\n                const EA = params[\"EA\"].value;\n                \n                var tan;\n                if (e > 1) {\n                    tan = Math.tanh(EA/2);\n                } else {\n                    tan = Math.tan(EA/2);\n                }                    \n                var val = Math.sqrt((1 + e) / (1 - e)) * tan;\n                val = 2 * Math.atan(val);\n                \n                if (e < 1 && val < 0) {\n                    val += 2*Math.PI;\n                }\n\n                return pgen(\"TA\", val);\n            }\n    );\n    \n    gadd(\"TA\", [\"r\", \"Ecc\", \"L\"],\n             function (params) {\n                 // Just the angle between r and Ecc.  We need L to tell\n                 // the range.\n                 const r     = params[\"r\"].value;\n                 const e     = params[\"Ecc\"].value;\n                 const l     = params[\"L\"].value;\n                 const dot   = Util.dot(r, e)/(Util.mag(r)*Util.mag(e));\n                 const cross = Util.cross(e,r);  // Order matters here.\n                 var   angle = Math.acos(dot);\n                 if (Util.dot(cross,l) < 0) {\n                     angle = 2*Math.PI/angle;\n                 }\n                 return pgen(\"TA\", angle);\n             }\n    );\n\n    // v: the instantaneous velocity of the body.\n    gadd(\"v\", [\"L\", \"Rot\", \"r\", \"a\", \"Ecc\", \"TA\"],\n        function(params) {\n            const Lm  = params[\"L\"].getScalar();\n            const r   = params[\"r\"].value;\n            const rm  = Util.mag(r);\n            const e   = params[\"Ecc\"].getScalar();\n            const a   = params[\"a\"].value;\n            const rot = params[\"Rot\"].value;\n            const ta  = params[\"TA\"].value;\n            \n            const p   = a*(1-e*e);\n            const nu  = rot[5];\n            \n            const sn  = Math.sin(ta);\n            const cos = Math.cos(nu+ta);\n            const sin = Math.sin(nu+ta);\n            \n            const vrad = Util.times(Lm*e*sn/(rm*p) , r);\n                        \n// \n// Six element vector with to make efficient position computations.\n//                rot       = [0:co,  1:-so*ci,  // Coefficients for x \n//                             2:so,  3: co*ci,   // Coefficients for y\n//                             4:si,             // Coefficients for z\n//                             5:n]              // Save nu so all rotation information stored in rot.    \n            const f    = Lm/rm;\n            const vtan = [   -f*(rot[0]*sin - rot[1]*cos),\n                             -f*(rot[2]*sin - rot[3]*cos),\n                              f*rot[4]*cos ];\n            const vtot = Util.vadd(vrad, vtan);\n            return pgen(\"v\", vtot);\n        }\n    );\n    // Use any of the anomalies to get the velocity.\n/*    gadd(\"v\", [\"G\", \"M\", \"r\", \"a\", \"L\", \"TA\"],\n            function (params) {\n                const ta = params[\"TA\"].value;\n                return vcalc(params, ta);\n            }\n    );\n    gadd(\"v\", [\"G\", \"M\", \"r\", \"a\", \"L\", \"EA\"],\n            function (params) {\n                const ea = params[\"EA\"].value;\n                return vcalc(params, ea);\n            }\n    );\n    gadd(\"v\", [\"G\", \"M\", \"r\", \"a\", \"L\", \"MA\"],\n            function (params) {\n                const ma = params[\"MA\"].value;\n                return vcalc(params, ma);\n            }\n    );*/\n}\n\nexport default LoadOrigins;\n","import Constants   from \"../std/Constants.js\";\r\nimport Util        from '../std/Util.js';\r\nimport Parameter   from './Parameter.js';\r\nimport LoadOrigins from './Origins.js';\r\n\r\nclass ParameterFactory {\r\n    \r\n\r\n    /** This is the map of all the legal parameters.  The fiducial name\r\n     *  points to the name, dimensionality,\r\n     *  and description, and indicates if the parameter is a constant of the motion\r\n     *  or varies along the orbit.\r\n     */\r\n    static legalParameters = {};\r\n    \r\n    /** This is a mapping to the fiducial capitalization of the parameter.\r\n     *  it maps String.toLowerCase() -> String.fiducial. \r\n     */\r\n    static caseConv        = {};\r\n    \r\n    \r\n    /** This is the mapping between fiducial names and arrays of generators to\r\n     *  create them.\r\n     */\r\n    static generators       = null;\r\n    \r\n    static constants        = [];\r\n    static variables        = [];\r\n    \r\n    /** Add a parameter into the list of legal parameters */\r\n    static addParam(name, dim, varies, descrip, units) {\r\n        if (ParameterFactory.caseConv[name.toLowerCase()] != null ) {\r\n            throw new Error(\"Redundant defintion for parameter name:\"+name);\r\n        }\r\n        ParameterFactory.legalParameters[name] = {\r\n            name: name,\r\n            dim: dim,\r\n            varies: varies,\r\n            descrip: descrip,\r\n            units: units\r\n        };\r\n        ParameterFactory.caseConv[name.toLowerCase()] = name;\r\n        if (varies) {\r\n            this.variables.push(name);\r\n        } else {\r\n            this.constants.push(name); \r\n        }\r\n    }\r\n    \r\n    /** Get the informatino about a parameter */\r\n    static getParamInfo(name) {\r\n        return ParameterFactory.legalParameters[ParameterFactory.fiducial(name)];        \r\n    }\r\n    \r\n    /** Get the list of variable parameters */\r\n    static getVariables() {\r\n        var variables = [];\r\n        for (var name in Object.keys(ParameterFactory.legalParameters)) {\r\n            var p = ParameterFactory.legalParameters[name];\r\n            if (p.varies) {\r\n                variables.push(name);\r\n            }\r\n        }\r\n        return variables;\r\n    }\r\n    \r\n    /** Convert the case of the input to the fiducial name for that parameter */\r\n    static fiducial(name) {\r\n        return ParameterFactory.caseConv[name.toLowerCase()];\r\n    }\r\n   \r\n    /** Check if the name and type of a parameter are consistent */\r\n    static checkName(name, type) {\r\n        var pt = ParameterFactory.getParamInfo(name);\r\n        return (pt != null) && (pt.dim === type);\r\n    }\r\n    \r\n\r\n    \r\n    /** Return the list of valid parameter names */\r\n    static getNames() {\r\n        const keys = Object.keys(ParameterFactory.legalParameters);\r\n        return keys;\r\n    }\r\n    \r\n    /** Find the first generator where are prerequisites are met */\r\n    static findGenerator(name, knownParams) {\r\n        \r\n        // Get the array of generators for this parameters.\r\n        const gens = ParameterFactory.generators[name];\r\n        if (gens == null || gens.length === 0) {\r\n            // No generators for this parameter\r\n            return null;\r\n        }\r\n        \r\n        // Loop over the generators ...\r\n        for (var g=0; g<gens.length; g += 1) {\r\n            const gen  = gens[g];\r\n            const reqs = gen.reqs;\r\n            \r\n            var allFound = true;            \r\n            // ... check that we have all needed prerequisites\r\n            for (var r=0; r<reqs.length; r += 1) {\r\n                var req = reqs[r];\r\n                if (!knownParams[req]) {\r\n                    allFound = false;\r\n                    break;\r\n                } \r\n            }\r\n            if (allFound) {\r\n                return gen;\r\n            }\r\n        }\r\n        return null;            \r\n    }\r\n    \r\n    \r\n    /** Generate the parameter\r\n     *  in terms of other known parameters.\r\n     */\r\n    static deriveParameter(xname, knownParams) {\r\n        const name  = ParameterFactory.fiducial(xname);\r\n        if (name == null) {\r\n            throw new Error(\"Attempt to create invalid parameter: \"+xname);\r\n        }\r\n        \r\n        if (ParameterFactory.generators == null) {\r\n            ParameterFactory.generators = {};\r\n            LoadOrigins();\r\n        }\r\n\t\t\r\n        // Get the array of generators for this parameters.\r\n        const gens = ParameterFactory.generators[name];\r\n        if (gens == null || gens.length === 0) {\r\n            // No generators for this parameter\r\n            return null;\r\n        }\r\n        \r\n        var param = null;\r\n        \r\n        // Loop over the generators ...\r\n        for (var g=0; g<gens.length; g += 1) {\r\n            const gen  = gens[g];\r\n            const reqs = gen.reqs;\r\n            \r\n            var allFound = true;            \r\n            // ... check that we have all needed prerequisites\r\n            for (var r=0; r<reqs.length; r += 1) {\r\n                var req = reqs[r];\r\n                if (!knownParams[req]) {\r\n                    allFound = false;\r\n                    break;\r\n                } \r\n            }\r\n            \r\n            if (allFound) {\r\n                // ... then generate the parameters from the known parameters.\r\n                param = gen.generate(knownParams);\r\n                \r\n                // Might still fail to generate parameter.\r\n                if (param != null) {\r\n                    break;\r\n                }\r\n            }\r\n            // Otherwise we'll just return a null.\r\n            \r\n        }\r\n        return param;\r\n    }\r\n    \r\n    // Add a generator for the given parameter name, with the \r\n    // specified prequisites and a function for generating the parameters \r\n    // from a set of known parameters.\r\n    static addGenerator(xname, reqs, func) {\r\n        if (xname == null || reqs == null || func == null) {\r\n            throw new Error(\"Invalid generator, null element\");\r\n        }\r\n        const name = ParameterFactory.fiducial(xname);\r\n        if (name == null) {\r\n            throw new Error(\"Adding generator for unknown parameter\");\r\n        }\r\n        const gens = ParameterFactory.generators;\r\n        var arr = gens[name];\r\n        if (arr == null) {\r\n            arr        = [];\r\n            gens[name] = arr;\r\n        }\r\n        arr.push({reqs: reqs, generate:func});\r\n    }\r\n    \r\n    \r\n    \r\n    static baseRender = function(inp, unit, called) {\r\n        var add   = 4;  // Show scalars to higher precision\r\n        var max   = 1.e10;\r\n        if (called) {\r\n            add = 0;\r\n            max   = 1.e6;\r\n        }\r\n        \r\n        var str;\r\n        if (Array.isArray(inp)) {\r\n            str = \"[ \";\r\n            for (var i=0; i<inp.length; i += 1) {\r\n                str += ParameterFactory.baseRender(inp[i], unit, true)+\"  \";\r\n            }\r\n            str += \" ] \";\r\n        } else {\r\n            \r\n            if (unit) {\r\n               inp /= unit.scale;\r\n               if (unit.offset) {\r\n                   inp += unit.offset;\r\n               }\r\n            }\r\n            \r\n            const abs = Math.abs(inp);\r\n            if (abs !== 0 && (abs < .001 || abs > max)) {\r\n                str = inp.toExponential(5+add);\r\n            } else {\r\n                str = inp.toPrecision(6+add);\r\n            }\r\n        }\r\n        if (unit && !called) {\r\n            str += \" \"+unit.unit;\r\n        }\r\n        return str;\r\n    }\r\n    \r\n    // Create a parameter with the given name and value.\r\n    static genParam(name, value, unit) {\r\n        const info = ParameterFactory.getParamInfo(name);\r\n        if (info == null) {\r\n            Util.log(\"Attempt to generate invalid parameter:\"+name);\r\n        }\r\n        return new Parameter(name, value, info.dim, info.varies, ParameterFactory.baseRender, unit);        \r\n    }\r\n\r\n}\r\n\r\nexport default ParameterFactory;\r\n// \r\n// Load the list of valid parameters.\r\n//                               NAME             DIM             VARIES  DESCRIP\r\n// Constants of the orbit\r\nParameterFactory.addParam(\"a\",     Parameter.SCALAR, false, \"Semimajor axis\",\r\n   Constants.radUnits);\r\nParameterFactory.addParam(\"b\",     Parameter.SCALAR, false, \"Semiminor axis\",\r\n   Constants.radUnits);\r\nParameterFactory.addParam(\"C\",     Parameter.VECTOR, false, \"The center of the ellipse\",\r\n   Constants.radUnits);\r\nParameterFactory.addParam(\"E\",     Parameter.SCALAR, false, \"The energy of the orbit\");\r\nParameterFactory.addParam(\"Ecc\",   Parameter.VECTOR, false, \"The eccentricity vector\");\r\nParameterFactory.addParam(\"Eccen\", Parameter.SCALAR, false, \"The eccentricity scalar\");\r\nParameterFactory.addParam(\"eF2\",   Parameter.VECTOR, false, \"The energy-scaled position vector of the second focus\");\r\nParameterFactory.addParam(\"G\",     Parameter.SCALAR, false, \"The gravitational constant (defaults to MKS)\");\r\nParameterFactory.addParam(\"i\",     Parameter.SCALAR, false, \"The inclination of the orbit\",\r\n   Constants.angUnits);\r\nParameterFactory.addParam(\"L\",     Parameter.VECTOR, false, \"The angular momentum of the orbit\");        \r\nParameterFactory.addParam(\"LonP\",  Parameter.SCALAR, false, \"The longitude of periapsis\",\r\n   Constants.angUnits);\r\nParameterFactory.addParam(\"M\",     Parameter.SCALAR, false, \"Mass of the central body (defaults to Ms)\",\r\n   Constants.massUnits);\r\nParameterFactory.addParam(\"m1\",    Parameter.SCALAR, false, \"Mass of the orbiting body (defaults to 0)\",\r\n   Constants.massUnits);\r\nParameterFactory.addParam(\"N0\",    Parameter.SCALAR, false, \"Orbits per day\");\r\n\r\nParameterFactory.addParam(\"nu\",    Parameter.SCALAR, false, \"Argument of periapsis\",\r\n   Constants.angUnits);\r\nParameterFactory.addParam(\"Omega\", Parameter.SCALAR, false, \"The longitude of the ascending node\",\r\n   Constants.angUnits);\r\nParameterFactory.addParam(\"Per\",   Parameter.SCALAR, false, \"The period of the orbit\",\r\n   Constants.intervUnits);\r\nParameterFactory.addParam(\"Pnode\", Parameter.VECTOR, false, \"The vector pointing the the ascending node\");\r\nParameterFactory.addParam(\"Rot\",   Parameter.BLOB,   false, \"Packaged rotation information\");\r\nParameterFactory.addParam(\"t0\",    Parameter.SCALAR, false, \"The reference time for the orbit\",\r\n   Constants.timeUnits);\r\n\r\n// Elements that vary during the orbit (i.e., as a function of time)\r\nParameterFactory.addParam(\"EA\",    Parameter.SCALAR, true, \"The eccentric anomaly\",\r\n   Constants.angUnits);\r\nParameterFactory.addParam(\"MA\",    Parameter.SCALAR, true, \"The mean anomaly\",\r\n   Constants.angUnits);\r\nParameterFactory.addParam(\"MLon\",  Parameter.SCALAR, true, \"The mean longitude\",\r\n   Constants.angUnits);\r\nParameterFactory.addParam(\"r\",     Parameter.VECTOR, true, \"Position of the object\",\r\n   Constants.radUnits);\r\nParameterFactory.addParam(\"t\",     Parameter.SCALAR, true, \"The current time\",\r\n   Constants.timeUnits);\r\nParameterFactory.addParam(\"TA\",    Parameter.SCALAR, true, \"The true anomaly\",\r\n   Constants.angUnits);\r\nParameterFactory.addParam(\"v\",     Parameter.VECTOR, true, \"Velocity of the object\",\r\n   Constants.velUnits);\r\n   \r\nif (!ParameterFactory.generators) {\r\n\tLoadOrigins();\r\n}","import Kepler from \"./Kepler.js\";\nimport Util   from \"../std/Util.js\";\n\n/** This is a smaller orbit class that only provides a method\n *  for finding the position as a function of time.\n */\nclass QOrb {\n\n    scale   = 1;\n    doLog   = false;\n    lastT   = 1.e50;\n    lastTA  = 1.e50;\n    \n    constructor(input) {        \n        this.rot = input.rot;    // The rotation info\n        this.e   = input.e;      // The eccentricity scalar\n        this.a   = input.a;      // The semimajor axis\n        this.t0  = input.t0;     // The time of periapsis\n        this.per = input.per;    // The period of the orbit\n        this.coords = null;\n        \n        this.precession = false;  // Allow for precession of the orbit.\n        this.precessData = null;\n        if (this.e < 1) {\n            this.Lm   = 2*Math.PI*this.a*this.a*Math.sqrt(1-this.e*this.e)/this.per;\n        }\n    }\n    // Add precession of the line of nodes and the argument of perigee to \n    // the orbit. \n    //   ep0 is the epoch when the arguments in the rot vector are valid.\n    //   fOmega and fNu are the frequencies of the prcession (2pi/period)\n    //   in the Omega and nu terms.\n    addPrecession(ep0, fOmega, fNu) {\n        this.precession  = true;\n        this.ep0         = ep0;\n        this.fOmega      = fOmega;\n        this.fNu         = fNu;\n    }\n    \n    /** If the orbit is in a different coordinate system\n     *  than the frame we want to display in, provide\n     *  a coordinate converter.  Note that this affects\n     *  the position,state and orbitXYZ functions, but not the posTA\n     *  call which returns the position in the local coordinate frame.\n     */\n    addCoords(coords) {\n        this.coords = coords;\n    }\n    \n    // Get the rotation blob, possibly corrected for precession.\n    getRot(time) {\n        if (!this.precession  || time == null) {\n            return this.rot;\n        }\n        const dt     = time-this.ep0;\n        const dOmega = this.fOmega*dt;\n        const dNu    = this.fNu*dt;\n        const updRot = [...this.rot];\n        \n        // Recall definition of rot:\n//                            [co,  -so*ci,  // co = cos(Omega), ci= cos(inclination), .... \n//                             so,   co*ci,  // so = sin(Omega), ...//                             \n//                             si,           //\n//                             nu]            // \n\n        // Can fix nu immediately!\n        updRot[5] += dNu;\n        \n        const cd = Math.cos(dOmega);\n        const sd = Math.sin(dOmega);\n        \n        // Now use trig formulas to get new value for sin/cos omega\n        // and update the first four values appropriately.\n        const so = updRot[2]*cd + sd*updRot[0]; // sin(a+b) = sin(a)cos(b) + sin(b)cos(a)\n        const co = updRot[0]*cd - updRot[2]*sd; // cos(a+b) = cos(a)cos(b) - sin(a)*sin(b\n        \n        // Use update values to update products first.  The inclination does not change.\n        updRot[1] *= so/updRot[2];  // i.e., *= so_new/so_old\n        updRot[3] *= co/updRot[0];  //  *= co_new/co_old\n        //  Now we can update the last two terms\n        updRot[0] = co;\n        updRot[2] = so;\n        \n        // The inclination does not change during precession, so neither does updRot[4]\n        \n        return updRot;                \n    }\n    \n    // Get the position as a function of time.\n    position(t) {\n        const ta = this.ta(t);       \n        let   r  = this.posTA(ta, t);\n        if (this.coords) {\n            r = this.coords.vTransform(r);\n        }\n        return r;\n    }\n    \n    // Get both position and velocity.\n    state(t) {\n        const ta = this.ta(t);\n        const rs = this.posTA(ta, t);\n        let   r  = Util.times(1./this.scale, rs);   // Get r in meters.\n        const rm = Util.mag(r);\n        const sn  = Math.sin(ta);\n        const p   = this.a*(1-this.e*this.e);\n        \n        const rot = this.getRot(t);\n        const nu  = rot[5];            \n        const cos = Math.cos(nu+ta);\n        const sin = Math.sin(nu+ta);\n            \n        const vrad = Util.times(this.Lm*this.e*sn/(rm*p) , r);\n                        \n        const f    = this.Lm/rm;\n        const vtan = [   -f*(rot[0]*sin - rot[1]*cos),\n                         -f*(rot[2]*sin - rot[3]*cos),\n                          f*rot[4]*cos ];\n        let vtot = Util.vadd(vrad, vtan);\n        \n        if (this.coords) {\n            r    = this.coords.vTransform(r);\n            vtot = this.coords.vTransform(vtot);\n        }\n                \n        return [r,vtot];\n    }\n    \n    ta(t) {       \n        var e = this.e;\n        var ma;\n        ma = (t - this.t0) / this.per * 2 * Math.PI;\n        if (e < 1) {\n            ma = ma % (2 * Math.PI);\n        }\n\n        const ea  = Kepler(ma, e);\n        const tmp = Math.sqrt((1 + e) / Math.abs(1 - e)) * Math.tan(ea / 2);\n\n        return 2 * Math.atan(tmp);\n    }\n    \n    // Get the position as a function of the true anomaly.\n    posTA(ta, t) {\n        const e = this.e;\n        \n        // Get the magnitude of the radius vector\n        // Note Math.abs to handle hyperbolic orbits.\n        const rm = this.a * Math.abs(1 - e * e) / (1 + e * Math.cos(ta))* this.scale;\n        \n\n        // TA and nu are rotations along the same axis so we can\n        // combine them wand we're left with a somewhat simpler\n        // transformation than the full ZXZ rotation matrix with nu,i,Omega.\n        // We also put rm in here since it saves a multiplication.\n\n        // First extract nu for the rot blob.\n        const rot = this.getRot(t);\n        const nu  = rot[5];\n        \n        const cos = rm*Math.cos(nu+ta);\n        const sin = rm*Math.sin(nu+ta);\n        // Now use rot information.\n        let vec = [\n                     rot[0]*cos + rot[1]*sin,\n                     rot[2]*cos + rot[3]*sin,\n                     rot[4]*sin\n                    ];\n        return vec;\n    }\n    \n    // Get the orbit curve as a sequence of positions.\n    // For closed orbits start at the periapsis, while\n    // for open orbits we are centered at periapsis.\n    // Note that this function does not require the phase\n    // of the orbit to be known.\n    orbitXYZ(n) {\n        \n        // For hyperbolic orbits not all values of TA are allowed...\n        var taMin = 0;\n        var taMax = 2*Math.PI;\n        if (this.e > 1) {\n            // trying to get ta[i] = -ta[n-i];\n            // bit we need to come in a little since the radius at the limits is infinity.\n            taMax = Math.acos(-1/this.e);\n            const tdelta = (2*taMax)/n;\n            taMax -= tdelta/2;\n            taMin  = -taMax;\n        }\n        \n        var ta = taMin;\n        const data  = [];\n        const delta = (taMax-taMin)/n;\n        for (var i=0; i<n; i += 1) {\n            var p = this.posTA(ta);  // Note that we do not have a time here\n                                     // Precessing orbits will be as of epoch of ephemeris.\n            data.push(p);\n            ta += delta;            \n        }\n        return data;        \n    }\n    \n    xperiod() {\n        if (this.e < 1) {\n            return this.per*(1-this.e);\n        } else {\n            return this.per;\n        }\n    }\n}\n\nexport default QOrb;","import Constants from        \"../std/Constants.js\";\nimport Util      from        \"../std/Util.js\";\n\nimport QOrb      from        \"./QOrb.js\";\nimport ParameterFactory from \"./ParameterFactory.js\";\n\nclass Orbit {\n    \n    \n    constructor (name) {\n        this.name       = name;\n        this.parameters = {};\n    }\n    \n    getOrbitName() {\n        return this.name;\n    }\n    \n    setOrbitName(newName) {\n        this.name = newName;\n    }\n        \n    /** Reset the orbit to completely undefined */\n    clear() {\n        this.parameters = {};\n    }\n    \n    /** Clear 0 or more parameters */\n    clearParameters(...params) {\n        if (params && params[0]) {\n            params = params[0];\n        } else {\n            return;\n        }\n        for (var i=0; i<params.length; i += 1) {\n            delete this.parameters[params[i]];\n        }\n    }\n    \n    /** Known variable parameters, i.e., vary along the orbit */\n    variables() {\n        return this.conOrVar(true);\n    }\n    \n    /** Known orbital constants */\n    constants() {\n        return this.conOrVar(false);\n    }\n    \n    conOrVar(flag) {\n        const have = Object.keys(this.parameters);\n        const constants = [];\n        const params = this.parameters;\n        have.forEach(                \n            function(name) {\n                if (params[name].varies === flag) {\n                    constants.push(name);\n                }\n            }\n        );\n        return constants;        \n    }\n\n    /** Allow updates to varying parameters */\n    update(name, value) {\n        if (this.parameters[name]) {\n            if (this.parameters[name].varies) {\n                this.parameters[name].value = value;\n            }\n        }\n    }\n    \n    /** Add the specified parameter to the list of known parameters */\n    addParameter(p) {\n        const name = p.getName();\n        if (this.parameters[name]) {\n            Util.log(\"Replacing existing parameter:\" + name);\n        }\n        this.parameters[name] = p;        \n    }\n    \n    /** Add a structure of parameters into the orbit */\n    addStructure(str) {\n        for (let name in str) {\n            this.addParameter(ParameterFactory.genParam(name, str[name]));\n        }\n    }\n    \n\n    /** Return the specified parameter.\n     *  If it is already known just return it.\n     *  If not see if we can try to calculate it,\n     *  either immediately or after seeing what\n     *  other parameters are calcuable.\n     */\n    getParameter(name, cycle) {\n        \n        // Do we already know this parameter?\n        if (this.parameters[name]) {\n            return this.parameters[name];\n            \n        }\n        \n        \n        // Is this a knowable parameter\n        if (ParameterFactory.getParamInfo(name) == null) {\n            Util.log(\"Attempt to retrieve illegal parameter:\"+name);\n            return null;\n        }                \n\n        // Start a cycle where we look at all of the currently\n        // unknown parameters and see if we can compute one.\n        // If we can then we'll try to see if we can compute\n        // the desired parameter. If we are unable to compute any parameters\n        // then we stop, otherwise we go until we find we can't compute any more.\n        var updateParam = true;\n        while (updateParam) {\n            \n            // May have computed it below..\n            if (this.parameters[name]) {\n                return this.parameters[name];\n            }\n            \n            \n            // Can we compute the parameter we want now?\n            var pn = this.newComputable(name);\n            if (pn != null) {\n                // We could.  So just return it!\n                this.parameters[name] = pn;\n                return pn;\n            }\n            \n            // Not found yet.  Do we want to cycle and try again?\n            if (!cycle) {\n                return null;\n            }\n            \n            // Couldn't.  Try to compute any unknown parameter.\n            // If we are successful, then maybe that was the missing\n            // prerequiste for what we want and we can try again.\n            updateParam = false;\n            var names = ParameterFactory.getNames();\n            for (var i=0; i < names.length; i += 1) {\n                const param = names[i];\n                pn = this.newComputable(param);\n                if (pn != null) {\n                    updateParam = true;\n                    this.parameters[param] = pn;\n                } else {\n                }               \n            }\n            // If updateParam is still false, then we\n            // can't compute any more and we'll just exit the loot and return.\n        }\n        \n        var knowns = Object.keys(this.parameters).sort();\n        \n        if (name == \"MA\") {\n            Util.log(\"Unable to find antecedents to parameter:\"+name+\" with known parameters:\"+knowns);\n        }\n        return null; \n\n    }\n    \n    \n    /** If the parameter is unknown but computable, return the computed value. */\n    newComputable(name) {\n        \n        if (this.parameters[name]) {\n            return null;\n        }\n        \n\n        // If knowable but not yet known then see if we can compute it...\n        return ParameterFactory.deriveParameter(name, this.parameters);\n    }\n    \n    \n    /** Return a copy of the orbit */\n    copy() {\n        var c = new Orbit(this.name);\n        // Copy in the parameters.\n        for (var key in this.parameters) {\n            c.parameters[key] = ParameterFactory.genParam(key, this.parameters[key].value);\n        }\n        return c;        \n    }\n    \n    /** A quickorbit saves just the minimal information to compute the position or velocity\n     *  as a function of time.\n     */\n    quickOrbit() {\n        \n        if (this.parameters[\"Rot\"] && this.parameters[\"Ecc\"] &&\n            this.parameters[\"a\"]   && this.parameters[\"Per\"]) {\n            const params = {\n                rot: this.parameters[\"Rot\"].value,   // This encodes the three orbit angles.\n                e:   this.parameters[\"Ecc\"].getScalar(),\n                per: this.parameters[\"Per\"].value,  \n                a:   this.parameters[\"a\"].value,\n            }\n            \n            // May only know shape of orbit, not phase.\n            // OrbitXYZ should still work.\n            if (this.parameters[\"t0\"]) {\n                params[\"t0\"] = this.parameters[\"t0\"].value;\n            }\n            \n            if (params.e < 1) {\n                if (this.parameters[\"Per\"]) {\n                    params.per = this.parameters[\"Per\"].value;\n                } else {\n                    Util.log(\"No period given for elliptic orbit\");\n                    return null;                    \n                }\n            } else {\n                // While the true period is infinite, we need\n                // something that scales MA to time.\n                const a  =  params.a;\n                const G  =  this.getParameter(\"G\").value;\n                const M  =  this.getParameter(\"M\").value;\n                params.per = 2*Math.PI * Math.sqrt(-(a*a*a)/(G*M));\n            }\n            \n            const qorb = new QOrb(params);\n            qorb.scale = 1./Constants.AU;\n            \n            return qorb;\n            \n        } else {\n            \n            Util.log(\"Attempt to get quick orbit with undefined constants\");\n            Util.log(\"   Available:\"+Object.keys(this.parameters));\n            return null;\n        }\n    }\n}\n\nexport default Orbit;","import Util from      \"../std/Util.js\";\nimport Constants from \"../std/Constants.js\";\nimport Orbit from     \"../orbits/Orbit.js\";\nimport ParameterFactory from \"../orbits/ParameterFactory.js\";\n\n\nconst loadMPCData = function (startTime, callback) {\n    Util.log(\"Initiating loading of MPC data\");\n    let xhr  = new XMLHttpRequest();\n    xhr.open('GET', \"data/combG.json\", true);\n    xhr.onload  = function() {\n        let stars = xhr.responseText;\n        let json = JSON.parse(stars);\n        let zz;\n        for (zz in json) {\n            break;\n        }\n        parseMPCData(startTime, callback, json[zz]);\n    };\n    \n    xhr.onerror = function() {\n        Util.log(\"Called error function when loading asteroids and comets!\");\n    }\n    \n    xhr.send(null);\n}\n\n// Called as callback in loadMPCData\nconst parseMPCData = function(startTime, callback, mpcdata) {\n    const info  = [];\n    var nskip       = 0;\n    var nhyper      = 0;\n    var nAst        = 0;\n    var nCom        = 0;\n    var unknowns = 0;\n    Util.log(\"Number of MPC small bodies:\"+mpcdata.length)\n    for (var i=0; i<mpcdata.length; i += 1) {\n        const elements = mpcdata[i];\n        var name = elements.Name;\n        if (!name) {\n            name = elements.Designation_and_name;\n        } \n        if (!name) {\n            unknowns += 1;\n            name = \"Unnamed_\"+unknowns;\n        }\n\n        const orb      = new Orbit(name);\n\n        const e = elements.e;\n        const type = elements.Orbit_type;\n        if (e == null || e === 1) {\n            // Skipping parabolic and radial orbits for the nonce\n            nskip += 1;\n            continue;\n        }\n\n        if (e > 1) {\n            nhyper += 1;\n        }\n\n\n        orb.addParameter(ParameterFactory.genParam(\"Eccen\", e));\n        orb.addParameter(ParameterFactory.genParam(\"i\", Util.toRadians(elements.i)));\n        orb.addParameter(ParameterFactory.genParam(\"nu\", Util.toRadians(elements.Peri)));\n        orb.addParameter(ParameterFactory.genParam(\"Omega\", Util.toRadians(elements.Node)));\n\n        // Comets give the time of perihelion and perihelion distance, \n        // while asteroids give the Mean anomaly at epoch and semimajor axis.\n        if (type === \"C\" || type === \"P\"  || type === \"A\"  || type === \"I\") {\n\n            const year = elements.Year_of_perihelion;\n            const mon  = elements.Month_of_perihelion;\n            const day  = elements.Day_of_perihelion;\n            const d    = new Date(year, mon-1, Math.floor(day));\n            var t1970  = d.setDate(Math.floor(day))/1000;\n            t1970     += 86400 * (day-Math.floor(day));  // Seconds in unix epoch.\n            var t0     = t1970 - Constants.Epoch0;\n            orb.addParameter(ParameterFactory.genParam(\"t0\", t0));\n            var peridist = elements.Perihelion_dist*Constants.AU;            \n            orb.addParameter(ParameterFactory.genParam(\"a\", peridist/(1 - e)));\n            nCom += 1;\n\n        } else {\n\n            orb.addParameter(ParameterFactory.genParam(\"a\", elements.a*Constants.AU));\n            const epoch = (elements.Epoch - Constants.JD0)*86400;\n            // To find t0, we take the mean anomaly at the epoch and use the mean motion to compute\n            // the number of days we are past.\n            const delta = (elements.M / elements.n)*86400;\n            orb.addParameter(ParameterFactory.genParam(\"t0\", epoch-delta));\n            nAst += 1;\n        }\n\n        orb.addParameter(ParameterFactory.genParam(\"t\", startTime));\n        const r = orb.getParameter(\"r\", true);\n\n        if (r == null) {\n            nskip += 1;\n            continue;\n        }\n        const qorb = orb.quickOrbit();\n        if (qorb == null) {\n            Util.log(\"Found null orbit at index:\"+i);\n        }\n\n        info.push({type: type, name: name, orbit: orb.quickOrbit(), H:elements.H});\n    }\n    \n    Util.log(\"Parsed MPC data\");\n    Util.log(\"    \"+info.length +\" total bodies\");\n    Util.log(\"    \"+nAst        +\" asteroids\");\n    Util.log(\"    \"+nCom        +\" comets\");\n    Util.log(\"    \"+nhyper      +\" hyperbolic orbits\");\n    Util.log(\"    \"+nskip       +\" orbits skipped (parabolic or missing information)\");\n    callback(info);    \n}\n\n\nexport default loadMPCData;","import {LineBasicMaterial, BufferGeometry,Line, Vector3} from \"three\";\n\n// This returns an orbit with the distances scaled to AU by default.\nconst OrbitPlot = function (name, orbit, color) {\n    const orbitR = orbit.orbitXYZ(360);\n    const points = [];\n    for (var pi=0; pi<orbitR.length; pi += 1) {\n        const r = orbitR[pi];\n        points.push(new Vector3(r[0], r[1], r[2]));\n    }\n   \n    const material = new LineBasicMaterial( { color: color } );\n    const geometry = new BufferGeometry().setFromPoints( points );\n    const line     = new Line(geometry, material );\n    return {component: line, name:name+\"Orbit\", render: null};\n}\n\nexport default OrbitPlot;","import {SphereGeometry, MeshBasicMaterial, Mesh} from \"three\";\nimport Util from \"../std/Util.js\";\n\nconst Planet = function(name, start, qorbit, size, color, wireFrame, useSize){\n    \n \n    // We're going to make things smaller than the Sun, but \n    // can't scale directly or they will disappear...\n    \n    var ratio = (Math.log10(size/10000)+1)*.03;\n    if (useSize) {\n        ratio = size;\n    }\n    \n    const geometry = new SphereGeometry(ratio, 8, 8);\n    const material = new MeshBasicMaterial({wireframe: wireFrame, color: color });\n    const sphere   = new Mesh(geometry, material);\n    const p        = qorbit.position(start);\n    sphere.position.set(p[0], p[1], p[2]);\n    \n    const ret = \n      {component: sphere, name: name+\"Body\",\n        \n      render: function(time) {\n          // Update planet positions.\n           var r = qorbit.position(time);\n           // Using ret.component vs just sphere\n           // allows us to replace the component externally.\n           ret.component.position.set(r[0], r[1], r[2]);\n      }};\n    return ret;\n};\n\nexport default Planet;\n\n","import {RingGeometry, MeshBasicMaterial, Mesh} from \"three\";\nconst Ring = function(name, start, orbit, size, color){\n \n    // We're going to make things smaller than the Sun, but \n    // can't scale directly or they will disappear...\n    var ratio = (Math.log10(size/10000)+1)*.03;\n\n    const geometry = new RingGeometry(1.1*ratio, 2*ratio, 8);\n    const material = new MeshBasicMaterial({wireframe: true, color: color });\n    const ring     = new Mesh(geometry, material);\n    const p        = orbit.position(start);\n    ring.position.set(p[0], p[1], p[2]);\n    \n    return {\n      component: ring,\n      name: name+\"Ring\",        \n      render:function(time) {\n          // Update planet positions.\n           var r = orbit.position(time);\n           ring.position.set(r[0], r[1], r[2]);\n      }\n  };\n}\n\nexport default Ring;\n\n","/** This class started as a direct copy of the Points class.\n *  The testPoint method has been adapted to use an angular offset criterion\n *  during the raycast rather than the linear projected offset.  Since testPoint\n *  is not a method within Points, but a method defined in parallel in the Points\n *  module, we cannot [I think] simply update this method in this class but would\n *  need to copy the update the raycast method too... \n */\n\nimport { Sphere, Ray, Matrix4, Object3D, Vector3, PointsMaterial, BufferGeometry } from 'three';\nimport Util from \"../std/Util.js\";\n\nconst _inverseMatrix = /*@__PURE__*/ new Matrix4();\nconst _ray           = /*@__PURE__*/ new Ray();\nconst _sphere        = /*@__PURE__*/ new Sphere();\nconst _position      = /*@__PURE__*/ new Vector3();\n\nclass AngPoints extends Object3D {\n\n    constructor(geometry = new BufferGeometry(), material = new PointsMaterial()) {\n\n        super();\n\n        this.type = 'AngPoints';\n\n        this.geometry = geometry;\n        this.material = material;\n\n        this.updateMorphTargets();\n        this.maxAngSq   = 0.00005;\n\n    }\n\n    copy(source) {\n\n        super.copy(source);\n\n        this.material = source.material;\n        this.geometry = source.geometry;\n\n        return this;\n\n    }\n\n    raycast(raycaster, intersects) {\n\n        const geometry = this.geometry;\n        const matrixWorld = this.matrixWorld;\n        const threshold = raycaster.params.Points.threshold;\n        const drawRange = geometry.drawRange;\n\n        // Checking boundingSphere distance to ray\n\n        if (geometry.boundingSphere === null)\n            geometry.computeBoundingSphere();\n\n        _sphere.copy(geometry.boundingSphere);\n        _sphere.applyMatrix4(matrixWorld);\n        _sphere.radius += threshold;\n\n        if (raycaster.ray.intersectsSphere(_sphere) === false)\n            return;\n\n        //\n\n        _inverseMatrix.copy(matrixWorld).invert();\n        _ray.copy(raycaster.ray).applyMatrix4(_inverseMatrix);\n\n        const localThreshold = threshold / ((this.scale.x + this.scale.y + this.scale.z) / 3);\n        const localThresholdSq = localThreshold * localThreshold;\n\n        if (geometry.isBufferGeometry) {\n\n            const index = geometry.index;\n            const attributes = geometry.attributes;\n            const positionAttribute = attributes.position;\n\n            if (index !== null) {\n\n                const start = Math.max(0, drawRange.start);\n                const end = Math.min(index.count, (drawRange.start + drawRange.count));\n\n                for (let i = start, il = end; i < il; i++) {\n\n                    const a = index.getX(i);\n\n                    _position.fromBufferAttribute(positionAttribute, a);\n\n                    testPoint(_position, a, this.maxAngSq, matrixWorld, raycaster, intersects, this);\n\n                }\n\n            } else {\n\n                const start = Math.max(0, drawRange.start);\n                const end = Math.min(positionAttribute.count, (drawRange.start + drawRange.count));\n\n                for (let i = start, l = end; i < l; i++) {\n                    _position.fromBufferAttribute(positionAttribute, i);\n                    testPoint(_position, i, this.maxAngSq, matrixWorld, raycaster, intersects, this);\n                }\n            }\n        } else {\n            console.error('THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');\n        }\n    }\n\n    updateMorphTargets() {\n\n        const geometry = this.geometry;\n\n        if (geometry.isBufferGeometry) {\n\n            const morphAttributes = geometry.morphAttributes;\n            const keys = Object.keys(morphAttributes);\n\n            if (keys.length > 0) {\n\n                const morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n                if (morphAttribute !== undefined) {\n\n                    this.morphTargetInfluences = [];\n                    this.morphTargetDictionary = {};\n\n                    for (let m = 0, ml = morphAttribute.length; m < ml; m++) {\n\n                        const name = morphAttribute[ m ].name || String(m);\n\n                        this.morphTargetInfluences.push(0);\n                        this.morphTargetDictionary[ name ] = m;\n                    }\n                }\n            }\n        } else {\n            const morphTargets = geometry.morphTargets;\n            if (morphTargets !== undefined && morphTargets.length > 0) {\n                console.error('THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.');\n            }\n        }\n    }\n}\n\nAngPoints.prototype.isPoints = true;\n\nfunction testPoint(point, index, localThresholdSq, matrixWorld, raycaster, intersects, object) {\n\n    const rayPointDistanceSq = _ray.distanceSqToPoint(point);\n    const distanceSq         = _ray.origin.distanceToSquared(point);\n\n    if (rayPointDistanceSq/distanceSq < localThresholdSq) {\n\n        const intersectPoint = new Vector3();\n\n        _ray.closestPointToPoint(point, intersectPoint);\n        intersectPoint.applyMatrix4(matrixWorld);\n\n        const distance = raycaster.ray.origin.distanceTo(intersectPoint);\n\n        if (distance < raycaster.near || distance > raycaster.far)\n            return;\n\n        const dist = raycaster.ray.origin.distanceTo(point);\n        const xoffset = intersectPoint.distanceTo(point);\n        intersects.push({\n\n            distance:      distance,\n            distanceToRay: Math.sqrt(rayPointDistanceSq),\n            point:         intersectPoint,\n            index:         index,\n            face:          null,\n            object:        object\n\n        });\n    }\n}\n\nexport default AngPoints;\n\n\n","import {Color, BufferGeometry, PointsMaterial, Float32BufferAttribute, Vector3} from \"three\";\nimport AngPoints from \"../elems/AngPoints.js\";\nimport Util from \"../std/Util.js\";\n\nconst SmallBodies = function(smbData, colorLookup, startTime) {\n    let xcount = 0;\n    function getPositions(data, time) {\n        xcount += 1;\n        const px = [];\n        for (var i=0; i<data.length; i += 1) {\n            if (data[i].orbit == null) {\n                Util.log(\"No orbit for \"+i+\" \"+data.name);\n            }\n            const p = data[i].orbit.position(time);\n            px.push(p[0], p[1], p[2]);\n        }\n        return new Float32BufferAttribute(px,3);\n    }\n    \n    function getColors(data, colorLookup) {\n        \n            var allTypes = {\n\"A\":              0xbfef45,\n\"Amor\":           0x1f8231,\n\"Apollo\":         0xfabed4,\n\"Aten\":           0xdcbeff,\n\"Atira\":          0x469990,\n\"C\":              0xf032e6,\n\"Distant Object\": 0x3cb44b,\n\"Hilda\":          0xffd8b1,\n\"Hungaria\":       0xaaffc3,\n\"I\":              0x9a6324,\n\"Jupiter Trojan\": 0x42d4f4,\n\"MBA\":            0xffe119,\n\"Object with perihelion distance < 1.665 AU\": 0x4363d8,\n\"P\":              0xe6194b,\n\"Phocaea\":        0xfffac8\n    };\n        const colors = [];\n        \n        for (var i=0; i < data.length; i += 1) {\n            const t   = data[i].type;\n            const h   = data[i].H;\n            var col = 0xFFFFFF;\n            if (allTypes[t]) {\n                col = allTypes[t];\n            } else {\n                Util.log(\"Cannot find type for: \"+i);\n            }\n            const c3 = new Color(col);\n            var fac = 1;\n            if (t !== \"P\") {\n                fac = 0.2;\n            }\n            if (h > 5) {\n                fac = 5/h;\n            }\n            colors.push(c3.r*fac, c3.g*fac, c3.b*fac);\n            \n        }\n        return new Float32BufferAttribute( colors, 3 );\n\n    }\n\n\n    const geometry = new BufferGeometry();        \n    // Should the time here be 0?\n    geometry.setAttribute( 'position', getPositions(smbData, startTime));\n    geometry.setAttribute( 'color',    getColors(smbData, colorLookup));\n        \n    const material       = new PointsMaterial( {sizeAttenuation: false, size: 2, vertexColors: true } );\n    const points         = new AngPoints(geometry, material );\n    \n    // Add this function to the component.\n    points.getIndexedName = function(index) {\n        return smbData[index].name;\n    };\n    \n    return {component: points,\n      render:function(time) {\n        geometry.setAttribute( 'position', getPositions(smbData, time));\n      }\n    };\n}\n\nexport default SmallBodies;","import  {SphereGeometry,MeshBasicMaterial,Mesh} from \"three\";\n\nconst Sun = function(settings) {\n\n    if (!settings) {\n        settings = {};\n    }\n    const sunSize     = settings.sunSize      || 0.1;\n    const sunColor    = settings.sunColor     || 0xFFFF00;\n    const sunWire     = settings.sunWire      || false;\n    const sunSegments = settings.sunSegements || 8;\n    const sunName     = settings.sunName      || \"SunBody\";\n    const sunPosition = settings.sunPosition  || [0,0,0];\n        \n    var geometry = new SphereGeometry(sunSize, sunSegments, sunSegments);\n    var material = new MeshBasicMaterial({wireframe: sunWire, color: sunColor});\n    var sphere   = new Mesh(geometry, material);\n \n    sphere.position.set(sunPosition[0], sunPosition[1], sunPosition[2]);\n    return {component: sphere, name: sunName, \n           render: null};        \n}\n\nexport default Sun;\n    \n\n\n","import  {Component}  from \"react\";\r\n\r\nimport Animation     from    \"../elems/Animation.js\";\r\nimport Anims         from    \"../animations/AnimationFactory\";\r\n \r\nimport Util          from    \"../std/Util.js\";\r\nimport Constants     from    \"../std/Constants.js\";\r\nimport OptionsSelector from  \"../elems/OptionsSelector.js\";\r\nimport TextInput     from    \"../elems/TextInput.js\";\r\nimport Action        from    \"../elems/Action.js\";\r\nimport LocalGalaxy   from    \"./LocalGalaxy.js\";\r\n\r\nimport Planets       from    \"../solarsystem/Planets.js\";\r\n\r\nimport ParameterFactory from \"../orbits/ParameterFactory\";\r\nimport Orbit         from    \"../orbits/Orbit.js\";\r\nimport loadMPCData  from    \"../parsers/ParseMPC.js\";\r\n\r\nimport OrbitPlot     from    \"../solarsystem/OrbitPlot.js\";\r\nimport Planet        from    \"../solarsystem/Planet.js\";\r\nimport Ring          from    \"../solarsystem/Ring.js\";\r\nimport SmallBodies   from    \"../solarsystem/SmallBodies.js\";\r\nimport Sun           from    \"../solarsystem/Sun.js\";\r\n\r\nclass SolarSystem extends Animation {\r\n    \r\n    \r\n    constructor(inputs) {\r\n        super(inputs);\r\n        \r\n        const fields = {\r\n            planets: [\"Mercury\", \"Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\", \"Neptune\", \"Pluto\"],\r\n            timeID:  \"timeDisp\",\r\n            name:    \"Solar System\",\r\n            baseAnimation: \"Local Galactic Neighborhood\",\r\n            longClickTime: 1500          // How long a mouse click needs to be to be classified as a long click.\r\n        };\r\n        for (var key in fields) {\r\n            if (!inputs || !inputs[key]) {   // Don't override anything specified by user.\r\n                this[key] = fields[key];\r\n            }\r\n        }\r\n        \r\n        if (this.timeID) {\r\n            this.timeElem = document.getElementById(this.timeID);\r\n        }\r\n\r\n        this.addSun();\r\n        this.addPlanets();\r\n        this.addSmallBodies();\r\n        if (this.timeElem) {\r\n            this.addTimeDisplay();\r\n        }\r\n        this.frame.renderer.domElement.addEventListener(\"longClick\",\r\n          this.longClickEvt.bind(this));\r\n        \r\n        this.optionState = \"empty\";\r\n    }\r\n    longClickEvt(e) {\r\n        // We want this to be handled by the current animation\r\n        // which may not be the solar system, so\r\n        // we make sure to call the current doLongClick handler.\r\n        if (this.frame.animation.doLongClick) {\r\n           this.frame.animation.doLongClick(e);\r\n        }\r\n    }\r\n    \r\n    doLongClick(e) {\r\n        \r\n        const matched = this.frame.raycast(e.detail);\r\n        let found = null;\r\n        \r\n        for (let name in matched) {\r\n            if (name.endsWith(\"Body\")) {\r\n                const test = name.substring(0, name.length-4);\r\n                if (Anims.isAnimation(test)) {\r\n                    found = test;\r\n                    break;\r\n                }\r\n            } else if (name.endsWith(\"Orbit\")) {\r\n                const test = name.substring(0, name.length-5);\r\n                if (Anims.isAnimation(test)) {\r\n                    found = test;\r\n                    break;\r\n                }\r\n            }\r\n            \r\n        }\r\n        Util.log(\"Found:\"+found);\r\n        if (found) {\r\n            this.setAnim(found);\r\n        } else {\r\n            super.doLongClick(e);\r\n        }\r\n    }\r\n    \r\n    \r\n    foundBodies(e) {\r\n        var detail = e.detail;\r\n        detail = Object.entries(detail).sort((a, b) => a[1] - b[1]);\r\n        const data = [];\r\n        for (var i in detail) {\r\n            if (detail[i][1] > 0) {\r\n                detail[i][1] = detail[i][1].toFixed(4);                \r\n            }\r\n            data.push({name: detail[i][0], d: detail[i][1]});\r\n        }\r\n        this.setState({nearby: data});\r\n    }\r\n\r\n    addBody(name) {\r\n\r\n        if (!name || name.length < 2) {\r\n            return;\r\n        }\r\n        const body = this.findBody(name);\r\n        if (body) {\r\n            this.addElement(name + \"Orbit\", OrbitPlot(name, body.orbit, 0x00FFFF));\r\n            const planetBody = Planet(name, this.time, body.orbit, 4000, 0xFFFF00, true);\r\n            this.addElement(planetBody.name, planetBody);            \r\n        }\r\n    }\r\n    \r\n    findBody(name) {\r\n        for (var i = 0; i < this.smbData.length; i += 1) {\r\n            const body = this.smbData[i];\r\n            if (body.name === name) {\r\n                return body;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    \r\n\r\n\r\n    // Add the fixed sun\r\n    addSun() {\r\n        this.addElement(\"Sun\", Sun());\r\n    }\r\n\r\n    // Add the planets\r\n    addPlanets() {\r\n\r\n        const names = this.planets;\r\n\r\n        // Add each planet in the list.\r\n        for (var xi = 0; xi < names.length; xi += 1) {\r\n            const pname = names[xi];\r\n            Util.log(\"Processing \" + pname);\r\n\r\n            const planetData = Planets.getElements(pname, this.time);\r\n            const elems = planetData.elements;\r\n\r\n            const orb = new Orbit(pname);\r\n\r\n            for (var key in elems) {\r\n                orb.addParameter(ParameterFactory.genParam(key, elems[key]));\r\n            }\r\n            orb.addParameter(ParameterFactory.genParam(\"t\", this.time));\r\n            // Make sure we can get positions.\r\n            const r0 = orb.getParameter(\"r\", true);\r\n            if (r0 == null) {\r\n                Util.log(\"Unable to get complete orbit for planet:\" + pname);\r\n                continue;\r\n            }\r\n\r\n            // Now that we've finished, we can just use a quick orbit and\r\n            // forget the full orbit.\r\n            const qorb = orb.quickOrbit();\r\n\r\n            // Add the orbit line (which is invariant)\r\n            const orbitLine = OrbitPlot(pname, qorb, planetData.color);\r\n            this.addElement(orbitLine.name, orbitLine);\r\n\r\n\r\n            const planetBody = Planet(pname, this.time, qorb, planetData.diameter, planetData.color, true);\r\n            this.addElement(planetBody.name, planetBody);\r\n\r\n            // Does this planet have a ring?\r\n            if (planetData.ringAngle) {\r\n                const ringElement = Ring(pname, this.time, qorb, planetData.diameter, planetData.ringColor);\r\n                this.addElement(ringElement.name, ringElement);\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    // Add the small bodies point array.\r\n    addSmallBodies() {\r\n        Util.log(\"Adding small bodies\");\r\n        loadMPCData(this.time, this.smbCallback.bind(this));\r\n    }\r\n    smbCallback(smbData) {\r\n        this.smbData = smbData;\r\n        this.addElement(\"SmallBodies\", SmallBodies(this.smbData, this.colorLookup, this.time));    \r\n    }\r\n    \r\n    options() {\r\n        \r\n        const names = [\r\n                 \"Solar System\",\r\n                 \"Set time\",\r\n                 \"Show object orbit\",\r\n                 \"Define orbit parameters\",\r\n                 \"Trajectory conrols\",\r\n                 \"The Earth and environs\",\r\n                 \"Local Galactic Neightborhood\",\r\n                 \"Nearby Galaxies (TBD)\",\r\n                 \"Help\"\r\n        ];\r\n        const opts = [];\r\n        for (var i=0; i<names.length; i += 1) {\r\n            const entry = {};\r\n            const val   = names[i];\r\n            entry.value = names[i];\r\n            const key = \"ka\"+i;\r\n            switch (val) {\r\n               \r\n            // Note that we need to ensure that we have separate\r\n            // keys for the elements (at least those that are the same compound types)\r\n            case \"Set time\":\r\n                entry.elem = <TextInput key={key} placeholder=\"...time...\"\r\n                               callback={this.updateTime.bind(this)} /> ;\r\n                break;\r\n            case \"Show object orbit\":\r\n                entry.elem = <TextInput key={key} placeholder=\"...object name..\"\r\n                               callback={this.addBody.bind(this)} /> ;\r\n                break;\r\n                \r\n            case \"Define orbit parameters\":\r\n                entry.elem = <Action key={key} action={this.openParams} />\r\n                break;\r\n                \r\n            case \"The Earth and environs\":\r\n                entry.elem = <Action key={key} args=\"The Earth and environs\" action={this.setAnim.bind(this)} />\r\n                break;\r\n                \r\n            case \"Local Galactic Neightborhood\":\r\n                entry.elem = <Action key={key} args=\"Local Galactic Neighborhood\" action={this.setAnim.bind(this)} />;\r\n                break;\r\n                \r\n            case \"Help\":\r\n                entry.elem = <Action key={key} action={this.openHelp} />;\r\n                break;\r\n                \r\n            default:\r\n                entry.elem = <div key={key}>Just the {val}</div> ;\r\n            }\r\n            \r\n        \r\n            opts.push(entry);\r\n        }\r\n        const res =  <OptionsSelector options={opts} /> ;\r\n        return res;\r\n    }\r\n    \r\n    \r\n    \r\n    raycastResult(results) {\r\n        const elem = document.getElementById(\"clickTarget\");\r\n        var str =\"<hr/><table><tr><th>Object</th><th>Offset (au)</th></tr>\";\r\n        var resArr = [];\r\n        for (var name in results) {\r\n            var dist = results[name];\r\n            if (!dist) {\r\n                dist = \"-\";\r\n            } else {\r\n                dist = dist.toPrecision(2);\r\n            }\r\n            resArr.push({name: name, dist: dist});\r\n        }\r\n        if (resArr.length > 0) {\r\n            resArr = resArr.sort(function(a,b) {\r\n                if (a.dist == b.dist) {\r\n                    return 0;\r\n                }\r\n                if (a.dist === \"-\") {\r\n                    return -1;\r\n                }\r\n                if (b.dist === \"-\") {\r\n                    return 1;\r\n                }\r\n                return a.dist-b.dist;\r\n            });\r\n        }\r\n        for (var i=0; i<resArr.length; i += 1) {\r\n            var name = resArr[i].name;\r\n            var dist = resArr[i].dist;        \r\n            str += \"<tr><td>\"+name+\"</td><td>\"+dist+\"</td></tr>\";\r\n        }\r\n        str += \"</table>\";\r\n        elem.innerHTML = str;\r\n    }\r\n    \r\n    addExternalOrbit(name, orbit) {\r\n    \r\n        this.addElement(name+\"Orbit\", OrbitPlot(name, orbit, 0xAAFFAA));\r\n        // If the phase of the orbit has been specified add the body too.\r\n        if (orbit.t0 != null) {\r\n            const userBody = Planet(name+\"Body\", this.time, orbit, 4000, 0xFFAAFF, true);\r\n            this.addElement(userBody.name, userBody);\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default SolarSystem;","import Util from \"../std/Util\";\n\nclass CoordTrans {\n    // Construct a transformation  between coordinate systems\n    // using coordinates of the poles.\n    // \n    // ang = [alphaG, deltaG, lonE]\n    //    alphaG,deltaG  = longitude/latitude of the pole of \n    //    the destination system in the original system,\n    //    lonE =  the longitude of the pole\n    //    of the original system in the destination system.\n    \n    constructor(ang) {\n        this.sin_dg = Math.sin(ang[1]);\n        this.cos_dg = Math.cos(ang[1]); \n        this.alphaG = ang[0];\n        this.deltaG = ang[1];\n        this.lonE   = ang[2];\n        \n        \n        // Transform the unit vectors to get the full transformation\n        // matrix\n        const vx = this.toVector(this.transform(0.,        0.));\n        const vy = this.toVector(this.transform(Math.PI/2, 0.));\n        const vz = this.toVector(this.transform(0.,        Math.PI/2));\n        this.mat = [vx, vy, vz];\n    }\n    \n    static RADIAN = Math.PI/180;\n    static coordDefs = {\n        \n        eqgal: [192.859481, 27.128251, 122.931918],\n        eqec:  [270.,       66.560709,  90.],\n        galeq: [122.931918, 27.128251, 192.859481],\n        eceq:  [ 90.000000, 66.560709, 270.],\n        ecgal: [180.023217, 29.811440,  96.383971],\n        galec: [ 96.383971, 29.811440, 180.023217]\n    };\n    static transformations = {};\n    \n    static getCoords(name_or_angles) {\n        if (Array.isArray(name_or_angles)) {\n            // User is specifying angles directly.\n            // so names is really a\n            return new CoordTrans(name_or_angles);\n        }\n        let name = name_or_angles.toLowerCase();\n        \n        if (!CoordTrans.transformations[name]) {\n            if (!CoordTrans.coordDefs[name]) {\n                Util.log(\"Unknown coordinate System:\"+name);\n            }            \n            CoordTrans.transformations[name] = new CoordTrans(Util.times(CoordTrans.RADIAN, CoordTrans.coordDefs[name]));\n        }\n        return CoordTrans.transformations[name];\n    }\n        \n    // radians to radians\n    transform(a,d) { \n        const cos_d = Math.cos(d);\n        const sin_d = Math.sin(d);\n        const cos_delta = Math.cos(a-this.alphaG);\n        const sin_delta = Math.sin(a-this.alphaG);\n        \n        const sin_b = sin_d*this.sin_dg + \n                      cos_d*this.cos_dg*cos_delta;\n        \n              \n        const b     = Math.asin(sin_b);  // Range is OK...\n        const cos_b = Math.cos(b);\n        \n        const num   = cos_d*sin_delta;\n        const denom = sin_d*this.cos_dg - cos_d*this.sin_dg*cos_delta;\n        var l     = this.lonE - Math.atan2(num, denom);\n        l %= 2*Math.PI;\n        if (l < 0) {\n            l += 2*Math.PI;\n        }\n        return [l,b];\n    }\n        \n    \n    // Degrees to degrees\n    transformd(a,d) {        \n        return Util.times(1/CoordTrans.RADIAN,\n           this.transform(a*CoordTrans.RADIAN, d*CoordTrans.RADIAN)\n        );\n    }\n    \n    toVector(crd) {\n        const a = crd[0];\n        const d = crd[1];\n        const vec =  [\n            Math.cos(a)*Math.cos(d), \n            Math.sin(a)*Math.cos(d), \n            Math.sin(d)\n        ];\n        return vec;\n    }\n    \n    vTransform(v) {\n        if (!v.length || v.length != 3) {\n            return null;\n        }\n        // Get the vector in the new coordinate system\n        var result =    Util.times(v[0], this.mat[0]);\n        result = Util.vadd(result, Util.times(v[1], this.mat[1]));\n        result = Util.vadd(result, Util.times(v[2], this.mat[2]));\n        return result;\n    }\n}\n\nexport default CoordTrans.getCoords;\n\nfunction test() {\n  for (var name in CoordTrans.coordDefs) {\n    var coords = CoordTrans.getCoords(name);\n    Util.log(\"Testing matrix transformation for: \"+name);\n    var testCoord = [Math.random(), Math.random()];\n    var testVec   = coords.toVector(testCoord);\n    var tranCoord = coords.transform(testCoord[0], testCoord[1]);\n    var tranVec   = coords.vTransform(testVec);\n    Util.log(\"Initial coords:\"+testCoord);\n    Util.log(\"Initial vec:\"+testVec);\n    Util.log(\"Transformed coords:\"+tranCoord);\n    Util.log(\"Transformed vector:\"+tranVec);\n    Util.log(\"Implied coordinates:\",\n       Math.atan2(tranVec[1], tranVec[0]),\n       Math.asin(tranVec[2]));\n  }\n}\n","// Calculate the precession rates for the longitude\n// of the ascending node and the argument of perigee\n// for Earth satellites.  Source:\n// https://science.nasa.gov/science-pink/s3fs-public/atoms/files/GDC_OrbitPrimer.pdf\n\nimport Constants from \"../std/Constants\";\nclass SatPrecession {\n    \n    constructor(orbit) {\n        \n        let a  = orbit.a;\n        let rE = Constants.rEarth;\n        let mE = Constants.MEarth;\n        let G  = Constants.G;\n        let e  = orbit.e;\n        let e2 = e*e;\n        let cos_i = orbit.rot[3]/orbit.rot[0];\n        let sin_i = orbit.rot[4]\n        \n        // This term depends upon the shape of the Earth.\n        let j2 = 1.08262668e-3; //https://ai-solutions.com/_freeflyeruniversityguide/j2_perturbation.htm\n        \n        // if p = 3 sqrt(GM/a^3) J2 rE^2 / [2 a^2 (1-e^2)^2)\n        //    nodeP = -p*cos(i)\n        //    argP  =  p*(4-5sin(i)^2)/2  \n        \n        let p = 3*Math.sqrt(G * mE/(a*a*a)) * j2 * rE*rE / (2*a*a*(1-e2)*(1-e2));\n        this.fOmega    = -p*cos_i;\n        this.fNu =  p*(4-5*sin_i*sin_i)/2;\n    }\n}\n\nexport default SatPrecession;","import Util             from \"../std/Util\";\nimport Orbit            from \"../orbits/Orbit\";\nimport ParameterFactory from \"../orbits/ParameterFactory\";\nimport Constants        from \"../std/Constants\";\nimport SatPrecession    from \"../earth/SatPrecession\";\n\nfunction NoradReader(url, callback) {\n    const xhr = new XMLHttpRequest();\n    const here = this;\n    const xhrHandler = function() {\n        \n        if (xhr.readyState === XMLHttpRequest.DONE) {\n            const data = parseNorad(xhr.responseText);\n        };\n    }\n    xhr.open('GET', url);\n    xhr.onreadystatechange = xhrHandler;\n    xhr.send();\n    \n    var latestEpoch = -1e30;\n    var smallestA   = 1.e10;\n    \n    function parseNorad(text) {\n        var lines = text.split(\"\\n\");\n        var start = 0;\n        const data = [];\n        while (start < lines.length) {\n            if (lines[start].charAt(0) == \"0\") {\n                const res = parseLines(lines[start], lines[start+1], lines[start+2]);\n                if (res) {\n                    let satp = new SatPrecession(res.orbit);\n                    res.orbit.addPrecession(res.orbit.ep0, satp.fOmega, satp.fNu);\n                    data[data.length] = res;\n                }\n                start += 3;                \n            } else {\n                if (lines[start].trim().length > 0) {\n                    Util.log(\"Unexpected line in tle:\\n  \",lines[start]);\n                }\n                // Need to have 0 line to start.\n                start += 1;\n            }\n        }\n        if (callback) {\n            callback(latestEpoch, data);\n        }\n        \n    }\n    \n    var count = 0;\n    function parseLines(l0,l1,l2) {\n        count += 1;\n        if (!l1.charAt(0) == \"1\"  || !l2.charAt(0) == \"2\") {\n            Util.log(\"Invalid TLE detected:\\n  \", l0,\"\\n  \", l1,\"\\n  \", l2 );            \n            return null;\n        }\n        var name  = l0.substring(2).trim();\n        if (name.startsWith(\"TBA \")) {\n            name=\"TBA\";\n        }\n        var id    = l1.substring(2,7).trim();\n        var desig = l1.substring(9,17).trim();\n        var yr = l1.substring(18,20);\n        if (yr.charAt(0) > '4') {\n            yr = \"19\" +yr;            \n        } else {\n            yr = \"20\"+yr;\n        }\n        yr = parseInt(yr);\n        var yday = l1.substring(20,32).trim();\n        yday = parseFloat(yday);\n        \n        var inclination = l2.substring(8,16).trim();\n        var ascNode     = l2.substring(17,25).trim();\n        var ecc         = \"0.\"+l2.substring(26,33).trim();\n        var argPerigee  = l2.substring(34,42).trim();\n        var ma          = l2.substring(43,51).trim();\n        var mm          = l2.substring(52,63).trim();\n        var idays       = (yr-2000) * 365;  // Completedyears\n        // Leap days in the current year are handled in the yday\n        // but we need to add them for previous years.  (Just handling since 2000)\n        // Recall that 2000 is a leap year.  Note that 2004 has only\n        // one special leapday, since if we are past 2/28 this is included\n        // in yday.\n        var leap = 0;\n        if (yr > 2000) {\n           leap = Math.floor( (yr-2001)/4) + 1;  // 2001 -> 1, 2004 -> 1, 2005 -> 2           \n        }\n        var days  = idays + leap + yday;\n        var t = Constants.SOLAR_DAY * days;\n        \n        if (t > latestEpoch  || count < 3) {\n            latestEpoch = t;\n        }\n        \n        var orbit = new Orbit(name);\n        const pgen = ParameterFactory.genParam;\n        orbit.addParameter(pgen(\"M\",     Constants.MEarth));\n        orbit.addParameter(pgen(\"t\",     t));\n        orbit.addParameter(pgen(\"N0\",    mm));\n        orbit.addParameter(pgen(\"i\",     inclination*Math.PI/180));\n        orbit.addParameter(pgen(\"nu\",    argPerigee*Math.PI/180));\n        orbit.addParameter(pgen(\"Omega\", ascNode*Math.PI/180));\n        orbit.addParameter(pgen(\"MA\",    ma*Math.PI/180));\n        orbit.addParameter(pgen(\"Eccen\", ecc));\n        \n        var rot = orbit.getParameter(\"Rot\", true);\n        var a   = orbit.getParameter(\"a\", true);\n        var t0  = orbit.getParameter(\"t0\", true);\n        var per = orbit.getParameter(\"per\", true);\n        var e   = orbit.getParameter(\"Eccen\", true);\n        if (a.value < smallestA) {\n            smallestA = a.value;\n        }\n        var qorb = orbit.quickOrbit();\n        qorb.ep0 = t;\n        qorb.scale = 1./Constants.rEarth;\n        return {name: name+\"_\"+desig+\"_\"+id, id: id, orbit: qorb};\n    }\n}\n\nexport default NoradReader;\n\n\n","import {Color, BufferGeometry, PointsMaterial, Float32BufferAttribute, Vector3} from \"three\";\nimport AngPoints from \"../elems/AngPoints.js\";\nimport Util from \"../std/Util.js\";\n\nconst Satellites = function(satData, startTime) {\n    function getPositions(data, time) {\n        \n        const px = [];\n        for (var i=0; i<data.length; i += 1) {\n            if (data[i].orbit == null) {\n                Util.log(\"No orbit for \"+i+\" \"+data.name);\n            }\n            const p = data[i].orbit.position(time);\n            px.push(p[0], p[1], p[2]);\n        }\n        return new Float32BufferAttribute(px,3);\n    }\n    \n\n    const geometry = new BufferGeometry();        \n    // Should the time here be 0?\n    geometry.setAttribute( 'position', getPositions(satData, startTime));\n    geometry.setAttribute( 'color',    getColors(satData));\n        \n    const material       = new PointsMaterial( {sizeAttenuation: false, size: 2,  vertexColors: true} );\n    const points         = new AngPoints(geometry, material );\n    \n    // Add this function to the component.  This allows us to find\n    // a specific satellite.\n    points.getIndexedName = function(index) {\n        return satData[index].name;\n    };\n    \n    return {component: points,\n      render:function(time) {\n        geometry.setAttribute( 'position', getPositions(satData, time));\n      }\n    };\n    \n    function getColors(data) {\n        const colors = [];\n        for (var i=0; i<data.length; i += 1) {\n            var sat = data[i];\n            var sn = sat.name.toUpperCase();\n            if (sn.indexOf(\"DEB\") > 0) {\n                colors.push(1,0,0);\n            } else if (sn.indexOf(\"STARLINK\") >= 0) {\n                colors.push(0,1,0);\n            } else {\n                colors.push(1,1,1);\n            }            \n        }\n        return new Float32BufferAttribute(colors, 3 );\n    }\n\n}\n\nexport default Satellites;","import Animation from \"../elems/Animation\";\nimport Util from \"../std/Util\";\nimport Constants from \"../std/Constants\";\n\nimport {createRef} from \"react\";\n\nimport OptionsSelector from  \"../elems/OptionsSelector\";\nimport TextInput     from    \"../elems/TextInput\";\nimport Action        from    \"../elems/Action\";\n\n\nimport getCoords from \"../std/Coords\";\nimport Orbit   from \"../orbits/Orbit\";\nimport ParameterFactory from \"../orbits/ParameterFactory\";\nimport Planets from \"../solarsystem/Planets\";\n\n\nimport NoradReader from \"../earth/NoradReader\";\nimport Satellites  from \"../earth/Satellites\";\n\nimport {Scene, AmbientLight, DirectionalLight} from \"three\";\nimport {Mesh, TextureLoader, Color, MeshPhongMaterial} from \"three\";\nimport {SphereGeometry, Vector3} from \"three\";\n\nclass Earth extends Animation { \n\n    constructor(params) {\n        super(params);\n        \n        this.longClickTime = 1500;\n        this.name          = \"Earth\";\n        this.moonRef       = createRef();\n        this.lunarOrbitData = \n            {\n                base: {\n                    t:      12*3600, // Given as 2000 Jan 1.50 TT\n                    a:      3.844e8,\n                    Eccen:  0.0554,\n                    nu:   318.15 * Math.PI/180,\n                    MA:   135.27 * Math.PI/180,\n                    i:      5.16 * Math.PI/180,\n                    Omega:125.08 * Math.PI/180,\n                    N0:    13.176358 / 360\n                },\n                prec: {\n                    ep0:    12*3600,\n                    fNu:    2*Math.PI / (5.997*Constants.CENTURY/100),\n                    fOmega: 2*Math.PI / (18.600*Constants.CENTURY/100)\n                    \n                }\n            }\n        \n\n        this.delta = 2;\n        this.cameraPos = new Vector3(0,0,2.5);\n        this.baseAnimation = \"Solar System\";\n\n        this.scene = new Scene();        \n        this.eceq = getCoords(\"EcEq\");  // Transform Earth orbit to Equatorial coordinates.\n        const here = this;\n\n        var sunlight = new DirectionalLight(0xffffff, 1);\n        this.addElement(\"sunlight\", {name: \"sunlight\", component: sunlight,\n                         render: function(time) {\n                             var r0 = here.earthOrbit.position(time);\n                             r0 = here.eceq.vTransform(r0);\n                             \n                             sunlight.position.x = -1000*r0[0];\n                             sunlight.position.y = -1000*r0[1];\n                             sunlight.position.z = -1000*r0[2];\n                         }});\n        this.scene.add(new AmbientLight(0x333333));\n\n        var radius     = 1;\n        var segments   = 30;\n        this.moonScale = 10;\n        var earth = this.createEarthSphere(radius, segments);\n        \n        Util.log(\"Transform earth coordinates to Equatorial\");\n        \n        // Note comments below on how three.js renders spheres.\n        this.addElement(\"Earth\", {name: \"Earth\", component: earth,\n                         render: function(time) {\n                             var rot = 360*(time/Constants.SIDEREAL_DAY);\n                             rot += Constants.SIDEREAL_ANGLE_AT_EPOCH;\n                             rot %= 360;\n                             rot *= Math.PI/180;\n                             earth.rotation.y = rot; \n                         }});\n                     \n        // Relative to the Earth;\n        const lorb = new Orbit(\"Moon\");\n        lorb.addStructure(this.lunarOrbitData.base);\n        const rm = lorb.getParameter(\"r\", true);\n        const qlorb = lorb.quickOrbit();\n        qlorb.addPrecession(\n            this.lunarOrbitData.prec.ep0,\n            this.lunarOrbitData.prec.fOmega,\n            this.lunarOrbitData.prec.fNu\n        );\n        this.moonOrbit = qlorb;\n        qlorb.scale = 1/Constants.rEarth;\n        var moon = this.createMoonSphere(0.2727, segments);\n        this.addElement(\"Moon\", {name: \"Moon\", component: moon,\n                          render: function(time) {\n                              let r = here.moonOrbit.position(time);\n                              moon.position.x = r[0]*here.moonScale/60;\n                              moon.position.y = r[1]*here.moonScale/60;\n                              moon.position.z = r[2]*here.moonScale/60;\n                              // We couple rotation to revolution\n                              // which isn't right, but probably not\n                              // disastrously wrong, need to check\n                              // that the phase is right.\n                              // \n                              // We don't handle the inclination of the\n                              // lunar rotation to the equatorial plane.\n                              let rotAng = Math.atan2(r[1],r[0]);\n                              moon.rotation.y = Math.PI + rotAng;\n                          }});\n        this.addTimeDisplay();\n        NoradReader(\"data/norad.tle\", this.addSatellites.bind(this));\n        const pData = Planets.getElements(\"Earth\", this.time);\n        const elems = pData.elements;\n        \n        // Relative to the Sun\n        const orb = new Orbit(\"Earth\");\n\n        for (var key in elems) {\n            orb.addParameter(ParameterFactory.genParam(key, elems[key]));\n        }\n        orb.addParameter(ParameterFactory.genParam(\"t\", this.time));\n        // Make sure we can get positions.\n        const r0 = orb.getParameter(\"r\", true);\n        \n        this.earthOrbit = orb.quickOrbit();\n        sunlight.position.x = -1000*r0[0];\n        sunlight.position.y = -1000*r0[0];\n        sunlight.position.z = -1000*r0[0];\n        \n    }\n    \n    options() {\n        const names = [\n                 \"The Earth and environs\",\n                 \"Moon orbit scaling\",\n                 \"Set time\",\n                 \"Show object orbit\",\n                 \"Define orbit parameters\",\n                 \"Trajectory conrols\",\n                 \"Solar System\",\n                 \"Local Galactic Neightborhood\",\n                 \"Nearby Galaxies (TBD)\",\n                 \"Help\"\n        ];\n        const opts = [];\n        for (var i=0; i<names.length; i += 1) {\n            const entry = {};\n            const val   = names[i];\n            entry.value = names[i];\n            const key = \"ka\"+i;\n            switch (val) {\n               \n            case \"Set time\":\n                entry.elem = <TextInput key={key} placeholder=\"...year...\"\n                               callback={this.updateTime.bind(this)} /> ;\n                break;\n                \n            /*case \"Show object orbit\":\n                entry.elem = <TextInput key={key} placeholder=\"...object name..\"\n                               callback={this.addBody.bind(this)} /> ;\n                break; \n                entry.elem = \n                 <div> Lunar orbit radius (rE): <input\n                    type=\"range\" min=\"0\" max=\"100\" /> <div>;\n                break;*/\n                \n            case \"Moon orbit scaling\":\n                entry.elem = <div> <input\n                 onChange={this.setMoonScale.bind(this)}\n                 ref={this.moonRef}\n                 id=\"moonScaling\"\n                 type=\"range\" min=\"1\" max=\"60\" defaultValue={this.moonScale} /></div>;\n                break;\n                                \n            case \"Define orbit parameters\":\n                entry.elem = <Action key={key} action={this.openParams} />\n                break;\n                                \n            case \"Solar System\":\n                entry.elem = <Action key={key} args=\"Solar System\" action={this.setAnim.bind(this)} />;\n                break;\n                \n            case \"Local Galactic Neightborhood\":\n                entry.elem = <Action key={key} args=\"Local Galactic Neighborhood\" action={this.setAnim.bind(this)} />;\n                break;\n                \n            case \"Help\":\n                entry.elem = <Action key={key} action={this.openHelp} />;\n                break;\n                \n            default:\n                entry.elem = <div key={key}>TBD: {val}</div> ;\n            }\n                   \n            opts.push(entry);\n        }\n        const res =  <OptionsSelector options={opts} /> ;\n        return res;\n    }    \n\n    setMoonScale(e) {\n        this.moonScale = e.target.value;\n    }\n    \n    addSatellites(epoch, data) {\n        Util.log(\"NORAD epoch for satellites: \"+epoch/(365.25*86400));\n        Util.log(\"Number of satellites: \"+data.length);\n        this.baseTime = epoch;\n        this.setTime(epoch);\n        this.addElement(\"satellites\", Satellites(data, epoch));\n    }\n    \n    // When loading a texture onto a sphere from a cartesian map,\n    // three.js renders the y axis of the map onto the y axis of the\n    // sphere, while the x and z axes are composed from x axis.\n    // This renders the center of the map at the 'north pole'.\n    // Since we want to use the proper coordinate system for the\n    // satellite and orbit data, we need to adjust to initially render\n    // the object and to ensure that we rotate along the appropriate axis.\n\n    createEarthSphere(radius, segments) {\n        \n        // The map, bump and specular textures were originally found on\n        //  https://blog.mastermaps.com/2013/09/creating-webgl-earth-with-threejs.html\n        // but are credited to \n        //  http://www.shadedrelief.com/natural3/\n        // which includes the statement:\n        //  \"Natural Earth III is free and without use restrictions.\" (as of 2021-08-18)\n        var mesh = new Mesh(\n            new SphereGeometry(radius, segments, segments),\n            new MeshPhongMaterial({\n                map:     new TextureLoader().load('images/earth.jpg'),\n                bumpMap: new TextureLoader().load('images/bump.jpg'),\n                bumpScale: 0.005,\n                specularMap: new TextureLoader().load('images/spec.jpg'),\n                specular: new Color('grey')\n            })\n        );\n        mesh.rotateX(Math.PI/2);  // Move the pole where it should be!\n        return mesh;\n    }\n    createMoonSphere(radius, segments) {\n        var mesh = new Mesh(\n            new SphereGeometry(radius, segments, segments),\n            new MeshPhongMaterial({\n                map: new TextureLoader().load('images/moon.jpg')\n            })\n        );\n        mesh.rotateX(Math.PI/2);\n        return mesh;\n    }\n    \n    timeFormatter(time) {\n        var note = \"\";\n        if (Math.abs(time-this.baseTime) > 180*Constants.SOLAR_DAY) {\n            note = \" <br>More than 6 months from satellite ephemeris epoch\";\n        }\n        return super.timeFormatter(time)+note;\n    }\n    \n    raycastResult(results) {\n        const elem = document.getElementById(\"clickTarget\");\n \n        var str = \"Results:<table><tr><th>Object</th><th>Offset (rE)</th></tr>\";\n        var resArr = [];\n        for (var name in results) {\n            var dist = results[name];\n            if (!dist) {\n                dist = \"-\";\n            } else {\n                dist = dist.toPrecision(2);\n            }\n            resArr.push({name: name, dist: dist});\n        }\n        if (resArr.length > 0) {\n            resArr = resArr.sort(function(a,b) {\n                if (a.dist == b.dist) {\n                    return 0;\n                }\n                if (a.dist === \"-\") {\n                    return -1;\n                }\n                if (b.dist === \"-\") {\n                    return 1;\n                }\n                return a.dist-b.dist;\n            });\n        }\n        for (var i=0; i<resArr.length; i += 1) {\n            var name = resArr[i].name;\n            var dist = resArr[i].dist;        \n            str += \"<tr><td>\"+name+\"</td><td>\"+dist+\"</td></tr>\";\n        }\n        str += \"</table>\";\n        elem.innerHTML = str;\n    }\n\n\n}\n\nexport default Earth;","class TransformedOrbit {\n    \n    constructor(orbit) {\n        this.orbit = orbit;\n        this.transforms = [];\n    }\n    addTransform(trans) {\n        this.transforms.push(trans);\n    }\n    position(time) {\n        return this.transform(this.orbit.position(time));\n    }\n    \n    transform(r) {\n        for (let i=0; i<this.transforms.length; i += 1) {\n            r = this.transforms[i].vTransform(r);\n        }\n        return r;\n    }\n    \n    orbitXYZ(n) { \n        let vec = this.orbit.orbitXYZ(n);\n        return this.multi(vec);\n    }\n    \n    state(time) {\n        // State just returns two vectors, r and v\n        return multi(this.orbit.state(time));\n    }\n    \n    multi(vec) {\n        for (let i=0; i<vec.length; i += 1) {\n            vec[i] = this.transform(vec[i]);\n        }\n        return vec;\n    }\n}\n\nexport default TransformedOrbit;\n\n\n","import { BufferGeometry } from 'three';\nimport { Float32BufferAttribute } from 'three';\nimport { Vector2 } from 'three';\nimport { Vector3 } from 'three';\n\n// Tried to update the UV mapping.\n\nclass RingGeometry extends BufferGeometry {\n\n\tconstructor( innerRadius = 0.5, outerRadius = 1, thetaSegments = 8, phiSegments = 1, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'RingGeometry';\n\n\t\tthis.parameters = {\n\t\t\tinnerRadius: innerRadius,\n\t\t\touterRadius: outerRadius,\n\t\t\tthetaSegments: thetaSegments,\n\t\t\tphiSegments: phiSegments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthetaSegments = Math.max( 3, thetaSegments );\n\t\tphiSegments = Math.max( 1, phiSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// some helper variables\n\n\t\tlet radius = innerRadius;\n\t\tconst radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= phiSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= thetaSegments; i ++ ) {\n\n\t\t\t\t// values are generate from the inside of the ring to the outside\n\n\t\t\t\tconst segment = thetaStart + i / thetaSegments * thetaLength;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = (radius-innerRadius)/(outerRadius-innerRadius);\n\t\t\t\tuv.y = segment/Math.PI/2;\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t}\n\n\t\t\t// increase the radius for next row of vertices\n\n\t\t\tradius += radiusStep;\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let j = 0; j < phiSegments; j ++ ) {\n\n\t\t\tconst thetaSegmentLevel = j * ( thetaSegments + 1 );\n\n\t\t\tfor ( let i = 0; i < thetaSegments; i ++ ) {\n\n\t\t\t\tconst segment = i + thetaSegmentLevel;\n\n\t\t\t\tconst a = segment;\n\t\t\t\tconst b = segment + thetaSegments + 1;\n\t\t\t\tconst c = segment + thetaSegments + 2;\n\t\t\t\tconst d = segment + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new RingGeometry( data.innerRadius, data.outerRadius, data.thetaSegments, data.phiSegments, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\n\nexport { RingGeometry, RingGeometry as RingBufferGeometry };\n","import Animation from \"../elems/Animation\";\nimport Util from \"../std/Util\";\nimport Dump from \"../std/Dump\";\nimport Constants from \"../std/Constants\";\nimport OptionsSelector from \"../elems/OptionsSelector\";\n\n\nimport getCoords from \"../std/Coords\";\nimport Orbit   from \"../orbits/Orbit\";\nimport TransformedOrbit from \"../orbits/TransformedOrbit\";\nimport Planet  from \"../solarsystem/Planet\";\nimport ParameterFactory from \"../orbits/ParameterFactory\";\nimport Planets from \"../solarsystem/Planets\";\n\n\n\nimport {Scene, Vector3, Euler, AmbientLight, DirectionalLight} from \"three\";\nimport {Mesh, TextureLoader, Color, MeshPhongMaterial} from \"three\";\nimport {SphereGeometry, \n        MeshLambertMaterial, MeshBasicMaterial, DoubleSide} from \"three\";\n// Overriden\nimport {RingGeometry} from \"../three/RingGeometry\";\n\nclass PlanetarySystem extends Animation { \n\n    constructor(params) {\n        super(params);\n        this.frame = params.frame;\n        if (this.timeID) {\n            this.timeElem = document.getElementById(this.timeID);\n        }\n        \n\n        this.delta         = 2;\n        this.moons         = {};\n        this.longClickTime = 1000;  // A little shorter since\n                                    // we do less clicking here.\n\n        this.scene = new Scene();\n        \n        this.cameraPos = new Vector3(0,0,2.5);\n        this.baseAnimation = \"Solar System\";\n        \n        this.segments = 40;\n        const here = this;\n        // \n        // For displaying a planetary system we want\n        // the reference plane to be the equatorial plane of the\n        // planet.\n        this.eceqE = getCoords(\"eceq\");\n        // transformation from Earth equatorial to planet equatorial\n        let  angs = [this.rotAxis.ra, this.rotAxis.dec, Math.PI/2];\n        this.eqEeqP = getCoords(angs);\n        \n        this.planetOrbit = this.getOrbit(this.planetName, this.time);\n        // Convert to local equator.\n        this.planetOrbit = new TransformedOrbit(this.planetOrbit);\n        this.planetOrbit.addTransform(this.eceqE);\n        this.planetOrbit.addTransform(this.eqEeqP);\n        \n        \n        const r0         = this.planetOrbit.position(this.time);\n\n        const sunlight = new DirectionalLight(0xffffff, 1);\n        sunlight.position.x = -1000*r0[0];\n        sunlight.position.y = -1000*r0[1];\n        sunlight.position.z = -1000*r0[2];\n        sunlight.castShadow = true;\n        \n        \n        this.addElement(\"sunlight\", {name: \"sunlight\", component: sunlight,\n                         render: function(time) {\n                             const r0 = here.planetOrbit.position(time);\n                             \n                             sunlight.position.x = -1000*r0[0];\n                             sunlight.position.y = -1000*r0[1];\n                             sunlight.position.z = -1000*r0[2];\n                         }});\n                     \n        this.scene.add(new AmbientLight(0x333333));\n\n        var radius   = 1;\n                \n        this.addElement(this.planetName, this.createPlanet(this.planetName, radius, this.texture, this.ring));\n        this.addTimeDisplay();\n        \n        if (this.moonInfo) {\n            this.addMoons(this.moonInfo);\n        }\n    }\n        \n    options() {\n        this.frame.userControls.setState({showingOptions: true});\n        let content = <div><div>{this.name}</div><div id=\"pContent\"></div></div>;\n        return <OptionsSelector direct=\"true\" directContent={content} options={[]} />;\n    }\n        \n    addMoons(moonInfo) {\n        for (let moonName in moonInfo) {\n            const md   = moonInfo[moonName];\n            let   morb = this.getMoonOrbit(moonName, md);\n            if (md.frame && md.frame.type != \"Equatorial\") {\n                // Need to tranform the frame of the orbit from\n                // the frame in which it was computed, into the\n                // equatorial frame of the planet.\n                morb = new TransformedOrbit(morb);\n                if (md.frame == \"Ecliptic\" ) {\n                    // Same transformation as for planet orbit.\n                    morb.addTransform(this.eceqE);\n                    morb.addTransform(this.eqEeqP);\n                } else if (md.frame == \"Laplace\") {\n                    // Need the transform from Earth\n                    // equatorial to the Laplace frame.\n                    const lapTrans = getCoords([md.frame.ra,md.frame.dec,Math.PI/2]);\n                    morb.addTransform(this.eceqE);\n                    morb.addTransform(lapTrans);\n                }\n            }\n            var rad = 0.2;\n            if (md.render && md.render.frac) {\n                rad = md.render.frac;\n            }\n            var moon;\n            var color = md.render.color? md.render.color: 0xFFFF00;\n            \n            moon = Planet(moonName, this.time, \n                          morb, rad, color, false, true);\n                          \n            if (md.render && md.render.texture) {\n                // Replace the featureless sphere\n                let pos = morb.position(this.time);\n                let texturedSphere = this.createSphere(rad, this.segments, md.render.texture);               \n                texturedSphere.position.set(pos[0], pos[1], pos[2]);\n                moon.component = texturedSphere;\n            }\n            \n            this.addElement(moonName+\"Body\", moon);\n            this.moons[moonName] = {rendering: moon, data: md, orbit: morb};\n        }\n\n    }\n    \n    createPlanet(name, radius, texture, ring) {\n        const planet = this.createSphere(radius, this.segments, texture, ring);\n        const here = this;\n        return {\n            name:      name,\n            component: planet,\n            render:    function(time) {\n                let phase = here.rotationPhase + 2*Math.PI * (time/here.rotationPeriod);\n                phase %= 2*Math.PI;\n                planet.rotation.y = phase; \n            }\n        }      \n    }\n    \n    getOrbit(name, time) {\n        const pData = Planets.getElements(name, time);\n        const elems = pData.elements;\n        this.planetRadius = pData.diameter*1000/2;  // diameter in km to radius in m.\n        \n        const orb = new Orbit(name);\n\n        for (var key in elems) {\n            orb.addParameter(ParameterFactory.genParam(key, elems[key]));\n        }\n        \n        orb.addParameter(ParameterFactory.genParam(\"t\", time));\n        // Make sure we can get positions.\n        const r0 = orb.getParameter(\"r\", true);;        \n        \n        return orb.quickOrbit();\n    }\n    \n    getMoonOrbit(name, moonData) {\n        let  morb = new Orbit(name);\n        const mElems = moonData.elems;\n        if (!mElems.t) {\n            if (moonData.prec) {\n                mElems.t = moonData.prec.ep0;\n            } else {\n                mElems.t = this.time;\n            }\n        }\n        morb.addStructure(moonData.elems);\n        const rm = morb.getParameter(\"r\", true);\n        morb = morb.quickOrbit();  // Just get this...\n        if (morb.prec) {\n            morb.addPrecession(\n                moonData.prec.ep0,\n                moonData.prec.fOmega,\n                moonData.prec.fNu\n            );\n        }\n        morb.scale = 1/this.planetRadius;\n        if (moonData.moonScale) {\n            morb.scale /= moonData.moonScale;\n        }\n        return morb;\n    }\n    \n    \n\n    // When loading a texture onto a sphere from a cartesian map,\n    // three.js renders the y axis of the map onto the y axis of the\n    // sphere, while the x and z axes are composed from x axis.\n    // This renders the center of the map at the 'north pole', i.e., maximum z.\n    // Since we want to use the proper coordinate system for the\n    // other system, we need to adjust to initially render\n    // the object and to ensure that we rotate along the appropriate axis.\n\n    createSphere(radius, segments, texture, ring) {\n        var mesh;\n        \n            const loader  = new TextureLoader();\n            let map  = null;\n            let bump = null;\n            let spec = null;\n            let specColor = null;\n            if (texture.map) {\n                map  = loader.load(texture.map);\n            }\n            if (texture.bump) {\n                bump = loader.load(texture.bump);\n            }\n            if (texture.spec) {\n                spec = loader.load(texture.spec);\n                specColor = new Color(\"grey\");\n            }\n            \n            mesh = new Mesh(\n            new SphereGeometry(radius, segments, segments),\n            new MeshPhongMaterial({\n                map:     map,\n                bumpMap: bump,\n                bumpScale: 0.005,\n                specularMap: spec,\n                specular: specColor\n            })\n        );\n        mesh.rotateX(Math.PI/2);  // Move the pole where it should be!\n        mesh.receiveShadow = true;\n        \n        if (ring) {\n            let map = new TextureLoader().load(ring.texture.map);\n            let ringG = new RingGeometry(ring.innerRadius, ring.outerRadius, 2*segments);\n            const rMat = \n                new MeshPhongMaterial({\n                   map:         map,\n                   specular:    specColor,\n                   side:        DoubleSide\n                });\n            let ringM = new Mesh(ringG, rMat);\n            ringM.position.set(0,0,0);\n            ringM.rotateX(Math.PI/2);\n            mesh.add(ringM);\n            ringM.receiveShadow = true;\n        }\n        return mesh;\n    }\n    /*\n    createSphere(radius, segments) {\n        var mesh = new Mesh(\n            new SphereGeometry(radius, segments, segments),\n            new MeshPhongMaterial({\n                map:     new TextureLoader().load('images/earth.jpg'),\n                bumpMap: new TextureLoader().load('images/bump.jpg'),\n                bumpScale: 0.005,\n                specularMap: new TextureLoader().load('images/spec.jpg'),\n                specular: new Color('grey')\n            })\n        );\n        mesh.rotateX(Math.PI/2);  // Move the pole where it should be!\n        return mesh;\n    }*/\n\n    \n    raycastResult(results) {\n        const elem = document.getElementById(\"clickTarget\");\n\n        var str = \"<hr/><table></tr>\";\n        for (var name in results) {\n            if (name.endsWith(\"Body\")) {\n                name=name.substring(0, name.length-4);\n            }\n            str += \"<tr><td>\"+name+\"</td></tr>\";\n        }\n        str += \"</table>\";\n        elem.innerHTML = str;\n    }\n\n    options() {\n        \n        const names = [\n                 this.name,\n        ];\n        const opts = [];\n        for (var i=0; i<names.length; i += 1) {\n            const entry = {};\n            const val   = names[i];\n            entry.value = names[i];\n            const key = \"ka\"+i;\n            switch (val) {\n                               \n            default:\n                entry.elem = <div key={key}></div> ;\n            }\n            \n        \n            opts.push(entry);\n        }\n        const res =  <OptionsSelector options={opts} /> ;\n        return res;\n    }\n}\n\nexport default PlanetarySystem;","import PlanetarySystem from \"../animations/PlanetarySystem\";\nimport Constants from \"../std/Constants\";\n\nclass Mercury extends PlanetarySystem { \n    constructor(params) {\n        \n    \n        const dr = Math.PI/180;\n        const yr = Constants.CENTURY/100;\n        const fq = 2*Math.PI/yr;\n\n        params.name       = \"Mercury\";\n        params.planetName = \"Mercury\";\n        params.rotationPhase = 0;\n        params.rotationPeriod = 58.646 * 86400;\n        params.rotAxis = {ra: 281.01*dr, dec: 61.45*dr};\n        params.texture = {\n            map:\"images/2k_mercury.jpg\",\n            src:\"https://www.solarsystemscope.com/textures/download/2k_mercury.jpg\",\n            copyright:\"https://creativecommons.org/licenses/by/4.0/\"\n        };\n        \n        super(params);\n    }\n}\n\nexport default Mercury;","import PlanetarySystem from \"../animations/PlanetarySystem\";\nimport Constants from \"../std/Constants\";\n\nclass Venus extends PlanetarySystem { \n    constructor(params) {\n        const dr = Math.PI/180;\n        const yr = Constants.CENTURY/100;\n        const fq = 2*Math.PI/yr;\n\n        params.name       = \"Venus\";\n        params.planetName = \"Venus\";\n        params.rotationPhase = 0;\n        params.rotationPeriod = -243.0226 * 86400;\n        params.rotAxis = {ra: 272.76 *dr, dec: 67.16 *dr}; \n        params.texture = {\n            map:\"images/2k_venus_surface.jpg\",\n            src:\"https://www.solarsystemscope.com/textures/download/2k_venus_surface.jpg\",\n            copyright:\"https://creativecommons.org/licenses/by/4.0/\"\n        };\n        \n        super(params);\n    }\n}\n\nexport default Venus;","import PlanetarySystem from \"../animations/PlanetarySystem\";\nimport Constants from \"../std/Constants\";\n\nclass Mars extends PlanetarySystem { \n    constructor(params) {\n        \n        const dr = Math.PI/180;\n        const yr = Constants.CENTURY/100;\n        const fq = 2*Math.PI/yr;\n        \n        params.name       = \"Mars\";\n        params.planetName = \"Mars\";\n        params.rotationPhase = 0;\n        params.rotationPeriod = 1.025957 * 86400;\n        params.rotAxis = {ra: 317.68142 *dr, dec: 52.88650 *dr},\n        params.texture = {\n            map:\"images/2k_mars.jpg\",\n            src:\"https://www.solarsystemscope.com/textures/download/2k_mars.jpg\",\n            copyright:\"https://creativecommons.org/licenses/by/4.0/\"\n\n        };\n        params.moonInfo = {\n            Phobos: {\n              elems:{\n                a:    9376000,\n                Eccen:   0.0151,\n                nu:    150.057 * dr,\n                MA:     91.059 * dr,\n                i:       1.075 * dr,\n                Omega: 207.785 * dr,\n                N0:   1128.8447569 / 360,\n              },\n              prec: {\n                 ep0:   -50 * yr,\n                 pNu:    fq/1.1316,\n                 pOmega: fq/2.2617\n              },\n              r: 11266.7,\n              render: {frac: .1, color: 0xFFFF00}\n            },\n            Deimos: {\n              elems: {\n                a:     23458000,\n                Eccen:     0.0002,\n                nu:      260.729 * dr,\n                MA:      325.729 * dr,\n                i:         1.788 * dr,\n                Omega:    24.525 * dr,\n                N0:      285.161879 / 360,\n              },\n              prec: {\n                ep0:   -50 * yr,\n                pNu:    fq/27.3703,\n                pOmega: fq/54.5367\n              },\n              radius: 6200,\n              render: {frac: 0.05, color: 0xFF0000}\n            }            \n        };        \n        super(params);\n    }\n}\n\nexport default Mars;","import PlanetarySystem from \"../animations/PlanetarySystem\";\nimport Constants from \"../std/Constants\";\n\nclass Jupiter extends PlanetarySystem { \n    constructor(params) {\n        \n        const dr = Math.PI/180;\n        const yr = Constants.CENTURY/100;\n        const fq = 2*Math.PI/yr;\n        \n        params.name          = \"Jupiter\";\n        params.planetName    = \"Jupiter\";\n        params.rotationPhase = 0;\n        params.rotationPeriod = 1.025957 * 86400;\n        params.rotAxis = {ra: 268.057 *dr, dec: 64.495* dr},\n        params.texture = {\n            map:\"images/2k_jupiter.jpg\",\n            src:\"https://www.solarsystemscope.com/textures/download/2k_jupiter.jpg\",\n            copyright:\"https://creativecommons.org/licenses/by/4.0/\"\n        };\n        params.moonInfo = {\nIo: {\n    elems: {a: 421800.*1000, Eccen: 0.0041, nu: 84.129 *dr, \n            MA: 342.021 *dr, i: 0.036 *dr, Omega: 43.977 *dr, N0: 203.4889583 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/1.625, fOmega: fq/7.420},\n    frame: {type: \"Laplace\", ra: 268.057 *dr, dec: 64.495 *dr},\n    render: {frac: 0.2, color: 0xFF0000,\n             texture: {map: \"images/iomap-planet-text-maps-fandom.png\",\n                       src: \"https://planet-texture-maps.fandom.com/wiki/Io\",\n                       copyright: \"Creative Commons Attribution-Share Alike License 3.0\",\n                      }\n            },\n    size:   100000\n},\nEuropa: {\n    elems: {a: 671100.*1000, Eccen: 0.0094, nu: 88.970 *dr, \n            MA: 171.016 *dr, i: 0.466 *dr, Omega: 219.106 *dr, N0: 101.3747242 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/1.394, fOmega: fq/30.184},\n    frame: {type: \"Laplace\", ra: 268.084 *dr, dec: 64.506 *dr},\n    render: {frac: 0.2, color: 0xFF0000,\n             texture: {\n                 map: \"images/europa_texture_map__20k__by_askaniy_dcqbaif-pre.jpg\",\n                 src: \"https://www.deviantart.com/askaniy/art/Europa-Texture-Map-20K-769790967\",\n                 copyright:\"Creative Commons Attribution-Noncommercial-Share Alike 3.0 License\"\n             }\n    },\n    size:   100000\n},\nGanymede: {\n    elems: {a: 1070400.*1000, Eccen: 0.0013, nu: 192.417 *dr, \n            MA: 317.540 *dr, i: 0.177 *dr, Omega: 63.552 *dr, N0: 50.3176072 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/63.549, fOmega: fq/132.654},\n    frame: {type: \"Laplace\", ra: 268.168 *dr, dec: 64.543 *dr},\n    render: {frac: 0.2, color: 0xFF0000,\n             texture: {\n                 map: \"images/ganymede_texture_map__11k__by_askaniy_dddhxoy-pre.jpg\",\n                 src: \"https://www.deviantart.com/askaniy/art/Ganymede-Texture-Map-11K-808732114\",\n                 copyright: \"Creative Commons Attribution-Noncommercial-Share Alike 3.0 License\"\n             },\n    },\n    size:   100000\n},\nCallisto: {\n    elems: {a: 1882700.*1000, Eccen: 0.0074, nu: 52.643 *dr, \n            MA: 181.408 *dr, i: 0.192 *dr, Omega: 298.848 *dr, N0: 21.5710728 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/205.75, fOmega: fq/338.82},\n    frame: {type: \"Laplace\", ra: 268.639 *dr, dec: 64.749 *dr},\n    render: {frac: 0.2, color: 0xFF0000,\n            texture: {\n                map: \"images/callisto_texture_map__8k__by_askaniy_dddit1h-pre.jpg\",\n                src: \"https://www.deviantart.com/askaniy/art/Callisto-Texture-Map-8K-808772741\",\n                copyright: \"Creative Commons Attribution-Noncommercial-Share Alike 3.0 License\"                \n            }\n    },\n    size:   100000\n},\nAmalthea: {\n    elems: {a: 181400.*1000, Eccen: 0.0032, nu: 155.873 *dr, \n            MA: 185.194 *dr, i: 0.380 *dr, Omega: 108.946 *dr, N0: 722.6317143 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/0.196, fOmega: fq/0.393},\n    frame: {type: \"Laplace\", ra: 268.057 *dr, dec: 64.495 *dr},\n    render: {frac: 0.08, color: 0x0000FF},\n    size:   100000\n},\nThebe: {\n    elems: {a: 221900.*1000, Eccen: 0.0176, nu: 234.269 *dr, \n            MA: 135.956 *dr, i: 1.080 *dr, Omega: 235.694 *dr, N0: 533.7002568 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/0.398, fOmega: fq/0.797},\n    frame: {type: \"Laplace\", ra: 268.057 *dr, dec: 64.495 *dr},\n    render: {frac: 0.08, color: 0x0000FF},\n    size:   100000\n},\nAdrastea: {\n    elems: {a: 129000.*1000, Eccen: 0.0018, nu: 328.047 *dr, \n            MA: 135.673 *dr, i: 0.054 *dr, Omega: 228.378 *dr, N0: 1206.9988064 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/0.058, fOmega: fq/0.116},\n    frame: {type: \"Laplace\", ra: 268.057 *dr, dec: 64.496 *dr},\n    render: {frac: 0.08, color: 0x0000FF},\n    size:   100000\n},\nMetis: {\n    elems: {a: 128000.*1000, Eccen: 0.0012, nu: 297.177 *dr, \n            MA: 276.047 *dr, i: 0.019 *dr, Omega: 146.912 *dr, N0: 1221.2545982 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/0.057, fOmega: fq/0.115},\n    frame: {type: \"Laplace\", ra: 268.057 *dr, dec: 64.496 *dr},\n    render: {frac: 0.08, color: 0x0000FF},\n    size:   100000\n},\nHimalia: {\n    elems: {a: 11460000.*1000, Eccen: 0.1586, nu: 331.234 *dr, \n            MA: 66.874 *dr, i: 28.612 *dr, Omega: 64.798 *dr, N0: 1.4367562 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/139.38, fOmega: fq/292.57},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nElara: {\n    elems: {a: 11740000.*1000, Eccen: 0.2108, nu: 142.001 *dr, \n            MA: 330.985 *dr, i: 27.945 *dr, Omega: 115.511 *dr, N0: 1.3865315 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/128.07, fOmega: fq/265.30},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nPasiphae: {\n    elems: {a: 23629000.*1000, Eccen: 0.4062, nu: 169.226 *dr, \n            MA: 279.769 *dr, i: 151.413 *dr, Omega: 314.223 *dr, N0: 0.4841223 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/81.20, fOmega: fq/81.17},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nSinope: {\n    elems: {a: 23942000.*1000, Eccen: 0.2552, nu: 354.541 *dr, \n            MA: 165.352 *dr, i: 158.189 *dr, Omega: 309.199 *dr, N0: 0.4743772 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/88.72, fOmega: fq/87.40},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nLysithea: {\n    elems: {a: 11717000.*1000, Eccen: 0.1161, nu: 49.670 *dr, \n            MA: 330.475 *dr, i: 27.663 *dr, Omega: 5.326 *dr, N0: 1.3888891 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/131.19, fOmega: fq/292.04},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nCarme: {\n    elems: {a: 23401000.*1000, Eccen: 0.2546, nu: 26.416 *dr, \n            MA: 233.375 *dr, i: 164.994 *dr, Omega: 114.854 *dr, N0: 0.4903501 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/80.98, fOmega: fq/88.32},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nAnanke: {\n    elems: {a: 21254000.*1000, Eccen: 0.2332, nu: 95.772 *dr, \n            MA: 253.384 *dr, i: 148.693 *dr, Omega: 15.959 *dr, N0: 0.5716125 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/144.92, fOmega: fq/110.12},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nLeda: {\n    elems: {a: 11164000.*1000, Eccen: 0.1624, nu: 269.393 *dr, \n            MA: 230.352 *dr, i: 27.882 *dr, Omega: 219.181 *dr, N0: 1.4942407 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/144.79, fOmega: fq/301.94},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nCallirrhoe: {\n    elems: {a: 24099000.*1000, Eccen: 0.2796, nu: 23.909 *dr, \n            MA: 107.962 *dr, i: 147.080 *dr, Omega: 283.104 *dr, N0: 0.4744232 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/120.06, fOmega: fq/89.03},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nThemisto: {\n    elems: {a: 7504000.*1000, Eccen: 0.2435, nu: 217.147 *dr, \n            MA: 313.051 *dr, i: 42.977 *dr, Omega: 192.288 *dr, N0: 2.7688033 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/686.41, fOmega: fq/528.39},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nMegaclite: {\n    elems: {a: 23814000.*1000, Eccen: 0.4156, nu: 288.882 *dr, \n            MA: 135.272 *dr, i: 152.781 *dr, Omega: 280.575 *dr, N0: 0.4781658 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/76.90, fOmega: fq/79.23},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nTaygete: {\n    elems: {a: 23363000.*1000, Eccen: 0.2523, nu: 231.540 *dr, \n            MA: 94.756 *dr, i: 165.253 *dr, Omega: 305.114 *dr, N0: 0.4915209 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/81.04, fOmega: fq/88.59},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nChaldene: {\n    elems: {a: 23181000.*1000, Eccen: 0.2503, nu: 243.878 *dr, \n            MA: 267.454 *dr, i: 165.155 *dr, Omega: 134.240 *dr, N0: 0.4974208 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/81.66, fOmega: fq/89.52},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nHarpalyke: {\n    elems: {a: 21106000.*1000, Eccen: 0.2296, nu: 134.505 *dr, \n            MA: 215.956 *dr, i: 148.759 *dr, Omega: 29.834 *dr, N0: 0.5775515 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/147.17, fOmega: fq/111.64},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nKalyke: {\n    elems: {a: 23565000.*1000, Eccen: 0.2466, nu: 218.934 *dr, \n            MA: 255.702 *dr, i: 165.121 *dr, Omega: 43.864 *dr, N0: 0.4851490 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/80.76, fOmega: fq/87.67},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nIocaste: {\n    elems: {a: 21272000.*1000, Eccen: 0.2152, nu: 64.727 *dr, \n            MA: 213.675 *dr, i: 149.411 *dr, Omega: 269.613 *dr, N0: 0.5699784 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/145.78, fOmega: fq/111.18},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nErinome: {\n    elems: {a: 23286000.*1000, Eccen: 0.2655, nu: 10.274 *dr, \n            MA: 267.136 *dr, i: 164.914 *dr, Omega: 317.497 *dr, N0: 0.4941719 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/80.51, fOmega: fq/88.33},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nIsonoe: {\n    elems: {a: 23231000.*1000, Eccen: 0.2471, nu: 116.879 *dr, \n            MA: 124.941 *dr, i: 165.250 *dr, Omega: 130.961 *dr, N0: 0.4956884 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/81.80, fOmega: fq/89.52},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nPraxidike: {\n    elems: {a: 21148000.*1000, Eccen: 0.2274, nu: 190.862 *dr, \n            MA: 117.480 *dr, i: 148.885 *dr, Omega: 280.956 *dr, N0: 0.5756381 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/144.77, fOmega: fq/111.16},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nAutonoe: {\n    elems: {a: 24037000.*1000, Eccen: 0.3152, nu: 54.793 *dr, \n            MA: 142.035 *dr, i: 152.364 *dr, Omega: 272.817 *dr, N0: 0.4730563 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/92.33, fOmega: fq/85.00},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nThyone: {\n    elems: {a: 21197000.*1000, Eccen: 0.2307, nu: 97.023 *dr, \n            MA: 238.786 *dr, i: 148.595 *dr, Omega: 233.022 *dr, N0: 0.5739872 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/147.58, fOmega: fq/110.93},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nHermippe: {\n    elems: {a: 21297000.*1000, Eccen: 0.2095, nu: 300.836 *dr, \n            MA: 131.854 *dr, i: 150.740 *dr, Omega: 330.393 *dr, N0: 0.5679040 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/136.92, fOmega: fq/110.64},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nAitne: {\n    elems: {a: 23317000.*1000, Eccen: 0.2627, nu: 99.401 *dr, \n            MA: 105.000 *dr, i: 165.048 *dr, Omega: 8.679 *dr, N0: 0.4930702 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/80.36, fOmega: fq/88.19},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nEurydome: {\n    elems: {a: 23146000.*1000, Eccen: 0.2755, nu: 223.631 *dr, \n            MA: 287.689 *dr, i: 150.271 *dr, Omega: 302.470 *dr, N0: 0.5018735 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/111.58, fOmega: fq/93.30},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nEuanthe: {\n    elems: {a: 21039000.*1000, Eccen: 0.2320, nu: 320.635 *dr, \n            MA: 333.101 *dr, i: 148.915 *dr, Omega: 254.297 *dr, N0: 0.5802269 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/144.52, fOmega: fq/111.71},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nEuporie: {\n    elems: {a: 19336000.*1000, Eccen: 0.1438, nu: 89.904 *dr, \n            MA: 70.243 *dr, i: 145.740 *dr, Omega: 60.143 *dr, N0: 0.6537221 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/337063.88, fOmega: fq/139.45},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nOrthosie: {\n    elems: {a: 21158000.*1000, Eccen: 0.2807, nu: 216.805 *dr, \n            MA: 204.517 *dr, i: 146.004 *dr, Omega: 221.949 *dr, N0: 0.5782402 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/142.35, fOmega: fq/107.53},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nSponde: {\n    elems: {a: 23790000.*1000, Eccen: 0.3112, nu: 61.885 *dr, \n            MA: 174.044 *dr, i: 150.997 *dr, Omega: 116.363 *dr, N0: 0.4810760 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/98.08, fOmega: fq/87.01},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nKale: {\n    elems: {a: 23306000.*1000, Eccen: 0.2597, nu: 44.233 *dr, \n            MA: 212.853 *dr, i: 164.944 *dr, Omega: 60.170 *dr, N0: 0.4934152 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/80.91, fOmega: fq/88.57},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nPasithee: {\n    elems: {a: 23091000.*1000, Eccen: 0.2682, nu: 231.920 *dr, \n            MA: 215.443 *dr, i: 165.117 *dr, Omega: 327.729 *dr, N0: 0.5003695 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/80.82, fOmega: fq/89.25},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nHegemone: {\n    elems: {a: 23575000.*1000, Eccen: 0.3445, nu: 197.144 *dr, \n            MA: 236.950 *dr, i: 154.164 *dr, Omega: 318.902 *dr, N0: 0.4866038 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/85.66, fOmega: fq/84.87},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nMneme: {\n    elems: {a: 21033000.*1000, Eccen: 0.2258, nu: 40.542 *dr, \n            MA: 256.860 *dr, i: 148.585 *dr, Omega: 13.467 *dr, N0: 0.5806001 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/148.06, fOmega: fq/112.26},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nAoede: {\n    elems: {a: 23974000.*1000, Eccen: 0.4325, nu: 59.739 *dr, \n            MA: 197.676 *dr, i: 158.272 *dr, Omega: 173.392 *dr, N0: 0.4728089 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/69.17, fOmega: fq/76.83},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nThelxinoe: {\n    elems: {a: 21160000.*1000, Eccen: 0.2201, nu: 313.183 *dr, \n            MA: 268.013 *dr, i: 151.390 *dr, Omega: 169.962 *dr, N0: 0.5732248 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/130.58, fOmega: fq/110.42},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nArche: {\n    elems: {a: 23352000.*1000, Eccen: 0.2495, nu: 171.632 *dr, \n            MA: 39.713 *dr, i: 165.015 *dr, Omega: 339.210 *dr, N0: 0.4918707 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/81.40, fOmega: fq/88.73},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nKallichore: {\n    elems: {a: 23276000.*1000, Eccen: 0.2509, nu: 9.836 *dr, \n            MA: 55.937 *dr, i: 165.102 *dr, Omega: 30.339 *dr, N0: 0.4943462 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/81.56, fOmega: fq/89.16},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nHelike: {\n    elems: {a: 21065000.*1000, Eccen: 0.1498, nu: 299.482 *dr, \n            MA: 43.659 *dr, i: 154.842 *dr, Omega: 89.749 *dr, N0: 0.5747808 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/127.40, fOmega: fq/114.52},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nCarpo: {\n    elems: {a: 17056000.*1000, Eccen: 0.4317, nu: 90.372 *dr, \n            MA: 337.062 *dr, i: 51.624 *dr, Omega: 50.597 *dr, N0: 0.7889862 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/711550.25, fOmega: fq/112.82},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nEukelade: {\n    elems: {a: 23323000.*1000, Eccen: 0.2619, nu: 309.685 *dr, \n            MA: 204.846 *dr, i: 165.265 *dr, Omega: 193.558 *dr, N0: 0.4929260 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/80.24, fOmega: fq/88.16},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nCyllene: {\n    elems: {a: 23800000.*1000, Eccen: 0.4155, nu: 187.429 *dr, \n            MA: 128.345 *dr, i: 150.336 *dr, Omega: 252.611 *dr, N0: 0.4787365 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/80.19, fOmega: fq/79.71},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nKore: {\n    elems: {a: 24482000.*1000, Eccen: 0.3313, nu: 138.071 *dr, \n            MA: 33.416 *dr, i: 145.173 *dr, Omega: 313.355 *dr, N0: 0.4634134 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/108.39, fOmega: fq/84.47},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nHerse: {\n    elems: {a: 23408000.*1000, Eccen: 0.2541, nu: 330.295 *dr, \n            MA: 141.667 *dr, i: 164.964 *dr, Omega: 295.702 *dr, N0: 0.4901154 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/80.98, fOmega: fq/88.27},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\n\"S/2000 J 11\": {\n    elems: {a: 12297000.*1000, Eccen: 0.2320, nu: 173.544 *dr, \n            MA: 309.734 *dr, i: 28.631 *dr, Omega: 294.497 *dr, N0: 1.2939791 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/117.58, fOmega: fq/241.93},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\n\"S/2003 J 2\": {\n    elems: {a: 28347000.*1000, Eccen: 0.4100, nu: 165.201 *dr, \n            MA: 237.932 *dr, i: 157.291 *dr, Omega: 344.782 *dr, N0: 0.3671484 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/60.25, fOmega: fq/62.87},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\n\"S/2003 J 3\": {\n    elems: {a: 20221000.*1000, Eccen: 0.1969, nu: 66.338 *dr, \n            MA: 311.780 *dr, i: 147.547 *dr, Omega: 231.489 *dr, N0: 0.6165779 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/181.96, fOmega: fq/122.74},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\n\"S/2003 J 4\": {\n    elems: {a: 23929000.*1000, Eccen: 0.3624, nu: 197.401 *dr, \n            MA: 260.480 *dr, i: 149.589 *dr, Omega: 179.131 *dr, N0: 0.4766663 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/90.17, fOmega: fq/82.96},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\n\"S/2003 J 5\": {\n    elems: {a: 23495000.*1000, Eccen: 0.2476, nu: 90.066 *dr, \n            MA: 336.636 *dr, i: 165.248 *dr, Omega: 176.683 *dr, N0: 0.4873118 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/80.95, fOmega: fq/88.10},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\n\"S/2003 J 9\": {\n    elems: {a: 23385000.*1000, Eccen: 0.2632, nu: 292.662 *dr, \n            MA: 348.415 *dr, i: 165.047 *dr, Omega: 44.321 *dr, N0: 0.4909185 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/80.27, fOmega: fq/87.93},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\n\"S/2003 J 10\": {\n    elems: {a: 23042000.*1000, Eccen: 0.4299, nu: 170.833 *dr, \n            MA: 258.937 *dr, i: 165.073 *dr, Omega: 151.911 *dr, N0: 0.5026172 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/68.06, fOmega: fq/80.34},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\n\"S/2003 J 12\": {\n    elems: {a: 17830000.*1000, Eccen: 0.4904, nu: 13.288 *dr, \n            MA: 38.543 *dr, i: 151.003 *dr, Omega: 65.530 *dr, N0: 0.7351860 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/97.93, fOmega: fq/109.42},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\n\"S/2003 J 15\": {\n    elems: {a: 22627000.*1000, Eccen: 0.1899, nu: 18.405 *dr, \n            MA: 58.865 *dr, i: 146.492 *dr, Omega: 236.674 *dr, N0: 0.5219082 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/187.83, fOmega: fq/105.37},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\n\"S/2003 J 16\": {\n    elems: {a: 21097000.*1000, Eccen: 0.2281, nu: 57.681 *dr, \n            MA: 307.563 *dr, i: 148.683 *dr, Omega: 16.883 *dr, N0: 0.5779589 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/146.70, fOmega: fq/111.64},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\n\"S/2003 J 18\": {\n    elems: {a: 20508000.*1000, Eccen: 0.0895, nu: 130.894 *dr, \n            MA: 202.160 *dr, i: 146.077 *dr, Omega: 158.247 *dr, N0: 0.6018719 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/506.86, fOmega: fq/131.88},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\n\"S/2003 J 19\": {\n    elems: {a: 23533000.*1000, Eccen: 0.2552, nu: 176.668 *dr, \n            MA: 223.035 *dr, i: 165.116 *dr, Omega: 27.442 *dr, N0: 0.4862156 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/80.17, fOmega: fq/87.39},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\n\"S/2003 J 23\": {\n    elems: {a: 23567000.*1000, Eccen: 0.2746, nu: 255.114 *dr, \n            MA: 144.222 *dr, i: 146.424 *dr, Omega: 41.706 *dr, N0: 0.4914942 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/130.10, fOmega: fq/92.90},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\n\"S/2010 J 1\": {\n    elems: {a: 23449000.*1000, Eccen: 0.2491, nu: 189.230 *dr, \n            MA: 160.525 *dr, i: 165.100 *dr, Omega: 282.871 *dr, N0: 0.4887995 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/81.18, fOmega: fq/88.33},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\n\"S/2010 J 2\": {\n    elems: {a: 21004000.*1000, Eccen: 0.2267, nu: 18.252 *dr, \n            MA: 312.074 *dr, i: 148.673 *dr, Omega: 5.802 *dr, N0: 0.5817371 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/147.06, fOmega: fq/112.35},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\n\"S/2011 J 1\": {\n    elems: {a: 23446000.*1000, Eccen: 0.2534, nu: 31.514 *dr, \n            MA: 256.027 *dr, i: 165.318 *dr, Omega: 250.728 *dr, N0: 0.4888998 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/80.45, fOmega: fq/87.91},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\n\"S/2011 J 2\": {\n    elems: {a: 23124000.*1000, Eccen: 0.3493, nu: 270.154 *dr, \n            MA: 285.597 *dr, i: 153.597 *dr, Omega: 24.866 *dr, N0: 0.5011321 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/87.78, fOmega: fq/87.00},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n}\n        };        \n        super(params);\n    }\n}\n\nexport default Jupiter;","import PlanetarySystem from \"../animations/PlanetarySystem\";\nimport Constants from \"../std/Constants\";\n\nclass Saturn extends PlanetarySystem { \n    constructor(params) {\n        \n        const dr = Math.PI/180;\n        const yr = Constants.CENTURY/100;\n        const fq = 2*Math.PI/yr;\n        \n        params.name       = \"Saturn\";\n        params.planetName = \"Saturn\";\n        params.rotationPhase = 0;\n        params.rotationPeriod = 10*3600 + 33*60 + 38;\n        params.rotAxis = {ra: 40.589*dr, dec: 83.537 *dr};\n        params.texture = {\n            map:\"images/2k_saturn.jpg\",\n            src:\"https://www.solarsystemscope.com/textures/download/2k_saturn.jpg\",\n            copyright:\"https://creativecommons.org/licenses/by/4.0/\"\n\n        };\n        \n        params.ring  = {\n            texture: {\n                map:\"images/saturn_rings_fargetanik.png\",\n                src:\"https://www.deviantart.com/fargetanik/art/Saturn-Rings-Texture-Map-13k-814720659\",\n                copyright:\"Creative Commons Attribution-Share Alike License 3.0\",\n                transparent: true\n            },\n            innerRadius: 1.239,  // https://nssdc.gsfc.nasa.gov/planetary/factsheet/satringfact.html\n            outerRadius: 2.320\n        }\n        params.moonInfo = {\nMimas: {\n    elems: {a: 185539.*1000, Eccen: 0.0196, nu: 332.499 *dr, \n            MA: 14.848 *dr, i: 1.574 *dr, Omega: 173.027 *dr, N0: 381.9944948 /360},\n    prec:  {ep0:  12*3600,\n            fNu: fq/0.493, fOmega: fq/0.986},\n    frame: {type: \"Laplace\", ra: 40.589 *dr, dec: 83.536 *dr},\n    render: {frac: 0.05, color: 0xFFFF00},\n    size:   100000\n},\nEnceladus: {\n    elems: {a: 238042.*1000, Eccen: 0.0000, nu: 0.076 *dr, \n            MA: 199.686 *dr, i: 0.003 *dr, Omega: 342.507 *dr, N0: 262.7318978 /360},\n    prec:  {ep0:  12*3600,\n            fNu: fq/1.184, fOmega: fq/2.360},\n    frame: {type: \"Laplace\", ra: 40.586 *dr, dec: 83.536 *dr},\n    render: {frac: 0.05, color: 0xFFFF00},\n    size:   100000\n},\nTethys: {\n    elems: {a: 294672.*1000, Eccen: 0.0001, nu: 45.202 *dr, \n            MA: 243.367 *dr, i: 1.091 *dr, Omega: 259.842 *dr, N0: 190.6979109 /360},\n    prec:  {ep0:  12*3600,\n            fNu: fq/2.490, fOmega: fq/4.982},\n    frame: {type: \"Laplace\", ra: 40.578 *dr, dec: 83.537 *dr},\n    render: {frac: 0.05, color: 0xFFFF00},\n    size:   100000\n},\nDione: {\n    elems: {a: 377415.*1000, Eccen: 0.0022, nu: 284.315 *dr, \n            MA: 322.232 *dr, i: 0.028 *dr, Omega: 290.415 *dr, N0: 131.5349307 /360},\n    prec:  {ep0:  12*3600,\n            fNu: fq/5.852, fOmega: fq/11.709},\n    frame: {type: \"Laplace\", ra: 40.544 *dr, dec: 83.540 *dr},\n    render: {frac: 0.05, color: 0xFFFF00},\n    size:   100000\n},\nRhea: {\n    elems: {a: 527068.*1000, Eccen: 0.0002, nu: 241.619 *dr, \n            MA: 179.781 *dr, i: 0.333 *dr, Omega: 351.042 *dr, N0: 79.6900459 /360},\n    prec:  {ep0:  12*3600,\n            fNu: fq/17.939, fOmega: fq/35.832},\n    frame: {type: \"Laplace\", ra: 40.328 *dr, dec: 83.559 *dr},\n    render: {frac: 0.05, color: 0xFFFF00},\n    size:   100000\n},\nTitan: {\n    elems: {a: 1221865.*1000, Eccen: 0.0288, nu: 180.532 *dr, \n            MA: 163.310 *dr, i: 0.306 *dr, Omega: 28.060 *dr, N0: 22.5769756 /360},\n    prec:  {ep0:  12*3600,\n            fNu: fq/352.12, fOmega: fq/704.60},\n    frame: {type: \"Laplace\", ra: 36.214 *dr, dec: 83.949 *dr},\n    render: {frac: 0.3, color: 0xFF0000,\n      texture: {\n          map: \"images/titan_texture_map_8k_by_fargetanik_db0f8m0-fullview.jpg\",\n          src: \"https://www.deviantart.com/fargetanik/art/Titan-Texture-Map-8k-665838936\",\n          copyright:\"Creative Commons Attribution-Share Alike License 3.0\"\n      }\n    },\n    size:   100000\n},\nHyperion: {\n    elems: {a: 1500933.*1000, Eccen: 0.0232, nu: 303.178 *dr, \n            MA: 86.342 *dr, i: 0.615 *dr, Omega: 263.847 *dr, N0: 16.9199503 /360},\n    prec:  {ep0:  12*3600,\n            fNu: fq/127.99, fOmega: fq/154.66},\n    frame: {type: \"Laplace\", ra: 36.372 *dr, dec: 83.862 *dr},\n    render: {frac: 0.05, color: 0xFFFF00},\n    size:   100000\n},\nIapetus: {\n    elems: {a: 3560854.*1000, Eccen: 0.0293, nu: 271.606 *dr, \n            MA: 201.789 *dr, i: 8.298 *dr, Omega: 81.105 *dr, N0: 4.5379416 /360},\n    prec:  {ep0:  12*3600,\n            fNu: fq/1676.69, fOmega: fq/3438.73},\n    frame: {type: \"Laplace\", ra: 284.715 *dr, dec: 78.749 *dr},\n    render: {frac: 0.05, color: 0xFFFF00},\n    size:   100000\n},\nPhoebe: {\n    elems: {a: 12947918.*1000, Eccen: 0.1634, nu: 342.500 *dr, \n            MA: 53.038 *dr, i: 175.243 *dr, Omega: 241.086 *dr, N0: 0.6569114 /360},\n    prec:  {ep0:  12*3600,\n            fNu: fq/460.92, fOmega: fq/723.17},\n    frame: {type: \"Laplace\", ra: 275.954 *dr, dec: 67.455 *dr},\n    render: {frac: 0.05, color: 0xFFFF00},\n    size:   100000\n},\nJanus: {\n    elems: {a: 151450.*1000, Eccen: 0.0098, nu: 16.012 *dr, \n            MA: 17.342 *dr, i: 0.165 *dr, Omega: 154.175 *dr, N0: 518.3431513 /360},\n    prec:  {ep0:  12*3600,\n            fNu: fq/0.240, fOmega: fq/0.482},\n    frame: {type: \"Laplace\", ra: 40.585 *dr, dec: 83.538 *dr},\n    render: {frac: 0.03, color: 0xFFFF00},\n    size:   100000\n},\nEpimetheus: {\n    elems: {a: 151450.*1000, Eccen: 0.0161, nu: 88.975 *dr, \n            MA: 80.377 *dr, i: 0.353 *dr, Omega: 192.762 *dr, N0: 518.0979676 /360},\n    prec:  {ep0:  12*3600,\n            fNu: fq/0.240, fOmega: fq/0.482},\n    frame: {type: \"Laplace\", ra: 40.585 *dr, dec: 83.538 *dr},\n    render: {frac: 0.03, color: 0xFFFF00},\n    size:   100000\n},\nHelene: {\n    elems: {a: 377444.*1000, Eccen: 0.0000, nu: 33.134 *dr, \n            MA: 43.186 *dr, i: 0.213 *dr, Omega: 163.112 *dr, N0: 131.5349306 /360},\n    prec:  {ep0:  12*3600,\n            fNu: fq/2.562, fOmega: fq/11.706},\n    frame: {type: \"Laplace\", ra: 40.544 *dr, dec: 83.540 *dr},\n    render: {frac: 0.03, color: 0xFFFF00},\n    size:   100000\n},\nTelesto: {\n    elems: {a: 294720.*1000, Eccen: 0.0002, nu: 119.135 *dr, \n            MA: 260.157 *dr, i: 1.180 *dr, Omega: 229.182 *dr, N0: 190.6979089 /360},\n    prec:  {ep0:  12*3600,\n            fNu: fq/2.489, fOmega: fq/4.982},\n    frame: {type: \"Laplace\", ra: 40.578 *dr, dec: 83.537 *dr},\n    render: {frac: 0.03, color: 0xFFFF00},\n    size:   100000\n},\nCalypso: {\n    elems: {a: 294721.*1000, Eccen: 0.0005, nu: 17.470 *dr, \n            MA: 156.660 *dr, i: 1.500 *dr, Omega: 314.226 *dr, N0: 190.6979089 /360},\n    prec:  {ep0:  12*3600,\n            fNu: fq/2.487, fOmega: fq/4.983},\n    frame: {type: \"Laplace\", ra: 40.578 *dr, dec: 83.537 *dr},\n    render: {frac: 0.03, color: 0xFFFF00},\n    size:   100000\n},\nAtlas: {\n    elems: {a: 137774.*1000, Eccen: 0.0011, nu: 210.851 *dr, \n            MA: 283.282 *dr, i: 0.003 *dr, Omega: 236.422 *dr, N0: 598.3147505 /360},\n    prec:  {ep0:  12*3600,\n            fNu: fq/0.171, fOmega: fq/0.344},\n    frame: {type: \"Laplace\", ra: 40.585 *dr, dec: 83.538 *dr},\n    render: {frac: 0.03, color: 0xFFFF00},\n    size:   100000\n},\nPrometheus: {\n    elems: {a: 139429.*1000, Eccen: 0.0022, nu: 37.514 *dr, \n            MA: 96.886 *dr, i: 0.007 *dr, Omega: 319.176 *dr, N0: 587.2860142 /360},\n    prec:  {ep0:  12*3600,\n            fNu: fq/0.179, fOmega: fq/0.359},\n    frame: {type: \"Laplace\", ra: 40.585 *dr, dec: 83.538 *dr},\n    render: {frac: 0.02, color: 0xFFFF00},\n    size:   100000\n},\nPandora: {\n    elems: {a: 141810.*1000, Eccen: 0.0042, nu: 66.248 *dr, \n            MA: 125.112 *dr, i: 0.050 *dr, Omega: 147.272 *dr, N0: 572.7878754 /360},\n    prec:  {ep0:  12*3600,\n            fNu: fq/0.190, fOmega: fq/0.381},\n    frame: {type: \"Laplace\", ra: 40.585 *dr, dec: 83.538 *dr},\n    render: {frac: 0.02, color: 0xFFFF00},\n    size:   100000\n},\nPan: {\n    elems: {a: 133585.*1000, Eccen: 0.0000, nu: 103.331 *dr, \n            MA: 351.187 *dr, i: 0.000 *dr, Omega: 52.076 *dr, N0: 626.0317341 /360},\n    prec:  {ep0:  12*3600,\n            fNu: fq/0.154, fOmega: fq/0.309},\n    frame: {type: \"Laplace\", ra: 40.583 *dr, dec: 83.538 *dr},\n    render: {frac: 0.02, color: 0xFFFF00},\n    size:   100000\n},\nMethone: {\n    elems: {a: 194402.*1000, Eccen: 0.0000, nu: 134.636 *dr, \n            MA: 71.189 *dr, i: 0.013 *dr, Omega: 313.562 *dr, N0: 356.5949252 /360},\n    prec:  {ep0:  12*3600,\n            fNu: fq/0.250, fOmega: fq/1.158},\n    frame: {type: \"Laplace\", ra: 40.589 *dr, dec: 83.536 *dr},\n    render: {frac: 0.02, color: 0xFFFF00},\n    size:   100000\n},\nPallene: {\n    elems: {a: 212282.*1000, Eccen: 0.0040, nu: 16.074 *dr, \n            MA: 356.229 *dr, i: 0.001 *dr, Omega: 123.180 *dr, N0: 312.0270737 /360},\n    prec:  {ep0:  12*3600,\n            fNu: fq/0.862, fOmega: fq/1.899},\n    frame: {type: \"Laplace\", ra: 40.579 *dr, dec: 83.537 *dr},\n    render: {frac: 0.02, color: 0xFFFF00},\n    size:   100000\n},\nPolydeuces: {\n    elems: {a: 377222.*1000, Eccen: 0.0191, nu: 311.847 *dr, \n            MA: 89.307 *dr, i: 0.175 *dr, Omega: 67.936 *dr, N0: 131.5349306 /360},\n    prec:  {ep0:  12*3600,\n            fNu: fq/5.811, fOmega: fq/11.695},\n    frame: {type: \"Laplace\", ra: 40.543 *dr, dec: 83.540 *dr},\n    render: {frac: 0.02, color: 0xFFFF00},\n    size:   100000\n},\nDaphnis: {\n    elems: {a: 136504.*1000, Eccen: 0.0000, nu: 266.931 *dr, \n            MA: 113.790 *dr, i: 0.003 *dr, Omega: 132.867 *dr, N0: 605.9791512 /360},\n    prec:  {ep0:  12*3600,\n            fNu: fq/0.166, fOmega: fq/0.334},\n    frame: {type: \"Laplace\", ra: 40.583 *dr, dec: 83.538 *dr},\n    render: {frac: 0.02, color: 0xFFFF00},\n    size:   100000\n},\nAnthe: {\n    elems: {a: 196888.*1000, Eccen: 0.0011, nu: 138.902 *dr, \n            MA: 190.473 *dr, i: 0.015 *dr, Omega: 287.852 *dr, N0: 347.3587167 /360},\n    prec:  {ep0:  12*3600,\n            fNu: fq/0.617, fOmega: fq/1.232},\n    frame: {type: \"Laplace\", ra: 40.583 *dr, dec: 83.537 *dr},\n    render: {frac: 0.02, color: 0xFFFF00},\n    size:   100000\n},\nAegaeon: {\n    elems: {a: 167425.*1000, Eccen: 0.0002, nu: 152.905 *dr, \n            MA: 322.771 *dr, i: 0.001 *dr, Omega: 317.202 *dr, N0: 445.4934177 /360},\n    prec:  {ep0:  12*3600,\n            fNu: fq/0.343, fOmega: fq/0.688},\n    frame: {type: \"Laplace\", ra: 40.584 *dr, dec: 83.537 *dr},\n    render: {frac: 0.02, color: 0xFFFF00},\n    size:   100000\n},\nYmir: {\n    elems: {a: 23128000.*1000, Eccen: 0.3338, nu: 21.352 *dr, \n            MA: 228.673 *dr, i: 173.497 *dr, Omega: 192.937 *dr, N0: 0.2737369 /360},\n    prec:  {ep0:  0,\n            fNu: fq/217.61, fOmega: fq/277.53},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nPaaliaq: {\n    elems: {a: 15204000.*1000, Eccen: 0.3325, nu: 237.522 *dr, \n            MA: 321.654 *dr, i: 46.228 *dr, Omega: 330.022 *dr, N0: 0.5240567 /360},\n    prec:  {ep0:  0,\n            fNu: fq/576.14, fOmega: fq/535.71},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nTarvos: {\n    elems: {a: 18243000.*1000, Eccen: 0.5382, nu: 274.104 *dr, \n            MA: 265.783 *dr, i: 33.725 *dr, Omega: 102.504 *dr, N0: 0.3886226 /360},\n    prec:  {ep0:  0,\n            fNu: fq/194.18, fOmega: fq/272.97},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nIjiraq: {\n    elems: {a: 11408000.*1000, Eccen: 0.2717, nu: 92.899 *dr, \n            MA: 17.328 *dr, i: 47.485 *dr, Omega: 130.779 *dr, N0: 0.7974868 /360},\n    prec:  {ep0:  0,\n            fNu: fq/13807.37, fOmega: fq/935.12},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nSuttungr: {\n    elems: {a: 19468000.*1000, Eccen: 0.1139, nu: 34.281 *dr, \n            MA: 321.133 *dr, i: 175.815 *dr, Omega: 227.259 *dr, N0: 0.3540952 /360},\n    prec:  {ep0:  0,\n            fNu: fq/292.79, fOmega: fq/402.20},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nKiviuq: {\n    elems: {a: 11384000.*1000, Eccen: 0.3325, nu: 90.205 *dr, \n            MA: 172.018 *dr, i: 46.764 *dr, Omega: 353.584 *dr, N0: 0.8013951 /360},\n    prec:  {ep0:  0,\n            fNu: fq/19973.94, fOmega: fq/840.86},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nMundilfari: {\n    elems: {a: 18653000.*1000, Eccen: 0.2097, nu: 309.694 *dr, \n            MA: 92.821 *dr, i: 167.439 *dr, Omega: 82.856 *dr, N0: 0.3778328 /360},\n    prec:  {ep0:  0,\n            fNu: fq/312.23, fOmega: fq/417.31},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nAlbiorix: {\n    elems: {a: 16393000.*1000, Eccen: 0.4797, nu: 55.932 *dr, \n            MA: 32.828 *dr, i: 34.060 *dr, Omega: 102.512 *dr, N0: 0.4595027 /360},\n    prec:  {ep0:  0,\n            fNu: fq/249.88, fOmega: fq/358.14},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nSkathi: {\n    elems: {a: 15635000.*1000, Eccen: 0.2718, nu: 203.517 *dr, \n            MA: 114.689 *dr, i: 152.633 *dr, Omega: 286.599 *dr, N0: 0.4944382 /360},\n    prec:  {ep0:  0,\n            fNu: fq/474.36, fOmega: fq/546.69},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nErriapus: {\n    elems: {a: 17602000.*1000, Eccen: 0.4722, nu: 282.522 *dr, \n            MA: 294.829 *dr, i: 34.481 *dr, Omega: 150.985 *dr, N0: 0.4132539 /360},\n    prec:  {ep0:  0,\n            fNu: fq/219.90, fOmega: fq/323.49},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nSiarnaq: {\n    elems: {a: 18182000.*1000, Eccen: 0.2802, nu: 65.929 *dr, \n            MA: 201.288 *dr, i: 45.809 *dr, Omega: 47.826 *dr, N0: 0.4020067 /360},\n    prec:  {ep0:  0,\n            fNu: fq/457.40, fOmega: fq/454.20},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nThrymr: {\n    elems: {a: 20418000.*1000, Eccen: 0.4659, nu: 125.404 *dr, \n            MA: 30.075 *dr, i: 177.659 *dr, Omega: 285.762 *dr, N0: 0.3296678 /360},\n    prec:  {ep0:  0,\n            fNu: fq/875.11, fOmega: fq/139002.09},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nNarvi: {\n    elems: {a: 19349000.*1000, Eccen: 0.4296, nu: 169.959 *dr, \n            MA: 114.172 *dr, i: 145.731 *dr, Omega: 174.435 *dr, N0: 0.3585873 /360},\n    prec:  {ep0:  0,\n            fNu: fq/341.38, fOmega: fq/347.42},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nAegir: {\n    elems: {a: 20751000.*1000, Eccen: 0.2524, nu: 242.651 *dr, \n            MA: 26.017 *dr, i: 166.668 *dr, Omega: 179.064 *dr, N0: 0.3220526 /360},\n    prec:  {ep0:  0,\n            fNu: fq/273.91, fOmega: fq/350.18},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nBebhionn: {\n    elems: {a: 17116000.*1000, Eccen: 0.4682, nu: 358.141 *dr, \n            MA: 168.045 *dr, i: 35.101 *dr, Omega: 199.128 *dr, N0: 0.4312114 /360},\n    prec:  {ep0:  0,\n            fNu: fq/236.57, fOmega: fq/342.06},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nBergelmir: {\n    elems: {a: 19336000.*1000, Eccen: 0.1420, nu: 133.400 *dr, \n            MA: 306.494 *dr, i: 158.557 *dr, Omega: 202.164 *dr, N0: 0.3579396 /360},\n    prec:  {ep0:  0,\n            fNu: fq/359.70, fOmega: fq/424.95},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nBestla: {\n    elems: {a: 20209000.*1000, Eccen: 0.5145, nu: 81.185 *dr, \n            MA: 239.156 *dr, i: 145.136 *dr, Omega: 288.308 *dr, N0: 0.3308757 /360},\n    prec:  {ep0:  0,\n            fNu: fq/284.99, fOmega: fq/299.08},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nFarbauti: {\n    elems: {a: 20390000.*1000, Eccen: 0.2414, nu: 342.995 *dr, \n            MA: 282.813 *dr, i: 156.520 *dr, Omega: 135.109 *dr, N0: 0.3312924 /360},\n    prec:  {ep0:  0,\n            fNu: fq/330.77, fOmega: fq/374.34},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nFenrir: {\n    elems: {a: 22454000.*1000, Eccen: 0.1347, nu: 120.982 *dr, \n            MA: 131.678 *dr, i: 164.963 *dr, Omega: 226.595 *dr, N0: 0.2856343 /360},\n    prec:  {ep0:  0,\n            fNu: fq/276.77, fOmega: fq/332.99},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nFornjot: {\n    elems: {a: 25146000.*1000, Eccen: 0.2077, nu: 324.787 *dr, \n            MA: 214.499 *dr, i: 170.372 *dr, Omega: 259.946 *dr, N0: 0.2409497 /360},\n    prec:  {ep0:  0,\n            fNu: fq/223.68, fOmega: fq/267.44},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nHati: {\n    elems: {a: 19868000.*1000, Eccen: 0.3710, nu: 21.286 *dr, \n            MA: 163.640 *dr, i: 165.808 *dr, Omega: 324.380 *dr, N0: 0.3460954 /360},\n    prec:  {ep0:  0,\n            fNu: fq/262.48, fOmega: fq/339.97},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nHyrrokkin: {\n    elems: {a: 18440000.*1000, Eccen: 0.3359, nu: 273.076 *dr, \n            MA: 291.841 *dr, i: 151.536 *dr, Omega: 45.402 *dr, N0: 0.3863203 /360},\n    prec:  {ep0:  0,\n            fNu: fq/375.76, fOmega: fq/406.45},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nKari: {\n    elems: {a: 22093000.*1000, Eccen: 0.4756, nu: 163.935 *dr, \n            MA: 286.021 *dr, i: 156.067 *dr, Omega: 281.211 *dr, N0: 0.2924012 /360},\n    prec:  {ep0:  0,\n            fNu: fq/228.81, fOmega: fq/270.06},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nLoge: {\n    elems: {a: 23059000.*1000, Eccen: 0.1862, nu: 32.821 *dr, \n            MA: 337.237 *dr, i: 167.689 *dr, Omega: 343.811 *dr, N0: 0.2745228 /360},\n    prec:  {ep0:  0,\n            fNu: fq/251.72, fOmega: fq/307.35},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nSkoll: {\n    elems: {a: 17668000.*1000, Eccen: 0.4636, nu: 193.115 *dr, \n            MA: 44.965 *dr, i: 161.010 *dr, Omega: 296.623 *dr, N0: 0.4099120 /360},\n    prec:  {ep0:  0,\n            fNu: fq/286.68, fOmega: fq/369.06},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nSurtur: {\n    elems: {a: 22941000.*1000, Eccen: 0.4459, nu: 303.662 *dr, \n            MA: 136.191 *dr, i: 169.688 *dr, Omega: 236.537 *dr, N0: 0.2775384 /360},\n    prec:  {ep0:  0,\n            fNu: fq/202.95, fOmega: fq/259.66},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nJarnsaxa: {\n    elems: {a: 19354000.*1000, Eccen: 0.2178, nu: 237.422 *dr, \n            MA: 198.750 *dr, i: 163.649 *dr, Omega: 22.519 *dr, N0: 0.3575194 /360},\n    prec:  {ep0:  0,\n            fNu: fq/312.48, fOmega: fq/396.92},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nGreip: {\n    elems: {a: 18457000.*1000, Eccen: 0.3146, nu: 152.160 *dr, \n            MA: 314.541 *dr, i: 174.800 *dr, Omega: 349.350 *dr, N0: 0.3841491 /360},\n    prec:  {ep0:  0,\n            fNu: fq/280.23, fOmega: fq/385.90},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nTarqeq: {\n    elems: {a: 17962000.*1000, Eccen: 0.1675, nu: 34.767 *dr, \n            MA: 161.020 *dr, i: 46.291 *dr, Omega: 83.291 *dr, N0: 0.4067094 /360},\n    prec:  {ep0:  0,\n            fNu: fq/896.54, fOmega: fq/593.15},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\n\"S/2004 S 7\": {\n    elems: {a: 21000000.*1000, Eccen: 0.5290, nu: 84.036 *dr, \n            MA: 79.762 *dr, i: 165.693 *dr, Omega: 341.236 *dr, N0: 0.3157314 /360},\n    prec:  {ep0:  0,\n            fNu: fq/211.18, fOmega: fq/273.22},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\n\"S/2004 S 12\": {\n    elems: {a: 19886000.*1000, Eccen: 0.3268, nu: 87.128 *dr, \n            MA: 1.599 *dr, i: 165.261 *dr, Omega: 307.942 *dr, N0: 0.3441326 /360},\n    prec:  {ep0:  0,\n            fNu: fq/273.22, fOmega: fq/351.49},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\n\"S/2004 S 13\": {\n    elems: {a: 18406000.*1000, Eccen: 0.2591, nu: 346.186 *dr, \n            MA: 41.077 *dr, i: 168.798 *dr, Omega: 205.701 *dr, N0: 0.3856043 /360},\n    prec:  {ep0:  0,\n            fNu: fq/302.01, fOmega: fq/409.39},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\n\"S/2004 S 17\": {\n    elems: {a: 19448000.*1000, Eccen: 0.1795, nu: 180.792 *dr, \n            MA: 228.545 *dr, i: 168.239 *dr, Omega: 26.664 *dr, N0: 0.3548169 /360},\n    prec:  {ep0:  0,\n            fNu: fq/300.99, fOmega: fq/397.14},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\n\"S/2006 S 1\": {\n    elems: {a: 18780000.*1000, Eccen: 0.1412, nu: 154.950 *dr, \n            MA: 96.596 *dr, i: 156.180 *dr, Omega: 336.641 *dr, N0: 0.3741294 /360},\n    prec:  {ep0:  0,\n            fNu: fq/405.14, fOmega: fq/453.57},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\n\"S/2006 S 3\": {\n    elems: {a: 22428000.*1000, Eccen: 0.3792, nu: 188.728 *dr, \n            MA: 167.147 *dr, i: 158.631 *dr, Omega: 206.993 *dr, N0: 0.2868177 /360},\n    prec:  {ep0:  0,\n            fNu: fq/245.54, fOmega: fq/287.39},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\n\"S/2007 S 2\": {\n    elems: {a: 16718000.*1000, Eccen: 0.1791, nu: 57.720 *dr, \n            MA: 84.066 *dr, i: 174.057 *dr, Omega: 111.277 *dr, N0: 0.4454603 /360},\n    prec:  {ep0:  0,\n            fNu: fq/342.95, fOmega: fq/496.45},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\n\"S/2007 S 3\": {\n    elems: {a: 18938000.*1000, Eccen: 0.1853, nu: 111.854 *dr, \n            MA: 292.691 *dr, i: 177.595 *dr, Omega: 276.824 *dr, N0: 0.3681825 /360},\n    prec:  {ep0:  0,\n            fNu: fq/1079.63, fOmega: fq/161352.07},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n}\n        }\n        \n \n        super(params);\n    }\n}\n\nexport default Saturn;","import PlanetarySystem from \"../animations/PlanetarySystem\";\nimport Constants from \"../std/Constants\";\n\nclass Uranus extends PlanetarySystem { \n    constructor(params) {\n        \n        const dr = Math.PI/180;\n        const yr = Constants.CENTURY/100;\n        const fq = 2*Math.PI/yr;\n        \n        params.name       = \"Uranus\";\n        params.planetName = \"Uranus\";\n        params.rotationPhase = 0;\n        params.rotationPeriod = -0.71833 * 86400;\n        params.rotAxis = {ra: 257.311 *dr, dec: -15.175 *dr},\n        params.texture = {\n            map:\"images/2k_uranus.jpg\",\n            src:\"https://www.solarsystemscope.com/textures/download/2k_uranus.jpg\",\n            copyright:\"https://creativecommons.org/licenses/by/4.0/\"\n\n        };\n        params.moonInfo = {\nAriel: {\n    elems: {a: 190900.*1000, Eccen: 0.0012, nu: 115.349 *dr, \n            MA: 39.481 *dr, i: 0.041 *dr, Omega: 22.394 *dr, N0: 142.8356579 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/28.788, fOmega: fq/57.248},\n    frame: {type: \"Equatorial\"},\n    render: {frac: 0.05, color: 0xFFFF00},\n    size:   100000\n},\nUmbriel: {\n    elems: {a: 266000.*1000, Eccen: 0.0039, nu: 84.709 *dr, \n            MA: 12.469 *dr, i: 0.128 *dr, Omega: 33.485 *dr, N0: 86.8688879 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/63.146, fOmega: fq/126.951},\n    frame: {type: \"Equatorial\"},\n    render: {frac: 0.05, color: 0xFFFF00},\n    size:   100000\n},\nTitania: {\n    elems: {a: 436300.*1000, Eccen: 0.0011, nu: 284.400 *dr, \n            MA: 24.614 *dr, i: 0.079 *dr, Omega: 99.771 *dr, N0: 41.3514246 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/161.525, fOmega: fq/195.369},\n    frame: {type: \"Equatorial\"},\n    render: {frac: 0.05, color: 0xFFFF00},\n    size:   100000\n},\nOberon: {\n    elems: {a: 583500.*1000, Eccen: 0.0014, nu: 104.400 *dr, \n            MA: 283.088 *dr, i: 0.068 *dr, Omega: 279.771 *dr, N0: 26.7394888 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/161.52, fOmega: fq/195.37},\n    frame: {type: \"Equatorial\"},\n    render: {frac: 0.04, color: 0xFFFF00},\n    size:   100000\n},\nMiranda: {\n    elems: {a: 129900.*1000, Eccen: 0.0013, nu: 68.312 *dr, \n            MA: 311.330 *dr, i: 4.338 *dr, Omega: 326.438 *dr, N0: 254.6906576 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/8.913, fOmega: fq/17.727},\n    frame: {type: \"Equatorial\"},\n    render: {frac: 0.04, color: 0xFFFF00},\n    size:   100000\n},\nCordelia: {\n    elems: {a: 49800.*1000, Eccen: 0.0003, nu: 136.827 *dr, \n            MA: 254.805 *dr, i: 0.085 *dr, Omega: 38.374 *dr, N0: 1074.5183162 /360},\n    prec:  {ep0:  (-14*365-3 + 18.5) * 86400,\n            fNu: fq/0.328, fOmega: fq/0.657},\n    frame: {type: \"Equatorial\"},\n    render: {frac: 0.04, color: 0xFFFF00},\n    size:   100000\n},\nOphelia: {\n    elems: {a: 53800.*1000, Eccen: 0.0099, nu: 17.761 *dr, \n            MA: 116.259 *dr, i: 0.104 *dr, Omega: 164.048 *dr, N0: 956.4283330 /360},\n    prec:  {ep0:  (-14*365-3 + 18.5) * 86400,\n            fNu: fq/0.431, fOmega: fq/0.862},\n    frame: {type: \"Equatorial\"},\n    render: {frac: 0.04, color: 0xFFFF00},\n    size:   100000\n},\nBianca: {\n    elems: {a: 59200.*1000, Eccen: 0.0009, nu: 8.293 *dr, \n            MA: 138.486 *dr, i: 0.193 *dr, Omega: 93.220 *dr, N0: 828.3879607 /360},\n    prec:  {ep0:  (-14*365-3 + 18.5) * 86400,\n            fNu: fq/0.603, fOmega: fq/1.206},\n    frame: {type: \"Equatorial\"},\n    render: {frac: 0.03, color: 0xFFFF00},\n    size:   100000\n},\nCressida: {\n    elems: {a: 61800.*1000, Eccen: 0.0004, nu: 44.236 *dr, \n            MA: 233.795 *dr, i: 0.006 *dr, Omega: 99.403 *dr, N0: 776.5824144 /360},\n    prec:  {ep0:  (-14*365-3 + 18.5) * 86400,\n            fNu: fq/0.701, fOmega: fq/1.402},\n    frame: {type: \"Equatorial\"},\n    render: {frac: 0.03, color: 0xFFFF00},\n    size:   100000\n},\nDesdemona: {\n    elems: {a: 62700.*1000, Eccen: 0.0001, nu: 183.285 *dr, \n            MA: 184.627 *dr, i: 0.113 *dr, Omega: 306.089 *dr, N0: 760.0555393 /360},\n    prec:  {ep0:  (-14*365-3 + 18.5) * 86400,\n            fNu: fq/0.737, fOmega: fq/1.474},\n    frame: {type: \"Equatorial\"},\n    render: {frac: 0.03, color: 0xFFFF00},\n    size:   100000\n},\nJuliet: {\n    elems: {a: 64400.*1000, Eccen: 0.0007, nu: 223.819 *dr, \n            MA: 244.696 *dr, i: 0.065 *dr, Omega: 200.155 *dr, N0: 730.1261349 /360},\n    prec:  {ep0:  (-14*365-3 + 18.5) * 86400,\n            fNu: fq/0.809, fOmega: fq/1.619},\n    frame: {type: \"Equatorial\"},\n    render: {frac: 0.03, color: 0xFFFF00},\n    size:   100000\n},\nPortia: {\n    elems: {a: 66100.*1000, Eccen: 0.0001, nu: 222.433 *dr, \n            MA: 218.312 *dr, i: 0.059 *dr, Omega: 260.067 *dr, N0: 701.4864814 /360},\n    prec:  {ep0:  (-14*365-3 + 18.5) * 86400,\n            fNu: fq/0.888, fOmega: fq/1.777},\n    frame: {type: \"Equatorial\"},\n    render: {frac: 0.02, color: 0xFFFF00},\n    size:   100000\n},\nRosalind: {\n    elems: {a: 69900.*1000, Eccen: 0.0001, nu: 140.477 *dr, \n            MA: 136.181 *dr, i: 0.279 *dr, Omega: 12.847 *dr, N0: 644.6304183 /360},\n    prec:  {ep0:  (-14*365-3 + 18.5) * 86400,\n            fNu: fq/1.081, fOmega: fq/2.163},\n    frame: {type: \"Equatorial\"},\n    render: {frac: 0.02, color: 0xFFAAAA},\n    size:   100000\n},\nBelinda: {\n    elems: {a: 75300.*1000, Eccen: 0.0001, nu: 42.406 *dr, \n            MA: 357.224 *dr, i: 0.031 *dr, Omega: 279.337 *dr, N0: 577.3602885 /360},\n    prec:  {ep0:  (-14*365-3 + 18.5) * 86400,\n            fNu: fq/1.397, fOmega: fq/2.796},\n    frame: {type: \"Equatorial\"},\n    render: {frac: 0.02, color: 0xFFFF00},\n    size:   100000\n},\nPuck: {\n    elems: {a: 86000.*1000, Eccen: 0.0001, nu: 177.094 *dr, \n            MA: 245.796 *dr, i: 0.319 *dr, Omega: 268.734 *dr, N0: 472.5445878 /360},\n    prec:  {ep0:  (-14*365-3 + 18.5) * 86400,\n            fNu: fq/2.224, fOmega: fq/4.448},\n    frame: {type: \"Equatorial\"},\n    render: {frac: 0.02, color: 0xFFFF00},\n    size:   100000\n},\nPerdita: {\n    elems: {a: 76417.*1000, Eccen: 0.0116, nu: 253.925 *dr, \n            MA: 192.405 *dr, i: 0.470 *dr, Omega: 309.376 *dr, N0: 564.2469590 /360},\n    prec:  {ep0:  (3*365 + 237.5)*86400,\n            fNu: fq/1.479, fOmega: fq/2.958},\n    frame: {type: \"Equatorial\"},\n    render: {frac: 0.02, color: 0xFFFF00},\n    size:   100000\n},\nMab: {\n    elems: {a: 97736.*1000, Eccen: 0.0025, nu: 249.565 *dr, \n            MA: 273.769 *dr, i: 0.134 *dr, Omega: 350.737 *dr, N0: 390.0501070 /360},\n    prec:  {ep0:  (3*365 + 237.5)*86400,\n            fNu: fq/3.502, fOmega: fq/7.004},\n    frame: {type: \"Equatorial\"},\n    render: {frac: 0.02, color: 0xFFFF00},\n    size:   100000\n},\nCupid: {\n    elems: {a: 74392.*1000, Eccen: 0.0013, nu: 247.608 *dr, \n            MA: 163.830 *dr, i: 0.099 *dr, Omega: 182.793 *dr, N0: 587.4436490 /360},\n    prec:  {ep0:  (3*365 + 237.5)*86400,\n            fNu: fq/1.346, fOmega: fq/2.693},\n    frame: {type: \"Equatorial\"},\n    render: {frac: 0.02, color: 0xFFFF00},\n    size:   100000\n},\nCaliban: {\n    elems: {a: 7231100.*1000, Eccen: 0.1812, nu: 354.339 *dr, \n            MA: 7.271 *dr, i: 141.529 *dr, Omega: 171.189 *dr, N0: 0.6209758 /360},\n    prec:  {ep0:  (12*3600),\n            fNu: fq/8936.31, fOmega: fq/6445.52},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nSycorax: {\n    elems: {a: 12179400.*1000, Eccen: 0.5219, nu: 20.103 *dr, \n            MA: 266.583 *dr, i: 159.420 *dr, Omega: 263.034 *dr, N0: 0.2794217 /360},\n    prec:  {ep0:  (12*3600),\n            fNu: fq/1393.43, fOmega: fq/1863.29},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nProspero: {\n    elems: {a: 16276800.*1000, Eccen: 0.4445, nu: 174.152 *dr, \n            MA: 233.586 *dr, i: 151.830 *dr, Omega: 319.003 *dr, N0: 0.1819679 /360},\n    prec:  {ep0:  (12*3600),\n            fNu: fq/1155.47, fOmega: fq/1370.39},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nSetebos: {\n    elems: {a: 17420400.*1000, Eccen: 0.5908, nu: 359.953 *dr, \n            MA: 179.449 *dr, i: 158.235 *dr, Omega: 250.235 *dr, N0: 0.1617921 /360},\n    prec:  {ep0:  (12*3600),\n            fNu: fq/823.91, fOmega: fq/1044.20},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nStephano: {\n    elems: {a: 8007400.*1000, Eccen: 0.2248, nu: 14.956 *dr, \n            MA: 270.163 *dr, i: 143.819 *dr, Omega: 191.411 *dr, N0: 0.5313866 /360},\n    prec:  {ep0:  (12*3600),\n            fNu: fq/5484.23, fOmega: fq/5182.20},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nTrinculo: {\n    elems: {a: 8505200.*1000, Eccen: 0.2194, nu: 158.688 *dr, \n            MA: 180.374 *dr, i: 166.971 *dr, Omega: 193.755 *dr, N0: 0.4803847 /360},\n    prec:  {ep0:  (12*3600),\n            fNu: fq/2592.77, fOmega: fq/4273.04},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nFrancisco: {\n    elems: {a: 4282900.*1000, Eccen: 0.1324, nu: 140.644 *dr, \n            MA: 3.202 *dr, i: 147.250 *dr, Omega: 100.738 *dr, N0: 1.3478663 /360},\n    prec:  {ep0:  (12*3600),\n            fNu: fq/12574.36, fOmega: fq/14080.40},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nMargaret: {\n    elems: {a: 14146700.*1000, Eccen: 0.6772, nu: 90.017 *dr, \n            MA: 322.187 *dr, i: 57.367 *dr, Omega: 7.067 *dr, N0: 0.2167366 /360},\n    prec:  {ep0:  (12*3600),\n            fNu: fq/12057739.22, fOmega: fq/987.08},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nFerdinand: {\n    elems: {a: 20430000.*1000, Eccen: 0.3993, nu: 156.298 *dr, \n            MA: 26.163 *dr, i: 169.793 *dr, Omega: 217.350 *dr, N0: 0.1290311 /360},\n    prec:  {ep0:  (12*3600),\n            fNu: fq/747.30, fOmega: fq/1001.70},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n}\n        };        \n        super(params);\n    }\n}\n\nexport default Uranus;","import PlanetarySystem from \"../animations/PlanetarySystem\";\nimport Constants from \"../std/Constants\";\n\nclass Neptune extends PlanetarySystem { \n    constructor(params) {\n        \n        const dr = Math.PI/180;\n        const yr = Constants.CENTURY/100;\n        const fq = 2*Math.PI/yr;\n        \n        params.name       = \"Neptune\";\n        params.planetName = \"Neptune\";\n        params.rotationPhase = 0;\n        params.rotationPeriod = 0.67125 * 86400;\n        params.rotAxis = {ra: 299.3 *dr, dec: 42.95 *dr},\n        params.texture = {\n            map:\"images/2k_neptune.jpg\",\n            src:\"https://www.solarsystemscope.com/textures/download/2k_neptune.jpg\",\n            copyright:\"https://creativecommons.org/licenses/by/4.0/\"\n        };\n        params.moonInfo = {\nTriton: {\n    elems: {a: 354759.*1000, Eccen: 0.0000, nu: 66.142 *dr, \n            MA: 352.257 *dr, i: 156.865 *dr, Omega: 177.608 *dr, N0: 61.2572638 /360},\n    prec:  {ep0:  12*3600,\n            fNu: fq/386.371, fOmega: fq/687.446},\n    frame: {type: \"Laplace\", ra: 299.456 *dr, dec: 43.414 *dr},\n    render: {frac: 0.2, color: 0xFF0000},\n    size:   100000\n},\nNereid: {\n    elems: {a: 5513818.*1000, Eccen: 0.7507, nu: 281.117 *dr, \n            MA: 216.692 *dr, i: 7.090 *dr, Omega: 335.570 *dr, N0: 0.9996276 /360},\n    prec:  {ep0:  12*3600,\n            fNu: fq/8091.45, fOmega: fq/9455.73},\n    frame: {type: \"Laplace\", ra: 269.302 *dr, dec: 69.117 *dr},\n    render: {frac: 0.1, color: 0xFFFF00},\n    size:   100000\n},\nNaiad: {\n    elems: {a: 48227.*1000, Eccen: 0.0003, nu: 2.045 *dr, \n            MA: 30.035 *dr, i: 4.691 *dr, Omega: 42.279 *dr, N0: 1222.8435847 /360},\n    prec:  {ep0:  12*3600,\n            fNu: fq/0.289, fOmega: fq/0.575},\n    frame: {type: \"Laplace\", ra: 299.431 *dr, dec: 42.940 *dr},\n    render: {frac: 0.06, color: 0xFFFF00},\n    size:   100000\n},\nThalassa: {\n    elems: {a: 50074.*1000, Eccen: 0.0002, nu: 237.065 *dr, \n            MA: 262.923 *dr, i: 0.135 *dr, Omega: 145.980 *dr, N0: 1155.7559749 /360},\n    prec:  {ep0:  12*3600,\n            fNu: fq/0.327, fOmega: fq/0.654},\n    frame: {type: \"Laplace\", ra: 299.431 *dr, dec: 42.939 *dr},\n    render: {frac: 0.06, color: 0xFFFF00},\n    size:   100000\n},\nDespina: {\n    elems: {a: 52526.*1000, Eccen: 0.0002, nu: 176.857 *dr, \n            MA: 230.812 *dr, i: 0.068 *dr, Omega: 77.060 *dr, N0: 1075.7330674 /360},\n    prec:  {ep0:  12*3600,\n            fNu: fq/0.387, fOmega: fq/0.774},\n    frame: {type: \"Laplace\", ra: 299.431 *dr, dec: 42.937 *dr},\n    render: {frac: 0.06, color: 0xFFFF00},\n    size:   100000\n},\nGalatea: {\n    elems: {a: 61953.*1000, Eccen: 0.0001, nu: 343.011 *dr, \n            MA: 65.999 *dr, i: 0.034 *dr, Omega: 37.247 *dr, N0: 839.6613030 /360},\n    prec:  {ep0:  12*3600,\n            fNu: fq/0.690, fOmega: fq/1.380},\n    frame: {type: \"Laplace\", ra: 299.430 *dr, dec: 42.925 *dr},\n    render: {frac: 0.06, color: 0xFFFF00},\n    size:   100000\n},\nLarissa: {\n    elems: {a: 73548.*1000, Eccen: 0.0014, nu: 249.891 *dr, \n            MA: 166.246 *dr, i: 0.205 *dr, Omega: 308.127 *dr, N0: 649.0540770 /360},\n    prec:  {ep0:  12*3600,\n            fNu: fq/1.257, fOmega: fq/2.516},\n    frame: {type: \"Laplace\", ra: 299.429 *dr, dec: 42.897 *dr},\n    render: {frac: 0.06, color: 0xFFFF00},\n    size:   100000\n},\nProteus: {\n    elems: {a: 117646.*1000, Eccen: 0.0005, nu: 67.968 *dr, \n            MA: 250.938 *dr, i: 0.075 *dr, Omega: 315.131 *dr, N0: 320.7656245 /360},\n    prec:  {ep0:  12*3600,\n            fNu: fq/6.380, fOmega: fq/12.727},\n    frame: {type: \"Laplace\", ra: 299.406 *dr, dec: 42.432 *dr},\n    render: {frac: 0.06, color: 0xFFFF00},\n    size:   100000\n},\n\"S/2004 N 1\": {\n    elems: {a: 105284.*1000, Eccen: 0.0000, nu: 0.000 *dr, \n            MA: 302.652 *dr, i: 0.000 *dr, Omega: 0.000 *dr, N0: 378.9061402 /360},\n    prec:  {ep0:  12*3600,\n            fNu: fq/0.000, fOmega: fq/0.000},\n    frame: {type: \"Laplace\", ra: 299.373 *dr, dec: 42.944 *dr},\n    render: {frac: 0.06, color: 0xFFFF00},\n    size:   100000\n},\nHalimede: {\n    elems: {a: 16681000.*1000, Eccen: 0.2909, nu: 162.119 *dr, \n            MA: 105.258 *dr, i: 112.898 *dr, Omega: 217.288 *dr, N0: 0.1915578 /360},\n    prec:  {ep0:  (366+365+160)*86400,\n            fNu: fq/5673.19, fOmega: fq/18501.48},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nPsamathe: {\n    elems: {a: 46705000.*1000, Eccen: 0.4617, nu: 144.158 *dr, \n            MA: 190.027 *dr, i: 137.679 *dr, Omega: 298.074 *dr, N0: 0.0394359 /360},\n    prec:  {ep0:  (366+365+160)*86400,\n            fNu: fq/1477.62, fOmega: fq/1304.72},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nSao: {\n    elems: {a: 22619000.*1000, Eccen: 0.2827, nu: 65.047 *dr, \n            MA: 168.139 *dr, i: 49.907 *dr, Omega: 60.354 *dr, N0: 0.1233230 /360},\n    prec:  {ep0:  (366+365+160)*86400,\n            fNu: fq/436880.78, fOmega: fq/5382.39},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nLaomedeia: {\n    elems: {a: 23613000.*1000, Eccen: 0.4339, nu: 140.107 *dr, \n            MA: 285.863 *dr, i: 34.049 *dr, Omega: 59.124 *dr, N0: 0.1133637 /360},\n    prec:  {ep0:  (366+365+160)*86400,\n            fNu: fq/2245.08, fOmega: fq/3325.44},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nNeso: {\n    elems: {a: 50258000.*1000, Eccen: 0.4243, nu: 86.441 *dr, \n            MA: 260.648 *dr, i: 131.265 *dr, Omega: 49.151 *dr, N0: 0.0364349 /360},\n    prec:  {ep0:  (366+365+160)*86400,\n            fNu: fq/23936.86, fOmega: fq/1094.07},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n}\n        };        \n        super(params);\n    }\n}\n\nexport default Neptune;","import PlanetarySystem from \"../animations/PlanetarySystem\";\nimport Constants from \"../std/Constants\";\n\nclass Pluto extends PlanetarySystem { \n    constructor(params) {\n        \n        const dr = Math.PI/180;\n        const yr = Constants.CENTURY/100;\n        const fq = 2*Math.PI/yr;\n        \n        params.name       = \"Pluto\";\n        params.planetName = \"Pluto\";\n        params.rotationPhase = 0;\n        params.rotationPeriod = -6.387230 * 86400;\n        params.rotAxis = {ra: 132.993 *dr, dec: -6.163 *dr};\n\n        params.texture = {\n          map: \"images/pluto_texture_map_16k_by_fargetanik_dandu2y-fullview.jpg\",\n          src: \"https://www.deviantart.com/fargetanik/art/Pluto-Texture-Map-16k-643938442\",\n          copyright: \"Creative Commons Attribution-Share Alike License 3.0\"\n          \n        };\n        params.moonInfo = {\n            Charon: {\n                elems: {                \n                    a:    19591000.,\t\n                    Eccen:       0.0002, \n                    nu:        146.106 *dr,\t \n                    MA:        131.070 *dr,\t\n                    i:           0.080 *dr,\t\n                    Omega:      26.928 *dr,                    \n                    N0:         -56.3625210/360\n                },\n                prec: {\n                    ep0:   0,\n                    fNu:    fq/10178.040,\n                    fOmega: fq/ 9020.398\n                },\n                size: {\n                    radius: 1212000 / 2\n                },\n                render: {\n                    texture: {\n                        map: \"images/charon_map_magentameteorite_art.jpg\",\n                        src: \"https://www.deviantart.com/magentameteorite/art/Charon-Texture-Map-794040506\",\n                        copyright:\"Quote: 'give me credit if u want to use this map'\"\n                    },\n                    frac:    0.51  // Actual ratio\n                }\n            },\n            Nix: {\n                elems: {\n                    a:      48671000.,\n                    Eccen:         0.0000,\n                    nu:          324.463 *dr,\n                    MA:          284.405 *dr,\n                    i:             0.000,\n                    Omega:       203.400 *dr,\t\n                    N0:           -14.4841304/360\n                },\n                size: {\n                    radius: 37200 / 2,  // Cube root of ellipsoid\n                    ellipsoid: [49800/2,33200/2,31100/2]\n                },\n                render: {\n                    frac: 0.15\n                }\n            },\n            \n            Hydra: { \n                elems: {\n                    a:    64698000.,\n                    Eccen:       0.0056,\n                    nu:        153.307 *dr,\n                    MA:        326.678 *dr,\n                    i:           0.304 *dr,\n                    Omega:     113.173 *dr,\n                    N0:          -9.4235386/360\n                },\n                prec: {\n                    ep0:       0,\n                    fNu:    fq/ 7.19,\n                    fOmega: fq/14.38\n                },\n                size: {\n                    radius: 38400 /2 ,\n                    ellipsoid: [50900/2, 36100/2, 30900/2]\n                },\n                render: {\n                    frac: 0.15\n                }\n            },\n            Kerberos: {\n                elems: { \n                    a:       57729000.,\n                    Eccen:          0.0000,\n                    nu:           160.629 *dr,\n                    MA:           161.061 *dr,\n                    i:              0.426 *dr,\n                    Omega:        305.871 *dr,\n                    N0:            -11.1913026/360,\n                },\n                prec: {\n                   ep0: 0,\n                   fNu:    0.000,\n                   fOmega: fq/9.27\n               },\n               size: {\n                   radius:    12.0/2 ,\n                   ellipsoid:  [19000/2, 10000/2, 9000/2]\n               },\n               render: {\n                   frac: 0.1\n               }\n            },\n            Styx: {\n                elems: {\n                    a:      42393000.,\n                    Eccen:         0.0006,\n                    nu:          330.244 *dr,\n                    MA:          194.546 *dr,\n                    i:             0.080 *dr,\n                    Omega:        26.956 *dr,\n                    N0:           -17.8551357 / 360,\n                },\n                prec: {\n                   ep0: \t    0,\n                   fNu:    fq/3710.58,\n                   fOmega: fq/5162.64\n                },\n                size: {\n                    radius: 10500/2,\n                    ellipsoid: [16000/2, 9000/2, 8000/2]\n                },\n                render: {\n                    frac: 0.1\n                }\n            }\n        };\n        \n        super(params);\n    }\n}\n\nexport default Pluto;","import LocalGalaxy from \"./LocalGalaxy\";\nimport SolarSystem from \"./SolarSystem\";\nimport Earth       from \"./Earth\";\nimport Mercury     from \"./Mercury\";\nimport Venus       from \"./Venus\";\nimport Mars        from \"./Mars\";\nimport Jupiter     from \"./Jupiter\";\nimport Saturn      from \"./Saturn\";\nimport Uranus      from \"./Uranus\";\nimport Neptune     from \"./Neptune\";\nimport Pluto       from \"./Pluto\";\n\nclass AnimationFactory {\n  \n    constructor(){\n        this.cache = {};\n    };\n    \n    available = {\n        mercury: 1,\n        venus: 1,\n        earth: 1,\n        mars: 1,\n        jupiter: 1,\n        saturn: 1,\n        uranus: 1,\n        neptune: 1,\n        pluto: 1,\n        \"solar system\": 1,\n        \"local galactic neighborhood\": 1,\n        \"the earth and environs\": 1\n    };\n    \n    getAnimation(name, args) {\n        name = name.toLowerCase();\n        if (!this.cache[name]) {\n            switch (name) {\n              case \"mercury\":\n                this.cache[name] = new Mercury(args);\n                break;\n                \n              case \"venus\":\n                this.cache[name] = new Venus(args);\n                break;\n                \n              case \"earth\":\n                this.cache[name] = new Earth(args);\n                break;\n                \n              case \"mars\":\n                this.cache[name] = new Mars(args);\n                break;\n                \n              case \"jupiter\":\n                this.cache[name] = new Jupiter(args);\n                break;\n                \n              case \"saturn\":\n                this.cache[name] = new Saturn(args);\n                break;\n                \n              case \"uranus\":\n                this.cache[name] = new Uranus(args);\n                break;\n                \n              case \"neptune\":\n                this.cache[name] = new Neptune(args);\n                break;\n                \n              case \"pluto\":\n                this.cache[name] = new Pluto(args);\n                break;\n                \n              case \"solar system\":                    \n                this.cache[name] = new SolarSystem(args);\n                break;\n                \n              case \"local galactic neighborhood\":\n                this.cache[name] = new LocalGalaxy(args);\n                break;\n                \n              case \"the earth and environs\":\n                this.cache[name] = new Earth(args);\n                break;\n            }\n            \n        }\n        return this.cache[name];\n    }\n    \n    isAnimation(name) {\n        return this.available[name.toLowerCase()];\n    }\n}\nconst singleton = new AnimationFactory();\n\n// Export the instance not the class.\nexport default singleton;","function UnitLegend() {\n    return (\n  <div>\n    <strong>Unit legend:</strong>\n    <ul>\n        <li key=\"1\"> au: astronomical units </li> \n        <li key=\"2\"> au/day: astronomical units per day </li>\n        <li key=\"3\"> <strong>d: degrees (&deg;)</strong> </li>\n        <li key=\"4\"> day: days </li>\n        <li key=\"5\"> jd: Julian days </li>\n        <li key=\"6\"> <strong>kg: kilograms </strong></li>\n        <li key=\"7\"> km/s: kilometers/second </li>\n        <li key=\"8\"> <strong>m: meters </strong></li>\n        <li key=\"9\"> <strong>m/s: meters/second</strong> </li>     \n        <li key=\"10\"> Me: Earth masses </li>            \n        <li key=\"11\"> Ms: Solar masses </li>\n        <li key=\"12\"> rad: radians</li>            \n        <li key=\"13\"> rE: Earth radii </li> \n        <li key=\"14\"> <strong>s: seconds</strong></li>\n        <li key=\"15\"> y: years </li>    \n    </ul>\n    Any of these can be used as suffixes to values.\n    Units in <strong>bold</strong> are assumed if no units are specified.\n  </div>\n\n    )\n}\n\nexport default UnitLegend;\n\n","import {Component} from \"react\";\nimport Util from \"../std/Util.js\";\n\nclass Units extends Component {\n    \n    constructor(args) {\n        super(args);\n        this.units = args.units;\n        this.name  = args.name;\n        this.row   = args.row;\n    }\n    \n    render() {\n        if (this.units == null || this.units.length == 0) {\n            return <span></span>;\n        }\n        const elems = [];\n        const here = this;\n        elems.push(\n          <button \n            key=\"0\" \n            onClick={here.row.cycleUnits.bind(here.row)}\n            hidden={!this.props.value}>\n               &gt;&gt;\n          </button>\n        );\n        elems.push(<span key=\"-1\">&nbsp;&nbsp;</span>)\n        for (var i=0; i<this.units.length; i += 1) {\n            const unit = this.units[i];\n            if (unit.unit == 'd' || (unit.scale == 1  && unit.unit != 'rad')) {\n                elems.push(<span key={i+1}><strong>{unit.unit} </strong></span>);\n            } else {\n                elems.push(<span key={i+1}>{unit.unit} </span>);\n            }\n        }\n        \n        return <span>{elems}</span>;\n    }\n}\n\nexport default Units;\n\n","function status(msg) {\n    document.getElementById(\"statusContent\").innerHTML = msg;\n}\nexport default status;\n\n\n","import {Component} from \"react\";\nimport Units from \"./Units.js\";\nimport status from \"./Status.js\";\n\nimport ParameterFactory from \"../orbits/ParameterFactory.js\";\nimport Parameter from \"../orbits/Parameter.js\";\n\nimport Util from \"../std/Util.js\";\n\nclass Row extends Component {\n    constructor(args) {\n        super(args);\n        this.param = args.param;\n        this.validated = false;\n        this.unitIndex = -1;\n        this.parameter =  null;\n        this.showingUnit = false;\n        this.state = {value: '', computed: false};\n        this.values = null;\n    }\n    \n    // This is called every time the value changes.\n    handleChange(event) {\n        this.validated = false;\n        this.setState({value: event.target.value});\n    }\n    \n    // This is only called when the user enters a return.\n    validate(val) {\n        var initVal = val;\n        // Check if this is just a unit change.\n        if (this.unitIndex >= 0  && this.values) {\n            if (val == this.values[this.unitIndex]) {\n                this.validated = true;\n                return;\n            }\n        }\n        this.parameter = null;\n        this.unitIndex = -1;\n        if (this.state.computed) {\n            this.setState({computed: false});\n        }\n        this.values = null;\n        if (val == null || val.length == 0) {\n            this.validated = false;\n            return;\n        }\n        \n        val = val.trim();\n        \n        // Allow commas as separators.\n        // Get rid of [] that may have been displayed.\n        val = val.replace(/,/g, ' ');\n        val = val.replace('[', ' ');\n        val = val.replace(']', ' ');\n\n        // Replace multiple spaces (or tab or ...) with a single space.\n        val = val.replace(/\\s+/g, \" \");\n        var elems = val.split(\" \");\n        var dim = null;\n        if (elems.length === 2 || elems.length === 4 || elems.length === 10) {\n            dim = elems.pop().toLowerCase();\n        }\n        var unit = null;\n        if (dim && this.param.units) {            \n            this.unitIndex = -1;\n            var i;\n            for (i = 0; i < this.param.units.length; i += 1) {\n                const xunit = this.param.units[i];\n                if (xunit.unit.toLowerCase() === dim) {\n                    unit = this.param.units[i];\n                    this.unitIndex = i;\n                    break;\n                }\n            }\n            \n            if (this.unitIndex < 0) {\n                status(\"Error: Unknown unit:\"+dim+\" for parameter \"+this.param.name+\". Last token ignored.\");\n                return;\n            }\n        }\n        if (this.unitIndex < 0 && this.param.units) {\n            this.unitIndex = this.getDftUnit();\n            unit = this.param.units[this.unitIndex];\n        }\n        \n        var scale = 1;\n        var offset = 0;\n        if (unit) {\n            scale = unit.scale;\n            if (unit.offset) {\n                offset = unit.offset;\n            }\n        }\n        var p;\n        if (elems.length === 1) {\n            if (this.param.dim !== Parameter.SCALAR) {\n                status(\"Scalar specification for non-scalar parameter\");\n                return;\n            }\n            var val = elems[0];\n            if (isNaN(val)) {\n                status(\"Not a numerical value\");\n                return;\n            }\n            val = (Number.parseFloat(val)-offset)*scale;\n            this.parameter = ParameterFactory.genParam(this.param.name, \n                               val, unit);\n\n        } else if (elems.length === 3) {\n            if (this.param.dim !== Parameter.VECTOR) {\n                status(\"Vector specification for non-vector\");\n                return;\n            }\n            if (isNaN(elems[0])  || isNaN(elems[1] || isNaN(elems[2]))) {\n                status(\"Not a numeric vector\");\n                return;\n            }\n            this.parameter = ParameterFactory.genParam(this.param.name,\n                    [Number.parseFloat(elems[0]) * scale,\n                     Number.parseFloat(elems[1]) * scale,\n                     Number.parseFloat(elems[2]) * scale], unit);\n            \n        } else {\n            status(\"Unexpected number of tokens in parameter:\" + elems.length);\n            return;\n        }\n        // Now generate the values for all of the units.\n        if (unit) {\n            // Pass the input value so that it can be used for the current\n            // unit\n            this.genValues(initVal);\n        }\n        this.validated = true;\n        status(\"\");\n    }\n    \n    genValues(input) {\n        if (!this.param.units) {\n            return;\n        }\n        const units = this.param.units;\n        this.values = [];\n        for (var i=0; i<units.length; i += 1) {\n            if (i == this.unitIndex) {\n                this.values[i] = input;\n            } else {\n                this.values[i] = this.renderToUnit(units[i]);\n            }\n        }\n    } \n    \n    getDftUnit() {\n        for (var i=0; i<this.param.units.length; i += 1) {\n            const unit = this.param.units[i];\n            if (unit.unit == \"d\" || (unit.scale == 1  && unit.unit != 'rad')) {\n                return i;\n            }\n        }\n        Util.log(\"No default unit found:\"+this.param.name);\n    }\n    \n    cycleUnits() {\n        if (!this.validated) {\n            this.validate(this.state.value);\n        }\n        if (!this.validated) {\n            status(\"Invalid entry, cannot cycle units\");\n            return;\n        }        \n        this.unitIndex = (this.unitIndex + 1)%this.param.units.length;\n        this.setState({value: this.values[this.unitIndex]});\n    }\n    \n    renderNow() {\n        return this.valuesArr[this.unitIndex] + this.param.units[this.unitIndex].unit;\n    }\n    \n    renderToUnit(unit) {\n        if (!this.parameter) {\n            return \"\";\n        }\n        const scale  = unit.scale;\n        const offset = unit.offset? unit.offset: 0;\n        \n        if (this.param.dim == Parameter.SCALAR) {\n            return this.dispScalar(this.parameter.getScalar(), 7, scale, offset)+\" \"+unit.unit;\n        } else {\n            const vec = this.parameter.getVector();\n            return \"[ \"+this.dispVector(vec, 5, scale, offset)+\" ] \"+unit.unit;\n        }\n    }\n    \n    dispScalar(val, prec, scale, offset) {\n        return (val/scale+offset).toPrecision(prec);\n    }\n    dispVector(vec, prec, scale, offset) {\n        var str = \"\";\n        var prefix = \"\";\n        for (var i=0; i<vec.length; i += 1) {\n            str += prefix + this.dispScalar(vec[i], prec, scale, offset);\n            prefix = \" \";\n        }\n        return str;\n    }\n    \n    render() {\n        const param = this.param;\n        const here = this;\n        const cname = this.state.computed? \"yellow\": \"white\";\n        return (\n                <tr key={param.name} className={cname}>\n                    <th align=\"right\">{param.name}</th>\n                    <td><input size=\"18\"\n                          value={this.state.value}\n                          onChange={this.handleChange.bind(this)}\n                          onKeyUp={\n                            (event) => {\n                              if (event.key === 'Enter') {\n                                  here.validate(event.target.value);                       \n                              }\n                             }\n                           }/></td>\n                    <td><Units row={this} value={this.state.value} name={param.name} units={param.units} /></td>\n                    <td>{param.descrip}</td>\n                </tr>\n        );\n    }\n    \n    setParameter(p) {\n        this.unitIndex = -1;\n        this.parameter = p;\n        this.validated = true;\n        if (this.param.units) {\n            \n            this.genValues(\"\");\n            this.unitIndex = this.getDftUnit() - 1;  // Might be -1, but that's ok.\n            this.cycleUnits();\n            this.setState({computed: true});\n        } else {\n            // No units\n            var dispVal;\n            if (this.param.dim == Parameter.SCALAR) {\n                dispVal = this.dispScalar(p.getScalar(), 7, 1,0);\n            } else if (this.param.dim == Parameter.VECTOR) {\n                dispVal = this.dispVector(p.getVector(), 5,1,0);\n            } else if (this.param.dim == Parameter.BLOB) {\n                dispVal = this.dispVector(p.getVector(), 4, 1, 0);\n            }\n            this.setState({value: dispVal, computed: true});\n        }\n    }\n}\n\nexport default Row;\n","\n\nimport  {Component, createRef}  from \"react\";\nimport Util             from \"../std/Util.js\";\nimport ParameterFactory from \"../orbits/ParameterFactory.js\";\nimport Parameter        from \"../orbits/Parameter.js\";\nimport Orbit            from \"../orbits/Orbit.js\";\n\nimport UnitLegend       from \"./UnitLegend.js\";\n\nimport Row       from \"./Row.js\";\nimport status    from \"./Status.js\";\nimport TextInput from \"../elems/TextInput.js\";\n\nclass OrbitCalculator extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.params = ParameterFactory.legalParameters;\n        this.orbit  = null;\n        this.fixed = null;\n        this.varies = null;\n        this.fixedRef = [];\n        this.variesRef = [];\n        this.orbitName = null;\n        this.animFactory = null;\n        this.displayCount = 0;\n    }\n\n    // It seems like the first time we create the objects we \n    // can get proper references to them, but later entries don't\n    // seem to work.  So we only compute the references the first\n    // time.  Probably something dodgy going on here.\n    render() {\n        const here = this;\n        this.varies = [];\n        this.fixed  = [];\n        var doRef = true;\n        if (this.fixedRef.length > 0) {\n            doRef = false;\n        }\n        for (var name in this.params) {\n            const param = this.params[name];\n            var ref;\n            var elem;\n            if (doRef) {\n                ref = createRef();\n                elem = <Row ref={ref} param={param} />;\n            } else {\n                elem = <Row param={param} />;\n            }\n            if (param.varies) {\n                this.varies.push(elem);\n                if (doRef) {\n                    this.variesRef.push(ref);\n                }\n            } else {\n                this.fixed.push(elem);\n                if (doRef) {\n                    this.fixedRef.push(ref);\n                }\n            }\n        }        \n        return (\n<div>\n    Name for orbit:&nbsp; \n    <TextInput placeholder=\"Optional name\"\n       callback={function(name) {here.setOrbitName(name);}} />\n    <p />\n    Status: <div id=\"statusContent\"></div>\n    <p />\n    \n  <table><tbody>\n    <tr key=\"hdr\"><th>Name</th><th>Value</th><th>Units</th><th align=\"left\">Description</th></tr>\n    <tr key=\"div1\"><td colSpan='4' align='center'> <i>Orbit Constants</i></td></tr>\n    {this.fixed}\n    <tr key=\"div2\"><td colSpan='4' align='center'><i>Orbit Variables</i></td></tr>\n    {this.varies}\n    </tbody>\n  </table>\n  <table><tbody>\n            <tr>\n            <td key=\"1\"><button\n              onClick={this.compute.bind(this)}\n            >Compute</button></td>\n            <td key=\"2\"><button\n              onClick={this.displayOrbit.bind(this)}\n            >Render orbit</button></td>\n            <td key=\"3\"><button\n               onClick={this.clearAll.bind(this)}\n            >Clear all</button></td>\n            <td key=\"4\"><button\n               onClick={this.clearVarying.bind(this)}\n            >Clear variables only</button></td>\n            </tr>\n      </tbody>\n    </table>\n    <p />\n    <hr/>\n    <UnitLegend />\n    </div>    \n    );\n    }\n    \n    // This may be from an invoking page.\n    setAnimFactory(animFactory) {\n        this.animFactory = animFactory;\n    }\n    \n    clearAll() {\n        this.clear(this.fixedRef);\n        this.clear(this.variesRef);\n    }\n    \n    clearVarying() {\n        this.clear(this.variesRef);\n    }\n    \n    clear(rows) {\n        for (var i=0; i<rows.length; i += 1) {\n            const row = rows[i].current;\n            \n            if (row.state && row.state.value) {\n                row.setState({value: \"\", computed: false});\n            }\n            row.parameter = null;\n            row.validated = false;\n        }\n    }\n    \n    compute() {\n        // Compute all of the parameters that we can given the \n        // current inputs.\n        \n        // First make sure all current inputs are valid.\n        const all = this.fixedRef.concat(this.variesRef);\n        const orbit = new Orbit(this.orbitName);\n        for (var i=0; i<all.length; i += 1) {                    \n            const row = all[i].current;\n            if (row.state && row.state.value) {\n                if (!row.validated) {\n                    row.validate(row.state.value);\n                    if (!row.validated) {\n                        status(\"Invalid entry for parameter:\"+row.param.name);\n                        return;\n                    }\n                }\n                orbit.addParameter(row.parameter);\n            }\n        }\n        status(\"\");\n        \n        var updated = true;\n        var totalUpdates = 0;\n        while (updated) {\n            updated = false;\n            // Loop overa all parameters and see if we can update them.\n            for (var i=0; i<all.length; i += 1) {\n                const row = all[i].current;\n                if (!row.parameter) {\n                    const name = row.param.name;\n                    const newPar = orbit.getParameter(name, true);\n                    if (newPar != null) {\n                        updated = true;\n                        totalUpdates += 1;\n                        row.setParameter(newPar);\n                    }\n                }\n            }\n        }\n        this.orbit = orbit;\n        status(totalUpdates+\" parameters computed\");\n    }\n    \n    displayOrbit() {\n        this.compute();\n        this.displayCount += 1;\n        var qorb = this.orbit.quickOrbit();\n        if (qorb == null) {\n            status(\"Insufficient known orbital parameters to determine orbit\");\n        } else {\n            var name = this.orbit.getOrbitName();\n            if (!name) {\n                name = \"UserOrbit\";\n            }\n            \n            name += this.orbitCount;\n            \n            // Use the central mass to decide where to show the orbit.\n            var mass = this.orbit.getParameter(\"M\").value;\n            var mrat = mass/Constants.MSun;\n            let anim = null;\n            if (mrat > 0.999999 && mrat < 1.000001) {\n                anim = \"Solar System\";\n            } else {\n                mrat = mass/Constants.MEarth;\n                if (mrat > 0.999999 && mrat < 1.000001) {\n                    amim = \"The Earth and environs\";\n                }                \n            }\n            \n            if (anim) {\n                this.animFactory.getAnimation(anim).addExternalOrbit(name, qorb);\n            } else {\n                status(\"Central orbit mass not consistent with Earth or sun\")\n            }\n        }        \n    }\n    \n    setOrbitName(name) {\n        this.orbitName = name;\n    }\n}\n\nexport default OrbitCalculator;","import {Component, createRef} from 'react';\n\nimport Util           from \"./std/Util.js\";\n\n// Used in animations\nimport Frame          from \"./elems/Frame.js\";\nimport UserControls   from \"./elems/UserControls.js\";\nimport animFactory    from \"./animations/AnimationFactory.js\";\n\n// Used in OrbitCalculator\nimport OrbitCalculator from \"./calc/OrbitCalculator.js\";\n\nimport getCoords from \"./std/Coords\";\n\nclass App extends Component {\n    \n    constructor(props) {\n        super(props);\n        \n        // The use of orbParams is a kludge to allow us to define multiple pages\n        // within the react framework easily.  While this may nominally\n        // require the download of the entire JS code for the\n        // OrbitCalculator, this will normally be cached in the browser\n        // already.  Their is a lot of mystery about routing and such,\n        // but it is unclear if that will allow us to serve two different\n        // pages simultaneously and in any case requires higher level\n        // wizardry than I am capable of.\n        this.orbParams = false;\n        const url = window.location.href;\n        this.controls = createRef();\n        if (url.indexOf(\"app=params\") >= 0) {\n            this.orbParams = true;\n        }\n        \n        if (this.orbParams) {\n            return;\n        }\n        this.frame = null;\n    }\n    \n    onWindowResize() {\n        if (this.orbParams) {\n            return;\n        }\n        const dx = window.innerWidth;\n        const dy = window.innerHeight;\n        this.frame.resize(dx, dy);\n    }\n    \n    \n    render() {\n        if (this.orbParams) {\n            return this.renderOrbParams();\n        }\n        \n        const dx = window.innerWidth;\n        const dy = window.innerHeight;\n        return (\n            <div>\n               <div style={{\n                  height:dx+\"px\", \n                  width:dy+\"px\"\n                }} id=\"baseCanvas\"></div>\n               <UserControls ref={this.controls} />\n            </div>\n        );\n    }\n    \n    renderOrbParams() {\n        return <OrbitCalculator ref={this.controls} />;\n    }\n    \n    componentDidMount() {\n        if (this.orbParams) {\n            this.componentDidMountOrbParams();\n        } else {\n            window.addEventListener( 'resize', this.onWindowResize.bind(this) );\n            this.frame = new Frame({animDiv: \"baseCanvas\", size:[window.innerWidth, window.innerHeight]});\n            \n            this.solar = animFactory.getAnimation(\"Solar System\", {timeID:\"timeDisplay\", frame:this.frame});\n            \n            this.frame.setUserControls(this.controls.current);\n            this.frame.setAnimation(this.solar);\n        }\n        window.GLOBALS = {animFactory: animFactory};\n    }\n    \n    componentDidMountOrbParams() {\n        // This kludgey bit allows the calculator to send\n        // orbits to the solar system even though it's on\n        // a different page.\n        let win = window.opener;\n        if (win) {\n            this.controls.current.setAnimFactory(win.GLOBALS.animFactory);\n        }\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}