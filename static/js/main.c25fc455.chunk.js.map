{"version":3,"sources":["std/Constants.js","std/Util.js","std/Settings.js","std/Dump.js","elems/Frame.js","elems/UserControls.js","three/RingGeometry.js","elems/Animation.js","stars/StarReader.js","stars/PrepStar.js","elems/Action.js","elems/TextInput.js","elems/OptionsSelector.js","elems/FromTo.js","stars/StarFinder.js","stars/Connecter.js","animations/LocalGalaxy.js","orbits/Kepler.js","orbits/QOrb.js","orbits/Parameter.js","orbits/Origins.js","orbits/ParameterFactory.js","orbits/Orbit.js","data/PlanetaryData.js","solarsystem/SolarPlanets.js","parsers/ParseMPC.js","solarsystem/OrbitPlot.js","solarsystem/Planet.js","solarsystem/Ring.js","three/AngPoints.js","solarsystem/SmallBodies.js","solarsystem/Sun.js","orbits/SecondaryOrbit.js","orbits/ChainedOrbit.js","solarsystem/Missions.js","animations/SolarSystem.js","animations/Satellite.js","std/Coords.js","orbits/TransformedOrbit.js","earth/Satellites.js","earth/SatPrecession.js","earth/NoradReader.js","animations/PlanetarySystem.js","animations/AnimationFactory.js","calc/UnitLegend.js","calc/Units.js","calc/Status.js","calc/Row.js","calc/Debug.js","calc/OrbitCalculator.js","App.js","index.js"],"names":["Constants","year","month","day","date","Date","setUTCFullYear","setUTCMonth","setUTCDate","setUTCHours","setUTCMinutes","setUTCSeconds","setUTCMilliseconds","time","JD0","mjd","GMSun","G","MSun","MEarth","AU","CENTURY","Epoch0","UTCDate","getTime","dSun","rEarth","SOLAR_DAY","SIDEREAL_DAY","SIDEREAL_ANGLE_AT_EPOCH","PLANAR_RATIO","SHAPE_RATIO","HALT_RATIO","radUnits","unit","scale","angUnits","Math","PI","timeUnits","offset","velUnits","massUnits","intervUnits","Util","msg","div","i","arguments","length","console","log","a","sum","c","sqrt","b","Error","Array","isArray","map","x","a0","z","times","dot","n","res","angle","axis","m","cos","sin","toFixed","str","flds","split","dtflds","tmflds","toRadians","toDegrees","Settings","url","window","location","href","indexOf","substring","token","keyVal","key","decodeURIComponent","val","parseURL","Dump","Frame","inputs","defaults","camera","renderer","controls","animation","userControls","this","mouseTime","startedRun","setupTHREE","animDiv","domElement","addEventListener","longClickEvt","bind","dblClickEvt","e","doLongClick","detail","anim","cameraPos","position","clone","cameraRot","rotation","target","cameraTarget","name","copy","updateProjectionMatrix","setAnimation","showOptions","initialShowOptions","setState","options","empty","showingOptions","run","trace","here","render","requestAnimationFrame","loading","update","scene","now","longClickTime","dispatchEvent","CustomEvent","elem","document","getElementById","body","PerspectiveCamera","cameraFoV","camNear","camFar","WebGLRenderer","antialias","setClearColor","setSize","size","resize","OrbitControls","raycaster","Raycaster","params","Line","threshold","Points","near","far","appendChild","canvas","mouseTimeUp","mouseTimeDown","clickListener","raycast","raycastResult","rect","getBoundingClientRect","floor","clientX","left","right","width","y","clientY","top","bottom","height","mouse","setFromCamera","intersects","intersectObjects","children","found","inter","object","elementName","getIndexedName","index","instanceId","distanceToRay","aspect","innerWidth","innerHeight","UserControls","props","state","running","paused","currentTarget","pos","ind","reverse","pauseStart","speed","newShow","animOptions","img","className","onClick","timeClick","id","src","optionClick","Component","RingGeometry","innerRadius","outerRadius","thetaSegments","phiSegments","thetaStart","thetaLength","type","parameters","max","indices","vertices","normals","uvs","radius","radiusStep","vertex","Vector3","uv","Vector2","j","segment","push","thetaSegmentLevel","d","setIndex","setAttribute","Float32BufferAttribute","data","BufferGeometry","Animation","startup","Euler","sceneElements","runOne","counter","segments","delta","Scene","quiet","timeID","timeElem","settings","updateElements","rfunc","elemName","sceneElement","component","add","Object","keys","remove","faster","open","frame","animFactory","getAnimation","newTime","parseTime","setTime","parse","addElement","innerHTML","timeFormatter","millis","dateLocal","toISOString","baseAnimation","setAnim","texture","ring","mesh","loader","TextureLoader","bump","spec","specColor","load","Color","Mesh","SphereGeometry","MeshPhongMaterial","bumpMap","bumpScale","specularMap","specular","rotateX","receiveShadow","ringG","rMat","side","DoubleSide","ringM","set","results","resArr","dist","toPrecision","sort","loadStars","callback","xhr","XMLHttpRequest","file","galaxy","onload","zz","stars","responseText","json","JSON","onerror","send","colorChar","spt","startsWith","charAt","PrepStar","star","v","u","w","sizes","factor","cc","getSize","color","SptColors","getColor","np","clr","Action","opts","action","args","TextInput","placeholder","value","onKeyUp","event","OptionsSelector","nullDiv","direct","directContent","selection","evt","opt","onChange","change","FromTo","fromDft","toDft","fromPlaceholder","toPlaceholder","mouseDown","mouseUp","contentID","fromRef","createRef","toRef","from","current","to","stopPropagation","idPrefix","ref","defaultValue","onMouseDown","mouseDownF","onMouseUp","mouseUpF","StarFinder","Stars","simbadCache","nameLC","toLowerCase","getFromCatalog","getFromSimbadCache","getFromSimbad","encodeURIComponent","onreadystatechange","readyState","DONE","simb","parseSimbad","text","lines","getTok","inIds","line","setHIP_ID","l","Number","parseInt","pmr","pmd","rv","fld","trim","Connecter","starFinder","getStar","fromStar","toStar","LocalGalaxy","fields","savedLine","finishConstruction","starData","ringIndices","material","MeshBasicMaterial","wireframe","baseStar","baseRing","theStars","InstancedMesh","mat","Matrix4","makeScale","setPosition","setMatrixAt","setColorAt","theRings","r","instanceColor","needsUpdate","scl","getMatrixAt","instanceMatrix","addTimeDisplay","yr","names","entry","updateTime","drawLine","hideLine","openHelp","showString","distPC","distLY","connecter","connect","lineDrawer","starMessage","v1","v2","LineBasicMaterial","geometry","setFromPoints","fromNP","toNP","fromID","toID","fromSPT","toSPT","distanceTo","isNaN","Kepler","ma","ecc","fma","ea","sinh","fdma","cosh","emin","emax","eaTest","abs","asinh","maTest","iter","maNew","eaNew","eaDelta","smaller","subiter","deltaNew","maX","QOrb","input","doLog","lastT","lastTA","rot","t0","per","precession","precessData","Lm","ep0","fOmega","fNu","dt","dOmega","dNu","updRot","cd","sd","so","co","t","ta","posTA","coords","vTransform","rs","rm","mag","sn","p","getRot","nu","vrad","f","vtan","vtot","vadd","tan","tanh","tmp","atan","taMin","taMax","acos","Parameter","dim","varies","units","ParameterFactory","getParamInfo","SCALAR","VECTOR","MATRIX","determinant3","BLOB","LoadOrigins","gadd","addGenerator","pgen","genParam","generators","M","E","NaN","g","dm","cbrt","sign","em","getScalar","atanh","f1","cross","f2","vec","eccv","ef2","L","vv","vm","omega","POSITIVE_INFINITY","ml","cs","lp","pnode","atan2","m1","pow","pmag","eccm","o","ci","si","tx","EA","descrip","caseConv","legalParameters","variables","constants","fiducial","pt","knownParams","gens","gen","reqs","allFound","xname","param","generate","func","arr","info","baseRender","inp","called","toExponential","addParam","Orbit","newName","conOrVar","flag","have","forEach","addParameter","getName","cycle","updateParam","pn","newComputable","getNames","knowns","deriveParameter","getParameter","qorb","dr","fq","solarSystem","Sol","mass","MV","rotationPhase","rotationPeriod","rotAxis","ra","dec","smallBodiesURL","planets","Mercury","elems","ML","LonP","Omega","derivs","copyright","Venus","Earth","credit","satelliteURL","moonInfo","Moon","moonScale","Eccen","MA","N0","prec","pNu","pOmega","frac","Mars","Phobos","Deimos","Jupiter","corr","Io","Europa","Ganymede","Callisto","Amalthea","Thebe","Adrastea","Metis","Himalia","Elara","Pasiphae","Sinope","Lysithea","Carme","Ananke","Leda","Callirrhoe","Themisto","Megaclite","Taygete","Chaldene","Harpalyke","Kalyke","Iocaste","Erinome","Isonoe","Praxidike","Autonoe","Thyone","Hermippe","Aitne","Eurydome","Euanthe","Euporie","Orthosie","Sponde","Kale","Pasithee","Hegemone","Mneme","Aoede","Thelxinoe","Arche","Kallichore","Helike","Carpo","Eukelade","Cyllene","Kore","Herse","Saturn","ringAngle","transparent","Mimas","Enceladus","Tethys","Dione","Rhea","Titan","Hyperion","Iapetus","Phoebe","Janus","Epimetheus","Helene","Telesto","Calypso","Atlas","Prometheus","Pandora","Pan","Methone","Pallene","Polydeuces","Daphnis","Anthe","Aegaeon","Ymir","Paaliaq","Tarvos","Ijiraq","Suttungr","Kiviuq","Mundilfari","Albiorix","Skathi","Erriapus","Siarnaq","Thrymr","Narvi","Aegir","Bebhionn","Bergelmir","Bestla","Farbauti","Fenrir","Fornjot","Hati","Hyrrokkin","Kari","Loge","Skoll","Surtur","Jarnsaxa","Greip","Tarqeq","Uranus","Ariel","Umbriel","Titania","Oberon","Miranda","Cordelia","Ophelia","Bianca","Cressida","Desdemona","Juliet","Portia","Rosalind","Belinda","Puck","Perdita","Mab","Cupid","Caliban","Sycorax","Prospero","Setebos","Stephano","Trinculo","Francisco","Margaret","Ferdinand","Neptune","Triton","Nereid","Naiad","Thalassa","Despina","Galatea","Larissa","Proteus","Halimede","Psamathe","Sao","Laomedeia","Neso","Pluto","Charon","Nix","ellipsoid","Hydra","Kerberos","Styx","missions","SolarPlanets","ssData","Per","ringColor","elements","diameter","pname","getElements","orb","quickOrbit","parseMPCData","startTime","mpcdata","nskip","nhyper","nAst","nCom","unknowns","Name","Designation_and_name","Orbit_type","Peri","Node","Year_of_perihelion","mon","Month_of_perihelion","Day_of_perihelion","t1970","setDate","peridist","Perihelion_dist","epoch","Epoch","orbit","H","loadMPCData","OrbitPlot","orbitR","orbitXYZ","points","pi","Planet","start","qorbit","wireFrame","useSize","ratio","log10","sphere","ret","Ring","_inverseMatrix","_ray","Ray","_sphere","Sphere","_position","AngPoints","PointsMaterial","updateMorphTargets","maxAngSq","source","matrixWorld","drawRange","boundingSphere","computeBoundingSphere","applyMatrix4","ray","intersectsSphere","invert","isBufferGeometry","positionAttribute","attributes","il","min","count","getX","fromBufferAttribute","testPoint","error","morphAttributes","morphAttribute","undefined","morphTargetInfluences","morphTargetDictionary","String","morphTargets","Object3D","point","localThresholdSq","rayPointDistanceSq","distanceSqToPoint","origin","distanceToSquared","intersectPoint","closestPointToPoint","distance","face","prototype","isPoints","SmallBodies","smbData","colorLookup","getPositions","px","allTypes","colors","h","col","c3","fac","getColors","sizeAttenuation","vertexColors","Sun","sunSize","sunColor","sunWire","sunSegments","sunSegements","sunName","sunPosition","SecondaryOrbit","primary","secondary","secScale","prime","sec","pstate","sstate","ChainedOrbit","orbits","usePrior","useSubseq","norbit","isPrior","isSubseq","interp","stopTime","stop","norbits","r0","setOrbit","curr","f0","r1","chainDescrip","chain","prior","setPrior","subseq","setSubseq","sat","planet","porb","planetOrb","addOrbit","Missions","miss","createChain","ConeGeometry","SolarSystem","addSun","addPlanets","addSmallBodies","optionState","matched","endsWith","test","isAnimation","entries","nearby","findBody","planetBody","xi","planetData","getOrbit","orbitLine","ringElement","smbCallback","addBody","openParams","userBody","Satellite","textShowing","planetOrbit","sunlight","DirectionalLight","AmbientLight","createSatellite","moon","createSphere","satelliteOrbit","phase","CoordTrans","ang","sin_dg","cos_dg","alphaG","deltaG","lonE","vx","toVector","transform","vy","vz","cos_d","sin_d","cos_delta","sin_delta","sin_b","asin","num","denom","RADIAN","crd","result","name_or_angles","transformations","coordDefs","eqgal","eqec","galeq","eceq","ecgal","galec","TransformedOrbit","transforms","trans","multi","Satellites","satData","toUpperCase","SatPrecession","rE","mE","e2","cos_i","sin_i","NoradReader","parseLines","satp","addPrecession","latestEpoch","parseNorad","smallestA","l0","l1","l2","desig","yday","parseFloat","inclination","ascNode","argPerigee","mm","idays","leap","days","PlanetarySystem","moons","planetName","eceqE","getCoords","angs","eqEeqP","addTransform","castShadow","createPlanet","addMoons","addSatellites","moonName","md","morb","getMoonOrbit","lapTrans","rad","texturedSphere","rendering","pData","planetRadius","moonData","mElems","addStructure","baseTime","letter","sub","singleton","cache","available","capName","UnitLegend","Units","row","cycleUnits","hidden","status","Row","validated","unitIndex","parameter","showingUnit","computed","values","initVal","replace","pop","getDftUnit","genValues","renderToUnit","validate","valuesArr","dispScalar","getVector","dispVector","prefix","cname","align","handleChange","dispVal","Debug","r2","diff","datetime","voy","OrbitCalculator","fixed","fixedRef","variesRef","orbitName","displayCount","doRef","setOrbitName","colSpan","compute","displayOrbit","clearAll","clearVarying","clear","rows","all","concat","updated","totalUpdates","newPar","setParameter","getOrbitName","orbitCount","mrat","amim","addExternalOrbit","App","appKey","dx","dy","style","onWindowResize","solar","setUserControls","GLOBALS","win","opener","setAnimFactory","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.c25fc455.chunk.js","sourcesContent":["\r\nclass Constants {\r\n    \r\n    //// Physics and Astronomy\r\n    \r\n    /** Product of  G and MSun which is known better than either individually. */\r\n    static GMSun = 1.32712440018e20;   // [m3/s2] \r\n    \r\n    /** Gravitational constant. */\r\n    static G     = 6.6743E-11;         // [m3/kg/s2]\r\n    \r\n    /** The mass of the sun */\r\n    static MSun  = Constants.GMSun/Constants.G;            // [kg] 1.989E30;\r\n    \r\n    /** Mass of the earth */\r\n    static MEarth = 1/332946.0487 * Constants.MSun;\r\n    \r\n    /** The length of an astronomical unit */\r\n    static AU    = 149597870700.;      // [m]    \r\n    \r\n    /** Length of century...  assuming 24.25 leap days/century */\r\n    static CENTURY = (365*100 + 24.25)*86400; // [s] \r\n    \r\n    /** Julian day of 2000-01-01 */\r\n    static JD0 = 2451544.5;                   // [days]\r\n    \r\n    /** Unix epoch of 2000-01-01, need to worry about time zone  */\r\n    static UTCDate(year, month, day) {\r\n        let date = new Date();\r\n        date.setUTCFullYear(year);\r\n        date.setUTCMonth(month-1);  // Remember difference.\r\n        date.setUTCDate(day);\r\n        date.setUTCHours(0);\r\n        date.setUTCMinutes(0);\r\n        date.setUTCSeconds(0);\r\n        date.setUTCMilliseconds(0);\r\n        return date;\r\n    }\r\n    \r\n    static MJD(time) {\r\n        return time/86400 + Constants.JD0;\r\n    }\r\n    \r\n    static MJDtime(mjd) {\r\n        return 86400 * (mjd-Constants.JD0);\r\n    }\r\n    \r\n    static Epoch0 = Constants.UTCDate(2000, 1, 1).getTime()/1000;   // [s] \r\n    \r\n    /** Diameter of the Sun */\r\n    static dSun = 1.392e9;  // m \r\n    \r\n    /** Radius of the Earth */\r\n    static rEarth = 6.3781e6; // m\r\n    \r\n    static SOLAR_DAY    = 86400;      // s\r\n    static SIDEREAL_DAY = 86164.0905; // s \r\n    \r\n    // Angle of Earth's rotation at 2000.0\r\n    static SIDEREAL_ANGLE_AT_EPOCH = 175.1731379442;   // d (from http://neoprogrammics.com/sidereal_time_calculator/index.php\r\n \r\n    //// Programmatic constants\r\n    \r\n    /** Criterion for planar orbit (to prefer periapsis vector to line of nodes) */\r\n    static PLANAR_RATIO = 1.e-10;\r\n    \r\n    /** Criterion for radial (1-e) or circular (e) orbit. */\r\n    static SHAPE_RATIO = 1.e-10;\r\n        \r\n    /** Delta required to halt Newton-Raphson.  Note that you\r\n     *  can just use the values for angles in radians without scaling.\r\n     */\r\n    static  HALT_RATIO = 1.e-12;\r\n    \r\n    \r\n    // Units\r\n    static radUnits = [{unit: \"au\", scale: Constants.AU}, {unit: \"km\", scale: 1000}, {unit: \"m\", scale: 1}, \r\n                  {unit: \"rE\", scale: Constants.rEarth}];\r\n\r\n    static angUnits =  [{unit: \"d\", scale: Math.PI/180}, {unit: \"rad\", scale:1}];\r\n\r\n    static timeUnits = [{unit: \"day\",    scale: 86400}, {unit: \"s\", scale:1}, \r\n                   {unit:\"jd\", scale: 86400, offset: Constants.JD0}];\r\n\r\n    static velUnits = [{unit: \"au/day\", scale: Constants.AU/86400}, \r\n                       {unit: \"km/s\", scale: 1000}, {unit: \"m/s\", scale: 1}];\r\n                   \r\n    static massUnits = [{unit: \"Ms\", scale: Constants.MSun}, {unit: \"Me\", scale: Constants.MEarth},\r\n        {unit:\"kg\", scale: 1}];\r\n    \r\n    static intervUnits = [{unit: \"day\", scale: 86400}, {unit: \"y\", scale: 31558149.76}, \r\n                         {unit: \"s\", scale: 1}];\r\n\r\n}\r\n\r\nexport default Constants;","import Constants from \"../std/Constants.js\";\r\n\r\nclass Util {\r\n    \r\n    static log() {\r\n        var msg = \"\";\r\n        var div = \"\";\r\n        for (var i=0; i<arguments.length; i += 1) {\r\n            msg += div + arguments[i];\r\n            div = \" \";\r\n        }\r\n        console.log(msg);\r\n    }\r\n    \r\n    static determinant3(a) {\r\n        const x =  a[0][0]*( (a[1][1]*a[2][2]) - (a[1][2]*a[2][1]) );\r\n        const y = -a[0][1]*( (a[1][0]*a[2][2]) - (a[1][2]*a[2][0]) );\r\n        const z =  a[0][2]*( (a[1][0]*a[2][1]) - (a[1][1]*a[2][0]) );\r\n        return x+y+z;\r\n    }    \r\n    \r\n    static mag(a) {\r\n        var sum = 0;\r\n        for (var c in a) {\r\n            sum += a[c]*a[c];\r\n        }\r\n        return Math.sqrt(sum);\r\n    }\r\n    \r\n    static dot(a, b) {\r\n        if (a.length !== b.length) {\r\n            throw new Error(\"Incompatible vectors in dot product\");\r\n        }\r\n        var sum = 0;\r\n        for (var i=0; i<a.length; i += 1) {\r\n            sum += a[i]*b[i];\r\n        }\r\n        return sum;\r\n    }\r\n    \r\n    static times(a, b) {\r\n        // We support \r\n        //    scalar*vector\r\n        //    matrix*vector\r\n        //    matrix*matrix\r\n        \r\n        if (!Array.isArray(b)) {\r\n            throw new Error(\"Second element in times is scalar, not vector or matrix\");\r\n        }\r\n        \r\n        \r\n        if (!Array.isArray(a)) {\r\n            return b.map(x => a*x);\r\n        }\r\n        \r\n        var a0 = a[0];\r\n        // Check that the first element is a matrix\r\n        if (!Array.isArray(a0)) {\r\n            throw new Error(\"First element in times not scalar or matrix\");\r\n        }\r\n                \r\n        if (!Array.isArray(b[0])) {\r\n            \r\n            // Second element is vector so multiply it by matrix\r\n            return [\r\n                Util.dot(a[0], b),\r\n                Util.dot(a[1], b),\r\n                Util.dot(a[2], b)\r\n            ];\r\n        } else {\r\n            // Second element is matrix, so we do matrix multiply here.\r\n            var z = [];\r\n            for (var i=0; i<3; i += 1) {\r\n                z[i] = Util.times(a, b[i]);\r\n            }\r\n            return z;\r\n        }\r\n    }\r\n    \r\n    // Get a row vector from a matrix (given as a vector of columns)\r\n    static rvec(a, n) {\r\n        var res =  [a[0][n], a[1][n], a[2][n]];\r\n        return res;\r\n    }\r\n                \r\n    static diff(a,b) {\r\n        if (a.length != b.length) {\r\n            throw new Error(\"vectors differ in length\");\r\n        }\r\n        const res = [];\r\n        for (let i=0; i<a.length; i += 1) {\r\n            res[i] = a[i] - b[i];\r\n        }\r\n        return res;\r\n    }\r\n\r\n    // Add two vectors.\r\n    static vadd(a, b) {\r\n        if (a.length !== b.length) {\r\n            throw new Error(\"Incompatible vectors in add\");\r\n        }\r\n        var res = [...a];\r\n        for (var i=0; i < res.length; i += 1) {\r\n            res[i] += b[i];\r\n        }\r\n        return res;\r\n    }\r\n    \r\n    // Cross product of two vectors.\r\n    static cross(a, b) {\r\n        \r\n        return [\r\n           a[1]*b[2] - a[2]*b[1],\r\n          -a[0]*b[2] + a[2]*b[0],\r\n           a[0]*b[1] - a[1]*b[0]\r\n        ];\r\n    }\r\n\r\n    // Rotation matrix for a rotation of the given angle around the specified axis.\r\n    static rot(angle, axis) {\r\n        \r\n        var a,b,c;\r\n        switch (axis) {\r\n            case \"x\":\r\n                a=1;\r\n                b=2;\r\n                c=0;\r\n                break;\r\n            case \"y\":\r\n                a=0;\r\n                b=2;\r\n                c=1;\r\n                break;\r\n            case \"z\":\r\n                a=0;\r\n                b=1;\r\n                c=2;\r\n                break;\r\n            default: throw new Error(\"Unknown axis\");\r\n        }\r\n        \r\n        var m = [[0,0,0],[0,0,0],[0,0,0]];\r\n        \r\n        m[c][c] = 1;\r\n        m[b][b] =  m[a][a] = Math.cos(angle);\r\n        m[a][b] =  Math.sin(angle);\r\n        m[b][a] = -m[a][b];\r\n        return m;\r\n    }\r\n    \r\n    static toRadians = function(a) {\r\n        return a*Math.PI/180;\r\n    }\r\n    \r\n    static toDegrees = function(a) {\r\n        return a*180/Math.PI;\r\n    }\r\n\r\n    static printMatrix(a) {\r\n        Util.log(\"Matrix: \");        \r\n        for (var i=0; i<3; i += 1) {\r\n            Util.log(\"    \"+a[0][i].toFixed(5)+\" \"+a[1][i].toFixed(5)+\" \"+a[2][i].toFixed(5));            \r\n        }\r\n    }\r\n\r\n    // Enter a UTC date and return seconds\r\n    // since 2000\r\n    static datetime(str) {\r\n        let flds   = str.split(\"T\");\r\n        let dtflds = flds[0].split(\"-\");\r\n        let tmflds = flds[1].split(\":\");\r\n        let date = new Date();\r\n        date.setUTCFullYear(dtflds[0]);\r\n        date.setUTCMonth   (dtflds[1]-1); // Stupid!!\r\n        date.setUTCDate    (dtflds[2]);\r\n        \r\n        date.setUTCHours   (tmflds[0]);\r\n        date.setUTCMinutes (tmflds[1]);\r\n        if (tmflds[2]) {\r\n            date.setUTCSeconds(tmflds[2]);\r\n        } else {\r\n            date.setUTCSeconds(0);\r\n        }\r\n        date.setUTCMilliseconds(0);\r\n        return date.getTime()/1000 - Constants.Epoch0;        \r\n    }\r\n}\r\n\r\nexport default Util;","import Util from \"../std/Util.js\";\n\nconst Settings = {};\n\nfunction parseURL() {\n    Util.log(\"Parsing settings\");\n\n    const url = window.location.href;\n    if (url.indexOf(\"?\") >= 0) {\n        let data = url.substring(url.indexOf(\"?\")+1);\n        let flds = data.split(\"&\");\n        for (let i=0; i<flds.length; i += 1) {\n            let token = flds[i];\n            if (token.indexOf(\"=\") > 0) {\n                let keyVal = token.split(\"=\", 2);\n                let key = decodeURIComponent(keyVal[0]);\n                let val = decodeURIComponent(keyVal[1]);\n                Settings[key] = val;                \n            } else {\n                token = decodeURIComponent(token);\n                Settings[token] = true;\n            }\n        }\n    }\n}\n\nparseURL();\n\nexport default Settings;\n\n\n","function Dump(obj, label, maxLevel) {\n    function recurse(obj, label, level, maxLev) {\n        var indent = \"                                        \".substring(0, 4 * level);\n        var str = indent;\n        if (label) {\n            str += label + \":\";\n        }\n        if (obj === null) {\n            str += \"null\";\n        } else if (obj === undefined) {\n            str += \"undefined\";\n        } else {\n            var type = typeof (obj);\n            if (type === \"string\") {\n                str += \"'\" + obj + \"'\";\n            } else if (type === 'number' || type === 'boolean') {\n                str += obj;\n            } else if (type === 'function') {\n                str += \"function\";\n            } else if (type === 'array') {\n                str += \"[\";\n                var len = obj.length;\n                if (len > this.maxArray) {\n                    len = this.maxArray;\n                }\n                if (level >= maxLev) {\n                    len = 0;\n                }\n                if (len > 0) {\n                    str += \"\\n\";\n                }\n                for (var i = 0; i < len; i += 1) {\n                    str += recurse(obj[i], \"\", level + 1, maxLev) + \"\\n\";\n                }\n                if (len < obj.length) {\n                    str += \"...\\n\";\n                }\n                if (len > 0) {\n                    str += indent;\n                }\n                str += \"]\";\n            } else {\n                // Object\n                str += \"{\";\n                if (level < maxLev) {\n                    str += \"\\n\";\n                    var keys = Object.keys(obj);\n                    keys.sort();\n                    for (var i = 0; i < keys.length; i += 1) {\n                        var zz = keys[i];\n                        str += recurse(obj[zz], zz, level + 1, maxLev) + \"\\n\";\n                    }\n                    str += indent;\n                } else {\n                    str += \"...\";\n                }\n                str += \"}\";\n            }\n        }\n        return str;\n    }\n\n    if (!maxLevel) {\n        maxLevel = 2;\n    }\n    console.log(recurse(obj, label, 0, maxLevel));\n}\n\nexport default Dump;\n\n\n","/**\n * This class defines the framework in which animations are displayed.\n * We use a single framework for all animations.\n */\nimport {PerspectiveCamera, WebGLRenderer, Raycaster} from \"three\";\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\n\nimport Util from \"../std/Util.js\";\nimport Dump from \"../std/Dump.js\";\nimport Constants from \"../std/Constants.js\";\n\nclass Frame {\n \n    \n    // Build the orrery frameword. \n    // The OrreryBuilder will actually add the components to\n    // the orrery.\n    \n    constructor(inputs) {\n        const defaults = {            \n            camera:       null,  // The camera associated with the frame\n            renderer:     null,  // The renderer used\n            controls:     null,  // The controls used                                  \n            animation:    null,   // The animation being run\n            userControls: null  // User control widget.                                    \n        };\n        \n        for (var key in defaults) {\n            this[key] = defaults[key];\n        }\n        \n        this.mouseTime = null;\n        \n        // Override defaults.\n        if (inputs) {\n            for (var key in inputs) {\n                this[key] = inputs[key];\n            }\n        }\n        \n        this.startedRun       = false;\n        \n        this.setupTHREE(this.animDiv);\n        \n        this.renderer.domElement.addEventListener(\"longClick\",\n          this.longClickEvt.bind(this));\n          \n        this.renderer.domElement.addEventListener(\"dblclick\",\n          this.dblClickEvt.bind(this));\n    }        \n    \n    // Recall that the event with mouse information is\n    // in the detail of the longClick event.\n    longClickEvt(e) {\n        // We want this to be handled by the current animation\n        // so yse the current doLongClick handler.\n        if (this.animation.doLongClick) {\n           this.animation.doLongClick(e.detail);\n        }\n    }\n        \n    dblClickEvt(e) {\n        this.animation.doLongClick(e);\n    }\n    \n    setUserControls(controls) {\n        this.userControls = controls;\n    }\n    \n    setAnimation(anim) {\n        \n        if (this.animation) { \n            // Save the camera state of the current animation\n            // before going to the new animation.  If we come\n            // back we'll restore it.\n            this.animation.cameraPos  = this.camera.position.clone();\n            this.animation.cameraRot  = this.camera.rotation.clone();\n            if (this.controls.target) {\n                this.animation.cameraTarget = this.controls.target.clone();\n            }\n        } else {\n            Util.log(\"Starting initial animation \",anim.name);\n        }\n        this.animation = anim;\n        \n        this.camera.position.copy(anim.cameraPos);\n        this.camera.rotation.copy(anim.cameraRot);\n        if (anim.cameraTarget) {\n            this.controls.target.copy(anim.cameraTarget);\n        }\n        \n        this.camera.updateProjectionMatrix();        \n        this.userControls.setAnimation(anim);\n        \n        let showOptions = false;\n        if (anim.initialShowOptions) {\n            showOptions = true;\n        }\n        \n        this.userControls.setState({options: this.empty,\n                                   showingOptions: showOptions})\n            \n        if (!this.startedRun) {\n            this.run();\n        }\n    }\n        \n    // Run the animations.  Note that when\n    // we change animations, the underlying this.animation will\n    // change, but we are still using the same frame and sequence\n    // of render calls so we should only call this once.\n    run (){\n        \n        if (this.startedRun) {\n            Util.log(\"Attempt to start second animation run\");\n            console.trace();\n            return;\n        }\n        \n        this.startedRun = true;\n        // Save context for render\n        const here   = this;\n        var cnter = 0;        \n        const render = function () {\n            cnter += 1;\n            \n            requestAnimationFrame(render);\n            if (here.animation.loading) {\n                Util.log(\"Loading \"+here.animation.name);\n\n            } else {\n                here.animation.update();\n                here.controls.update(1);\n                here.renderer.render(here.animation.scene, here.camera);\n            }\n        }\n        render();\n    }\n    \n    mouseTimeDown() {\n        if (!this.mouseTime) {\n            this.mouseTime = Date.now();\n        }\n    }\n    \n    mouseTimeUp(e) {        \n        if (!this.mouseTime) {\n        } else if (this.animation.longClickTime) {\n            if ((Date.now() - this.mouseTime) > this.animation.longClickTime) {\n                this.renderer.domElement.dispatchEvent(\n                   new CustomEvent(\"longClick\", {detail:e})\n                );               \n            }\n        }\n        this.mouseTime = null;\n    }\n    \n    // Define the THREE.js framework.\n    setupTHREE(div) {\n        \n        var elem;\n        if (div) {\n            elem = document.getElementById(div);\n        }\n        if (!elem) {\n            elem = document.body;\n        }\n        \n        this.camera   = new PerspectiveCamera( this.cameraFoV, 1, this.camNear, this.camFar );\n        this.renderer = new WebGLRenderer({antialias: true});\n\n        this.renderer.setClearColor(\"#050505\");\n        \n        this.renderer.setSize(this.size[0], this.size[1]);\n        this.resize(this.size[0], this.size[1]);\n\t\t\n        this.controls = new OrbitControls (this.camera, this.renderer.domElement);\n        this.raycaster = new Raycaster();\n        this.raycaster.params.Line   = { threshold: .12 };\n\tthis.raycaster.params.Points = { threshold: .05 };\n        this.raycaster.near = 0;\n        this.raycaster.far  = 500;\n        \n        elem.appendChild(this.renderer.domElement);\n        \n        const canvas = this.renderer.domElement;\n        \n        canvas.addEventListener(\"mouseup\",        this.mouseTimeUp.bind(this));\n        canvas.addEventListener(\"mousedown\",      this.mouseTimeDown.bind(this));\n        canvas.addEventListener(\"click\",          this.clickListener.bind(this));\n    }\n    \n    clickListener(e) {\n        let res = this.raycast(e);\n        this.animation.raycastResult(res);\n    }\n    \n    // This method take an event and uses the mouse position to look for\n    // nearby objects.  The intersecting or nearby objects are returned.\n    \n    raycast(e) {\n        \n        // 1. sets the mouse position with a coordinate system where the center\n        //    of the screen is the origin\n        const canvas = this.renderer.domElement;\n        var rect = canvas.getBoundingClientRect();\n        const x = Math.floor( ( e.clientX - rect.left ) / ( rect.right - rect.left ) * canvas.width );\n        const y = Math.floor( ( e.clientY - rect.top ) / ( rect.bottom - rect.top ) * canvas.height );\n        \n        const mouse = {};\n        mouse.x =   ( x / canvas.width ) * 2 - 1;\n        mouse.y = - ( y/ canvas.height ) * 2 + 1;\n\n        //2. set the picking ray from the camera position and mouse coordinates\n        this.raycaster.setFromCamera( mouse, this.camera ); \n\n        //3. compute intersections\n        var intersects = this.raycaster.intersectObjects( this.animation.scene.children, true );\n\n        const found = {};\n        for ( var i = 0; i < intersects.length; i++ ) {\n            \n            const inter = intersects[i];\n            var name    = inter.object.elementName;\n            // A composite object may have different names\n            // associated with each index.\n            if (inter.object.getIndexedName) {\n                // Points use index, InstancedMesh's using instanceId\n                const index = inter.index  || inter.instanceId;\n                name = inter.object.getIndexedName(index);\n            }\n            if (found[name]) {\n                if (inter.distanceToRay < found[name]) {\n                    found[name] = inter.distanceToRay;\n                }\n            } else {\n                found[name] = inter.distanceToRay;\n            }\n        }\n        return found;\n    }\n    \n    // Respond to a resize in the window.\n    resize(width, height) {\n        if (!this.camera || ! this.renderer) {\n            Util.log(\"Frame.resize called prematurely\");\n            return;\n        }\n        this.camera.aspect = width / height;\n        this.camera.updateProjectionMatrix();\n        this.renderer.setSize( window.innerWidth, window.innerHeight );\n    }\n};\n\nexport default Frame;","import {Component} from 'react';\nimport Util from \"../std/Util.js\";\nclass UserControls extends Component {\n    constructor(props) {\n        super(props);\n        this.animation = null;\n        this.empty = <div></div> ;\n        this.state = {\n            options: this.empty,\n            showingOptions: false,\n            running: true\n        };\n    }\n    \n    setAnimation(anim) {\n        this.animation = anim;\n        this.setState({running: !anim.paused});\n    }\n    \n    timeClick(e) {\n        if (!this.animation) {\n            return;\n        }\n        const cx = e.clientX;\n        const cy = e.clientY;\n        const targ = e.currentTarget;\n        const rect = targ.getBoundingClientRect();\n        const pos = (e.clientX - rect.left ) / ( rect.right - rect.left );\n        var ind = 0;\n        if (pos > 0.2 && pos <= 0.45) {\n            ind = 1;\n        } else if (pos > 0.45 && pos <= 0.67) {\n            ind = 2;\n        } else if (pos > 0.67) {\n            ind = 3;\n        }\n        // 0 = reverse, 1 = pause/restart, 2 = slower, 3 = faster\n        if (this.state.running) {\n            switch(ind) {\n                case 0: { this.animation.reverse(); break}\n                case 1: { this.animation.pauseStart(); break}\n                case 2: { this.animation.speed(false); break}\n                case 3: { this.animation.speed(true); break}\n            }\n        } else {\n            if (ind == 1) {\n                this.animation.pauseStart();\n            }\n        }\n        if (ind == 1) {\n            this.setState({running: !this.state.running});\n        }\n    }\n    \n    \n    optionClick() {\n        const newShow = !this.state.showingOptions;\n        if (!this.animation) {\n            return;\n        }\n        \n        \n        if (newShow) {\n            var animOptions = this.animation.options(this, \"optBox\");            \n            this.setState({options: animOptions, showingOptions: true});\n        } else {\n            this.setState({options: this.empty,\n                showingOptions: false});\n        }\n    }\n    \n    render() {\n        const here = this;\n        var img = this.state.running? 'runningT.png': 'stoppedT.png';\n        return (\n          <div className='glasspane'>\n            <div>\n              <img onClick={here.timeClick.bind(here)} height='38' width='86' id='speedButtons' src={img}/>\n              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n              <img onClick={here.optionClick.bind(here)} height='38' src='dotsT.png' />   \n            </div>                  \n            <strong>Time:</strong>\n            <span id=\"timeDisplay\"></span>\n            {this.state.options}\n            <div  id=\"clickTarget\"></div>\n          </div>\n        );\n    }\n}\n\nexport default UserControls;\n","import { BufferGeometry } from 'three';\nimport { Float32BufferAttribute } from 'three';\nimport { Vector2 } from 'three';\nimport { Vector3 } from 'three';\n\n// Tried to update the UV mapping.\n\nclass RingGeometry extends BufferGeometry {\n\n\tconstructor( innerRadius = 0.5, outerRadius = 1, thetaSegments = 8, phiSegments = 1, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'RingGeometry';\n\n\t\tthis.parameters = {\n\t\t\tinnerRadius: innerRadius,\n\t\t\touterRadius: outerRadius,\n\t\t\tthetaSegments: thetaSegments,\n\t\t\tphiSegments: phiSegments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthetaSegments = Math.max( 3, thetaSegments );\n\t\tphiSegments = Math.max( 1, phiSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// some helper variables\n\n\t\tlet radius = innerRadius;\n\t\tconst radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= phiSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= thetaSegments; i ++ ) {\n\n\t\t\t\t// values are generate from the inside of the ring to the outside\n\n\t\t\t\tconst segment = thetaStart + i / thetaSegments * thetaLength;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = (radius-innerRadius)/(outerRadius-innerRadius);\n\t\t\t\tuv.y = segment/Math.PI/2;\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t}\n\n\t\t\t// increase the radius for next row of vertices\n\n\t\t\tradius += radiusStep;\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let j = 0; j < phiSegments; j ++ ) {\n\n\t\t\tconst thetaSegmentLevel = j * ( thetaSegments + 1 );\n\n\t\t\tfor ( let i = 0; i < thetaSegments; i ++ ) {\n\n\t\t\t\tconst segment = i + thetaSegmentLevel;\n\n\t\t\t\tconst a = segment;\n\t\t\t\tconst b = segment + thetaSegments + 1;\n\t\t\t\tconst c = segment + thetaSegments + 2;\n\t\t\t\tconst d = segment + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new RingGeometry( data.innerRadius, data.outerRadius, data.thetaSegments, data.phiSegments, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\n\nexport { RingGeometry, RingGeometry as RingBufferGeometry };\n","/** An animation is a scene comprised of elements\n * whose state varies with time. This class addresses non-scene specific management\n * of the animation. \n */\n\nimport {Scene, Vector3, Euler} from \"three\";\nimport {Mesh, TextureLoader, Color, MeshPhongMaterial} from \"three\";\nimport {SphereGeometry, \n        MeshLambertMaterial, MeshBasicMaterial, DoubleSide} from \"three\";\n    \nimport {RingGeometry} from \"../three/RingGeometry.js\";  // Local Override to change UV mapping\n\nimport Util        from \"../std/Util.js\";\nimport Settings    from \"../std/Settings.js\";\nimport Constants   from \"../std/Constants.js\";\n\nclass Animation {\n    \n    // Set defaults and create basic Three framework\n    constructor(inputs) {\n        \n        // Defaults\n        const startup = {\n            cameraPos:     new Vector3(0,0,6),      // Initial position of camera\n            cameraRot:     new Euler(0,0,0,\"XYZ\"),  // Initial rotation.\n            \n            cameraFoV:     75,       // Width of field of view.\n            camNear:       0.0001,   // Nearest object we can see\n            camFar:        2000.,    // Most distant object we can see\n            \n            sceneElements: {},       // The elements that comprise the scene.\n            \n            paused:        false,    // Has the user paused the time updates?\n            runOne:        false,    // Run a single animation frame, then stop.\n            \n            counter:       0,        // The number of renders    \n            time:          Date.now()/1000 - Constants.Epoch0,  // The current time\n            \n            segments:      40,        // How many segments when drawing spheres.\n            \n            delta:         21600,     // The interval between steps (in seconds=6 hours)\n            scene:         new Scene(), // The scene that holds this animation.\n            name:          \"Generic\", // Place holder name\n            quiet:         false,     // Can suppress messages about loading components.\n            loading:       false      // Set if something needs to be loaded before display\n        };\n \n        // Set defaults\n        for (var key in startup) {\n            this[key] = startup[key];\n        }\n        \n        // Override defaults.\n        if (inputs) {\n            for (var key in inputs) {\n                this[key] = inputs[key];\n            }\n        }\n        \n        // Specify where the time is to be displayed.\n        if (this.timeID) {\n            this.timeElem = document.getElementById(this.timeID);\n        }\n        \n        this.settings = Settings;\n\n    }\n\n    // Update the content of the animation for the next frame.\n    // This does not do the animation, it only does any updates\n    // needed to do the rendering.\n    update (){\n        this.counter += 1;\n        \n        if (!this.paused) {\n            this.time += this.delta;\n            this.updateElements();\n        }\n    }\n    \n    // Update each element that has been added to the animation.\n    updateElements() {\n        for (var key in this.sceneElements) {\n            \n            // If the element has a function to be called for\n            // each rendering call it with the curren time.\n            var rfunc = this.sceneElements[key].render;\n            if (rfunc) {\n                rfunc(this.time);\n            }\n        }\n    }\n\n    // Add an element to the animation\n    // The sceneElement has three components:\n    //     name: A name (often the first as the elemName argument)\n    //     component: An element to be rendered in the scene\n    //         (optional: e.g., the time rendering has no associated three.js component)\n    //     render: A function to be called before doing the render.\n    //         (optional: e.g., a static component like the Sun may not need any updating.)\n    //   \n    addElement(elemName, sceneElement) {\n        \n        if (this.sceneElements[elemName]) {\n            Util.log(\"Attempt to duplicate element \"+elemName+\" in \"+this.name);\n            return;\n        }\n        this.sceneElements[elemName] = sceneElement;\n        if (sceneElement.component) {\n            sceneElement.component.elementName = elemName;\n            this.scene.add(sceneElement.component);\n        }\n        \n        // If adding lots of components, may wish to set quiet flag.\n        if (!this.quiet) {\n            Util.log(\"Added element #\"+Object.keys(this.sceneElements).length+\": \"+elemName+\" to \"+this.name);\n        }\n    }\n    \n    // Remove an element from the scene (permanently).\n    removeElement(elemName) {\n        if (!this.sceneElements[elemName]) {\n            Util.log(\"Request to delete non-existent element \"+name+\" of \"+this.name);\n            return;\n        }\n        this.scene.remove(this.sceneElements[elemName].component);\n        if (!this.quiet) {\n            Util.log(\"Removed element \"+elemName+\" of \"+this.name);\n        }\n        \n    }\n\n    // Change the time interval between frames.\n    speed(faster) {\n        if (faster) {\n            this.delta *= Math.sqrt(2);\n        } else {\n            this.delta /= Math.sqrt(2);\n        }\n    }\n \n    // Reverse the sign of the time intervals.\n    reverse() {\n        this.delta *= -1;\n    }\n    \n    // Pause or restart the animation.\n    pauseStart() {\n        this.paused      = !this.paused;\n    }\n    \n    // Set the time for the animation (in seconds since 2000)\n    setTime(time) {                \n        this.time   = time;\n        this.updateElements();\n    }\n \n    // Open the help window.\n    openHelp() {\n        window.open(\"help_top.html\", \"help\");\n    }\n\n    // Open the orbit params window.  Note that since\n    // this window shares code with the animation window,\n    // we actually call the same base URL and distinguish\n    // the window with a CGI parameer.\n    openParams() {\n        window.open(\"?app=OrbParams\", \"params\");\n    }\n\n    // Set the animation to be used to a new animation.\n    setAnim(animation) {        \n        const anim = this.frame.animFactory.getAnimation(animation, {frame: this.frame, timeID: this.timeID});\n        this.frame.setAnimation(anim);\n    }\n\n    // Reset the time given an unparsed input.\n    // Different children may have different parseTime methods.\n    updateTime(time) {\n        var newTime = this.parseTime(time);\n        this.setTime(newTime);\n    }\n    \n    // The default time parser which uses the \n    // funky JavaScript Data.parse function.\n    parseTime(time) {\n        if (!time || time.length < 4) {\n            return;\n        }\n        if (time.indexOf(\":\") < 0) {\n            // Kludge that fixes a particular browser...\n            time += \" 00:00\";\n        }\n        var date = Date.parse(time);\n        if (date) {\n            const newTime = date/1000 - Constants.Epoch0;\n            return newTime;\n        } else {\n            return 0;\n        }       \n    }\n\n    // Add a time display widget to the window.\n    addTimeDisplay() {\n        const here = this;\n        this.addElement(\n                \"Timer\",\n                {name: \"tdisp\",\n                    render: function (time) {\n                        here.timeElem.innerHTML = here.timeFormatter(time);\n                    }\n                });\n    }\n\n    // Format a time given the time in seconds since 2000.\n    timeFormatter(time) {    \n        const millis = (time / 86400 + Constants.JD0 - 2440587.5) * 86400000;\n        const dateLocal = new Date(millis).toISOString();                       \n        return dateLocal.substring(0,dateLocal.length-5);\n    }\n    \n    // Return a simple options response.\n    options() {\n        return <div>No options available</div>;\n    }\n    \n    \n    // Handle a long click detected in the window.\n    // This default behavior goes to the \"baseAnimation\"\n    // if the user does a longClick in a corner.\n    // Children may do more specialized actions\n    // in response and use super.doLongClick if\n    // none of these seem appropriate.\n    doLongClick(e) {\n        if (this.baseAnimation) {\n            const canvas = this.frame.renderer.domElement;\n            var rect = canvas.getBoundingClientRect();\n            const x = ( e.clientX - rect.left ) / ( rect.right - rect.left );\n            const y = ( e.clientY - rect.top ) / ( rect.bottom - rect.top );\n        \n            if ( ( (x <= .1 ) || (x >= .9) )  &&\n                   (y <= .1 ) || (y >= .9) ) {\n                // This covers just 4 x 0.5*.1*.1 or 2% of the surface of the canvas.\n                this.setAnim(this.baseAnimation);\n            }\n        }\n    }\n    \n    // When loading a texture onto a sphere from a cartesian map,\n    // three.js renders the y axis of the map onto the y axis of the\n    // sphere, while the x and z axes are composed from x axis.\n    // This renders the center of the map at the 'north pole', i.e., maximum z.\n    // Since we want to use the proper coordinate system for the\n    // other system, we need to adjust to initially render\n    // the object and to ensure that we rotate along the appropriate axis.\n\n    createSphere(radius, segments, texture, ring, name) {\n        var mesh;\n        \n        const loader  = new TextureLoader();\n        let map  = null;\n        let bump = null;\n        let spec = null;\n        let specColor = null;\n        if (texture.map) {\n            map  = loader.load(texture.map);\n        }\n        if (texture.bump) {\n            bump = loader.load(texture.bump);\n        }\n        if (texture.spec) {\n            spec = loader.load(texture.spec);\n            specColor = new Color(\"grey\");\n        }\n\n        mesh = new Mesh(\n        new SphereGeometry(radius, segments, segments),\n          new MeshPhongMaterial({\n            map:     map,\n            bumpMap: bump,\n            bumpScale: 0.005,\n            specularMap: spec,\n            specular: specColor\n          })\n        );\n        mesh.rotateX(Math.PI/2);  // Move the pole where it should be!\n        mesh.receiveShadow = true;\n        \n        if (ring) {\n            let map   = new TextureLoader().load(ring.texture.map);\n            let ringG = new RingGeometry(ring.innerRadius, ring.outerRadius, 2*segments);\n            const rMat = \n                new MeshPhongMaterial({\n                   map:         map,\n                   specular:    specColor,\n                   side:        DoubleSide\n                });\n            let ringM = new Mesh(ringG, rMat);\n            ringM.position.set(0,0,0);\n            ringM.rotateX(Math.PI/2);\n            mesh.add(ringM);\n            ringM.elementName = name + \"Ring\";\n            ringM.receiveShadow = true;\n        }\n        return mesh;\n    }\n    \n    raycastResult(results, unit) {\n        if (!unit) {\n            unit = \"\";\n        } else {\n            unit = \"(\"+unit+\")\";\n        }\n        const elem = document.getElementById(\"clickTarget\");\n        var str =\"<hr/><table><tr><th>Object</th><th>Offset \"+unit+\"</th></tr>\";\n        var resArr = [];\n        for (var name in results) {\n            var dist = results[name];\n            if (!dist) {\n                dist = \"-\";\n            } else {\n                dist = dist.toPrecision(2);\n            }\n            resArr.push({name: name, dist: dist});\n        }\n        if (resArr.length > 0) {\n            resArr = resArr.sort(function(a,b) {\n                if (a.dist == b.dist) {\n                    return 0;\n                }\n                if (a.dist === \"-\") {\n                    return -1;\n                }\n                if (b.dist === \"-\") {\n                    return 1;\n                }\n                return a.dist-b.dist;\n            });\n        }\n        for (var i=0; i<resArr.length; i += 1) {\n            if (i == 5) {\n                break;\n            }\n            var name = resArr[i].name;\n            var dist = resArr[i].dist;        \n            str += \"<tr><td>\"+name+\"</td><td>\"+dist+\"</td></tr>\";\n        }\n        str += \"</table>\";\n        if (resArr.length > 5) {\n            str += \"and \"+(resArr.length-5)+\" more\";\n        }\n        \n        elem.innerHTML = str;\n    }\n\n\n};\n\nexport default Animation;","import Util from \"../std/Util\";\n\nfunction loadStars(settings, callback) {\n    let xhr  = new XMLHttpRequest();\n    let file = \"data/galaxy_all.json\";\n    if (settings.galaxy == \"small\") {\n        file = \"data/idp_nearby40pc.json\";\n    }\n    xhr.open('GET', file, true);\n    xhr.onload  = function() {\n        let stars = xhr.responseText;\n        let json = JSON.parse(stars);\n        let zz;\n        for (zz in json) {\n            break;\n        }\n        callback(json[zz]);\n    };\n    xhr.onerror = function() {\n        Util.log(\"Called error function when loading stars!\");\n    }\n    \n    xhr.send(null);\n}\n\nexport default loadStars;\n\n","\nimport Util from \"../std/Util.js\";\nimport Dump from \"../std/Dump.js\";\n\nfunction colorChar(spt) {\n    if (spt == null) {\n        return null;\n    }\n    if (spt.length > 2) {\n        if (spt.startsWith(\"sd\")) {\n            spt = spt.substring(2);\n        }\n    }\n    if (spt.length > 1) {\n        if (spt.startsWith(\"D\")  || spt.startsWith(\"d\")) {\n            spt = spt.substring(1);\n        }\n    }\n    return spt.charAt(0);\n}\n\nfunction getSize(spt) {\n    \n    var sizes = {\n        \"M\": .15,\n        \"K\": .2,\n        \"G\": .25,\n        \"F\": 0.3,\n        \"A\": 0.35,\n        \"B\": 0.4,\n        \"O\": 0.45,\n        \"T\": 0.10,\n        \"Y\": 0.10,\n        \"W\": 0.45\n    }\n    if (!spt) {\n        return 0.01;\n    }\n            \n    let factor = 1;\n    if (spt.startsWith(\"sd\")  || spt.startsWith(\"d\")) {\n        factor *= 0.8;\n    }\n    \n    if (spt.startsWith(\"D\")) {\n        factor *= 0.5; \n    }\n    \n    let cc = colorChar(spt);\n    var size = 0.1;\n    \n    if (sizes[cc]) {\n        size = sizes[cc];\n        size *= factor;\n        if (spt.indexOf(\"IV\") > 0) {\n            size *= 1.3;\n        } else if (spt.indexOf(\"III\")) {\n            size *= 1.5;\n        } else if (spt.indexOf(\"II\")) {\n            size *= 1.7;\n        } else if (spt.indexOf(\"I\")) {\n            size *= 2.0;\n        }\n    }\n    \n    return size * .15;\n}\n\nfunction getColor(spt) {\n\n    var SptColors = {\n        \"M\": 0xff3300,\n        \"K\": 0xffaa66,\n        \"G\": 0xffff00,\n        \"F\": 0xffffaa,\n        \"A\": 0xffffff,\n        \"B\": 0xaaaaff,\n        \"D\": 0x00ff00,\n        \"O\": 0x0000ff,\n        \"s\": 0x00ff00,\n        \"W\": 0x0000FF,\n        \"T\": 0xEADDCA,\n        \"Y\": 0xEADDCA\n    };\n    \n    let col = 0x00FFFF;\n    let cc = colorChar(spt);\n    if (cc && SptColors[cc]) {\n        return SptColors[cc];\n    }\n\n    return col;\n}\n\n// Normally the size and color are derived\n// from the spectral type, but user can\n// supply it directly.\nconst PrepStar = function(star){\n    if (Array.isArray(star.x)) {\n        star.y = star.x[1];\n        star.z = star.x[2];\n        star.x = star.x[0];  // Last to avoid premature overwrite\n    }\n    if ((star.v != null) && Array.isArray(star.v)) {\n        star.u = star.v[0];\n        star.w = star.v[2];\n        star.v = star.v[1];  // Last to avoid premature overwrite\n    }\n    if (star.v == null) {\n        star.u = 0;\n        star.v = 0;\n        star.w = 0;\n    }\n\n    star.size = getSize(star.spt);\n    star.color  = getColor(star.spt);\n        \n    if (star.np > 0) {\n        star.ring = {};\n        var clr = 0x8800CC;\n        if (star.np == 2) {\n            clr = 0x00AAFF\n        } else if (star.np > 2) {\n            clr  = 0x00ff00;\n        }\n        star.ring.color = clr;\n    }\n    \n};\n\nexport default PrepStar;\n\n","import {Component} from \"react\";\nimport Util from \"../std/Util\";\n\n// This is a nothing component, but performs\n// some action when loaded.\nclass Action extends Component {\n    constructor(opts) {\n        super(opts);\n        this.action = opts.action;\n        if (opts.args) {\n            this.args = opts.args;\n        }\n    }\n    \n    render() {\n        return <span/>;\n    }\n    \n    componentDidMount() {\n        Util.log(\"In action:\"+this.action);\n        Util.log(\"   Args:\"+this.args);\n        this.action(this.args);\n    }   \n}\n\nexport default Action\n","import {Component} from \"react\";\nimport Util from \"../std/Util.js\";\n\nclass TextInput extends Component {\n    constructor(props) {\n        super(props);\n        if (props.placeholder) {\n            this.placeholder = props.placeholder;            \n        } else {\n            this.placeholder = \"Input...\";\n        }\n        if (props.callback) {\n            this.callback = props.callback;\n        } else {\n            this.callback = null;\n        }\n        this.state = {value: \"\"};\n    }\n\n    render() {\n        const here = this;\n        return (\n            <input size=\"16\" placeholder={here.placeholder}\n                onKeyUp={\n                  (event) => {\n                    if (event.key === 'Enter'  && here.callback) {\n                        here.callback(event.target.value);                       \n                    }\n                  }\n                }\n            />\n        )\n    }\n}\n\nexport default TextInput;","import {Component} from 'react';\nimport Util from \"../std/Util.js\";\nimport TextInput from \"./TextInput.js\";\n\nclass OptionsSelector extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.nullDiv = <div></div>;                \n        this.state = {\n            options:  [...props.options],\n            direct: props.direct,\n            directContent: props.directContent,\n            selection: {value: null, elem: this.nullDiv}            \n        }\n    }\n    \n    change(evt) {\n        const val = evt.target.value;\n        var   found = false;\n        var   i;\n        for (i=0; i<this.state.options.length; i += 1) {\n            if (this.state.options[i].value === val) {\n                found = true;\n                break;\n            }            \n        }\n        if (found) {\n            const opt = this.state.options[i];\n            this.setState({selection: opt});  \n        }\n    }\n    \n    render() {\n        \n        if (this.state.direct) {\n            return this.state.directContent;\n        }\n        \n        const options = this.state.options.map((elem) =>\n              <option key={elem.value}>{elem.value}</option> )\n        const elem = \n             <div>   \n                <select onChange={this.change.bind(this)} >\n                  {options}\n                </select><br/>\n                {this.state.selection.elem}\n             </div>                \n        ;\n        return elem;\n    }\n}\n\nexport default OptionsSelector;","import {Component, createRef} from \"react\";\nimport Util from \"../std/Util.js\";\n\nclass FromTo extends Component {\n    constructor(props) {\n        super(props);\n        \n        this.fromDft         = props.fromDft        ? props.fromDft:         \"\";\n        this.toDft           = props.toDft          ? props.toDft:           \"\";\n        this.fromPlaceholder = props.fromPlaceholder? props.fromPlaceholder: \"...from...\";\n        this.toPlaceholder   = props.toPlaceholder  ? props.toPlaceholder:   \"...to...\";\n        this.mouseDown       = props.mouseDown;\n        this.mouseUp         = props.mouseUp;\n        this.contentID       = props.contentID? props.contentID : \"CnctCntnt\";\n        this.fromRef         = createRef();\n        this.toRef           = createRef();\n        \n    }\n    \n    mouseDownF(event) {\n        const from = this.fromRef.current.value;\n        const to   = this.toRef.current.value;\n        if (from && from.length > 0 && to && to.length > 0) {\n            if (this.mouseDown) {\n                this.mouseDown(from, to);\n            }\n        }\n        event.stopPropagation();\n    }\n    mouseUpF(event) {\n        if (this.mouseUp) {\n            this.mouseUp();\n        }\n        event.stopPropagation();\n    }\n    \n    render() {\n        const here    = this;\n        const cntntID = this.idPrefix\n        const fromID  = this.idPrefix + \"From\";\n        const toID    = this.idPrefix + \"To\";\n        return (\n          <div>\n            <input ref={this.fromRef} defaultValue={this.fromDft} size=\"12\" placeholder={here.fromPlaceholder}/>\n            <input ref={this.toRef}   defaultValue={this.toDft}   size=\"12\" placeholder={here.toPlaceholder}  />\n            <button \n              onMouseDown={here.mouseDownF.bind(here)}\n              onMouseUp={here.mouseUpF.bind(here)}>Show</button>\n            <br />\n            <div id={this.contentID}></div>\n          </div>\n        );\n    }\n}\n\nexport default FromTo;\n\n\n","import Util from \"../std/Util.js\";\n// Find the position of a Star\nclass StarFinder {\n    \n    constructor(stars) {      \n        this.Stars       = stars;\n        this.simbadCache = {};    \n    }\n    \n    // This may either return after calling the callback\n    // or run the callback asynchronously later, so no further\n    // processing (at least any that depends upon this result)\n    // should be done here.\n    getStar(name, callback) {\n        const nameLC = name.toLowerCase();\n        if (nameLC == \"sun\"  || nameLC == \"sol\") {\n            const star = {\n                id: 0, name:\"Sol\", x:0, y:0, z:0, d:0, spt: \"G2V\", u:0, v:0, w:0, np: 9                \n            };\n            callback(star);\n            return;\n        }\n        // First try the input catalog, then\n        // previous calls to simbad and then finally\n        // try SIMBAD.\n        if (!this.getFromCatalog(name, callback)) { \n            if (!this.getFromSimbadCache(name, callback)) {\n                this.getFromSimbad(name, callback);\n                // This always processes it, but\n                // asynchronously.\n            }            \n        }\n    }\n    \n    \n    getFromCatalog(name, callback) {\n        for (var i=0; i<this.Stars.length; i += 1) {\n            const star = this.Stars[i];   \n            if (name == star.name || name== (\"\"+star.id)  || name==(\"HIP \"+star.id)) {\n                callback(star);\n                return true;\n            }\n        }\n        return false;\n    }\n    \n    getFromSimbadCache(name, callback) {\n        if (this.simbadCache[name]) {\n            callback(this.simbadCache[name]);\n            return true;\n        }\n        return false;\n    }\n    \n    getFromSimbad(name, callback) {\n//        this.setDisplayText(\"Resolving \"+name+\" using SIMBAD\");\n        const xhr = new XMLHttpRequest();\n        const here = this;\n        const xhrHandler = function() {\n            if (xhr.readyState === XMLHttpRequest.DONE) {\n                const simb = here.parseSimbad(name, xhr.responseText);\n                here.simbadCache[name] = simb;\n                callback(simb);\n            }\n        };\n        \n        const nmenc = encodeURIComponent(name);\n        // SIMBAD supports CORS requests.\n        const url   = \n                \"https://simbad.u-strasbg.fr/simbad/sim-id?Ident=\" +        \n                nmenc +\n                \"&NbIdent=1&Radius=.02&Radius.unit=arcmin&submit=submit+id&output.format=ascii&obj.bibsel=off\";\n        \n        xhr.open('GET', url);\n        xhr.onreadystatechange = xhrHandler;\n        xhr.send();  // parseSimbad will be called when we get the data.        \n    }\n    \n    parseSimbad(name, text) {\n        const lines = text.split(\"\\n\");\n        const getTok = function(str, n) {\n            const flds = str.split(/\\s+/);\n            if (flds.length > n) {\n                return flds[n];\n            } else {\n                return null;\n            }\n        }\n        const data = {};\n        data.name = name;\n        var inIds = false;\n        for (var i=0; i<lines.length; i += 1) {\n            const line = lines[i];\n            if (!inIds) {\n                if (line.startsWith(\"Coordinates(Gal\")) {\n                    data.l = getTok(line, 1);\n                    data.b = getTok(line, 2);\n                } else if (line.startsWith(\"Parallax:\")) {\n                    data.d = 1000./Number.parseInt(getTok(line,1));\n                } else if (line.startsWith(\"Proper motions:\")) {  // Note space in label\n                    data.pmr = getTok(line,2);\n                    data.pmd = getTok(line,3);\n                } else if (line.startsWith(\"Radial Velocity:\")) {\n                    data.rv = getTok(line, 2);\n                } else if (line.startsWith(\"Spectral type:\")) {\n                    data.spt = getTok(line,2);\n                } else if (line.startsWith(\"Identifier\")) {\n                    inIds = true;\n                }\n            } else {\n                if (this.setHIP_ID(line, data)) {\n                    break;\n                }\n            }\n        }\n        // Calculate x,y,z from l,b,d.  Can do uvw from d, pmr, pmd and rv,\n        // but there's a lot more math!\n        if (data.l && data.b && data.d) {\n            var l = Math.PI*data.l/180;\n            var b = Math.PI*data.b/180;\n            var d = data.d;\n            data.x = d*Math.cos(l)*Math.cos(b); \n            data.y = d*Math.sin(l)*Math.cos(b); \n            data.z = d*Math.sin(b);\n        }\n        if (data.id) {\n            // Replace with already downloaded information if HIP id's match.\n            for (i=0; i<this.Stars.length; i += 1) {                \n                if (this.Stars[i].id == data.id) {\n                    return this.Stars[i];                    \n                }\n            }\n        }\n        if (!data.id && !data.x) {\n            return null;\n        }\n        return data;\n    }\n    \n    setHIP_ID(line, data) {\n        for (var i=2; i<line.length; i += 32) {\n            if (i+30 <= line.length) {\n                var fld = line.substring(i, i+30).trim();\n                if (fld.startsWith(\"HIP \")) {\n                    data.id = fld.substring(4);\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n}\n\nexport default StarFinder;\n\n","import Util from \"../std/Util.js\";\n// This class draws a line which connects two stars (or the Sun to another star)\nclass Connecter {\n    constructor(starFinder) {\n        this.starFinder = starFinder;\n    }\n    \n    // Find a pair of positions.  This may require using\n    // one or two SIMBAD calls, in which case the callback\n    // will be invoked asynchronously.\n    connect(from, to, callback) {\n        const here = this;\n        function connect2(fromStar) {\n            if (fromStar == null) {\n                callback(null, null);\n                return;\n            }\n            \n            function connect3(toStar) {\n                callback(fromStar, toStar);\n            }\n            \n            here.starFinder.getStar(to, connect3);\n        }\n        \n        here.starFinder.getStar(from, connect2);\n    }\n}\n\nexport default Connecter;\n        \n    \n\n\n","import Animation from \"../elems/Animation\";\n\nimport loadStars from \"../stars/StarReader\";\n\nimport PrepStar      from \"../stars/PrepStar\";\nimport Util      from \"../std/Util\";\nimport Constants from \"../std/Constants\";\n\nimport Action    from \"../elems/Action\";\nimport TextInput from \"../elems/TextInput\";\nimport OptionsSelector from \"../elems/OptionsSelector\";\nimport FromTo    from \"../elems/FromTo\";\n\nimport StarFinder  from \"../stars/StarFinder\";\nimport Connecter   from \"../stars/Connecter\";\n\nimport {Scene, Vector3, InstancedMesh, \n        SphereGeometry, RingGeometry, MeshBasicMaterial, \n        BufferGeometry, LineBasicMaterial, Line,\n        Matrix4, Color} from \"three\";\n\nclass LocalGalaxy extends Animation {\n    \n    fields = {\n        timeID:  \"timeDisp\",\n        name:    \"Local Galactic Neighborhood\",\n        delta:   Constants.CENTURY/20,\n        time:    0,\n        baseAnimation: \"Solar System\",\n        longClickTime: 1500,\n        paused:  true\n    };\n\n\n    constructor(props) {\n        super(props);\n        \n        // Add local defaults\n        for (var name in this.fields) {\n            this[name] = this.fields[name];\n        }\n        \n        // Add any properties\n        for (var name in props) {\n            this[name] = props[name];\n        }\n        \n        if (this.timeID) {\n            this.timeElem = document.getElementById(this.timeID);\n            this.timeElem.innerHTML = this.timeFormatter(this.time);\n        }\n        this.scene     = new Scene();\n        this.starFinder = null;\n        \n        // Used so that we can delete the lastLine on\n        // mouseup or a new click.\n        \n        this.savedLine = null;\n\n        this.loading    = true;\n        Util.log(\"Loading stars...\");\n        loadStars(this.settings, this.finishConstruction.bind(this));\n    }\n    \n    finishConstruction(starData) {\n        Util.log(\"Stars loaded:\"+starData.length);\n        \n        this.starData = starData;\n        let ringIndices = [];\n        for (let i=0; i<starData.length; i += 1) {\n            let star = starData[i];\n            PrepStar(star);\n            if (star.ring) {\n                ringIndices.push(i);\n            }\n        }\n        \n        const material = new MeshBasicMaterial({wireframe: false});\n        const baseStar = new SphereGeometry(1.0, 20, 20);\n        const baseRing = new RingGeometry(1.1,1.4,20);\n        \n        const theStars = new InstancedMesh(baseStar, material, starData.length);\n        for (let i=0; i<starData.length; i += 1) {\n            let star = starData[i];\n            let mat = new Matrix4().makeScale(star.size, star.size, star.size);\n            mat.setPosition(star.x,star.y,star.z);\n            theStars.setMatrixAt(i, mat);\n            theStars.setColorAt(i, new Color(star.color));\n        }\n        \n        const theRings = new InstancedMesh(baseRing, material, ringIndices.length);\n        for (let r=0; r<ringIndices.length; r += 1) {\n            let i = ringIndices[r];\n            let star = starData[i];\n            let mat = new Matrix4().makeScale(star.size, star.size, star.size);\n            mat.setPosition(star.x,star.y,star.z);\n            theRings.setMatrixAt(r, mat);            \n            theRings.setColorAt(r, new Color(star.ring.color));\n        }\n        \n        theStars.instanceColor.needsUpdate = true;\n        theRings.instanceColor.needsUpdate = true;\n        this.ringIndices = ringIndices;\n        // Add this function to the component.\n        theStars.getIndexedName = function(index) {\n            let star = this.starData[index];\n            return this.starData[index].name;\n        }.bind(this);\n        theRings.getIndexedName = function(index) {\n            return this.starData[this.ringIndices[index]].name;\n        }.bind(this);\n        \n        this.addElement(\"AllStars\", {name:\"AllStars\", component: theStars,\n           render: function(time) {\n               const scl = time/30.856e12;\n               let mat = new Matrix4();\n               for (let i=0; i<starData.length; i += 1) {\n                   theStars.getMatrixAt(i, mat);\n                   let star = starData[i];\n                   mat = mat.setPosition(star.x+scl*star.u, star.y+scl*star.v, star.z+scl*star.w);\n                   theStars.setMatrixAt(i, mat);\n               }\n               theStars.instanceMatrix.needsUpdate = true;                   \n           }});\n       \n        this.addElement(\"AllRings\", {name:\"AllRings\", component: theRings,\n            render: function(time) {\n               const scl = time/30.856e12;\n               let mat = new Matrix4();\n               for (let r=0; r<ringIndices.length; r += 1) {\n                   theRings.getMatrixAt(r, mat);\n                   let i = ringIndices[r];\n                   let star = starData[i];\n                   mat = mat.setPosition(star.x+scl*star.u, star.y+scl*star.v, star.z+scl*star.w);\n                   theRings.setMatrixAt(r, mat);\n               }  \n               theRings.instanceMatrix.needsUpdate = true;                   \n           }});\n        \n        \n        this.loading = false;\n        this.addTimeDisplay();\n        Util.log(\"Local Galactic Neighborhood:\");\n        Util.log(\"   Number of stars rendered:\"+starData.length);\n        Util.log(\"   Number of planetary systems:\"+ringIndices.length);\n    }\n    \n    \n    timeFormatter(time) {\n        let yr = Math.floor((100*time/Constants.CENTURY + 2000).toFixed(0));\n        if (yr > 0) {\n            return yr+\" AD\";\n            \n        } else {\n            // No year 0.\n            yr -= 1;\n            yr  = -yr;\n            return yr + \" BC\";\n        }\n    }\n    \n    options() {\n        const names = [\n                 \"Local Galactic Neighborhood\",\n                 \"Set year\",\n                 \"Connect stars\",\n                 \"The Earth and environs\",\n                 \"Solar System\",\n                 \"Nearby Galaxies (TBD)\",\n                 \"Help\"\n        ];\n        const opts = [];\n        for (var i=0; i<names.length; i += 1) {\n            const entry = {};\n            const val   = names[i];\n            entry.value = names[i];\n            const key = \"ka\"+i;\n            switch (val) {\n               \n            // Note that we need to ensure that we have separate\n            // keys for the elements (at least those that are the same compound types)\n            case \"Set year\":\n                entry.elem = <TextInput key={key} placeholder=\"...year...\"\n                               callback={this.updateTime.bind(this)} /> ;\n                break;\n            case \"Connect stars\":\n                entry.elem = <FromTo key={key} fromDft='Sol' \n                               contentID=\"StarInfo\"\n                               mouseDown={this.drawLine.bind(this)}\n                               mouseUp={this.hideLine.bind(this)}                             />\n                break;\n                \n            case \"Solar System\":\n                entry.elem = <Action key={key} args=\"Solar System\" action ={this.setAnim.bind(this)} />;\n                break;\n                \n            case \"The Earth and environs\":\n                entry.elem = <Action key={key} args=\"The Earth and environs\" action ={this.setAnim.bind(this)} />;\n                break;\n                \n            case \"Help\":\n                entry.elem = <Action key={key} action={this.openHelp} />;\n                break;\n                \n            default:\n                entry.elem = <div key={key}>Just the {val}</div> ;\n            }\n            \n        \n            opts.push(entry);\n        }\n        const res =  <OptionsSelector options={opts} /> ;\n        return res;\n    }\n    \n    \n    raycastResult(results) {\n        const elem = document.getElementById(\"clickTarget\");\n        var found = false;\n        var name;\n        var showString;\n        for (name in results) {\n            showString =  \"<hr/>Star: \"+name;\n            found = true;\n            break;\n        } \n        \n        if (!found) {\n            elem.innerHTML = \"<hr/>\";\n            return;\n        }\n        \n        if (!this.starFinder) {\n            this.starFinder = new StarFinder(this.starData);\n        }\n        var here = this;\n        this.starFinder.getStar(name,\n             function(star) {\n                 if (star != null) {\n                     if (star.spt) {\n                         showString += \"<br/>Spectral type: \"+star.spt;\n                     }\n                     if (star.id) {\n                         showString += \"<br>ID: \"+star.id;\n                     }\n                     var vec = here.position(star, here.time);\n                     var dist = vec.length();\n                     var distPC = dist.toFixed(3);\n                     var distLY = (dist*3.26156).toFixed(3);\n                     showString += \"<br>Distance: \"+distPC+\" pc / \"+distLY+\" ly\";\n                     if (star.np) {\n                         showString += \"<br>Known planets: \"+star.np;\n                     }\n                     elem.innerHTML = showString;\n                 }                 \n             });\n    }\n\n    \n    drawLine(from,to) {\n        if (!this.starFinder) {\n            this.starFinder = new StarFinder(this.starData);\n        }\n        if (!this.connecter) {\n            this.connecter  = new Connecter(this.starFinder);\n        }\n        this.connecter.connect(from,to,this.lineDrawer.bind(this));        \n    }\n    \n    starMessage(msg) {\n        const elem = document.getElementById(\"StarInfo\");\n        elem.innerHTML = msg;\n    }\n    \n    position(star, time) {\n        \n        var v;\n        const scl = time/30.856e12;\n\n        if (star.u == null || star.v == null || star.w == null) {\n            v = [0,0,0];\n        } else {\n            v = [scl*star.u, scl*star.v, scl*star.w];\n        }\n        return new Vector3(\n            star.x+v[0], star.y+v[1], star.z+v[2]);            \n    }\n    \n    hideLine() {\n        if (this.savedLine) {\n            this.scene.remove(this.savedLine);\n            this.savedLine = null;\n        }\n    }\n    \n    lineDrawer(from, to) {\n        if (!from) {\n            this.starMessage(\"Unable to find source star\");\n            this.hideLine();\n            return;\n        } else if (!to) {\n            this.starMessage(\"Unable to find destination star\");\n            this.hideLine();\n            return;\n        }\n        \n        const v1 = this.position(from, this.time);\n        const v2 = this.position(to, this.time);\n        const vertices = [v1,v2];\n        const material = new LineBasicMaterial({color: 0x0000ff});\n        const geometry = new BufferGeometry().setFromPoints( vertices );\n        const line = new Line( geometry, material );\n        if (this.savedLine) {\n            this.scene.remove(this.savedLine);\n        }\n        this.scene.add(line);\n        this.savedLine = line;\n        \n        // Simbad doesn't say anything about planets.\n        var fromNP = from.np ? from.np : \"?\";\n        var toNP   = to.np   ? to.np   : \"?\";\n        var fromID = from.id ? from.id : \"?\";\n        var toID   = to.id   ? to.id   : \"?\";\n        var fromSPT = from.spt ? from.spt : \"?\";\n        var toSPT   = to.spt   ? to.spt   : \"?\";\n        \n        var str = \"<table><tr><th></th><th align='center'>ID</th><th align='center'>Name</th><th align='center'>Spectral Type</th><th align='center'>Planets</th></tr>\";\n        str += \"<tr><th align='left'>From</th><td align='center'>\"+fromID+\"</td><td align='center'>\"+from.name+\"</td><td align='center'>\"+fromSPT+\"</td><td align='center'>\"+fromNP+\"</td></tr>\";\n        str += \"<tr><th align='left'>To</th><td align='center'>\"+toID+\"</td><td align='center'>\"+to.name+\"</td><td align='center'>\"+toSPT+\"</td><td align='center'>\"+toNP+\"</td></tr>\";\n        str += \"</table>Distance: \";\n        var dist = v1.distanceTo(v2);\n        const distpc = dist.toFixed(3);\n        str += distpc + \" pc / \";\n        const distly = (dist*3.26156).toFixed(3);\n        str += distly + \" ly\";\n        this.starMessage(str);\n    }\n\n    parseTime(year) {\n        if (!isNaN(year)) {\n            return (year-2000)/100 * Constants.CENTURY;\n        }  else {\n            return 0;\n        }\n    }\n}\n\nexport default LocalGalaxy;","/** This function solves Kepler's equation to find\n *  the eccentric anomaly as a function of the mean anomaly.\n// For orbits with eccentricity near 1 we need\n// to be careful when MA is near 0 or Pi.  There is a vast art on this\n// problem but for the nonce we are using a simple but likely inefficient\n// approach.  Note the functions defined.  Nominally this should work\n// for both elliptical and hyperbolic orbits.\n * \n */\n \nimport Constants from \"../std/Constants.js\";\nimport Util      from \"../std/Util.js\";\n\nconst Kepler = function(ma, ecc) {\n    \n    if (ecc < 0) {\n        throw new Error(\"Illegal argument to kepler:\"+ma+\" \"+ecc);\n    }\n    \n    // For periodic orbits set the range to 0 to 2*PI.\n    if (ecc < 1) {\n        if (ma < 0 || ma > 2*Math.PI) {\n            ma = ma%(2*Math.PI);\n            if (ma < 0) {\n                ma += 2*Math.PI;\n            }\n        }\n    }\n    \n    \n\n    // Mean anomaly from eccentric anomaly and eccentricity\n    function fma(ea, ecc) {\n\n        var val;\n        if (ecc > 1) {\n            val = ecc * Math.sinh(ea) - ea;\n        } else {\n            val = ea - ecc * Math.sin(ea);\n        }\n        return val;\n    }\n\n    // Derivative of ma with respect to ea.\n    function fdma(ea, ecc) {\n        if (ecc > 1) {\n            return (ecc * Math.cosh(ea) - 1);\n        } else {\n            return (1 - ecc * Math.cos(ea));\n        }\n    }\n\n    if (ecc < Constants.SHAPE_RATIO) {\n        // Circular orbit, so ma = ea = ta\n        return ma;\n    }\n\n    // Now we just iterate till we converge.  We know\n    // that if ma is between 0-pi, or pi-2pi, then ea is\n    // in same range so we can limit overshoots.\n    // Use initial guess\n\n    var emin, emax;\n        // Somewhat to my surprise using just ma as the initial\n        // value seemed to be fastest although using ma/(1-e) for\n        // small ma seems like it should be better.  That does\n        // do slightly fewer evaluations, but overall seems to\n        // take longer.  There may be something\n        // else that needs to be fixed.    \n    var eaTest = ma;\n    if (ecc < 1) {\n        emin = 0;\n        if (ma > Math.PI) {\n            emin = Math.PI;\n        }\n        emax = emin + Math.PI;\n        \n    } else {\n        // The maximum value for the true anomaly is acos(-1/e), but\n        // the eccentric anomaly is not constrained,\n        // so we set the limits to rather large values.\n        \n        if (ma <= 0) {\n            emin = -1.e10;\n            emax = 0;\n        }  else {\n            emin = 0;\n            emax =  1.e10;\n        }\n        if (Math.abs(ma) > 2*Math.PI) {\n            eaTest = Math.asinh(ma/ecc);            \n        }\n    }\n\n    if (eaTest > emax) {\n        eaTest = emax;\n    }\n    if (eaTest < emin) {\n        eaTest = emin;\n    } \n\n    var maTest = fma(eaTest, ecc);\n    var dmadea = fdma(eaTest, ecc);\n\n    var iter = 0;\n\n    while (true) {\n        \n        \n        iter += 1;\n        if (iter > 1000) {\n            Util.log(\"EA calculation: Too many iterations:\" + ecc + \" \" + ma);            \n            return null;\n        }\n        var delta = ma - maTest;\n\n        if (Math.abs(delta) < Constants.HALT_RATIO) {\n            return eaTest;\n        }\n        // May need to be more generous if MA is very large for hyperbolic orbit.\n        if (Math.abs(ma)  > 100 ) {\n            if (Math.abs(delta/ma) < Constants.HALT_RATIO) {\n                return eaTest;                \n            }\n        }\n        dmadea    = fdma(eaTest, ecc);\n\n\n        if (delta > 0) {\n            emin = eaTest;\n        } else {\n            emax = eaTest;\n        }\n\n        var eaDelta = delta / dmadea;\n\n        var maNew;\n        var eaNew;\n        var smaller = false;  // Flag if we jump too far.\n\n        // Loop to adjust the size we jump on this iteration.\n        // We may be either jumping too far such that\n        // the delta is increasing, or too little so that\n        // we don't significantly reduce the delta.\n        var subiter = 0;\n        while (true) {\n            subiter += 1;\n            if (subiter > 100) {\n                return null;\n            }\n\n            // Make sure we don't go past the firm boundaries\n            // for the EA.\n            eaNew = eaTest + eaDelta;\n            if (eaNew > emax) {\n                eaNew = emax;\n            } else if (eaNew < emin) {\n                eaNew = emin;\n            }\n            \n\n            // Try the Newton's method value.\n            maNew = fma(eaTest + eaDelta, ecc);\n            var deltaNew = ma - maNew;\n\n\n            // If we decreased the delta by a lot, then this is good enough.\n            if (Math.abs(deltaNew / delta) < 0.5) {\n                break;\n            }\n\n            // The delta got worse, we jumped too far.\n            if (Math.abs(deltaNew / delta) > 1) {\n\n                // Moved too far...\n                eaDelta /= 2;\n                smaller = true;\n\n            } else {\n\n                // The delta got smaller, but not by very much.\n                // Maybe we could try to jump a little further?\n\n                if (smaller) {\n                    // Not this time...\n                    // In a prior iteration we'd been reducing the size of the jump\n                    // because it was actually increasing delta.  Now\n                    // that we've begun decreasing delta we'll accept this\n                    // value for this iteration.  If we need to we can\n                    // try increasing it next iteration.\n                    break;\n                }\n                // Test doubling eaDelta and see if it's better\n                // If so we'll stay in this loop with the value.  If not\n                // we break and use the old value for eaDelta.\n                var maX = fma(eaTest + 2 * eaDelta, ecc);\n                if (Math.abs(maX - ma) < Math.abs(maNew - ma)) {\n                    eaDelta *= 2;\n                } else {\n                    break;\n                }\n            }\n        }\n        \n        eaTest = eaNew;\n        maTest = maNew;\n        \n    }\n};\n\nexport default Kepler;\n","import Kepler from \"./Kepler.js\";\nimport Util   from \"../std/Util.js\";\n\n/** This is a smaller orbit class that only provides a method\n *  for finding the position as a function of time.\n */\nclass QOrb {\n\n    scale   = 1;\n    doLog   = false;\n    lastT   = 1.e50;\n    lastTA  = 1.e50;\n    \n    constructor(input) {        \n        this.rot = input.rot;    // The rotation info\n        this.e   = input.e;      // The eccentricity scalar\n        this.a   = input.a;      // The semimajor axis\n        this.t0  = input.t0;     // The time of periapsis\n        this.per = input.per;    // The period of the orbit\n        \n        this.precession = false;  // Allow for precession of the orbit.\n        this.precessData = null;\n        if (this.e < 1) {\n            this.Lm   = 2*Math.PI*this.a*this.a*Math.sqrt(1-this.e*this.e)/this.per;\n        }\n    }\n    // Add precession of the line of nodes and the argument of perigee to \n    // the orbit. \n    //   ep0 is the epoch when the arguments in the rot vector are valid.\n    //   fOmega and fNu are the frequencies of the prcession (2pi/period)\n    //   in the Omega and nu terms.\n    addPrecession(ep0, fOmega, fNu) {\n        this.precession  = true;\n        this.ep0         = ep0;\n        this.fOmega      = fOmega;\n        this.fNu         = fNu;\n    }\n        \n    // Get the rotation blob, possibly corrected for precession.\n    getRot(time) {\n        if (!this.precession  || time == null) {\n            return this.rot;\n        }\n        const dt     = time-this.ep0;\n        const dOmega = this.fOmega*dt;\n        const dNu    = this.fNu*dt;\n        const updRot = [...this.rot];\n        \n        // Recall definition of rot:\n//                            [co,  -so*ci,  // co = cos(Omega), ci= cos(inclination), .... \n//                             so,   co*ci,  // so = sin(Omega), ...//                             \n//                             si,           //\n//                             nu]            // \n\n        // Can fix nu immediately!\n        updRot[5] += dNu;\n        \n        const cd = Math.cos(dOmega);\n        const sd = Math.sin(dOmega);\n        \n        // Now use trig formulas to get new value for sin/cos omega\n        // and update the first four values appropriately.\n        const so = updRot[2]*cd + sd*updRot[0]; // sin(a+b) = sin(a)cos(b) + sin(b)cos(a)\n        const co = updRot[0]*cd - updRot[2]*sd; // cos(a+b) = cos(a)cos(b) - sin(a)*sin(b\n        \n        // Use update values to update products first.  The inclination does not change.\n        updRot[1] *= so/updRot[2];  // i.e., *= so_new/so_old\n        updRot[3] *= co/updRot[0];  //  *= co_new/co_old\n        //  Now we can update the last two terms\n        updRot[0] = co;\n        updRot[2] = so;\n        \n        // The inclination does not change during precession, so neither does updRot[4]\n        \n        return updRot;                \n    }\n    \n    // Get the position as a function of time.\n    position(t) {\n        const ta = this.ta(t);       \n        let   r  = this.posTA(ta, t);\n        if (this.coords) {\n            r = this.coords.vTransform(r);\n        }\n        return r;\n    }\n    \n    // Get both position and velocity.\n    state(t) {\n        const ta = this.ta(t);\n        const rs = this.posTA(ta, t);\n        let   r  = Util.times(1./this.scale, rs);   // Get r in meters.\n        const rm = Util.mag(r);\n        const sn  = Math.sin(ta);\n        const p   = this.a*(1-this.e*this.e);\n        \n        const rot = this.getRot(t);\n        const nu  = rot[5];            \n        const cos = Math.cos(nu+ta);\n        const sin = Math.sin(nu+ta);\n            \n        const vrad = Util.times(this.Lm*this.e*sn/(rm*p) , r);\n                        \n        const f    = this.Lm/rm;\n        const vtan = [   -f*(rot[0]*sin - rot[1]*cos),\n                         -f*(rot[2]*sin - rot[3]*cos),\n                          f*rot[4]*cos ];\n        let vtot = Util.vadd(vrad, vtan);\n        \n        if (this.coords) {\n            r    = this.coords.vTransform(r);\n            vtot = this.coords.vTransform(vtot);\n        }\n                \n        return [r,vtot];\n    }\n    \n    ta(t) {       \n        var e = this.e;\n        var ma;\n        ma = (t - this.t0) / this.per * 2 * Math.PI;\n        if (e < 1) {\n            ma = ma % (2 * Math.PI);\n        }\n\n        const ea  = Kepler(ma, e);\n        let tan;\n        if (e < 1) {\n            tan = Math.tan(ea/2);\n        } else {\n            tan = Math.tanh(ea/2);\n        }\n        \n        const tmp = Math.sqrt((1 + e) / Math.abs(1 - e)) * tan;\n\n        let ta =  2 * Math.atan(tmp);\n        return ta;        \n    }\n    \n    // Get the position as a function of the true anomaly.\n    posTA(ta, t) {\n        const e = this.e;\n        \n        // Get the magnitude of the radius vector\n        // Note Math.abs to handle hyperbolic orbits.\n        const rm = this.a * Math.abs(1 - e * e) / (1 + e * Math.cos(ta))* this.scale;\n        \n\n        // TA and nu are rotations along the same axis so we can\n        // combine them wand we're left with a somewhat simpler\n        // transformation than the full ZXZ rotation matrix with nu,i,Omega.\n        // We also put rm in here since it saves a multiplication.\n\n        // First extract nu for the rot blob.\n        const rot = this.getRot(t);\n        const nu  = rot[5];\n        \n        const cos = rm*Math.cos(nu+ta);\n        const sin = rm*Math.sin(nu+ta);\n        // Now use rot information.\n        let vec = [\n                     rot[0]*cos + rot[1]*sin,\n                     rot[2]*cos + rot[3]*sin,\n                     rot[4]*sin\n                    ];\n        return vec;\n    }\n    \n    // Get the orbit curve as a sequence of positions.\n    // For closed orbits start at the periapsis, while\n    // for open orbits we are centered at periapsis.\n    // Note that this function does not require the phase\n    // of the orbit to be known.\n    orbitXYZ(n) {\n        \n        // For hyperbolic orbits not all values of TA are allowed...\n        var taMin = 0;\n        var taMax = 2*Math.PI;\n        if (this.e > 1) {\n            // trying to get ta[i] = -ta[n-i];\n            // bit we need to come in a little since the radius at the limits is infinity.\n            taMax = Math.acos(-1/this.e);\n            const tdelta = (2*taMax)/n;\n            taMax -= tdelta/2;\n            taMin  = -taMax;\n        }\n        \n        var ta = taMin;\n        const data  = [];\n        const delta = (taMax-taMin)/n;\n        for (var i=0; i<n; i += 1) {\n            var p = this.posTA(ta);  // Note that we do not have a time here\n                                     // Precessing orbits will be as of epoch of ephemeris.\n            data.push(p);\n            ta += delta;            \n        }\n        return data;        \n    }\n    \n    xperiod() {\n        if (this.e < 1) {\n            return this.per*(1-this.e);\n        } else {\n            return this.per;\n        }\n    }\n}\n\nexport default QOrb;","import Util from '../std/Util.js';\r\nimport ParameterFactory from './ParameterFactory.js';\r\n\r\nclass Parameter {\r\n    static  SCALAR = 0;\r\n    static  VECTOR = 1; \r\n    static  MATRIX = 2;\r\n    static  BLOB   = 3;  // Non-standard structure.\r\n    \r\n    constructor(name, value, dim, varies, renderer, unit) {\r\n        this.name     = name;\r\n        this.dim      = dim;\r\n        this.varies   = varies;\r\n        this.value    = value\r\n        this.renderer = renderer;\r\n        this.unit     = unit;\r\n    }\r\n\r\n    render() {\r\n        if (!this.renderer) {            \r\n            return this.value;\r\n        }\r\n        const val = this.renderer(this.value, this.unit);\r\n        return val;\r\n    }\r\n    \r\n    rerender() {\r\n        const info = ParameterFactory.getParamInfo(this.name);\r\n        const units = info.units;\r\n        if (!units) {\r\n            Util.log(\"No units for parameter\");\r\n            return;\r\n        }\r\n        var i;\r\n        for (i=0; i<units.length; i += 1 ) {\r\n            // If a unit was specified and they match,\r\n            // or no unit was specified and the scale is 1\r\n            // then we've found the current unit.\r\n            if ((this.unit && (units[i].unit === this.unit.unit)) ||\r\n                (!this.unit && (units[i].scale === 1))) {\r\n                break;\r\n            }\r\n        }\r\n        if (i > units.length) {\r\n            Util.log(\"Unit not found in rerender: \"+this.name+\" \"+this.unit.unit);\r\n            return;            \r\n        }\r\n        i = (i+1) % units.length;\r\n        this.unit = units[i];\r\n        const res = this.render();\r\n        return res;\r\n    }\r\n    setUnit(unit) {\r\n        this.unit = unit;\r\n    }\r\n    \r\n    getDim(dim) {\r\n        return this.dim;\r\n    }\r\n   \r\n    getName() {\r\n        return this.name;\r\n    }\r\n    \r\n    getType() {\r\n        return this.dim;\r\n    }\r\n        \r\n\r\n    getScalar() {\r\n        switch (this.dim){\r\n            case Parameter.SCALAR:\r\n                return this.value;\r\n                \r\n            // For vector quantities return the magnitude of the vector.\r\n            case Parameter.VECTOR:                \r\n                return Util.mag(this.value);\r\n                \r\n            // For matrix quantities return the determinant\r\n            // We assume 3d matrices.\r\n            case Parameter.MATRIX:\r\n                return Util.determinant3(this.value);\r\n                \r\n            default:\r\n                throw new Error(\"Unsupported dimensionality \"+this.dim+\" for \"+this.name);\r\n        }\r\n    }\r\n\r\n    getVector() {\r\n        if (this.dim === Parameter.VECTOR  || this.dim === Parameter.BLOB) {\r\n            return this.value;\r\n        } else {\r\n                throw new Error(\"Vector request for non-vector parameter \"+this.name); \r\n        }\r\n    }\r\n    \r\n    getMatrix() {\r\n        if (this.dim === Parameter.MATRIX) {\r\n            return this.value;\r\n        } else {\r\n            throw new Error(\"Matrix request for non-matrix parameter \"+this.name);\r\n        }\r\n    }\r\n\r\n    isScalar() {\r\n        return this.dim === Parameter.SCALAR;\r\n    }\r\n    \r\n    isVector() {\r\n        return this.dim === Parameter.VECTOR;\r\n    }\r\n    \r\n    isMatrix() {\r\n        return this.dim === Parameter.MATRIX;\r\n    }\r\n}\r\n\r\nexport default Parameter;\r\n","/** This file contains the generators for all of the orbital parameters that\n *  can be determined from other parameters.\n *  \n *  We use the Parameter.addGenerator method to add each generator to\n *  the parameter factory. This method has three arguments that define\n *  each generator:\n *     - A string giving the standard name of the parameter which can be\n *       inferred from known parameters. (\"a\" in the first generator)\n *     - An array of strings giving the standard names of the parameters that\n *       are needed to infer the new parameter.  Default values for constants\n *       can be inferred using an 0 length array. (\"G\", \"M\", \"E\" in the first generator)\n *     - A function which describes how the new parameter can be determined from\n *       the existing parameters.  It takes one argument: a hash of the known\n *       parameters, called params here.  E.g., in the first generator we calculate\n *       the semimajor axis using a = -.5GM/E (recalling that the energy for a bound\n *       orbit is negative).\n *       \n *  The may be multiple generators for a given output parameter, and these \n *  will be checked in order specified to see if the prerequisite parameters\n *  are known.  \n *  \n *  In a few special situations, even when all of the prerequisite parameters\n *  are known, the parameter cannot be determined, so that the function returns a null.\n *  \n *  The ParameterFactory.genParameter function adds the type and and varies information\n *  to the value of the parameter that we determine here. \n *  \n */\n\nimport Constants        from \"../std/Constants.js\";\nimport Util             from \"../std/Util.js\";\nimport ParameterFactory from \"./ParameterFactory.js\";\nimport Kepler           from \"./Kepler.js\";\n\nconst LoadOrigins = function () {\n    // We enclose all of this in a function to enable localization internal\n    // variables and functions.\n    // \n    // Shortcut names.\n    const gadd = ParameterFactory.addGenerator;\n    const pgen = ParameterFactory.genParam;\n\t\n\tif (ParameterFactory.generators != null) {\n\t\treturn;\n\t}\n\t\n\tParameterFactory.generators = {};\n\n    /** a: the semimajor axis of the orbit.  This is undefined for\n     *  parabolas, and negative for hyperbolas.\n     */\n\n    gadd(\"a\", [\"G\", \"M\", \"E\"],\n            function (params) {\n                // a = GM/2E\n                const G = params[\"G\"].value;\n                const M = params[\"M\"].value;\n                const E = params[\"E\"].value;\n                if (E === 0) {\n                    Util.log(\"Parabolic orbit, a is undefined from E\");\n                    return pgen(\"a\", Math.NaN);\n                }\n                const val = -0.5 * G * M / E;\n        \n                return pgen(\"a\", val);\n            }\n    );\n    \n    gadd(\"a\", [\"G\", \"M\", \"m1\", \"Per\"],\n      // Kepler's law\n      // a = cbrt(g(M+m1)p^2 /  4pi^2)\n      function(params) {\n          const g = params[\"G\"].value;\n          const p = params[\"Per\"].value;\n          const m = params[\"M\"].value;\n          const dm = params[\"m1\"].value;\n          const a = Math.cbrt(g*(m+dm)*p*p/(4*Math.PI*Math.PI));\n          return pgen(\"a\", a);\n      }\n    );\n\n    /** b: the semiminor axis */\n    gadd(\"b\", [\"Ecc\", \"a\"],\n            function (params) {\n                const e = Util.mag(params[\"Ecc\"].value);\n                const a = params[\"a\"].value;\n                var sign = 1;\n                if (e > 1) {\n                    sign = -1;\n                }\n                \n                return pgen(\"b\", a * Math.sqrt(sign*(1 - e * e)));\n            }\n    );\n\n    /** C: The center of the ellipse relative to the focus of rotation. */\n    gadd(\"C\", [\"a\", \"Ecc\"],\n            function (params) {\n\n                // The center of the eccentricity vector is pointing\n                // To the periapsis and has a magnitude of the eccentricity.\n                // The distance between the focus and the center is just the\n                // eccentricty x the semimajor axis.\n                const e = params[\"Ecc\"].value;\n                const em = Util.mag(e);\n\n                const a = params[\"a\"].value;\n\n                if (em < 1.e-12) {\n                    return pgen(\"C\", [0, 0, 0]);\n\n                } else if (Math.abs(em - 1) < 1.e-12) {\n                    Util.log(\"Center not defined for parabola\");\n                    return null;\n\n                } else {\n                    // In the opposite direction from the periapsis\n                    // reduced from a by eccentricity, which is\n                    // conveniently already in the eccentricity vector.\n                    // Not that for hyperbolic orbits a is negative, and\n                    // the other focus is further out than the periapsis point.\n                    const c = Util.times(-a, e);\n                    return pgen(\"C\", c);\n                }\n            }\n    );\n\n    /**\n     * E: The energy of the orbit.\n     */\n    gadd(\"E\", [\"G\", \"M\", \"r\", \"v\"],\n            function (params) {\n\n                const v = params[\"v\"].getScalar();\n                const r = params[\"r\"].getScalar();\n                const g = params[\"G\"].value;\n                const m = params[\"M\"].value;\n                return pgen(\"E\", v * v / 2 - g * m / r);\n            }\n    );\n\n    gadd(\"E\", [\"G\", \"M\", \"a\"],\n            function (params) {\n                const g = params[\"G\"].value;\n                const m = params[\"M\"].value;\n                const a = params[\"a\"].value;\n                return pgen(\"E\", -0.5 * g * m / a);\n            }\n    );\n\n    /**\n     * EA: The eccentric anomaly.\n     * The angle between the periapsis and a projection of the particle onto the\n     * circle in which the ellipse is embedded,\n     * using a projection perpendicular to the vector to periapsis.\n     */\n    gadd(\"EA\", [\"TA\", \"Ecc\"],\n            function (params) {\n                const em = params[\"Ecc\"].getScalar();\n                const ta = params[\"TA\"].value;\n\n                // tan (ta/2) = sqrt((1+e)/(1-e)) * tan (ea/2)\n                var sign = 1;\n                if (em > 1) {\n                    sign = -1;\n                }\n\n                var ea = Math.sqrt(sign*(1 - em) / (1 + em)) * Math.tan(ta / 2);\n                if (em < 1) {\n                    ea = 2*Math.atan(ea);\n                    // For periodic orbits make range 0 to 2PI\n                    if (ta > Math.PI && ea < Math.PI) {\n                        ea = 2 * Math.PI - ea;\n                    }\n                } else {\n                    // For unbound we want will leave range centered on 0.\n                    ea = 2*Math.atanh(ea);\n                }\n\n\n\n                return pgen(\"EA\", ea);\n            }\n    );\n    \n\n    gadd(\"EA\", [\"MA\", \"Ecc\"],\n            function (params) {\n                \n                const ma  = params[\"MA\"].value;\n                const ecc = params[\"Ecc\"].getScalar();\n                const ea  = Kepler(ma, ecc);\n                if (ea == null) {\n                    return null;\n                } else {                    \n                    return pgen(\"EA\", ea);\n                }\n            }\n    );\n\n    /**\n     * Ecc: The eccentricity vector of the ellipse which points to the periapsis and\n     * has a magnitude equal to the eccentricity.\n     */\n    gadd(\"Ecc\", [\"G\", \"M\", \"r\", \"v\"],\n            function (params) {\n                const r = params[\"r\"].value;\n                const v = params[\"v\"].value;\n                const rm = Util.mag(r);\n                const G = params[\"G\"].value;\n                const M = params[\"M\"].value;\n                const f1 = Util.times(1/(G*M), Util.cross(v, Util.cross(r,v)));\n                const f2 = Util.times(-1/rm, r) \n                return pgen(\"Ecc\", Util.vadd(f1,f2));\n            }\n    );\n\n    gadd(\"Ecc\", [\"Eccen\", \"Rot\", \"nu\"],\n            function (params) {\n                const e = params[\"Eccen\"].getScalar();\n                const rot = params[\"Rot\"].value;\n                const nu  = rot[5];\n                \n                // We want the point where TA is 0.\n                \n                const cos = e*Math.cos(nu);\n                const sin = e*Math.sin(nu);\n                \n                const vec = [rot[0]*cos + rot[1]*sin,\n                             rot[2]*cos + rot[3]*sin,\n                             rot[4]*sin];\n                         \n                return pgen(\"Ecc\", vec);\n            }\n    );\n\n    /** The scalar eccentricity is not generally used internally\n     *  but is often supplied as input.  We include it here for completeness.\n     */\n    gadd(\"Eccen\", [\"Ecc\"],\n            function (params) {\n                return pgen(\"Eccen\", params[\"Ecc\"].getScalar());\n            }\n    );\n\n\n    /**\n     * eF2: The energy scaled vector to the second focus.\n     * Note that this goes to invinity only as the energy of the orbit goes to infinity.\n     */\n    gadd(\"eF2\", [\"Ecc\", \"E\", \"a\"],\n            function (params) {\n\n                // The second focus is 2ea from the primary focus\n                // in the opposite direction of the Ecc vector.\n                const eccv = params[\"Ecc\"].value;\n                const e = params[\"E\"].value;\n                const a = params[\"a\"].value;\n\n                const ef2 = Util.times(-2 * a * e, eccv);\n                return pgen(\"eF2\", ef2);\n            }\n    );\n\n    /** G: Gravitational constant.  MKS by default. */\n    gadd(\"G\", {},\n            function (params) {\n                return pgen(\"G\", Constants.G);\n            }\n    );\n\n    /**\n     * i: The inclination of the orbital plane relative to the equatorial plane of the coordinate system\n     *    (the ecliptic for solar orbits).  For non-radial orbits we\n     * can get this from the angular momentum vector but for radial orbits\n     * we need to use the position or velocity vectors.\n     */\n    gadd(\"i\", [\"L\"],\n            function (params) {\n                const L = params[\"L\"].value;\n                const mag = Util.mag(L);\n                if (mag === 0) {\n                    Util.log(\"Radial orbit so computation of inclination from angular momentum fails.\");\n                    return null;\n                } else {\n                    const dot = Util.dot(L, [0, 0, 1]) / Util.mag(L);\n                    return pgen(\"i\", Math.acos(dot));\n                }\n            }\n    );\n\n    // From r,v.  This works for radial orbits too.\n    gadd(\"i\", [\"r\", \"v\"],\n            function (params) {\n                var rv = params[\"r\"].value;\n                var rm = Util.mag(rv);\n                const vv = params[\"v\"].value;\n                const vm = Util.mag(vv);\n\n                const L = Util.cross(rv, vv);\n                const Lm = Util.mag(L);\n\n                // Check for redial orbit...\n                if (Lm > Constants.SHAPE_RATIO * rm * vm) {\n                    const dot = Util.dot(L, [0, 0, 1]) / Util.mag(L);\n                    return pgen(\"i\", Math.acos(dot));\n                } else {\n                    // A radial orbit doesn't have a direction of revolution,\n                    // so we will always pick a positive inclination.\n                    if (rm === 0) {  // Substitute the velocity vector if we are at the origin.\n                        rv = vv;\n                        rm = vm;\n                    }\n                    if (rm === 0) {\n                        Util.log(\"Inclination undefined: Singular orbit, stationary at origin\");\n                        return null;\n                    }\n                    var dot = Util.dot(rv, [0, 0, 1]) / rm;\n                    dot = Math.abs(dot);\n                    return pgen(\"i\", Math.PI / 2 - Math.acos(dot));\n                }\n            }\n    );\n\n    /** L: The angular momentum vector */\n    gadd(\"L\", [\"r\", \"v\"],\n    \n            function (params) {\n                const r = params[\"r\"].value;\n                const v = params[\"v\"].value;\n                const l = Util.cross(r, v);\n\n                return pgen(\"L\", l);\n            }\n    );\n\n    gadd(\"L\", [\"G\", \"M\", \"Eccen\", \"E\", \"Rot\"],\n            function (params) {\n                const E   = params[\"E\"].value;\n                const rot = params[\"Rot\"].value;\n                \n                // Note that this is the eccentricity scalar, not vector\n                \n                const ecc = params[\"Eccen\"].value;\n                const g   = params[\"G\"].value;\n                const m   = params[\"M\"].value;\n\n                // Get the magnitude of the angular momentum.\n                const Lm = g * m * Math.sqrt((ecc * ecc - 1) /(2 * E));\n                                // Six element vector with to make efficient position computations.\n//                rot       = [0:co,  1:-so*ci,  // Coefficients for x \n//                             2:so,  3:co*ci,   // Coefficients for y\n//                             4:si,             // Coefficients for z\n//                             5:n]              // Save nu so all rotation information stored in rot.    \n\n                \n                // L = Lm [so si, -co si, co]\n                // Rot is intended to rotate the x axis, so we have to play\n                // a little to rotate the z axis.\n                \n                var l = [Lm*rot[2]*rot[4], -Lm*rot[0]*rot[4], Lm*rot[3]/rot[0] ];\n\n                return pgen(\"L\", l);\n            }\n    );\n\n    /**\n     * LonP: Longitude of Perihelion.\n     * This seems to be just the argument of perihelion+the longitude of the ascending node.\n     */\n    gadd(\"LonP\", [\"Omega\", \"nu\"],\n            function (params) {\n                const nu = params[\"nu\"].value;\n                const omega = params[\"Omega\"].value;\n\n                return pgen(\"LonP\", nu + omega);\n            }\n    );\n    \n\n    /** M: Mass of the central object: defaults to mass of the Sun */\n    gadd(\"M\", [],\n            function (params) {\n                return pgen(\"M\", Constants.MSun);\n            }\n    );\n    \n    /** m1: The mass of the orbiting body.  Defaults to 0 */\n    gadd(\"m1\", [],\n        function(params) {\n            return pgen(\"m1\", 0);\n        }\n    );\n    \n\n    /** MA: The mean anomaly is a uniform measure of time as phase along the orbit,\n     *  E.g., as in our first definition: just 2*PI*(t-t0)/period where t0 is the time of periapsis \n     **/\n    gadd(\"MA\", [\"t\", \"t0\", \"Per\"],\n            function (params) {\n                // The Mean anomaly is defined as\n                // MA = 2*Pi*(t-t0)/Period.\n                const p = params[\"Per\"].value;\n                if (p === Number.POSITIVE_INFINITY) {\n                    return null;\n                }\n                \n                const t = params[\"t\"].value;\n                const t0 = params[\"t0\"].value;\n\n                var ma = (t - t0) / p;\n                ma = ma - Math.floor(ma);\n                ma *= 2 * Math.PI;\n\n                return pgen(\"MA\", ma);\n            }\n    );\n    \n\n    gadd(\"MA\", [\"EA\", \"Ecc\"],\n            function (params) {\n                const e = params[\"Ecc\"].getScalar();\n                const ea = params[\"EA\"].value;\n                if (e < Constants.SHAPE_RATIO) {\n                    // If the orbit is circular then MA = EA\n                    return pgen(\"MA\", ea);\n                }\n\n                var ma;\n                // Kepler's equation in the easy direction\n                if (e < 1) {                    \n                    ma = ea - e * Math.sin(ea);\n                } else {\n                    ma = e*Math.sinh(ea) - ea;\n                }\n                return pgen(\"MA\", ma);\n            }\n    );\n    \n    // This definition might get used for hyperbolic orbits.\n    gadd(\"MA\", [\"t\", \"t0\", \"G\", \"M\", \"a\"],\n            function(params) {\n                 const t   = params[\"t\"].value;\n                 const t0  = params[\"t0\"].value;\n                 const G   = params[\"G\"].value;\n                 const M   = params[\"M\"].value;\n                 // For hyperbolic orbits a < 0.\n                 const a   = Math.abs(params[\"a\"].value);\n                 const ma = Math.sqrt(G*M/(a*a*a)) * (t-t0);\n                 return pgen(\"MA\", ma);\n             }\n    );\n\n    gadd(\"MA\", [\"MLon\", \"Omega\", \"nu\"],\n            function (params) {\n                const ml = params[\"MLon\"].value;\n                const omega = params[\"Omega\"].value;\n                const nu = params[\"nu\"].value;\n                return pgen(\"MA\", ml - omega - nu);\n            }\n    );\n\n    /**\n     * MLon: Mean longitude\n     * This seems to be just the argument of perihelion+the longitude of the ascending node.\n     */\n    gadd(\"MLon\", [\"MA\", \"Omega\", \"nu\"],\n            function (params) {\n                const ma    = params[\"MA\"].value;\n                const nu    = params[\"nu\"].value;\n                const omega = params[\"Omega\"].value;\n\n                return pgen(\"MLon\", ma + nu + omega);\n            }\n    );\n    \n    /**\n     * N0: Mean motion in orbits/day\n     */\n    gadd(\"N0\", [\"Per\"],\n        function(params) {\n           return pgen(\"N0\", 86400./params[\"Per\"].value);\n        }\n    );\n\n    /**\n     * nu: Argument of periapsis.\n     * This is the angle between the line of nodes and \n     * the vector to the periapsis.\n     */\n    gadd(\"nu\", [\"Ecc\", \"Pnode\", \"L\"],\n            function (params) {\n                var p = params[\"Pnode\"].value;\n                var e = params[\"Ecc\"].value;\n                var L = params[\"L\"].value;\n\n                if ((Util.mag(p) === 0) || (Util.mag(e) === 0)) {\n                    Util.log(\"Circular orbit or in plane so  argument of periapsis not defined. using 0\");\n                    return pgen(\"nu\", 0);\n                } else {\n                    const cs = Util.dot(p, e) / Util.mag(p) / Util.mag(e);\n                    var   nu = Math.acos(cs);\n                    // Chech whether we are in 0-PI or PI-2PI\n                    const cross = Util.cross(p, e);\n                    const dir = Util.dot(cross, L);\n                    if (dir < 0) {\n                        nu = 2*Math.PI - nu;\n                    }\n                    return pgen(\"nu\", nu);\n                }\n            }\n    );\n\n    gadd(\"nu\", [\"LonP\", \"Omega\"],\n            function (params) {\n                const lp = params[\"LonP\"].value;\n                const omega = params[\"Omega\"].value;\n\n                return pgen(\"nu\", lp - omega);\n            }\n    );\n\n    /**\n     * Omega: The longitude of the ascending node.  Normally the\n     * longitude of the point at which the orbit crosses the equator going up.\n     * This is ill defined for radial, circular or equatorial orbits.\n     * If the orbit is in the equatorial plane, the longitude of the periapsis is used.\n     * If the orbit is radial, then the direction of the orbit when it rising through the\n     * plane is used.  If the orbit is radial in the z direction, or circular in the \n     * equatorial plane, the the value is set to 0.\n     */\n\n    gadd(\"Omega\", [\"Pnode\"],\n            function (params) {\n\n                // Just the longitude of the Pnode vector.\n                // Returned in radians.\n\n                var pnode = params[\"Pnode\"].value;\n                pnode = Util.times(1 / Util.mag(pnode), pnode);\n                const x = pnode[0];\n                const y = pnode[1];\n                var res = 0;\n                if (Math.abs(x) > Constants.PLANAR_RATIO || Math.abs(y) >= Constants.PLANAR_RATIO) {\n                    res = Math.atan2(y, x);\n                    return pgen(\"Omega\", res);\n                } else {\n                    // In the plane or radial\n                    return null;\n                }\n            }\n    );\n\n    /** Per: The period of the orbit in seconds */\n    gadd(\"Per\", [\"N0\"],\n        function(params) {\n           return pgen(\"Per\", 86400./params[\"N0\"].value);\n        }\n    );\n\n\n    gadd(\"Per\", [\"a\", \"b\", \"L\"],\n    \n            // The area of the ellipse is pi a b \n            // The rate at which we are sweeping out area is 1/2 rv where we have\n            // the 1/2 since we are sweeping out little triangles, not rectangles.\n            function (params) {\n                const a = params[\"a\"].value;\n                if (a <= 0) {\n                    // Unbound orbit\n                    return pgen(\"Per\", Number.POSITIVE_INFINITY);\n                }\n                const b = params[\"b\"].value;\n                const L = params[\"L\"].getScalar();\n                // while \n                if (a * b === 0 || L === 0) {\n                    Util.log(\"Cannot calculate period for radial orbit\");\n                    return null;\n                } else {\n                    return pgen(\"Per\", 2*Math.PI * a * b / L);\n                }\n            }\n    );\n    \n    gadd(\"Per\", [\"a\", \"G\", \"M\", \"m1\"],\n            function(params) {\n                const a = params[\"a\"].value;\n                if (a <= 0) {\n                    // Unbound orbit\n                    return pgen(\"Per\", Number.POSITIVE_INFINITY);\n                }\n                const G = params[\"G\"].value;\n                const M = params[\"M\"].value;\n                const m1 = params[\"m1\"].value;\n                return pgen(\"Per\", 2*Math.PI/Math.sqrt(G*(M+m1)) * Math.pow(a, 1.5));\n            }\n    );\n    \n\n    /**\n     * Pnode: A vector along the line of nodes.  As discussed with the parameter Omega there\n     * are a number of special cases when the line of nodes is not well defined.\n     * and various 'backup' definitions are used.  \n     */\n    gadd(\"Pnode\", [\"L\"],\n            function (params) {\n                // p = z x L  where z is the z unit vector.\n\n                const l = params[\"L\"].value;\n                const mag = Util.mag(l);\n                const z = [0, 0, 1];\n                const pnode = Util.cross(z, l);\n                const pmag = Util.mag(pnode);\n                // If the magnitude of the angular momentum perpendicular to\n                // the z axis is too small we may have a circular orbit.\n                if (pmag / mag < Constants.PLANAR_RATIO) {\n                    return null;\n                }\n                // Make it a unit vector...\n                return pgen(\"Pnode\", Util.times(1/pmag, pnode));\n            }\n    );\n\n    gadd(\"Pnode\", [\"L\", \"Ecc\"],\n            function (params) {\n\n                // If this generator is called, then L is defined,\n                // but the previous generator returned null.  This means that\n                // The orbit is in the plane or radial.\n\n                const ecc = params[\"Ecc\"].value;\n                const eccm = Util.mag(ecc);\n                const x = ecc[0];\n                const y = ecc[1];\n\n                // If the orbit is cicular or along the z axis, the choice of\n                // the vector to the node is arbitrary and we just have it point along\n                // the x axis.\n                if ((eccm < Constants.SHAPE_RATIO) ||\n                        (Math.abs(x) < Constants.SHAPE_RATIO && Math.abs(y) < Constants.SHAPE_RATIO)) {\n                    return pgen(\"Pnode\", [1, 0, 0]);\n                }\n                return pgen(\"Pnode\", Util.times(1 / eccm, ecc));\n\n            }\n    );\n\n    /**\n     * r: The instantaneous position vector of the object.\n     * In this context we are deriving the position at a given time (using TA)\n     * given the orbital elements of the system.  Presumably i and Omega were\n     * used in computing Rot.\n     */\n    gadd(\"r\", [\"Rot\", \"Ecc\", \"a\", \"TA\"],\n            function (params) {\n                \n                const rot = params[\"Rot\"].value;\n                const e   = params[\"Ecc\"].getScalar();\n                const a   = params[\"a\"].value;\n                const ta  = params[\"TA\"].value;\n                \n                \n                // First we compute the position vector in the plane of the orbit with\n                // x pointing to the periapsis.\n                // The radius as a function of TA is                \n                const  r = a * Math.abs(1 - e * e) / (1 + e * Math.cos(ta));\n                // So the vector in the plane is just\n                \n                const nu  = rot[5];\n                const cos = r*Math.cos(ta+nu);\n                const sin = r*Math.sin(ta+nu);\n\n                const rv = [rot[0]*cos + rot[1]*sin, \n                            rot[2]*cos + rot[3]*sin,\n                            rot[4]*sin];\n                        \n                return pgen(\"r\", rv);\n            }\n    );\n\n\n    /**\n     * Rot: information used in the rotation computation  \n     *  Given the scalar radius rm, we get the components of r_i using\n     *   r_i = r* ( rot[i][0]*cos(TA+nu) + rot[i][1]*sin(TA+nu)   ) \n     *   To get back standard angles:\n     *       nu    = rot5\n     *       Omega = atan2(rot2, rot0)\n     *       i     = atan2(rot4, rot3/rot0)\n     */\n    gadd(\"Rot\", [\"Omega\", \"i\", \"nu\"],\n            function (params) {\n                \n                const o  = params[\"Omega\"].value;\n                const co = Math.cos(o);\n                const so = Math.sin(o);\n                \n                const i  = params[\"i\"].value;\n                const ci = Math.cos(i);\n                const si = Math.sin(i)\n                \n                const n  = params[\"nu\"].value;\n                \n                // Six element vector with to make efficient position computations.\n                const vec = [co,  -so*ci,  // Coefficients for x \n                             so,   co*ci,  // Coefficients for y\n                             si,           // Coefficients for z\n                             n]            // Save nu so all rotation information stored in rot.    \n                return pgen(\"Rot\", vec);\n            }\n    );\n    \n    /**\n     * t: the current time.  Note that this is modulo the orbital period\n     * for bound orbits.\n     */\n    gadd(\"t\", [\"t0\", \"MA\", \"Per\"],\n            function (params) {\n                const per = params[\"Per\"].value;\n                if (per === Number.POSITIVE_INFINITY) {\n                    return null;  // Hyperbolic orbit, need different info.\n                }\n                const t0 = params[\"t0\"].value;\n                const ma = params[\"MA\"].value;\n                const t = t0 - ma / (2 * Math.PI) * per;\n                return pgen(\"t\", t);\n            }\n    );\n    gadd(\"t\", [\"t0\", \"MA\", \"Per\", \"a\", \"G\", \"M\"],\n            function (params) {\n                // To get here, we must have had the period be infinite in\n                // the previous generator, so we have a hyperbolic orbit.\n                // Don't need the period, but it's a needed argument\n                // to ensure that precondition is met.\n                const t0 = params[\"t0\"].value;\n                const ma = params[\"MA\"].value;\n                const a = Math.abs(params[\"a\"].value);  // negative for hyperbolic\n                const G = params[\"G\"].value;\n                const M = params[\"M\"].value;\n                \n                const tx = ma*Math.sqrt(a*a*a/(G*M));  // tx = t-t0\n                return pgen(\"t\", t0+tx);\n            }\n    );\n    \n\n    /**\n     * t0: The time of periapsis passage.\n     * \n     */\n    gadd(\"t0\", [\"t\", \"MA\", \"Per\"],\n            function (params) {\n                const per = params[\"Per\"].value;\n                if (per === Number.POSITIVE_INFINITY) {\n                    return null;  // Hyperbolic orbit, need eccentricity\n                }\n                const t = params[\"t\"].value;\n                const ma = params[\"MA\"].value;\n                const t0 = t - ma / (2 * Math.PI) * per;\n                return pgen(\"t0\", t0);\n            }\n    );\n    \n    gadd(\"t0\", [\"t\", \"MA\", \"Per\", \"a\", \"G\", \"M\"],\n            function (params) {\n                // To get here, we must have had the period be infinite in\n                // the previous generator, so we have a hyperbolic orbit.\n                // Don't need the period, but it's a needed argument\n                // to ensure that precondition is met.\n                const t = params[\"t\"].value;\n                const ma = params[\"MA\"].value;\n                const a = Math.abs(params[\"a\"].value);  // negative for hyperbolic\n                const G = params[\"G\"].value;\n                const M = params[\"M\"].value;\n                \n                const tx = ma*Math.sqrt(a*a*a/(G*M));  // tx = t-t0\n                return pgen(\"t0\", t-tx);\n            }\n    );\n\n    /**\n     * TA: The true anomaly.  This is the angle between the periapsis and the position of the\n     * object measured from the origin (which is at one of the focuses of the orbit.\n     */\n    gadd(\"TA\", [\"EA\", \"Ecc\"],\n            function (params) {\n\n                // The true anomaly is related to the mean anomay by:\n                // tan (TA/2) =  (1+e)/(1-e)  tan (EA/2)\n                //   [replacing tan(EA/2), with tanh(EA/2) for\n                //    hyperbolic orbits]\n                const e  = params[\"Ecc\"].getScalar();\n                const EA = params[\"EA\"].value;\n                \n                var tan;\n                if (e > 1) {\n                    tan = Math.tanh(EA/2);\n                } else {\n                    tan = Math.tan(EA/2);\n                }                    \n                var val = Math.sqrt((1 + e) / Math.abs(1 - e)) * tan;\n                val = 2 * Math.atan(val);\n                \n                if (e < 1 && val < 0) {\n                    val += 2*Math.PI;\n                }\n\n                return pgen(\"TA\", val);\n            }\n    );\n    \n    gadd(\"TA\", [\"r\", \"Ecc\", \"L\"],\n             function (params) {\n                 // Just the angle between r and Ecc.  We need L to tell\n                 // the range.\n                 const r     = params[\"r\"].value;\n                 const e     = params[\"Ecc\"].value;\n                 const l     = params[\"L\"].value;\n                 const dot   = Util.dot(r, e)/(Util.mag(r)*Util.mag(e));\n                 const cross = Util.cross(e,r);  // Order matters here.\n                 var   angle = Math.acos(dot);\n                 if (Util.dot(cross,l) < 0) {\n                     angle = 2*Math.PI/angle;\n                 }\n                 return pgen(\"TA\", angle);\n             }\n    );\n\n    // v: the instantaneous velocity of the body.\n    gadd(\"v\", [\"L\", \"Rot\", \"r\", \"a\", \"Ecc\", \"TA\"],\n        function(params) {\n            const Lm  = params[\"L\"].getScalar();\n            const r   = params[\"r\"].value;\n            const rm  = Util.mag(r);\n            const e   = params[\"Ecc\"].getScalar();\n            const a   = params[\"a\"].value;\n            const rot = params[\"Rot\"].value;\n            const ta  = params[\"TA\"].value;\n            \n            const p   = a*(1-e*e);\n            const nu  = rot[5];\n            \n            const sn  = Math.sin(ta);\n            const cos = Math.cos(nu+ta);\n            const sin = Math.sin(nu+ta);\n            \n            const vrad = Util.times(Lm*e*sn/(rm*p) , r);\n                        \n// \n// Six element vector with to make efficient position computations.\n//                rot       = [0:co,  1:-so*ci,  // Coefficients for x \n//                             2:so,  3: co*ci,   // Coefficients for y\n//                             4:si,             // Coefficients for z\n//                             5:n]              // Save nu so all rotation information stored in rot.    \n            const f    = Lm/rm;\n            const vtan = [   -f*(rot[0]*sin - rot[1]*cos),\n                             -f*(rot[2]*sin - rot[3]*cos),\n                              f*rot[4]*cos ];\n            const vtot = Util.vadd(vrad, vtan);\n            return pgen(\"v\", vtot);\n        }\n    );\n    // Use any of the anomalies to get the velocity.\n/*    gadd(\"v\", [\"G\", \"M\", \"r\", \"a\", \"L\", \"TA\"],\n            function (params) {\n                const ta = params[\"TA\"].value;\n                return vcalc(params, ta);\n            }\n    );\n    gadd(\"v\", [\"G\", \"M\", \"r\", \"a\", \"L\", \"EA\"],\n            function (params) {\n                const ea = params[\"EA\"].value;\n                return vcalc(params, ea);\n            }\n    );\n    gadd(\"v\", [\"G\", \"M\", \"r\", \"a\", \"L\", \"MA\"],\n            function (params) {\n                const ma = params[\"MA\"].value;\n                return vcalc(params, ma);\n            }\n    );*/\n}\n\nexport default LoadOrigins;\n","import Constants   from \"../std/Constants.js\";\r\nimport Util        from '../std/Util.js';\r\nimport Parameter   from './Parameter.js';\r\nimport LoadOrigins from './Origins.js';\r\n\r\nclass ParameterFactory {\r\n    \r\n\r\n    /** This is the map of all the legal parameters.  The fiducial name\r\n     *  points to the name, dimensionality,\r\n     *  and description, and indicates if the parameter is a constant of the motion\r\n     *  or varies along the orbit.\r\n     */\r\n    static legalParameters = {};\r\n    \r\n    /** This is a mapping to the fiducial capitalization of the parameter.\r\n     *  it maps String.toLowerCase() -> String.fiducial. \r\n     */\r\n    static caseConv        = {};\r\n    \r\n    \r\n    /** This is the mapping between fiducial names and arrays of generators to\r\n     *  create them.\r\n     */\r\n    static generators       = null;\r\n    \r\n    static constants        = [];\r\n    static variables        = [];\r\n    \r\n    /** Add a parameter into the list of legal parameters */\r\n    static addParam(name, dim, varies, descrip, units) {\r\n        if (ParameterFactory.caseConv[name.toLowerCase()] != null ) {\r\n            throw new Error(\"Redundant defintion for parameter name:\"+name);\r\n        }\r\n        ParameterFactory.legalParameters[name] = {\r\n            name: name,\r\n            dim: dim,\r\n            varies: varies,\r\n            descrip: descrip,\r\n            units: units\r\n        };\r\n        ParameterFactory.caseConv[name.toLowerCase()] = name;\r\n        if (varies) {\r\n            this.variables.push(name);\r\n        } else {\r\n            this.constants.push(name); \r\n        }\r\n    }\r\n    \r\n    /** Get the informatino about a parameter */\r\n    static getParamInfo(name) {\r\n        return ParameterFactory.legalParameters[ParameterFactory.fiducial(name)];        \r\n    }\r\n    \r\n    /** Get the list of variable parameters */\r\n    static getVariables() {\r\n        var variables = [];\r\n        for (var name in Object.keys(ParameterFactory.legalParameters)) {\r\n            var p = ParameterFactory.legalParameters[name];\r\n            if (p.varies) {\r\n                variables.push(name);\r\n            }\r\n        }\r\n        return variables;\r\n    }\r\n    \r\n    /** Convert the case of the input to the fiducial name for that parameter */\r\n    static fiducial(name) {\r\n        return ParameterFactory.caseConv[name.toLowerCase()];\r\n    }\r\n   \r\n    /** Check if the name and type of a parameter are consistent */\r\n    static checkName(name, type) {\r\n        var pt = ParameterFactory.getParamInfo(name);\r\n        return (pt != null) && (pt.dim === type);\r\n    }\r\n    \r\n\r\n    \r\n    /** Return the list of valid parameter names */\r\n    static getNames() {\r\n        const keys = Object.keys(ParameterFactory.legalParameters);\r\n        return keys;\r\n    }\r\n    \r\n    /** Find the first generator where are prerequisites are met */\r\n    static findGenerator(name, knownParams) {\r\n        \r\n        // Get the array of generators for this parameters.\r\n        const gens = ParameterFactory.generators[name];\r\n        if (gens == null || gens.length === 0) {\r\n            // No generators for this parameter\r\n            return null;\r\n        }\r\n        \r\n        // Loop over the generators ...\r\n        for (var g=0; g<gens.length; g += 1) {\r\n            const gen  = gens[g];\r\n            const reqs = gen.reqs;\r\n            \r\n            var allFound = true;            \r\n            // ... check that we have all needed prerequisites\r\n            for (var r=0; r<reqs.length; r += 1) {\r\n                var req = reqs[r];\r\n                if (!knownParams[req]) {\r\n                    allFound = false;\r\n                    break;\r\n                } \r\n            }\r\n            if (allFound) {\r\n                return gen;\r\n            }\r\n        }\r\n        return null;            \r\n    }\r\n    \r\n    \r\n    /** Generate the parameter\r\n     *  in terms of other known parameters.\r\n     */\r\n    static deriveParameter(xname, knownParams) {\r\n        const name  = ParameterFactory.fiducial(xname);\r\n        if (name == null) {\r\n            throw new Error(\"Attempt to create invalid parameter: \"+xname);\r\n        }\r\n        \r\n        if (ParameterFactory.generators == null) {\r\n            ParameterFactory.generators = {};\r\n            LoadOrigins();\r\n        }\r\n\t\t\r\n        // Get the array of generators for this parameters.\r\n        const gens = ParameterFactory.generators[name];\r\n        if (gens == null || gens.length === 0) {\r\n            // No generators for this parameter\r\n            return null;\r\n        }\r\n        \r\n        var param = null;\r\n        \r\n        // Loop over the generators ...\r\n        for (var g=0; g<gens.length; g += 1) {\r\n            const gen  = gens[g];\r\n            const reqs = gen.reqs;\r\n            \r\n            var allFound = true;            \r\n            // ... check that we have all needed prerequisites\r\n            for (var r=0; r<reqs.length; r += 1) {\r\n                var req = reqs[r];\r\n                if (!knownParams[req]) {\r\n                    allFound = false;\r\n                    break;\r\n                } \r\n            }\r\n            \r\n            if (allFound) {\r\n                // ... then generate the parameters from the known parameters.\r\n                param = gen.generate(knownParams);\r\n                \r\n                // Might still fail to generate parameter.\r\n                if (param != null) {\r\n                    break;\r\n                }\r\n            }\r\n            // Otherwise we'll just return a null.\r\n            \r\n        }\r\n        return param;\r\n    }\r\n    \r\n    // Add a generator for the given parameter name, with the \r\n    // specified prequisites and a function for generating the parameters \r\n    // from a set of known parameters.\r\n    static addGenerator(xname, reqs, func) {\r\n        if (xname == null || reqs == null || func == null) {\r\n            throw new Error(\"Invalid generator, null element\");\r\n        }\r\n        const name = ParameterFactory.fiducial(xname);\r\n        if (name == null) {\r\n            throw new Error(\"Adding generator for unknown parameter\");\r\n        }\r\n        const gens = ParameterFactory.generators;\r\n        var arr = gens[name];\r\n        if (arr == null) {\r\n            arr        = [];\r\n            gens[name] = arr;\r\n        }\r\n        arr.push({reqs: reqs, generate:func});\r\n    }\r\n    \r\n    \r\n    \r\n    static baseRender = function(inp, unit, called) {\r\n        var add   = 4;  // Show scalars to higher precision\r\n        var max   = 1.e10;\r\n        if (called) {\r\n            add = 0;\r\n            max   = 1.e6;\r\n        }\r\n        \r\n        var str;\r\n        if (Array.isArray(inp)) {\r\n            str = \"[ \";\r\n            for (var i=0; i<inp.length; i += 1) {\r\n                str += ParameterFactory.baseRender(inp[i], unit, true)+\"  \";\r\n            }\r\n            str += \" ] \";\r\n        } else {\r\n            \r\n            if (unit) {\r\n               inp /= unit.scale;\r\n               if (unit.offset) {\r\n                   inp += unit.offset;\r\n               }\r\n            }\r\n            \r\n            const abs = Math.abs(inp);\r\n            if (abs !== 0 && (abs < .001 || abs > max)) {\r\n                str = inp.toExponential(5+add);\r\n            } else {\r\n                str = inp.toPrecision(6+add);\r\n            }\r\n        }\r\n        if (unit && !called) {\r\n            str += \" \"+unit.unit;\r\n        }\r\n        return str;\r\n    }\r\n    \r\n    // Create a parameter with the given name and value.\r\n    static genParam(name, value, unit) {\r\n        const info = ParameterFactory.getParamInfo(name);\r\n        if (info == null) {\r\n            Util.log(\"Attempt to generate invalid parameter:\"+name);\r\n        }\r\n        return new Parameter(name, value, info.dim, info.varies, ParameterFactory.baseRender, unit);        \r\n    }\r\n\r\n}\r\n\r\nexport default ParameterFactory;\r\n// \r\n// Load the list of valid parameters.\r\n//                               NAME             DIM             VARIES  DESCRIP\r\n// Constants of the orbit\r\nParameterFactory.addParam(\"a\",     Parameter.SCALAR, false, \"Semimajor axis\",\r\n   Constants.radUnits);\r\nParameterFactory.addParam(\"b\",     Parameter.SCALAR, false, \"Semiminor axis\",\r\n   Constants.radUnits);\r\nParameterFactory.addParam(\"C\",     Parameter.VECTOR, false, \"The center of the ellipse\",\r\n   Constants.radUnits);\r\nParameterFactory.addParam(\"E\",     Parameter.SCALAR, false, \"The energy of the orbit\");\r\nParameterFactory.addParam(\"Ecc\",   Parameter.VECTOR, false, \"The eccentricity vector\");\r\nParameterFactory.addParam(\"Eccen\", Parameter.SCALAR, false, \"The eccentricity scalar\");\r\nParameterFactory.addParam(\"eF2\",   Parameter.VECTOR, false, \"The energy-scaled position vector of the second focus\");\r\nParameterFactory.addParam(\"G\",     Parameter.SCALAR, false, \"The gravitational constant (defaults to MKS)\");\r\nParameterFactory.addParam(\"i\",     Parameter.SCALAR, false, \"The inclination of the orbit\",\r\n   Constants.angUnits);\r\nParameterFactory.addParam(\"L\",     Parameter.VECTOR, false, \"The angular momentum of the orbit\");        \r\nParameterFactory.addParam(\"LonP\",  Parameter.SCALAR, false, \"The longitude of periapsis\",\r\n   Constants.angUnits);\r\nParameterFactory.addParam(\"M\",     Parameter.SCALAR, false, \"Mass of the central body (defaults to Ms)\",\r\n   Constants.massUnits);\r\nParameterFactory.addParam(\"m1\",    Parameter.SCALAR, false, \"Mass of the orbiting body (defaults to 0)\",\r\n   Constants.massUnits);\r\nParameterFactory.addParam(\"N0\",    Parameter.SCALAR, false, \"Orbits per day\");\r\n\r\nParameterFactory.addParam(\"nu\",    Parameter.SCALAR, false, \"Argument of periapsis\",\r\n   Constants.angUnits);\r\nParameterFactory.addParam(\"Omega\", Parameter.SCALAR, false, \"The longitude of the ascending node\",\r\n   Constants.angUnits);\r\nParameterFactory.addParam(\"Per\",   Parameter.SCALAR, false, \"The period of the orbit\",\r\n   Constants.intervUnits);\r\nParameterFactory.addParam(\"Pnode\", Parameter.VECTOR, false, \"The vector pointing the the ascending node\");\r\nParameterFactory.addParam(\"Rot\",   Parameter.BLOB,   false, \"Packaged rotation information\");\r\nParameterFactory.addParam(\"t0\",    Parameter.SCALAR, false, \"The reference time for the orbit\",\r\n   Constants.timeUnits);\r\n\r\n// Elements that vary during the orbit (i.e., as a function of time)\r\nParameterFactory.addParam(\"EA\",    Parameter.SCALAR, true, \"The eccentric anomaly\",\r\n   Constants.angUnits);\r\nParameterFactory.addParam(\"MA\",    Parameter.SCALAR, true, \"The mean anomaly\",\r\n   Constants.angUnits);\r\nParameterFactory.addParam(\"MLon\",  Parameter.SCALAR, true, \"The mean longitude\",\r\n   Constants.angUnits);\r\nParameterFactory.addParam(\"r\",     Parameter.VECTOR, true, \"Position of the object\",\r\n   Constants.radUnits);\r\nParameterFactory.addParam(\"t\",     Parameter.SCALAR, true, \"The current time\",\r\n   Constants.timeUnits);\r\nParameterFactory.addParam(\"TA\",    Parameter.SCALAR, true, \"The true anomaly\",\r\n   Constants.angUnits);\r\nParameterFactory.addParam(\"v\",     Parameter.VECTOR, true, \"Velocity of the object\",\r\n   Constants.velUnits);\r\n   \r\nif (!ParameterFactory.generators) {\r\n\tLoadOrigins();\r\n}","import Constants from        \"../std/Constants.js\";\nimport Util      from        \"../std/Util.js\";\n\nimport QOrb      from        \"../orbits/QOrb.js\";\nimport ParameterFactory from \"../orbits/ParameterFactory.js\";\nimport Parameter from        \"../orbits/Parameter.js\";\n\nclass Orbit {\n    \n    \n    constructor (name) {\n        this.name       = name;\n        this.parameters = {};\n    }\n    \n    getOrbitName() {\n        return this.name;\n    }\n    \n    setOrbitName(newName) {\n        this.name = newName;\n    }\n        \n    /** Reset the orbit to completely undefined */\n    clear() {\n        this.parameters = {};\n    }\n    \n    /** Clear 0 or more parameters */\n    clearParameters(...params) {\n        if (params && params[0]) {\n            params = params[0];\n        } else {\n            return;\n        }\n        for (var i=0; i<params.length; i += 1) {\n            delete this.parameters[params[i]];\n        }\n    }\n    \n    /** Known variable parameters, i.e., vary along the orbit */\n    variables() {\n        return this.conOrVar(true);\n    }\n    \n    /** Known orbital constants */\n    constants() {\n        return this.conOrVar(false);\n    }\n    \n    conOrVar(flag) {\n        const have = Object.keys(this.parameters);\n        const constants = [];\n        const params = this.parameters;\n        have.forEach(                \n            function(name) {\n                if (params[name].varies === flag) {\n                    constants.push(name);\n                }\n            }\n        );\n        return constants;        \n    }\n\n    /** Allow updates to varying parameters */\n    update(name, value) {\n        if (this.parameters[name]) {\n            if (this.parameters[name].varies) {\n                this.parameters[name].value = value;\n            }\n        }\n    }\n    \n    /** Create and add a parameter.  Note that unit is often null */\n    addParam(name, value, unit) {\n        const info = ParameterFactory.getParamInfo(name);\n        if (info == null) {\n            Util.log(\"Attempt to generate invalid parameter:\"+name);\n        } else {\n            this.addParameter(new Parameter(name, value, info.dim, info.varies, ParameterFactory.baseRender, unit));\n        }\n    }\n    \n    /** Add the specified parameter to the list of known parameters */\n    addParameter(p) {\n        const name = p.getName();\n        if (this.parameters[name]) {\n            Util.log(\"Replacing existing parameter:\" + name);\n        }\n        this.parameters[name] = p;        \n    }\n    \n    /** Add a structure of parameters into the orbit */\n    addStructure(str) {\n        for (let name in str) {\n            this.addParameter(ParameterFactory.genParam(name, str[name]));\n        }\n    }\n    \n\n    /** Return the specified parameter.\n     *  If it is already known just return it.\n     *  If not see if we can try to calculate it,\n     *  either immediately or after seeing what\n     *  other parameters are calcuable.\n     */\n    getParameter(name, cycle) {\n        \n        // Do we already know this parameter?\n        if (this.parameters[name]) {\n            return this.parameters[name];\n            \n        }\n        \n        \n        // Is this a knowable parameter\n        if (ParameterFactory.getParamInfo(name) == null) {\n            Util.log(\"Attempt to retrieve illegal parameter:\"+name);\n            return null;\n        }                \n\n        // Start a cycle where we look at all of the currently\n        // unknown parameters and see if we can compute one.\n        // If we can then we'll try to see if we can compute\n        // the desired parameter. If we are unable to compute any parameters\n        // then we stop, otherwise we go until we find we can't compute any more.\n        var updateParam = true;\n        while (updateParam) {\n            \n            // May have computed it below..\n            if (this.parameters[name]) {\n                return this.parameters[name];\n            }\n            \n            \n            // Can we compute the parameter we want now?\n            var pn = this.newComputable(name);\n            if (pn != null) {\n                // We could.  So just return it!\n                this.parameters[name] = pn;\n                return pn;\n            }\n            \n            // Not found yet.  Do we want to cycle and try again?\n            if (!cycle) {\n                return null;\n            }\n            \n            // Couldn't.  Try to compute any unknown parameter.\n            // If we are successful, then maybe that was the missing\n            // prerequiste for what we want and we can try again.\n            updateParam = false;\n            var names = ParameterFactory.getNames();\n            for (var i=0; i < names.length; i += 1) {\n                const param = names[i];\n                pn = this.newComputable(param);\n                if (pn != null) {\n                    updateParam = true;\n                    this.parameters[param] = pn;\n                } else {\n                }               \n            }\n            // If updateParam is still false, then we\n            // can't compute any more and we'll just exit the loot and return.\n        }\n        \n        var knowns = Object.keys(this.parameters).sort();\n        \n        Util.log(\"Unable to find antecedents to parameter:\"+name+\" with known parameters:\"+knowns);\n        return null; \n\n    }\n    \n    \n    /** If the parameter is unknown but computable, return the computed value. */\n    newComputable(name) {\n        \n        if (this.parameters[name]) {\n            return null;\n        }\n        \n\n        // If knowable but not yet known then see if we can compute it...\n        return ParameterFactory.deriveParameter(name, this.parameters);\n    }\n    \n    \n    /** Return a copy of the orbit */\n    copy() {\n        var c = new Orbit(this.name);\n        // Copy in the parameters.\n        for (var key in this.parameters) {\n            c.parameters[key] = ParameterFactory.genParam(key, this.parameters[key].value);\n        }\n        return c;        \n    }\n    \n    /** A quickorbit saves just the minimal information to compute the position or velocity\n     *  as a function of time.\n     */\n    quickOrbit() {\n        \n        if (this.parameters[\"Rot\"] && this.parameters[\"Ecc\"] &&\n            this.parameters[\"a\"]   && this.parameters[\"Per\"]) {\n            const params = {\n                rot: this.parameters[\"Rot\"].value,   // This encodes the three orbit angles.\n                e:   this.parameters[\"Ecc\"].getScalar(),\n                per: this.parameters[\"Per\"].value,  \n                a:   this.parameters[\"a\"].value,\n            }\n            \n            // May only know shape of orbit, not phase.\n            // OrbitXYZ should still work.\n            if (this.parameters[\"t0\"]) {\n                params[\"t0\"] = this.parameters[\"t0\"].value;\n            }\n            \n            if (params.e < 1) {\n                if (this.parameters[\"Per\"]) {\n                    params.per = this.parameters[\"Per\"].value;\n                } else {\n                    Util.log(\"No period given for elliptic orbit\");\n                    return null;                    \n                }\n            } else {\n                // While the true period is infinite, we need\n                // something that scales MA to time.\n                const a  =  params.a;\n                const G  =  this.getParameter(\"G\").value;\n                const M  =  this.getParameter(\"M\").value;\n                params.per = 2*Math.PI * Math.sqrt(-(a*a*a)/(G*M));\n            }\n            \n            const qorb = new QOrb(params);\n            qorb.scale = 1./Constants.AU;\n            \n            return qorb;\n            \n        } else {\n            \n            Util.log(\"Attempt to get quick orbit with undefined constants\");\n            Util.log(\"   Available:\"+Object.keys(this.parameters));\n            return null;\n        }\n    }\n}\n\nexport default Orbit;","import Constants from \"../std/Constants.js\";\n\n// // Source data for planetary and satellite information:\n// Planet orbits:\n//    https://ssd.jpl.nasa.gov/txt/aprx_pos_planets.pdf\n// Masses and radii of planets: (diameters in km x 500)\n//    https://nssdc.gsfc.nasa.gov/planetary/factsheet/\n// Satellite orbits:\n//    https://ssd.jpl.nasa.gov/?sat_elem\n// Radius of moon:\n//    https://nssdc.gsfc.nasa.gov/planetary/factsheet/moonfact.html\n// Radius Phobos and Deimos:\n//    Wikipedia\n// Pluto Moons\n//    Wikipedia seems consistent but believe other source was used.\n// Solar data\n//    Wikipedia\n// Planetary rotation periods and location of rotation poles\n//    Wikipedia\n// A variety of surces are used for the images (aka textures) of the planets\n// and moons.  Each image should indicate the source.\n\n// Structure:\n// {star :\n//   ...stellar data\n//   smallBodiesURL: small bodies data\n//   planets: {\n//      planet:\n//         ... planet data \n//         mooninfo: {\n//            satellite: {... satellite data... },...\n//         }\n//      },...\n//   missions: {\n//      mission: {... mission data}, ...\n//   }\n// }\n// Units are mostly MKS except for the elements of the planetary orbits\n// which are converted in SolarPlanets code.  Also the values of N0 (in\n// satellite orbits) are in orbits/day.\n\nconst dr = Math.PI/180;\nconst yr = Constants.CENTURY/100;\nconst fq = 2*Math.PI/yr;\n\nconst solarSystem = {\n  // Include star information here so we can use same structure\n  // to describe other stellar systems (which may have multiple stars in system)\n  // However for a multistar system we'd probably want an orbit\n  // for the stars too.\n  Sol: {\n\n    // ** Stellar data **\n    // (currently unused)\n    mass: 1.9885e30,\n    spt: \"G2V\",\n    MV:  4.83,\n    radius: 696342 * 1000,\n    rotationPhase: 0,\n    rotationPeriod: 25.38 * 86400,  // at lat=16 d.\n    rotAxis: {ra: 286.13, dec: 63.87},\n\n    // ** Small bodies data. **\n    // This should be a list of ephemerides of small bodies in MPC format.\n    // combG.json is a combination of all comets and the ~49,000 asteroids from the MPC\n    smallBodiesURL: \"data/combG.json\",\n\n    // ** Planets and satellites **\n    planets: {\n\n    Mercury: {\n\n        elems: {a:0.38709843,  e: 0.20563661,  i: 7.00559432,    ML:    252.25166724,  LonP: 77.45771895,     Omega: 48.33961819},\n        derivs:{a:0.00000000,  e: 0.00002123,  i:-0.00590158,    ML: 149472.67486623,  LonP:  0.15940013,     Omega: -0.12214182},\n\n        mass:      0.33e24,\n        radius: 4879 * 500,\n        rotationPhase: 0,\n        rotationPeriod: 58.646 * 86400,\n        rotAxis: {ra: 281.01*dr, dec: 61.45*dr},\n        render: {\n            color: 0xAAAAFF,\n            texture: {\n                map:\"images/2k_mercury.jpg\",\n                src:\"https://www.solarsystemscope.com/textures/download/2k_mercury.jpg\",\n                copyright:\"https://creativecommons.org/licenses/by/4.0/\"\n            }\n        }\n    },\n\n    Venus: {\n        elems: {a: 0.72332102,  e:  0.00676399, i:  3.39777545,  ML:   181.97970850, LonP: 131.76755713, Omega: 76.67261496},\n        derivs:{a: -0.00000026, e: -0.00005107, i:  0.00043494,  ML: 58517.81560260, LonP:   0.05679648, Omega: -0.27274174},\n        mass: 4.87e24,\n        radius: 12104 * 500,\n\n        rotationPhase: 0,\n        rotationPeriod: -243.0226 * 86400,\n        rotAxis: {ra: 272.76 *dr, dec: 67.16 *dr},\n        render: {\n            color: 0xFFFFFF,\n            texture: {\n                map:\"images/2k_venus_surface.jpg\",\n                src:\"https://www.solarsystemscope.com/textures/download/2k_venus_surface.jpg\",\n                copyright:\"https://creativecommons.org/licenses/by/4.0/\"\n            }\n        },\n    },\n    Earth: {\n        elems: {a: 1.00000018, e:  0.01673163, i: -0.00054346,  ML:   100.46691572, LonP: 102.93005885,  Omega: -5.11260389},\n        derivs:{a:-0.00000003, e: -0.00003661, i: -0.01337178,  ML: 35999.37306329, LonP:   0.31795260,  Omega: -0.24123856},\n        mass: 5.97e24,\n        radius: 12756 * 500,\n        rotationPeriod: Constants.SIDEREAL_DAY,\n        rotationPhase:  Constants.SIDEREAL_ANGLE_AT_EPOCH,\n        rotAxis:        {ra: 0 *dr, dec: 90 *dr},\n        render: {\n            color: 0x0000FF,\n            texture: {\n                map:       'images/earth.jpg',\n                bump:      'images/bump.jpg',\n                spec:      'images/spec.jpg',\n                credit:    'http://www.shadedrelief.com/natural3/',\n                copyright: 'Natural Earth III is free and without use restrictions.'\n            }\n        },\n        satelliteURL: \"data/norad.tle\",\n        moonInfo: {\n            Moon: {\n                moonScale: 0.1666666,\n                elems:{\n                    a:  384400*1000,\n                    Eccen:   0.0151,\n                    nu:    318.15 * dr,\n                    MA:    135.27 * dr,\n                    i:       5.16 * dr,\n                    Omega: 125.08 * dr,\n                    N0:     13.176358 / 360,\n                },\n                prec: {\n                    ep0:   12*3600,\n                    pNu:    fq/5.997,\n                    pOmega: fq/18.600\n                },\n\n                r: 1737400,\n                render: {\n                    frac: 0.27,\n                    color: 0xFFFF00,\n\n                    texture: {\n                        map:'images/moon.jpg',\n                        src:\"TBD\",\n                        copyright:\"TBD\"\n                    }\n                }\n            }\n        }\n    },\n    Mars: {\n        elems: {a: 1.52371243, e: 0.09336511, i:  1.85181869, ML:    -4.56813164, LonP: -23.91744784, Omega: 49.71320984},\n        derivs:{a: 0.00000097, e: 0.00009149, i: -0.00724757, ML: 19140.29934243, LonP:   0.45223625, Omega: -0.26852431},\n        mass: 0.642e24,\n        radius: 6792 * 500,\n        rotationPhase: 0,\n        rotationPeriod: 1.025957 * 86400,\n        rotAxis: {ra: 317.68142 *dr, dec: 52.88650 *dr},\n        render: {\n            color: 0xFF8800,\n            texture: {\n                map:\"images/2k_mars.jpg\",\n                src:\"https://www.solarsystemscope.com/textures/download/2k_mars.jpg\",\n                copyright:\"https://creativecommons.org/licenses/by/4.0/\"\n            }\n        },\n        moonInfo: {\n            Phobos: {\n                elems:{\n                    a:    9376000,\n                    Eccen:   0.0151,\n                    nu:    150.057 * dr,\n                    MA:     91.059 * dr,\n                    i:       1.075 * dr,\n                    Omega: 207.785 * dr,\n                    N0:   1128.8447569 / 360,\n                },\n                prec: {\n                    ep0:   -50 * yr,\n                    pNu:    fq/1.1316,\n                    pOmega: fq/2.2617\n                },\n                r: 11266.7,\n                render: {\n                    frac: .1,\n                    color: 0xFFFF00\n                }\n            },\n            Deimos: {\n                elems: {\n                    a:     23458000,\n                    Eccen:     0.0002,\n                    nu:      260.729 * dr,\n                    MA:      325.729 * dr,\n                    i:         1.788 * dr,\n                    Omega:    24.525 * dr,\n                    N0:      285.161879 / 360,\n                },\n                prec: {\n                    ep0:   -50 * yr,\n                    pNu:    fq/27.3703,\n                    pOmega: fq/54.5367\n                },\n                radius: 6200,\n                render: {\n                    frac: 0.05,\n                    color: 0xFF0000\n                }\n            }\n        }\n    },\n\n    Jupiter: {\n        elems: {a:  5.20248019, e: 0.04853590, i:  1.29861416, ML:    34.33479152, LonP: 14.27495244, Omega: 100.29282654},\n        derivs:{a: -0.00002864, e: 0.00018026, i: -0.00322699, ML:  3034.90371757, LonP:  0.18199196, Omega:   0.13024619},\n        corr:  [-0.00012452,   0.06064060, -0.35635438,     38.35125000],\n        mass:  1898e24,\n        radius: 142984 * 500,\n        rotationPhase: 0,\n        rotationPeriod: 1.025957 * 86400,\n        rotAxis: {ra: 268.057 *dr, dec: 64.495* dr},\n        render: {\n            color: 0x00FF00,\n            texture: {\n                map: \"images/2k_jupiter.jpg\",\n                src: \"https://www.solarsystemscope.com/textures/download/2k_jupiter.jpg\",\n                copyright: \"https://creativecommons.org/licenses/by/4.0/\"\n            }\n        },\n        moonInfo: {\nIo: {\n    elems: {a: 421800.*1000, Eccen: 0.0041, nu: 84.129 *dr,\n            MA: 342.021 *dr, i: 0.036 *dr, Omega: 43.977 *dr, N0: 203.4889583 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/1.625, fOmega: fq/7.420},\n    frame: {type: \"Laplace\", ra: 268.057 *dr, dec: 64.495 *dr},\n    render: {frac: 0.2, color: 0xFF0000,\n             texture: {map: \"images/iomap-planet-text-maps-fandom.png\",\n                       src: \"https://planet-texture-maps.fandom.com/wiki/Io\",\n                       copyright: \"Creative Commons Attribution-Share Alike License 3.0\",\n                      }\n            },\n    size:   100000\n},\nEuropa: {\n    elems: {a: 671100.*1000, Eccen: 0.0094, nu: 88.970 *dr,\n            MA: 171.016 *dr, i: 0.466 *dr, Omega: 219.106 *dr, N0: 101.3747242 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/1.394, fOmega: fq/30.184},\n    frame: {type: \"Laplace\", ra: 268.084 *dr, dec: 64.506 *dr},\n    render: {frac: 0.2, color: 0xFF0000,\n             texture: {\n                 map: \"images/europa_texture_map__20k__by_askaniy_dcqbaif-pre.jpg\",\n                 src: \"https://www.deviantart.com/askaniy/art/Europa-Texture-Map-20K-769790967\",\n                 copyright:\"Creative Commons Attribution-Noncommercial-Share Alike 3.0 License\"\n             }\n    },\n    size:   100000\n},\nGanymede: {\n    elems: {a: 1070400.*1000, Eccen: 0.0013, nu: 192.417 *dr,\n            MA: 317.540 *dr, i: 0.177 *dr, Omega: 63.552 *dr, N0: 50.3176072 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/63.549, fOmega: fq/132.654},\n    frame: {type: \"Laplace\", ra: 268.168 *dr, dec: 64.543 *dr},\n    render: {frac: 0.2, color: 0xFF0000,\n             texture: {\n                 map: \"images/ganymede_texture_map__11k__by_askaniy_dddhxoy-pre.jpg\",\n                 src: \"https://www.deviantart.com/askaniy/art/Ganymede-Texture-Map-11K-808732114\",\n                 copyright: \"Creative Commons Attribution-Noncommercial-Share Alike 3.0 License\"\n             },\n    },\n    size:   100000\n},\nCallisto: {\n    elems: {a: 1882700.*1000, Eccen: 0.0074, nu: 52.643 *dr,\n            MA: 181.408 *dr, i: 0.192 *dr, Omega: 298.848 *dr, N0: 21.5710728 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/205.75, fOmega: fq/338.82},\n    frame: {type: \"Laplace\", ra: 268.639 *dr, dec: 64.749 *dr},\n    render: {frac: 0.2, color: 0xFF0000,\n            texture: {\n                map: \"images/callisto_texture_map__8k__by_askaniy_dddit1h-pre.jpg\",\n                src: \"https://www.deviantart.com/askaniy/art/Callisto-Texture-Map-8K-808772741\",\n                copyright: \"Creative Commons Attribution-Noncommercial-Share Alike 3.0 License\"\n            }\n    },\n    size:   100000\n},\nAmalthea: {\n    elems: {a: 181400.*1000, Eccen: 0.0032, nu: 155.873 *dr,\n            MA: 185.194 *dr, i: 0.380 *dr, Omega: 108.946 *dr, N0: 722.6317143 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/0.196, fOmega: fq/0.393},\n    frame: {type: \"Laplace\", ra: 268.057 *dr, dec: 64.495 *dr},\n    render: {frac: 0.08, color: 0x0000FF},\n    size:   100000\n},\nThebe: {\n    elems: {a: 221900.*1000, Eccen: 0.0176, nu: 234.269 *dr,\n            MA: 135.956 *dr, i: 1.080 *dr, Omega: 235.694 *dr, N0: 533.7002568 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/0.398, fOmega: fq/0.797},\n    frame: {type: \"Laplace\", ra: 268.057 *dr, dec: 64.495 *dr},\n    render: {frac: 0.08, color: 0x0000FF},\n    size:   100000\n},\nAdrastea: {\n    elems: {a: 129000.*1000, Eccen: 0.0018, nu: 328.047 *dr,\n            MA: 135.673 *dr, i: 0.054 *dr, Omega: 228.378 *dr, N0: 1206.9988064 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/0.058, fOmega: fq/0.116},\n    frame: {type: \"Laplace\", ra: 268.057 *dr, dec: 64.496 *dr},\n    render: {frac: 0.08, color: 0x0000FF},\n    size:   100000\n},\nMetis: {\n    elems: {a: 128000.*1000, Eccen: 0.0012, nu: 297.177 *dr,\n            MA: 276.047 *dr, i: 0.019 *dr, Omega: 146.912 *dr, N0: 1221.2545982 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/0.057, fOmega: fq/0.115},\n    frame: {type: \"Laplace\", ra: 268.057 *dr, dec: 64.496 *dr},\n    render: {frac: 0.08, color: 0x0000FF},\n    size:   100000\n},\nHimalia: {\n    elems: {a: 11460000.*1000, Eccen: 0.1586, nu: 331.234 *dr,\n            MA: 66.874 *dr, i: 28.612 *dr, Omega: 64.798 *dr, N0: 1.4367562 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/139.38, fOmega: fq/292.57},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nElara: {\n    elems: {a: 11740000.*1000, Eccen: 0.2108, nu: 142.001 *dr,\n            MA: 330.985 *dr, i: 27.945 *dr, Omega: 115.511 *dr, N0: 1.3865315 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/128.07, fOmega: fq/265.30},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nPasiphae: {\n    elems: {a: 23629000.*1000, Eccen: 0.4062, nu: 169.226 *dr,\n            MA: 279.769 *dr, i: 151.413 *dr, Omega: 314.223 *dr, N0: 0.4841223 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/81.20, fOmega: fq/81.17},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nSinope: {\n    elems: {a: 23942000.*1000, Eccen: 0.2552, nu: 354.541 *dr,\n            MA: 165.352 *dr, i: 158.189 *dr, Omega: 309.199 *dr, N0: 0.4743772 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/88.72, fOmega: fq/87.40},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nLysithea: {\n    elems: {a: 11717000.*1000, Eccen: 0.1161, nu: 49.670 *dr,\n            MA: 330.475 *dr, i: 27.663 *dr, Omega: 5.326 *dr, N0: 1.3888891 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/131.19, fOmega: fq/292.04},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nCarme: {\n    elems: {a: 23401000.*1000, Eccen: 0.2546, nu: 26.416 *dr,\n            MA: 233.375 *dr, i: 164.994 *dr, Omega: 114.854 *dr, N0: 0.4903501 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/80.98, fOmega: fq/88.32},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nAnanke: {\n    elems: {a: 21254000.*1000, Eccen: 0.2332, nu: 95.772 *dr,\n            MA: 253.384 *dr, i: 148.693 *dr, Omega: 15.959 *dr, N0: 0.5716125 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/144.92, fOmega: fq/110.12},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nLeda: {\n    elems: {a: 11164000.*1000, Eccen: 0.1624, nu: 269.393 *dr,\n            MA: 230.352 *dr, i: 27.882 *dr, Omega: 219.181 *dr, N0: 1.4942407 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/144.79, fOmega: fq/301.94},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nCallirrhoe: {\n    elems: {a: 24099000.*1000, Eccen: 0.2796, nu: 23.909 *dr,\n            MA: 107.962 *dr, i: 147.080 *dr, Omega: 283.104 *dr, N0: 0.4744232 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/120.06, fOmega: fq/89.03},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nThemisto: {\n    elems: {a: 7504000.*1000, Eccen: 0.2435, nu: 217.147 *dr,\n            MA: 313.051 *dr, i: 42.977 *dr, Omega: 192.288 *dr, N0: 2.7688033 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/686.41, fOmega: fq/528.39},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nMegaclite: {\n    elems: {a: 23814000.*1000, Eccen: 0.4156, nu: 288.882 *dr,\n            MA: 135.272 *dr, i: 152.781 *dr, Omega: 280.575 *dr, N0: 0.4781658 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/76.90, fOmega: fq/79.23},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nTaygete: {\n    elems: {a: 23363000.*1000, Eccen: 0.2523, nu: 231.540 *dr,\n            MA: 94.756 *dr, i: 165.253 *dr, Omega: 305.114 *dr, N0: 0.4915209 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/81.04, fOmega: fq/88.59},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nChaldene: {\n    elems: {a: 23181000.*1000, Eccen: 0.2503, nu: 243.878 *dr,\n            MA: 267.454 *dr, i: 165.155 *dr, Omega: 134.240 *dr, N0: 0.4974208 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/81.66, fOmega: fq/89.52},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nHarpalyke: {\n    elems: {a: 21106000.*1000, Eccen: 0.2296, nu: 134.505 *dr,\n            MA: 215.956 *dr, i: 148.759 *dr, Omega: 29.834 *dr, N0: 0.5775515 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/147.17, fOmega: fq/111.64},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nKalyke: {\n    elems: {a: 23565000.*1000, Eccen: 0.2466, nu: 218.934 *dr,\n            MA: 255.702 *dr, i: 165.121 *dr, Omega: 43.864 *dr, N0: 0.4851490 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/80.76, fOmega: fq/87.67},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nIocaste: {\n    elems: {a: 21272000.*1000, Eccen: 0.2152, nu: 64.727 *dr,\n            MA: 213.675 *dr, i: 149.411 *dr, Omega: 269.613 *dr, N0: 0.5699784 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/145.78, fOmega: fq/111.18},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nErinome: {\n    elems: {a: 23286000.*1000, Eccen: 0.2655, nu: 10.274 *dr,\n            MA: 267.136 *dr, i: 164.914 *dr, Omega: 317.497 *dr, N0: 0.4941719 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/80.51, fOmega: fq/88.33},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nIsonoe: {\n    elems: {a: 23231000.*1000, Eccen: 0.2471, nu: 116.879 *dr,\n            MA: 124.941 *dr, i: 165.250 *dr, Omega: 130.961 *dr, N0: 0.4956884 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/81.80, fOmega: fq/89.52},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nPraxidike: {\n    elems: {a: 21148000.*1000, Eccen: 0.2274, nu: 190.862 *dr,\n            MA: 117.480 *dr, i: 148.885 *dr, Omega: 280.956 *dr, N0: 0.5756381 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/144.77, fOmega: fq/111.16},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nAutonoe: {\n    elems: {a: 24037000.*1000, Eccen: 0.3152, nu: 54.793 *dr,\n            MA: 142.035 *dr, i: 152.364 *dr, Omega: 272.817 *dr, N0: 0.4730563 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/92.33, fOmega: fq/85.00},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nThyone: {\n    elems: {a: 21197000.*1000, Eccen: 0.2307, nu: 97.023 *dr,\n            MA: 238.786 *dr, i: 148.595 *dr, Omega: 233.022 *dr, N0: 0.5739872 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/147.58, fOmega: fq/110.93},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nHermippe: {\n    elems: {a: 21297000.*1000, Eccen: 0.2095, nu: 300.836 *dr,\n            MA: 131.854 *dr, i: 150.740 *dr, Omega: 330.393 *dr, N0: 0.5679040 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/136.92, fOmega: fq/110.64},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nAitne: {\n    elems: {a: 23317000.*1000, Eccen: 0.2627, nu: 99.401 *dr,\n            MA: 105.000 *dr, i: 165.048 *dr, Omega: 8.679 *dr, N0: 0.4930702 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/80.36, fOmega: fq/88.19},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nEurydome: {\n    elems: {a: 23146000.*1000, Eccen: 0.2755, nu: 223.631 *dr,\n            MA: 287.689 *dr, i: 150.271 *dr, Omega: 302.470 *dr, N0: 0.5018735 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/111.58, fOmega: fq/93.30},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nEuanthe: {\n    elems: {a: 21039000.*1000, Eccen: 0.2320, nu: 320.635 *dr,\n            MA: 333.101 *dr, i: 148.915 *dr, Omega: 254.297 *dr, N0: 0.5802269 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/144.52, fOmega: fq/111.71},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nEuporie: {\n    elems: {a: 19336000.*1000, Eccen: 0.1438, nu: 89.904 *dr,\n            MA: 70.243 *dr, i: 145.740 *dr, Omega: 60.143 *dr, N0: 0.6537221 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/337063.88, fOmega: fq/139.45},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nOrthosie: {\n    elems: {a: 21158000.*1000, Eccen: 0.2807, nu: 216.805 *dr,\n            MA: 204.517 *dr, i: 146.004 *dr, Omega: 221.949 *dr, N0: 0.5782402 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/142.35, fOmega: fq/107.53},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nSponde: {\n    elems: {a: 23790000.*1000, Eccen: 0.3112, nu: 61.885 *dr,\n            MA: 174.044 *dr, i: 150.997 *dr, Omega: 116.363 *dr, N0: 0.4810760 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/98.08, fOmega: fq/87.01},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nKale: {\n    elems: {a: 23306000.*1000, Eccen: 0.2597, nu: 44.233 *dr,\n            MA: 212.853 *dr, i: 164.944 *dr, Omega: 60.170 *dr, N0: 0.4934152 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/80.91, fOmega: fq/88.57},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nPasithee: {\n    elems: {a: 23091000.*1000, Eccen: 0.2682, nu: 231.920 *dr,\n            MA: 215.443 *dr, i: 165.117 *dr, Omega: 327.729 *dr, N0: 0.5003695 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/80.82, fOmega: fq/89.25},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nHegemone: {\n    elems: {a: 23575000.*1000, Eccen: 0.3445, nu: 197.144 *dr,\n            MA: 236.950 *dr, i: 154.164 *dr, Omega: 318.902 *dr, N0: 0.4866038 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/85.66, fOmega: fq/84.87},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nMneme: {\n    elems: {a: 21033000.*1000, Eccen: 0.2258, nu: 40.542 *dr,\n            MA: 256.860 *dr, i: 148.585 *dr, Omega: 13.467 *dr, N0: 0.5806001 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/148.06, fOmega: fq/112.26},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nAoede: {\n    elems: {a: 23974000.*1000, Eccen: 0.4325, nu: 59.739 *dr,\n            MA: 197.676 *dr, i: 158.272 *dr, Omega: 173.392 *dr, N0: 0.4728089 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/69.17, fOmega: fq/76.83},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nThelxinoe: {\n    elems: {a: 21160000.*1000, Eccen: 0.2201, nu: 313.183 *dr,\n            MA: 268.013 *dr, i: 151.390 *dr, Omega: 169.962 *dr, N0: 0.5732248 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/130.58, fOmega: fq/110.42},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nArche: {\n    elems: {a: 23352000.*1000, Eccen: 0.2495, nu: 171.632 *dr,\n            MA: 39.713 *dr, i: 165.015 *dr, Omega: 339.210 *dr, N0: 0.4918707 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/81.40, fOmega: fq/88.73},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nKallichore: {\n    elems: {a: 23276000.*1000, Eccen: 0.2509, nu: 9.836 *dr,\n            MA: 55.937 *dr, i: 165.102 *dr, Omega: 30.339 *dr, N0: 0.4943462 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/81.56, fOmega: fq/89.16},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nHelike: {\n    elems: {a: 21065000.*1000, Eccen: 0.1498, nu: 299.482 *dr,\n            MA: 43.659 *dr, i: 154.842 *dr, Omega: 89.749 *dr, N0: 0.5747808 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/127.40, fOmega: fq/114.52},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nCarpo: {\n    elems: {a: 17056000.*1000, Eccen: 0.4317, nu: 90.372 *dr,\n            MA: 337.062 *dr, i: 51.624 *dr, Omega: 50.597 *dr, N0: 0.7889862 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/711550.25, fOmega: fq/112.82},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nEukelade: {\n    elems: {a: 23323000.*1000, Eccen: 0.2619, nu: 309.685 *dr,\n            MA: 204.846 *dr, i: 165.265 *dr, Omega: 193.558 *dr, N0: 0.4929260 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/80.24, fOmega: fq/88.16},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nCyllene: {\n    elems: {a: 23800000.*1000, Eccen: 0.4155, nu: 187.429 *dr,\n            MA: 128.345 *dr, i: 150.336 *dr, Omega: 252.611 *dr, N0: 0.4787365 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/80.19, fOmega: fq/79.71},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nKore: {\n    elems: {a: 24482000.*1000, Eccen: 0.3313, nu: 138.071 *dr,\n            MA: 33.416 *dr, i: 145.173 *dr, Omega: 313.355 *dr, N0: 0.4634134 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/108.39, fOmega: fq/84.47},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nHerse: {\n    elems: {a: 23408000.*1000, Eccen: 0.2541, nu: 330.295 *dr,\n            MA: 141.667 *dr, i: 164.964 *dr, Omega: 295.702 *dr, N0: 0.4901154 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/80.98, fOmega: fq/88.27},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\n\"S/2000 J 11\": {\n    elems: {a: 12297000.*1000, Eccen: 0.2320, nu: 173.544 *dr,\n            MA: 309.734 *dr, i: 28.631 *dr, Omega: 294.497 *dr, N0: 1.2939791 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/117.58, fOmega: fq/241.93},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\n\"S/2003 J 2\": {\n    elems: {a: 28347000.*1000, Eccen: 0.4100, nu: 165.201 *dr,\n            MA: 237.932 *dr, i: 157.291 *dr, Omega: 344.782 *dr, N0: 0.3671484 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/60.25, fOmega: fq/62.87},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\n\"S/2003 J 3\": {\n    elems: {a: 20221000.*1000, Eccen: 0.1969, nu: 66.338 *dr,\n            MA: 311.780 *dr, i: 147.547 *dr, Omega: 231.489 *dr, N0: 0.6165779 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/181.96, fOmega: fq/122.74},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\n\"S/2003 J 4\": {\n    elems: {a: 23929000.*1000, Eccen: 0.3624, nu: 197.401 *dr,\n            MA: 260.480 *dr, i: 149.589 *dr, Omega: 179.131 *dr, N0: 0.4766663 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/90.17, fOmega: fq/82.96},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\n\"S/2003 J 5\": {\n    elems: {a: 23495000.*1000, Eccen: 0.2476, nu: 90.066 *dr,\n            MA: 336.636 *dr, i: 165.248 *dr, Omega: 176.683 *dr, N0: 0.4873118 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/80.95, fOmega: fq/88.10},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\n\"S/2003 J 9\": {\n    elems: {a: 23385000.*1000, Eccen: 0.2632, nu: 292.662 *dr,\n            MA: 348.415 *dr, i: 165.047 *dr, Omega: 44.321 *dr, N0: 0.4909185 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/80.27, fOmega: fq/87.93},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\n\"S/2003 J 10\": {\n    elems: {a: 23042000.*1000, Eccen: 0.4299, nu: 170.833 *dr,\n            MA: 258.937 *dr, i: 165.073 *dr, Omega: 151.911 *dr, N0: 0.5026172 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/68.06, fOmega: fq/80.34},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\n\"S/2003 J 12\": {\n    elems: {a: 17830000.*1000, Eccen: 0.4904, nu: 13.288 *dr,\n            MA: 38.543 *dr, i: 151.003 *dr, Omega: 65.530 *dr, N0: 0.7351860 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/97.93, fOmega: fq/109.42},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\n\"S/2003 J 15\": {\n    elems: {a: 22627000.*1000, Eccen: 0.1899, nu: 18.405 *dr,\n            MA: 58.865 *dr, i: 146.492 *dr, Omega: 236.674 *dr, N0: 0.5219082 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/187.83, fOmega: fq/105.37},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\n\"S/2003 J 16\": {\n    elems: {a: 21097000.*1000, Eccen: 0.2281, nu: 57.681 *dr,\n            MA: 307.563 *dr, i: 148.683 *dr, Omega: 16.883 *dr, N0: 0.5779589 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/146.70, fOmega: fq/111.64},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\n\"S/2003 J 18\": {\n    elems: {a: 20508000.*1000, Eccen: 0.0895, nu: 130.894 *dr,\n            MA: 202.160 *dr, i: 146.077 *dr, Omega: 158.247 *dr, N0: 0.6018719 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/506.86, fOmega: fq/131.88},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\n\"S/2003 J 19\": {\n    elems: {a: 23533000.*1000, Eccen: 0.2552, nu: 176.668 *dr,\n            MA: 223.035 *dr, i: 165.116 *dr, Omega: 27.442 *dr, N0: 0.4862156 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/80.17, fOmega: fq/87.39},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\n\"S/2003 J 23\": {\n    elems: {a: 23567000.*1000, Eccen: 0.2746, nu: 255.114 *dr,\n            MA: 144.222 *dr, i: 146.424 *dr, Omega: 41.706 *dr, N0: 0.4914942 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/130.10, fOmega: fq/92.90},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\n\"S/2010 J 1\": {\n    elems: {a: 23449000.*1000, Eccen: 0.2491, nu: 189.230 *dr,\n            MA: 160.525 *dr, i: 165.100 *dr, Omega: 282.871 *dr, N0: 0.4887995 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/81.18, fOmega: fq/88.33},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\n\"S/2010 J 2\": {\n    elems: {a: 21004000.*1000, Eccen: 0.2267, nu: 18.252 *dr,\n            MA: 312.074 *dr, i: 148.673 *dr, Omega: 5.802 *dr, N0: 0.5817371 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/147.06, fOmega: fq/112.35},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\n\"S/2011 J 1\": {\n    elems: {a: 23446000.*1000, Eccen: 0.2534, nu: 31.514 *dr,\n            MA: 256.027 *dr, i: 165.318 *dr, Omega: 250.728 *dr, N0: 0.4888998 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/80.45, fOmega: fq/87.91},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\n\"S/2011 J 2\": {\n    elems: {a: 23124000.*1000, Eccen: 0.3493, nu: 270.154 *dr,\n            MA: 285.597 *dr, i: 153.597 *dr, Omega: 24.866 *dr, N0: 0.5011321 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/87.78, fOmega: fq/87.00},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n}\n        }\n    },\n\n    Saturn: {\n        elems: {a: 9.54149883, e: 0.05550825, i: 2.49424102, ML:    50.07571329, LonP: 92.86136063, Omega: 113.63998702},\n        derivs:{a:-0.00003065, e:-0.00032044, i: 0.00451969, ML:  1222.11494724, LonP:  0.54179478, Omega:  -0.25015002},\n        corr: [ 0.00025899,  -0.13434469,  0.87320147,     38.35125000],\n        mass: 568e24,\n        radius: 120536 * 500,\n        rotationPhase: 0,\n        rotationPeriod: 10*3600 + 33*60 + 38,\n        rotAxis: {ra: 40.589*dr, dec: 83.537 *dr},\n        render: {\n            color: 0xAAFFAA,\n            texture: {\n                map:\"images/2k_saturn.jpg\",\n                src:\"https://www.solarsystemscope.com/textures/download/2k_saturn.jpg\",\n                copyright:\"https://creativecommons.org/licenses/by/4.0/\"\n            },\n        },\n        ring: {\n            ringAngle: 26.7,\n            color: 0xAACCAA,\n            texture: {\n                map:\"images/saturn_rings_fargetanik.png\",\n                src:\"https://www.deviantart.com/fargetanik/art/Saturn-Rings-Texture-Map-13k-814720659\",\n                copyright:\"Creative Commons Attribution-Share Alike License 3.0\",\n                transparent: true\n            },\n            innerRadius: 1.239,  // https://nssdc.gsfc.nasa.gov/planetary/factsheet/satringfact.html\n            outerRadius: 2.320\n        },\n        moonInfo: {\nMimas: {\n    elems: {a: 185539.*1000, Eccen: 0.0196, nu: 332.499 *dr,\n            MA: 14.848 *dr, i: 1.574 *dr, Omega: 173.027 *dr, N0: 381.9944948 /360},\n    prec:  {ep0:  12*3600,\n            fNu: fq/0.493, fOmega: fq/0.986},\n    frame: {type: \"Laplace\", ra: 40.589 *dr, dec: 83.536 *dr},\n    render: {frac: 0.05, color: 0xFFFF00},\n    size:   100000\n},\nEnceladus: {\n    elems: {a: 238042.*1000, Eccen: 0.0000, nu: 0.076 *dr,\n            MA: 199.686 *dr, i: 0.003 *dr, Omega: 342.507 *dr, N0: 262.7318978 /360},\n    prec:  {ep0:  12*3600,\n            fNu: fq/1.184, fOmega: fq/2.360},\n    frame: {type: \"Laplace\", ra: 40.586 *dr, dec: 83.536 *dr},\n    render: {frac: 0.05, color: 0xFFFF00},\n    size:   100000\n},\nTethys: {\n    elems: {a: 294672.*1000, Eccen: 0.0001, nu: 45.202 *dr,\n            MA: 243.367 *dr, i: 1.091 *dr, Omega: 259.842 *dr, N0: 190.6979109 /360},\n    prec:  {ep0:  12*3600,\n            fNu: fq/2.490, fOmega: fq/4.982},\n    frame: {type: \"Laplace\", ra: 40.578 *dr, dec: 83.537 *dr},\n    render: {frac: 0.05, color: 0xFFFF00},\n    size:   100000\n},\nDione: {\n    elems: {a: 377415.*1000, Eccen: 0.0022, nu: 284.315 *dr,\n            MA: 322.232 *dr, i: 0.028 *dr, Omega: 290.415 *dr, N0: 131.5349307 /360},\n    prec:  {ep0:  12*3600,\n            fNu: fq/5.852, fOmega: fq/11.709},\n    frame: {type: \"Laplace\", ra: 40.544 *dr, dec: 83.540 *dr},\n    render: {frac: 0.05, color: 0xFFFF00},\n    size:   100000\n},\nRhea: {\n    elems: {a: 527068.*1000, Eccen: 0.0002, nu: 241.619 *dr,\n            MA: 179.781 *dr, i: 0.333 *dr, Omega: 351.042 *dr, N0: 79.6900459 /360},\n    prec:  {ep0:  12*3600,\n            fNu: fq/17.939, fOmega: fq/35.832},\n    frame: {type: \"Laplace\", ra: 40.328 *dr, dec: 83.559 *dr},\n    render: {frac: 0.05, color: 0xFFFF00},\n    size:   100000\n},\nTitan: {\n    elems: {a: 1221865.*1000, Eccen: 0.0288, nu: 180.532 *dr,\n            MA: 163.310 *dr, i: 0.306 *dr, Omega: 28.060 *dr, N0: 22.5769756 /360},\n    prec:  {ep0:  12*3600,\n            fNu: fq/352.12, fOmega: fq/704.60},\n    frame: {type: \"Laplace\", ra: 36.214 *dr, dec: 83.949 *dr},\n    render: {frac: 0.3, color: 0xFF0000,\n      texture: {\n          map: \"images/titan_texture_map_8k_by_fargetanik_db0f8m0-fullview.jpg\",\n          src: \"https://www.deviantart.com/fargetanik/art/Titan-Texture-Map-8k-665838936\",\n          copyright:\"Creative Commons Attribution-Share Alike License 3.0\"\n      }\n    },\n    size:   100000\n},\nHyperion: {\n    elems: {a: 1500933.*1000, Eccen: 0.0232, nu: 303.178 *dr,\n            MA: 86.342 *dr, i: 0.615 *dr, Omega: 263.847 *dr, N0: 16.9199503 /360},\n    prec:  {ep0:  12*3600,\n            fNu: fq/127.99, fOmega: fq/154.66},\n    frame: {type: \"Laplace\", ra: 36.372 *dr, dec: 83.862 *dr},\n    render: {frac: 0.05, color: 0xFFFF00},\n    size:   100000\n},\nIapetus: {\n    elems: {a: 3560854.*1000, Eccen: 0.0293, nu: 271.606 *dr,\n            MA: 201.789 *dr, i: 8.298 *dr, Omega: 81.105 *dr, N0: 4.5379416 /360},\n    prec:  {ep0:  12*3600,\n            fNu: fq/1676.69, fOmega: fq/3438.73},\n    frame: {type: \"Laplace\", ra: 284.715 *dr, dec: 78.749 *dr},\n    render: {frac: 0.05, color: 0xFFFF00},\n    size:   100000\n},\nPhoebe: {\n    elems: {a: 12947918.*1000, Eccen: 0.1634, nu: 342.500 *dr,\n            MA: 53.038 *dr, i: 175.243 *dr, Omega: 241.086 *dr, N0: 0.6569114 /360},\n    prec:  {ep0:  12*3600,\n            fNu: fq/460.92, fOmega: fq/723.17},\n    frame: {type: \"Laplace\", ra: 275.954 *dr, dec: 67.455 *dr},\n    render: {frac: 0.05, color: 0xFFFF00},\n    size:   100000\n},\nJanus: {\n    elems: {a: 151450.*1000, Eccen: 0.0098, nu: 16.012 *dr,\n            MA: 17.342 *dr, i: 0.165 *dr, Omega: 154.175 *dr, N0: 518.3431513 /360},\n    prec:  {ep0:  12*3600,\n            fNu: fq/0.240, fOmega: fq/0.482},\n    frame: {type: \"Laplace\", ra: 40.585 *dr, dec: 83.538 *dr},\n    render: {frac: 0.03, color: 0xFFFF00},\n    size:   100000\n},\nEpimetheus: {\n    elems: {a: 151450.*1000, Eccen: 0.0161, nu: 88.975 *dr,\n            MA: 80.377 *dr, i: 0.353 *dr, Omega: 192.762 *dr, N0: 518.0979676 /360},\n    prec:  {ep0:  12*3600,\n            fNu: fq/0.240, fOmega: fq/0.482},\n    frame: {type: \"Laplace\", ra: 40.585 *dr, dec: 83.538 *dr},\n    render: {frac: 0.03, color: 0xFFFF00},\n    size:   100000\n},\nHelene: {\n    elems: {a: 377444.*1000, Eccen: 0.0000, nu: 33.134 *dr,\n            MA: 43.186 *dr, i: 0.213 *dr, Omega: 163.112 *dr, N0: 131.5349306 /360},\n    prec:  {ep0:  12*3600,\n            fNu: fq/2.562, fOmega: fq/11.706},\n    frame: {type: \"Laplace\", ra: 40.544 *dr, dec: 83.540 *dr},\n    render: {frac: 0.03, color: 0xFFFF00},\n    size:   100000\n},\nTelesto: {\n    elems: {a: 294720.*1000, Eccen: 0.0002, nu: 119.135 *dr,\n            MA: 260.157 *dr, i: 1.180 *dr, Omega: 229.182 *dr, N0: 190.6979089 /360},\n    prec:  {ep0:  12*3600,\n            fNu: fq/2.489, fOmega: fq/4.982},\n    frame: {type: \"Laplace\", ra: 40.578 *dr, dec: 83.537 *dr},\n    render: {frac: 0.03, color: 0xFFFF00},\n    size:   100000\n},\nCalypso: {\n    elems: {a: 294721.*1000, Eccen: 0.0005, nu: 17.470 *dr,\n            MA: 156.660 *dr, i: 1.500 *dr, Omega: 314.226 *dr, N0: 190.6979089 /360},\n    prec:  {ep0:  12*3600,\n            fNu: fq/2.487, fOmega: fq/4.983},\n    frame: {type: \"Laplace\", ra: 40.578 *dr, dec: 83.537 *dr},\n    render: {frac: 0.03, color: 0xFFFF00},\n    size:   100000\n},\nAtlas: {\n    elems: {a: 137774.*1000, Eccen: 0.0011, nu: 210.851 *dr,\n            MA: 283.282 *dr, i: 0.003 *dr, Omega: 236.422 *dr, N0: 598.3147505 /360},\n    prec:  {ep0:  12*3600,\n            fNu: fq/0.171, fOmega: fq/0.344},\n    frame: {type: \"Laplace\", ra: 40.585 *dr, dec: 83.538 *dr},\n    render: {frac: 0.03, color: 0xFFFF00},\n    size:   100000\n},\nPrometheus: {\n    elems: {a: 139429.*1000, Eccen: 0.0022, nu: 37.514 *dr,\n            MA: 96.886 *dr, i: 0.007 *dr, Omega: 319.176 *dr, N0: 587.2860142 /360},\n    prec:  {ep0:  12*3600,\n            fNu: fq/0.179, fOmega: fq/0.359},\n    frame: {type: \"Laplace\", ra: 40.585 *dr, dec: 83.538 *dr},\n    render: {frac: 0.02, color: 0xFFFF00},\n    size:   100000\n},\nPandora: {\n    elems: {a: 141810.*1000, Eccen: 0.0042, nu: 66.248 *dr,\n            MA: 125.112 *dr, i: 0.050 *dr, Omega: 147.272 *dr, N0: 572.7878754 /360},\n    prec:  {ep0:  12*3600,\n            fNu: fq/0.190, fOmega: fq/0.381},\n    frame: {type: \"Laplace\", ra: 40.585 *dr, dec: 83.538 *dr},\n    render: {frac: 0.02, color: 0xFFFF00},\n    size:   100000\n},\nPan: {\n    elems: {a: 133585.*1000, Eccen: 0.0000, nu: 103.331 *dr,\n            MA: 351.187 *dr, i: 0.000 *dr, Omega: 52.076 *dr, N0: 626.0317341 /360},\n    prec:  {ep0:  12*3600,\n            fNu: fq/0.154, fOmega: fq/0.309},\n    frame: {type: \"Laplace\", ra: 40.583 *dr, dec: 83.538 *dr},\n    render: {frac: 0.02, color: 0xFFFF00},\n    size:   100000\n},\nMethone: {\n    elems: {a: 194402.*1000, Eccen: 0.0000, nu: 134.636 *dr,\n            MA: 71.189 *dr, i: 0.013 *dr, Omega: 313.562 *dr, N0: 356.5949252 /360},\n    prec:  {ep0:  12*3600,\n            fNu: fq/0.250, fOmega: fq/1.158},\n    frame: {type: \"Laplace\", ra: 40.589 *dr, dec: 83.536 *dr},\n    render: {frac: 0.02, color: 0xFFFF00},\n    size:   100000\n},\nPallene: {\n    elems: {a: 212282.*1000, Eccen: 0.0040, nu: 16.074 *dr,\n            MA: 356.229 *dr, i: 0.001 *dr, Omega: 123.180 *dr, N0: 312.0270737 /360},\n    prec:  {ep0:  12*3600,\n            fNu: fq/0.862, fOmega: fq/1.899},\n    frame: {type: \"Laplace\", ra: 40.579 *dr, dec: 83.537 *dr},\n    render: {frac: 0.02, color: 0xFFFF00},\n    size:   100000\n},\nPolydeuces: {\n    elems: {a: 377222.*1000, Eccen: 0.0191, nu: 311.847 *dr,\n            MA: 89.307 *dr, i: 0.175 *dr, Omega: 67.936 *dr, N0: 131.5349306 /360},\n    prec:  {ep0:  12*3600,\n            fNu: fq/5.811, fOmega: fq/11.695},\n    frame: {type: \"Laplace\", ra: 40.543 *dr, dec: 83.540 *dr},\n    render: {frac: 0.02, color: 0xFFFF00},\n    size:   100000\n},\nDaphnis: {\n    elems: {a: 136504.*1000, Eccen: 0.0000, nu: 266.931 *dr,\n            MA: 113.790 *dr, i: 0.003 *dr, Omega: 132.867 *dr, N0: 605.9791512 /360},\n    prec:  {ep0:  12*3600,\n            fNu: fq/0.166, fOmega: fq/0.334},\n    frame: {type: \"Laplace\", ra: 40.583 *dr, dec: 83.538 *dr},\n    render: {frac: 0.02, color: 0xFFFF00},\n    size:   100000\n},\nAnthe: {\n    elems: {a: 196888.*1000, Eccen: 0.0011, nu: 138.902 *dr,\n            MA: 190.473 *dr, i: 0.015 *dr, Omega: 287.852 *dr, N0: 347.3587167 /360},\n    prec:  {ep0:  12*3600,\n            fNu: fq/0.617, fOmega: fq/1.232},\n    frame: {type: \"Laplace\", ra: 40.583 *dr, dec: 83.537 *dr},\n    render: {frac: 0.02, color: 0xFFFF00},\n    size:   100000\n},\nAegaeon: {\n    elems: {a: 167425.*1000, Eccen: 0.0002, nu: 152.905 *dr,\n            MA: 322.771 *dr, i: 0.001 *dr, Omega: 317.202 *dr, N0: 445.4934177 /360},\n    prec:  {ep0:  12*3600,\n            fNu: fq/0.343, fOmega: fq/0.688},\n    frame: {type: \"Laplace\", ra: 40.584 *dr, dec: 83.537 *dr},\n    render: {frac: 0.02, color: 0xFFFF00},\n    size:   100000\n},\nYmir: {\n    elems: {a: 23128000.*1000, Eccen: 0.3338, nu: 21.352 *dr,\n            MA: 228.673 *dr, i: 173.497 *dr, Omega: 192.937 *dr, N0: 0.2737369 /360},\n    prec:  {ep0:  0,\n            fNu: fq/217.61, fOmega: fq/277.53},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nPaaliaq: {\n    elems: {a: 15204000.*1000, Eccen: 0.3325, nu: 237.522 *dr,\n            MA: 321.654 *dr, i: 46.228 *dr, Omega: 330.022 *dr, N0: 0.5240567 /360},\n    prec:  {ep0:  0,\n            fNu: fq/576.14, fOmega: fq/535.71},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nTarvos: {\n    elems: {a: 18243000.*1000, Eccen: 0.5382, nu: 274.104 *dr,\n            MA: 265.783 *dr, i: 33.725 *dr, Omega: 102.504 *dr, N0: 0.3886226 /360},\n    prec:  {ep0:  0,\n            fNu: fq/194.18, fOmega: fq/272.97},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nIjiraq: {\n    elems: {a: 11408000.*1000, Eccen: 0.2717, nu: 92.899 *dr,\n            MA: 17.328 *dr, i: 47.485 *dr, Omega: 130.779 *dr, N0: 0.7974868 /360},\n    prec:  {ep0:  0,\n            fNu: fq/13807.37, fOmega: fq/935.12},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nSuttungr: {\n    elems: {a: 19468000.*1000, Eccen: 0.1139, nu: 34.281 *dr,\n            MA: 321.133 *dr, i: 175.815 *dr, Omega: 227.259 *dr, N0: 0.3540952 /360},\n    prec:  {ep0:  0,\n            fNu: fq/292.79, fOmega: fq/402.20},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nKiviuq: {\n    elems: {a: 11384000.*1000, Eccen: 0.3325, nu: 90.205 *dr,\n            MA: 172.018 *dr, i: 46.764 *dr, Omega: 353.584 *dr, N0: 0.8013951 /360},\n    prec:  {ep0:  0,\n            fNu: fq/19973.94, fOmega: fq/840.86},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nMundilfari: {\n    elems: {a: 18653000.*1000, Eccen: 0.2097, nu: 309.694 *dr,\n            MA: 92.821 *dr, i: 167.439 *dr, Omega: 82.856 *dr, N0: 0.3778328 /360},\n    prec:  {ep0:  0,\n            fNu: fq/312.23, fOmega: fq/417.31},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nAlbiorix: {\n    elems: {a: 16393000.*1000, Eccen: 0.4797, nu: 55.932 *dr,\n            MA: 32.828 *dr, i: 34.060 *dr, Omega: 102.512 *dr, N0: 0.4595027 /360},\n    prec:  {ep0:  0,\n            fNu: fq/249.88, fOmega: fq/358.14},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nSkathi: {\n    elems: {a: 15635000.*1000, Eccen: 0.2718, nu: 203.517 *dr,\n            MA: 114.689 *dr, i: 152.633 *dr, Omega: 286.599 *dr, N0: 0.4944382 /360},\n    prec:  {ep0:  0,\n            fNu: fq/474.36, fOmega: fq/546.69},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nErriapus: {\n    elems: {a: 17602000.*1000, Eccen: 0.4722, nu: 282.522 *dr,\n            MA: 294.829 *dr, i: 34.481 *dr, Omega: 150.985 *dr, N0: 0.4132539 /360},\n    prec:  {ep0:  0,\n            fNu: fq/219.90, fOmega: fq/323.49},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nSiarnaq: {\n    elems: {a: 18182000.*1000, Eccen: 0.2802, nu: 65.929 *dr,\n            MA: 201.288 *dr, i: 45.809 *dr, Omega: 47.826 *dr, N0: 0.4020067 /360},\n    prec:  {ep0:  0,\n            fNu: fq/457.40, fOmega: fq/454.20},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nThrymr: {\n    elems: {a: 20418000.*1000, Eccen: 0.4659, nu: 125.404 *dr,\n            MA: 30.075 *dr, i: 177.659 *dr, Omega: 285.762 *dr, N0: 0.3296678 /360},\n    prec:  {ep0:  0,\n            fNu: fq/875.11, fOmega: fq/139002.09},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nNarvi: {\n    elems: {a: 19349000.*1000, Eccen: 0.4296, nu: 169.959 *dr,\n            MA: 114.172 *dr, i: 145.731 *dr, Omega: 174.435 *dr, N0: 0.3585873 /360},\n    prec:  {ep0:  0,\n            fNu: fq/341.38, fOmega: fq/347.42},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nAegir: {\n    elems: {a: 20751000.*1000, Eccen: 0.2524, nu: 242.651 *dr,\n            MA: 26.017 *dr, i: 166.668 *dr, Omega: 179.064 *dr, N0: 0.3220526 /360},\n    prec:  {ep0:  0,\n            fNu: fq/273.91, fOmega: fq/350.18},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nBebhionn: {\n    elems: {a: 17116000.*1000, Eccen: 0.4682, nu: 358.141 *dr,\n            MA: 168.045 *dr, i: 35.101 *dr, Omega: 199.128 *dr, N0: 0.4312114 /360},\n    prec:  {ep0:  0,\n            fNu: fq/236.57, fOmega: fq/342.06},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nBergelmir: {\n    elems: {a: 19336000.*1000, Eccen: 0.1420, nu: 133.400 *dr,\n            MA: 306.494 *dr, i: 158.557 *dr, Omega: 202.164 *dr, N0: 0.3579396 /360},\n    prec:  {ep0:  0,\n            fNu: fq/359.70, fOmega: fq/424.95},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nBestla: {\n    elems: {a: 20209000.*1000, Eccen: 0.5145, nu: 81.185 *dr,\n            MA: 239.156 *dr, i: 145.136 *dr, Omega: 288.308 *dr, N0: 0.3308757 /360},\n    prec:  {ep0:  0,\n            fNu: fq/284.99, fOmega: fq/299.08},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nFarbauti: {\n    elems: {a: 20390000.*1000, Eccen: 0.2414, nu: 342.995 *dr,\n            MA: 282.813 *dr, i: 156.520 *dr, Omega: 135.109 *dr, N0: 0.3312924 /360},\n    prec:  {ep0:  0,\n            fNu: fq/330.77, fOmega: fq/374.34},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nFenrir: {\n    elems: {a: 22454000.*1000, Eccen: 0.1347, nu: 120.982 *dr,\n            MA: 131.678 *dr, i: 164.963 *dr, Omega: 226.595 *dr, N0: 0.2856343 /360},\n    prec:  {ep0:  0,\n            fNu: fq/276.77, fOmega: fq/332.99},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nFornjot: {\n    elems: {a: 25146000.*1000, Eccen: 0.2077, nu: 324.787 *dr,\n            MA: 214.499 *dr, i: 170.372 *dr, Omega: 259.946 *dr, N0: 0.2409497 /360},\n    prec:  {ep0:  0,\n            fNu: fq/223.68, fOmega: fq/267.44},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nHati: {\n    elems: {a: 19868000.*1000, Eccen: 0.3710, nu: 21.286 *dr,\n            MA: 163.640 *dr, i: 165.808 *dr, Omega: 324.380 *dr, N0: 0.3460954 /360},\n    prec:  {ep0:  0,\n            fNu: fq/262.48, fOmega: fq/339.97},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nHyrrokkin: {\n    elems: {a: 18440000.*1000, Eccen: 0.3359, nu: 273.076 *dr,\n            MA: 291.841 *dr, i: 151.536 *dr, Omega: 45.402 *dr, N0: 0.3863203 /360},\n    prec:  {ep0:  0,\n            fNu: fq/375.76, fOmega: fq/406.45},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nKari: {\n    elems: {a: 22093000.*1000, Eccen: 0.4756, nu: 163.935 *dr,\n            MA: 286.021 *dr, i: 156.067 *dr, Omega: 281.211 *dr, N0: 0.2924012 /360},\n    prec:  {ep0:  0,\n            fNu: fq/228.81, fOmega: fq/270.06},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nLoge: {\n    elems: {a: 23059000.*1000, Eccen: 0.1862, nu: 32.821 *dr,\n            MA: 337.237 *dr, i: 167.689 *dr, Omega: 343.811 *dr, N0: 0.2745228 /360},\n    prec:  {ep0:  0,\n            fNu: fq/251.72, fOmega: fq/307.35},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nSkoll: {\n    elems: {a: 17668000.*1000, Eccen: 0.4636, nu: 193.115 *dr,\n            MA: 44.965 *dr, i: 161.010 *dr, Omega: 296.623 *dr, N0: 0.4099120 /360},\n    prec:  {ep0:  0,\n            fNu: fq/286.68, fOmega: fq/369.06},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nSurtur: {\n    elems: {a: 22941000.*1000, Eccen: 0.4459, nu: 303.662 *dr,\n            MA: 136.191 *dr, i: 169.688 *dr, Omega: 236.537 *dr, N0: 0.2775384 /360},\n    prec:  {ep0:  0,\n            fNu: fq/202.95, fOmega: fq/259.66},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nJarnsaxa: {\n    elems: {a: 19354000.*1000, Eccen: 0.2178, nu: 237.422 *dr,\n            MA: 198.750 *dr, i: 163.649 *dr, Omega: 22.519 *dr, N0: 0.3575194 /360},\n    prec:  {ep0:  0,\n            fNu: fq/312.48, fOmega: fq/396.92},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nGreip: {\n    elems: {a: 18457000.*1000, Eccen: 0.3146, nu: 152.160 *dr,\n            MA: 314.541 *dr, i: 174.800 *dr, Omega: 349.350 *dr, N0: 0.3841491 /360},\n    prec:  {ep0:  0,\n            fNu: fq/280.23, fOmega: fq/385.90},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nTarqeq: {\n    elems: {a: 17962000.*1000, Eccen: 0.1675, nu: 34.767 *dr,\n            MA: 161.020 *dr, i: 46.291 *dr, Omega: 83.291 *dr, N0: 0.4067094 /360},\n    prec:  {ep0:  0,\n            fNu: fq/896.54, fOmega: fq/593.15},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\n\"S/2004 S 7\": {\n    elems: {a: 21000000.*1000, Eccen: 0.5290, nu: 84.036 *dr,\n            MA: 79.762 *dr, i: 165.693 *dr, Omega: 341.236 *dr, N0: 0.3157314 /360},\n    prec:  {ep0:  0,\n            fNu: fq/211.18, fOmega: fq/273.22},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\n\"S/2004 S 12\": {\n    elems: {a: 19886000.*1000, Eccen: 0.3268, nu: 87.128 *dr,\n            MA: 1.599 *dr, i: 165.261 *dr, Omega: 307.942 *dr, N0: 0.3441326 /360},\n    prec:  {ep0:  0,\n            fNu: fq/273.22, fOmega: fq/351.49},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\n\"S/2004 S 13\": {\n    elems: {a: 18406000.*1000, Eccen: 0.2591, nu: 346.186 *dr,\n            MA: 41.077 *dr, i: 168.798 *dr, Omega: 205.701 *dr, N0: 0.3856043 /360},\n    prec:  {ep0:  0,\n            fNu: fq/302.01, fOmega: fq/409.39},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\n\"S/2004 S 17\": {\n    elems: {a: 19448000.*1000, Eccen: 0.1795, nu: 180.792 *dr,\n            MA: 228.545 *dr, i: 168.239 *dr, Omega: 26.664 *dr, N0: 0.3548169 /360},\n    prec:  {ep0:  0,\n            fNu: fq/300.99, fOmega: fq/397.14},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\n\"S/2006 S 1\": {\n    elems: {a: 18780000.*1000, Eccen: 0.1412, nu: 154.950 *dr,\n            MA: 96.596 *dr, i: 156.180 *dr, Omega: 336.641 *dr, N0: 0.3741294 /360},\n    prec:  {ep0:  0,\n            fNu: fq/405.14, fOmega: fq/453.57},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\n\"S/2006 S 3\": {\n    elems: {a: 22428000.*1000, Eccen: 0.3792, nu: 188.728 *dr,\n            MA: 167.147 *dr, i: 158.631 *dr, Omega: 206.993 *dr, N0: 0.2868177 /360},\n    prec:  {ep0:  0,\n            fNu: fq/245.54, fOmega: fq/287.39},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\n\"S/2007 S 2\": {\n    elems: {a: 16718000.*1000, Eccen: 0.1791, nu: 57.720 *dr,\n            MA: 84.066 *dr, i: 174.057 *dr, Omega: 111.277 *dr, N0: 0.4454603 /360},\n    prec:  {ep0:  0,\n            fNu: fq/342.95, fOmega: fq/496.45},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\n\"S/2007 S 3\": {\n    elems: {a: 18938000.*1000, Eccen: 0.1853, nu: 111.854 *dr,\n            MA: 292.691 *dr, i: 177.595 *dr, Omega: 276.824 *dr, N0: 0.3681825 /360},\n    prec:  {ep0:  0,\n            fNu: fq/1079.63, fOmega: fq/161352.07},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n}\n        }\n    },\n\n    Uranus: {\n        elems:  {a: 19.18797948, e:  0.04685740, i:  0.77298127, ML: 314.20276625, LonP: 172.43404441, Omega: 73.96250215},\n        derivs: {a: -0.00020455, e: -0.00001550, i: -0.00180155, ML: 428.49512595, LonP:   0.09266985, Omega:  0.05739699},\n        corr: [ 0.00058331, -0.97731848, 0.17689245, 7.67025000],\n        mass: 86.8e24,\n        radius: 51118 * 500,\n        rotationPhase: 0,\n        rotationPeriod: -0.71833 * 86400,\n        rotAxis: {ra: 257.311 *dr, dec: -15.175 *dr},\n        render: {\n            color: 0x99FF99,\n            texture:{\n                map:\"images/2k_uranus.jpg\",\n                src:\"https://www.solarsystemscope.com/textures/download/2k_uranus.jpg\",\n                copyright:\"https://creativecommons.org/licenses/by/4.0/\"\n            }\n        },\n        moonInfo: {\nAriel: {\n    elems: {a: 190900.*1000, Eccen: 0.0012, nu: 115.349 *dr,\n            MA: 39.481 *dr, i: 0.041 *dr, Omega: 22.394 *dr, N0: 142.8356579 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/28.788, fOmega: fq/57.248},\n    frame: {type: \"Equatorial\"},\n    render: {frac: 0.05, color: 0xFFFF00},\n    size:   100000\n},\nUmbriel: {\n    elems: {a: 266000.*1000, Eccen: 0.0039, nu: 84.709 *dr,\n            MA: 12.469 *dr, i: 0.128 *dr, Omega: 33.485 *dr, N0: 86.8688879 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/63.146, fOmega: fq/126.951},\n    frame: {type: \"Equatorial\"},\n    render: {frac: 0.05, color: 0xFFFF00},\n    size:   100000\n},\nTitania: {\n    elems: {a: 436300.*1000, Eccen: 0.0011, nu: 284.400 *dr,\n            MA: 24.614 *dr, i: 0.079 *dr, Omega: 99.771 *dr, N0: 41.3514246 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/161.525, fOmega: fq/195.369},\n    frame: {type: \"Equatorial\"},\n    render: {frac: 0.05, color: 0xFFFF00},\n    size:   100000\n},\nOberon: {\n    elems: {a: 583500.*1000, Eccen: 0.0014, nu: 104.400 *dr,\n            MA: 283.088 *dr, i: 0.068 *dr, Omega: 279.771 *dr, N0: 26.7394888 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/161.52, fOmega: fq/195.37},\n    frame: {type: \"Equatorial\"},\n    render: {frac: 0.04, color: 0xFFFF00},\n    size:   100000\n},\nMiranda: {\n    elems: {a: 129900.*1000, Eccen: 0.0013, nu: 68.312 *dr,\n            MA: 311.330 *dr, i: 4.338 *dr, Omega: 326.438 *dr, N0: 254.6906576 /360},\n    prec:  {ep0:  -20/100*Constants.CENTURY,\n            fNu: fq/8.913, fOmega: fq/17.727},\n    frame: {type: \"Equatorial\"},\n    render: {frac: 0.04, color: 0xFFFF00},\n    size:   100000\n},\nCordelia: {\n    elems: {a: 49800.*1000, Eccen: 0.0003, nu: 136.827 *dr,\n            MA: 254.805 *dr, i: 0.085 *dr, Omega: 38.374 *dr, N0: 1074.5183162 /360},\n    prec:  {ep0:  (-14*365-3 + 18.5) * 86400,\n            fNu: fq/0.328, fOmega: fq/0.657},\n    frame: {type: \"Equatorial\"},\n    render: {frac: 0.04, color: 0xFFFF00},\n    size:   100000\n},\nOphelia: {\n    elems: {a: 53800.*1000, Eccen: 0.0099, nu: 17.761 *dr,\n            MA: 116.259 *dr, i: 0.104 *dr, Omega: 164.048 *dr, N0: 956.4283330 /360},\n    prec:  {ep0:  (-14*365-3 + 18.5) * 86400,\n            fNu: fq/0.431, fOmega: fq/0.862},\n    frame: {type: \"Equatorial\"},\n    render: {frac: 0.04, color: 0xFFFF00},\n    size:   100000\n},\nBianca: {\n    elems: {a: 59200.*1000, Eccen: 0.0009, nu: 8.293 *dr,\n            MA: 138.486 *dr, i: 0.193 *dr, Omega: 93.220 *dr, N0: 828.3879607 /360},\n    prec:  {ep0:  (-14*365-3 + 18.5) * 86400,\n            fNu: fq/0.603, fOmega: fq/1.206},\n    frame: {type: \"Equatorial\"},\n    render: {frac: 0.03, color: 0xFFFF00},\n    size:   100000\n},\nCressida: {\n    elems: {a: 61800.*1000, Eccen: 0.0004, nu: 44.236 *dr,\n            MA: 233.795 *dr, i: 0.006 *dr, Omega: 99.403 *dr, N0: 776.5824144 /360},\n    prec:  {ep0:  (-14*365-3 + 18.5) * 86400,\n            fNu: fq/0.701, fOmega: fq/1.402},\n    frame: {type: \"Equatorial\"},\n    render: {frac: 0.03, color: 0xFFFF00},\n    size:   100000\n},\nDesdemona: {\n    elems: {a: 62700.*1000, Eccen: 0.0001, nu: 183.285 *dr,\n            MA: 184.627 *dr, i: 0.113 *dr, Omega: 306.089 *dr, N0: 760.0555393 /360},\n    prec:  {ep0:  (-14*365-3 + 18.5) * 86400,\n            fNu: fq/0.737, fOmega: fq/1.474},\n    frame: {type: \"Equatorial\"},\n    render: {frac: 0.03, color: 0xFFFF00},\n    size:   100000\n},\nJuliet: {\n    elems: {a: 64400.*1000, Eccen: 0.0007, nu: 223.819 *dr,\n            MA: 244.696 *dr, i: 0.065 *dr, Omega: 200.155 *dr, N0: 730.1261349 /360},\n    prec:  {ep0:  (-14*365-3 + 18.5) * 86400,\n            fNu: fq/0.809, fOmega: fq/1.619},\n    frame: {type: \"Equatorial\"},\n    render: {frac: 0.03, color: 0xFFFF00},\n    size:   100000\n},\nPortia: {\n    elems: {a: 66100.*1000, Eccen: 0.0001, nu: 222.433 *dr,\n            MA: 218.312 *dr, i: 0.059 *dr, Omega: 260.067 *dr, N0: 701.4864814 /360},\n    prec:  {ep0:  (-14*365-3 + 18.5) * 86400,\n            fNu: fq/0.888, fOmega: fq/1.777},\n    frame: {type: \"Equatorial\"},\n    render: {frac: 0.02, color: 0xFFFF00},\n    size:   100000\n},\nRosalind: {\n    elems: {a: 69900.*1000, Eccen: 0.0001, nu: 140.477 *dr,\n            MA: 136.181 *dr, i: 0.279 *dr, Omega: 12.847 *dr, N0: 644.6304183 /360},\n    prec:  {ep0:  (-14*365-3 + 18.5) * 86400,\n            fNu: fq/1.081, fOmega: fq/2.163},\n    frame: {type: \"Equatorial\"},\n    render: {frac: 0.02, color: 0xFFAAAA},\n    size:   100000\n},\nBelinda: {\n    elems: {a: 75300.*1000, Eccen: 0.0001, nu: 42.406 *dr,\n            MA: 357.224 *dr, i: 0.031 *dr, Omega: 279.337 *dr, N0: 577.3602885 /360},\n    prec:  {ep0:  (-14*365-3 + 18.5) * 86400,\n            fNu: fq/1.397, fOmega: fq/2.796},\n    frame: {type: \"Equatorial\"},\n    render: {frac: 0.02, color: 0xFFFF00},\n    size:   100000\n},\nPuck: {\n    elems: {a: 86000.*1000, Eccen: 0.0001, nu: 177.094 *dr,\n            MA: 245.796 *dr, i: 0.319 *dr, Omega: 268.734 *dr, N0: 472.5445878 /360},\n    prec:  {ep0:  (-14*365-3 + 18.5) * 86400,\n            fNu: fq/2.224, fOmega: fq/4.448},\n    frame: {type: \"Equatorial\"},\n    render: {frac: 0.02, color: 0xFFFF00},\n    size:   100000\n},\nPerdita: {\n    elems: {a: 76417.*1000, Eccen: 0.0116, nu: 253.925 *dr,\n            MA: 192.405 *dr, i: 0.470 *dr, Omega: 309.376 *dr, N0: 564.2469590 /360},\n    prec:  {ep0:  (3*365 + 237.5)*86400,\n            fNu: fq/1.479, fOmega: fq/2.958},\n    frame: {type: \"Equatorial\"},\n    render: {frac: 0.02, color: 0xFFFF00},\n    size:   100000\n},\nMab: {\n    elems: {a: 97736.*1000, Eccen: 0.0025, nu: 249.565 *dr,\n            MA: 273.769 *dr, i: 0.134 *dr, Omega: 350.737 *dr, N0: 390.0501070 /360},\n    prec:  {ep0:  (3*365 + 237.5)*86400,\n            fNu: fq/3.502, fOmega: fq/7.004},\n    frame: {type: \"Equatorial\"},\n    render: {frac: 0.02, color: 0xFFFF00},\n    size:   100000\n},\nCupid: {\n    elems: {a: 74392.*1000, Eccen: 0.0013, nu: 247.608 *dr,\n            MA: 163.830 *dr, i: 0.099 *dr, Omega: 182.793 *dr, N0: 587.4436490 /360},\n    prec:  {ep0:  (3*365 + 237.5)*86400,\n            fNu: fq/1.346, fOmega: fq/2.693},\n    frame: {type: \"Equatorial\"},\n    render: {frac: 0.02, color: 0xFFFF00},\n    size:   100000\n},\nCaliban: {\n    elems: {a: 7231100.*1000, Eccen: 0.1812, nu: 354.339 *dr,\n            MA: 7.271 *dr, i: 141.529 *dr, Omega: 171.189 *dr, N0: 0.6209758 /360},\n    prec:  {ep0:  (12*3600),\n            fNu: fq/8936.31, fOmega: fq/6445.52},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nSycorax: {\n    elems: {a: 12179400.*1000, Eccen: 0.5219, nu: 20.103 *dr,\n            MA: 266.583 *dr, i: 159.420 *dr, Omega: 263.034 *dr, N0: 0.2794217 /360},\n    prec:  {ep0:  (12*3600),\n            fNu: fq/1393.43, fOmega: fq/1863.29},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nProspero: {\n    elems: {a: 16276800.*1000, Eccen: 0.4445, nu: 174.152 *dr,\n            MA: 233.586 *dr, i: 151.830 *dr, Omega: 319.003 *dr, N0: 0.1819679 /360},\n    prec:  {ep0:  (12*3600),\n            fNu: fq/1155.47, fOmega: fq/1370.39},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nSetebos: {\n    elems: {a: 17420400.*1000, Eccen: 0.5908, nu: 359.953 *dr,\n            MA: 179.449 *dr, i: 158.235 *dr, Omega: 250.235 *dr, N0: 0.1617921 /360},\n    prec:  {ep0:  (12*3600),\n            fNu: fq/823.91, fOmega: fq/1044.20},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nStephano: {\n    elems: {a: 8007400.*1000, Eccen: 0.2248, nu: 14.956 *dr,\n            MA: 270.163 *dr, i: 143.819 *dr, Omega: 191.411 *dr, N0: 0.5313866 /360},\n    prec:  {ep0:  (12*3600),\n            fNu: fq/5484.23, fOmega: fq/5182.20},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nTrinculo: {\n    elems: {a: 8505200.*1000, Eccen: 0.2194, nu: 158.688 *dr,\n            MA: 180.374 *dr, i: 166.971 *dr, Omega: 193.755 *dr, N0: 0.4803847 /360},\n    prec:  {ep0:  (12*3600),\n            fNu: fq/2592.77, fOmega: fq/4273.04},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nFrancisco: {\n    elems: {a: 4282900.*1000, Eccen: 0.1324, nu: 140.644 *dr,\n            MA: 3.202 *dr, i: 147.250 *dr, Omega: 100.738 *dr, N0: 1.3478663 /360},\n    prec:  {ep0:  (12*3600),\n            fNu: fq/12574.36, fOmega: fq/14080.40},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nMargaret: {\n    elems: {a: 14146700.*1000, Eccen: 0.6772, nu: 90.017 *dr,\n            MA: 322.187 *dr, i: 57.367 *dr, Omega: 7.067 *dr, N0: 0.2167366 /360},\n    prec:  {ep0:  (12*3600),\n            fNu: fq/12057739.22, fOmega: fq/987.08},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nFerdinand: {\n    elems: {a: 20430000.*1000, Eccen: 0.3993, nu: 156.298 *dr,\n            MA: 26.163 *dr, i: 169.793 *dr, Omega: 217.350 *dr, N0: 0.1290311 /360},\n    prec:  {ep0:  (12*3600),\n            fNu: fq/747.30, fOmega: fq/1001.70},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n}\n\n        }\n    },\n\n\n    Neptune: {\n        elems: {a: 30.06952752, e: 0.00895439, i: 1.77005520, ML: 304.22289287, LonP: 46.68158724, Omega: 131.78635853},\n        derivs:{a:  0.00006447, e: 0.00000818, i: 0.00022400, ML: 218.46515314, LonP:  0.01009938, Omega:  -0.00606302},\n        corr: [-0.00041348,   0.68346318, -0.10162547,      7.67025000],\n        mass: 102.4306e24,\n        radius: 49528 * 500,\n        rotationPhase:  0,\n        rotationPeriod: 0.67125 * 86400,\n        rotAxis: {ra: 299.3 *dr, dec: 42.95 *dr},\n        render: {\n            color: 0x99FFEE,\n            texture: {\n                map:\"images/2k_neptune.jpg\",\n                src:\"https://www.solarsystemscope.com/textures/download/2k_neptune.jpg\",\n                copyright:\"https://creativecommons.org/licenses/by/4.0/\"\n            }\n        },\n        moonInfo: {\nTriton: {\n    elems: {a: 354759.*1000, Eccen: 0.0000, nu: 66.142 *dr,\n            MA: 352.257 *dr, i: 156.865 *dr, Omega: 177.608 *dr, N0: 61.2572638 /360},\n    prec:  {ep0:  12*3600,\n            fNu: fq/386.371, fOmega: fq/687.446},\n    frame: {type: \"Laplace\", ra: 299.456 *dr, dec: 43.414 *dr},\n    render: {frac: 0.2, color: 0xFF0000},\n    size:   100000\n},\nNereid: {\n    elems: {a: 5513818.*1000, Eccen: 0.7507, nu: 281.117 *dr,\n            MA: 216.692 *dr, i: 7.090 *dr, Omega: 335.570 *dr, N0: 0.9996276 /360},\n    prec:  {ep0:  12*3600,\n            fNu: fq/8091.45, fOmega: fq/9455.73},\n    frame: {type: \"Laplace\", ra: 269.302 *dr, dec: 69.117 *dr},\n    render: {frac: 0.1, color: 0xFFFF00},\n    size:   100000\n},\nNaiad: {\n    elems: {a: 48227.*1000, Eccen: 0.0003, nu: 2.045 *dr,\n            MA: 30.035 *dr, i: 4.691 *dr, Omega: 42.279 *dr, N0: 1222.8435847 /360},\n    prec:  {ep0:  12*3600,\n            fNu: fq/0.289, fOmega: fq/0.575},\n    frame: {type: \"Laplace\", ra: 299.431 *dr, dec: 42.940 *dr},\n    render: {frac: 0.06, color: 0xFFFF00},\n    size:   100000\n},\nThalassa: {\n    elems: {a: 50074.*1000, Eccen: 0.0002, nu: 237.065 *dr,\n            MA: 262.923 *dr, i: 0.135 *dr, Omega: 145.980 *dr, N0: 1155.7559749 /360},\n    prec:  {ep0:  12*3600,\n            fNu: fq/0.327, fOmega: fq/0.654},\n    frame: {type: \"Laplace\", ra: 299.431 *dr, dec: 42.939 *dr},\n    render: {frac: 0.06, color: 0xFFFF00},\n    size:   100000\n},\nDespina: {\n    elems: {a: 52526.*1000, Eccen: 0.0002, nu: 176.857 *dr,\n            MA: 230.812 *dr, i: 0.068 *dr, Omega: 77.060 *dr, N0: 1075.7330674 /360},\n    prec:  {ep0:  12*3600,\n            fNu: fq/0.387, fOmega: fq/0.774},\n    frame: {type: \"Laplace\", ra: 299.431 *dr, dec: 42.937 *dr},\n    render: {frac: 0.06, color: 0xFFFF00},\n    size:   100000\n},\nGalatea: {\n    elems: {a: 61953.*1000, Eccen: 0.0001, nu: 343.011 *dr,\n            MA: 65.999 *dr, i: 0.034 *dr, Omega: 37.247 *dr, N0: 839.6613030 /360},\n    prec:  {ep0:  12*3600,\n            fNu: fq/0.690, fOmega: fq/1.380},\n    frame: {type: \"Laplace\", ra: 299.430 *dr, dec: 42.925 *dr},\n    render: {frac: 0.06, color: 0xFFFF00},\n    size:   100000\n},\nLarissa: {\n    elems: {a: 73548.*1000, Eccen: 0.0014, nu: 249.891 *dr,\n            MA: 166.246 *dr, i: 0.205 *dr, Omega: 308.127 *dr, N0: 649.0540770 /360},\n    prec:  {ep0:  12*3600,\n            fNu: fq/1.257, fOmega: fq/2.516},\n    frame: {type: \"Laplace\", ra: 299.429 *dr, dec: 42.897 *dr},\n    render: {frac: 0.06, color: 0xFFFF00},\n    size:   100000\n},\nProteus: {\n    elems: {a: 117646.*1000, Eccen: 0.0005, nu: 67.968 *dr,\n            MA: 250.938 *dr, i: 0.075 *dr, Omega: 315.131 *dr, N0: 320.7656245 /360},\n    prec:  {ep0:  12*3600,\n            fNu: fq/6.380, fOmega: fq/12.727},\n    frame: {type: \"Laplace\", ra: 299.406 *dr, dec: 42.432 *dr},\n    render: {frac: 0.06, color: 0xFFFF00},\n    size:   100000\n},\n\"S/2004 N 1\": {\n    elems: {a: 105284.*1000, Eccen: 0.0000, nu: 0.000 *dr,\n            MA: 302.652 *dr, i: 0.000 *dr, Omega: 0.000 *dr, N0: 378.9061402 /360},\n    prec:  {ep0:  12*3600,\n            fNu: fq/0.000, fOmega: fq/0.000},\n    frame: {type: \"Laplace\", ra: 299.373 *dr, dec: 42.944 *dr},\n    render: {frac: 0.06, color: 0xFFFF00},\n    size:   100000\n},\nHalimede: {\n    elems: {a: 16681000.*1000, Eccen: 0.2909, nu: 162.119 *dr,\n            MA: 105.258 *dr, i: 112.898 *dr, Omega: 217.288 *dr, N0: 0.1915578 /360},\n    prec:  {ep0:  (366+365+160)*86400,\n            fNu: fq/5673.19, fOmega: fq/18501.48},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nPsamathe: {\n    elems: {a: 46705000.*1000, Eccen: 0.4617, nu: 144.158 *dr,\n            MA: 190.027 *dr, i: 137.679 *dr, Omega: 298.074 *dr, N0: 0.0394359 /360},\n    prec:  {ep0:  (366+365+160)*86400,\n            fNu: fq/1477.62, fOmega: fq/1304.72},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nSao: {\n    elems: {a: 22619000.*1000, Eccen: 0.2827, nu: 65.047 *dr,\n            MA: 168.139 *dr, i: 49.907 *dr, Omega: 60.354 *dr, N0: 0.1233230 /360},\n    prec:  {ep0:  (366+365+160)*86400,\n            fNu: fq/436880.78, fOmega: fq/5382.39},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nLaomedeia: {\n    elems: {a: 23613000.*1000, Eccen: 0.4339, nu: 140.107 *dr,\n            MA: 285.863 *dr, i: 34.049 *dr, Omega: 59.124 *dr, N0: 0.1133637 /360},\n    prec:  {ep0:  (366+365+160)*86400,\n            fNu: fq/2245.08, fOmega: fq/3325.44},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n},\nNeso: {\n    elems: {a: 50258000.*1000, Eccen: 0.4243, nu: 86.441 *dr,\n            MA: 260.648 *dr, i: 131.265 *dr, Omega: 49.151 *dr, N0: 0.0364349 /360},\n    prec:  {ep0:  (366+365+160)*86400,\n            fNu: fq/23936.86, fOmega: fq/1094.07},\n    frame: {type: \"Ecliptic\"},\n    render: {frac: 0.15, color: 0xFFFF00},\n    size:   100000\n}\n        }\n    },\n    Pluto: {\n        elems: {a: 39.48686035, e: 0.24885238, i: 17.14104260, ML: 238.96535011, LonP: 224.09702598, Omega: 110.30167986},\n        derivs:{a:  0.00449751, e: 0.00006016, i:  0.00000501, ML: 145.18042903, LonP:  -0.00968827, Omega:  -0.00809981},\n        corr:  [-0.01262724,   0,           0,               0],\n        mass:  0.0146e24,\n        radius: 2370 * 500,\n        rotationPhase:   0,\n        rotationPeriod: -6.387230 * 86400,\n        rotAxis: {ra: 132.993 *dr, dec: -6.163 *dr},\n        render: {\n            color: 0xFFFFFF,\n            texture: {\n                map: \"images/pluto_texture_map_16k_by_fargetanik_dandu2y-fullview.jpg\",\n                src: \"https://www.deviantart.com/fargetanik/art/Pluto-Texture-Map-16k-643938442\",\n                copyright: \"Creative Commons Attribution-Share Alike License 3.0\"\n            }\n        },\n\n        moonInfo: {\n            Charon: {\n                elems: {\n                    a:    19591000.,\n                    Eccen:       0.0002,\n                    nu:        146.106 *dr,\n                    MA:        131.070 *dr,\n                    i:           0.080 *dr,\n                    Omega:      26.928 *dr,\n                    N0:         -56.3625210/360\n                },\n                prec: {\n                    ep0:   0,\n                    fNu:    fq/10178.040,\n                    fOmega: fq/ 9020.398\n                },\n                size: {\n                    radius: 1212000 / 2\n                },\n                render: {\n                    texture: {\n                        map: \"images/charon_map_magentameteorite_art.jpg\",\n                        src: \"https://www.deviantart.com/magentameteorite/art/Charon-Texture-Map-794040506\",\n                        copyright:\"Quote: 'give me credit if u want to use this map'\"\n                    },\n                    frac:    0.51  // Actual ratio\n                }\n            },\n            Nix: {\n                elems: {\n                    a:      48671000.,\n                    Eccen:         0.0000,\n                    nu:          324.463 *dr,\n                    MA:          284.405 *dr,\n                    i:             0.000,\n                    Omega:       203.400 *dr,\n                    N0:           -14.4841304/360\n                },\n                size: {\n                    radius: 37200 / 2,  // Cube root of ellipsoid\n                    ellipsoid: [49800/2,33200/2,31100/2]\n                },\n                render: {\n                    frac: 0.15\n                }\n            },\n\n            Hydra: {\n                elems: {\n                    a:    64698000.,\n                    Eccen:       0.0056,\n                    nu:        153.307 *dr,\n                    MA:        326.678 *dr,\n                    i:           0.304 *dr,\n                    Omega:     113.173 *dr,\n                    N0:          -9.4235386/360\n                },\n                prec: {\n                    ep0:       0,\n                    fNu:    fq/ 7.19,\n                    fOmega: fq/14.38\n                },\n                size: {\n                    radius: 38400 /2 ,\n                    ellipsoid: [50900/2, 36100/2, 30900/2]\n                },\n                render: {\n                    frac: 0.15\n                }\n            },\n            Kerberos: {\n                elems: {\n                    a:       57729000.,\n                    Eccen:          0.0000,\n                    nu:           160.629 *dr,\n                    MA:           161.061 *dr,\n                    i:              0.426 *dr,\n                    Omega:        305.871 *dr,\n                    N0:            -11.1913026/360,\n                },\n                prec: {\n                   ep0: 0,\n                   fNu:    0.000,\n                   fOmega: fq/9.27\n               },\n               size: {\n                   radius:    12.0/2 ,\n                   ellipsoid:  [19000/2, 10000/2, 9000/2]\n               },\n               render: {\n                   frac: 0.1\n               }\n            },\n            Styx: {\n                elems: {\n                    a:      42393000.,\n                    Eccen:         0.0006,\n                    nu:          330.244 *dr,\n                    MA:          194.546 *dr,\n                    i:             0.080 *dr,\n                    Omega:        26.956 *dr,\n                    N0:           -17.8551357 / 360,\n                },\n                prec: {\n                   ep0: \t    0,\n                   fNu:    fq/3710.58,\n                   fOmega: fq/5162.64\n                },\n                size: {\n                    radius: 10500/2,\n                    ellipsoid: [16000/2, 9000/2, 8000/2]\n                },\n                render: {\n                    frac: 0.1\n                }\n            }\n        }\n    }\n  },\n\n  // ** Spacecraft mission data **\n  missions: {\n  \"Voyager 1\": { \n \"color\": 16776960 ,\n \"horizonsID\": -31 ,\n \"orbits\":[\n   {\n    \"start\": -704246400 ,\n    \"stop\": -700704000 ,\n    \"interp\": -700876800 ,\n    \"planet\":\"Earth\",\n    \"sat\":{\n      \"e\": 2.807493318495433,\n      \"a\": -3793842.741128597,\n      \"per\": 2325.572971807786,\n      \"t0\": -704369157.5873787,\n      \"rot\":[ 0.9914894082742924,-0.12977716601989342,0.13018737757514562,0.9883652927128624,0.07932172048350224,5.430390550084043 ],\n    },\n    \"planetOrb\":{\n      \"e\": 0.018294688094667666,\n      \"a\": 150495881874.81873,\n      \"per\": 31821580.64276533,\n      \"t0\": -726759534.9994905,\n      \"rot\":[ 0.7457376810658916,-0.6662396776370427,0.6662396798738923,0.7457376785621334,0.00008194418624612802,0.8711191719506004 ],\n    }\n   },\n   {\n    \"start\": -700704000 ,\n    \"stop\": -695692800 ,\n    \"interp\": -695865600 ,\n    \"sat\":{\n      \"e\": 0.7934268273907786,\n      \"a\": 731358901706.7888,\n      \"per\": 340901331.5075229,\n      \"t0\": -704416561.0099174,\n      \"rot\":[ 0.9571631557975856,0.2895018778761347,-0.2895491205022161,0.9570069857460592,0.018063552791011652,6.268344992583553 ],\n    }\n   },\n   {\n    \"start\": -695692800 ,\n    \"stop\": -690681600 ,\n    \"interp\": -690854400 ,\n    \"sat\":{\n      \"e\": 0.7944166383827799,\n      \"a\": 732839841993.6451,\n      \"per\": 341937300.3053886,\n      \"t0\": -704415504.6513033,\n      \"rot\":[ 0.9570038142573751,0.2900280101776438,-0.29007533417516795,0.9568476850012793,0.01806269692180398,6.26576547935738 ],\n    }\n   },\n   {\n    \"start\": -690681600 ,\n    \"stop\": -680659200 ,\n    \"interp\": -680832000 ,\n    \"sat\":{\n      \"e\": 0.7960924418182818,\n      \"a\": 737219931088.8994,\n      \"per\": 345007449.0137666,\n      \"t0\": -704393158.6945862,\n      \"rot\":[ 0.9566705839678568,0.2911249069273021,-0.29117244679158755,0.9565143879052525,0.018069706605527716,6.2662981802460616 ],\n    }\n   },\n   {\n    \"start\": -680659200 ,\n    \"stop\": -670636800 ,\n    \"interp\": -670809600 ,\n    \"sat\":{\n      \"e\": 0.7976750721461657,\n      \"a\": 741424979479.7261,\n      \"per\": 347963500.0581955,\n      \"t0\": -704348190.9577255,\n      \"rot\":[ 0.9557767125916048,0.2940450837628871,-0.2940933111575048,0.9556199779127263,0.018109293993890108,6.269750027313097 ],\n    }\n   },\n   {\n    \"start\": -670636800 ,\n    \"stop\": -665625600 ,\n    \"interp\": -665798400 ,\n    \"sat\":{\n      \"e\": 0.7993806397323373,\n      \"a\": 745043446182.3162,\n      \"per\": 350513918.55130637,\n      \"t0\": -704269389.739092,\n      \"rot\":[ 0.9539780841114759,0.29982655637218236,-0.2998763329024112,0.95381973310564,0.01821957277995389,6.27594280729454 ],\n    }\n   },\n   {\n    \"start\": -665625600 ,\n    \"stop\": -660614400 ,\n    \"interp\": -660787200 ,\n    \"sat\":{\n      \"e\": 0.8023589476510455,\n      \"a\": 749901795604.9081,\n      \"per\": 353947997.9292018,\n      \"t0\": -704097171.2589898,\n      \"rot\":[ 0.9502671093616941,0.31138283140856177,-0.3114360622429104,0.9501046891502353,0.018488157255978327,0.004286319761623945 ],\n    }\n   },\n   {\n    \"start\": -660614400 ,\n    \"stop\": -650592000 ,\n    \"interp\": -650764800 ,\n    \"planet\":\"Jupiter\",\n    \"sat\":{\n      \"e\": 1.316160174391238,\n      \"a\": -1092392152.319141,\n      \"per\": 637290.6449178571,\n      \"t0\": -657201195.2220107,\n      \"rot\":[ -0.47720267331999616,-0.8766503749026945,0.8787932683949332,-0.4760390384357599,0.06979222068484743,5.226486744454494 ],\n    },\n    \"planetOrb\":{\n      \"e\": 0.04780201544356152,\n      \"a\": 776771075322.1763,\n      \"per\": 373674869.93152726,\n      \"t0\": -770465120.3749894,\n      \"rot\":[ -0.180836069242233,-0.9832584046142333,0.9835132515940079,-0.1807892111790539,0.022763366990146666,4.763033617795975 ],\n    }\n   },\n   {\n    \"start\": -650592000 ,\n    \"stop\": -639532800 ,\n    \"interp\": -639705600 ,\n    \"sat\":{\n      \"e\": 2.253723989027583,\n      \"a\": -615866714344.5994,\n      \"per\": 263428627.16687742,\n      \"t0\": -666265560.5657252,\n      \"rot\":[ -0.3978484096343084,-0.9165984105834554,0.9174511665213858,-0.3974786160081275,0.043105725050704674,6.2593499417314264 ],\n    }\n   },\n   {\n    \"start\": -639532800 ,\n    \"stop\": -628300800 ,\n    \"interp\": -628473600 ,\n    \"sat\":{\n      \"e\": 2.24457180562294,\n      \"a\": -620386182940.5792,\n      \"per\": 266333652.49653757,\n      \"t0\": -666318274.5619272,\n      \"rot\":[ -0.39720599818280067,-0.9168779770908903,0.917729478118473,-0.3968374567730727,0.043067482252814794,6.259579346899987 ],\n    }\n   },\n   {\n    \"start\": -628300800 ,\n    \"stop\": -605836800 ,\n    \"interp\": -606009600 ,\n    \"sat\":{\n      \"e\": 2.2425453095998975,\n      \"a\": -621316937405.9623,\n      \"per\": 266933240.77712962,\n      \"t0\": -666337338.6945348,\n      \"rot\":[ -0.396845019536789,-0.9170345020451871,0.9178856303858589,-0.39647703682543506,0.04305439964577676,6.259682929480719 ],\n    }\n   },\n   {\n    \"start\": -605836800 ,\n    \"stop\": -600480000 ,\n    \"interp\": -600652800 ,\n    \"planet\":\"Saturn\",\n    \"sat\":{\n      \"e\": 2.1078143076023914,\n      \"a\": -166189728.5748122,\n      \"per\": 69108.92310446699,\n      \"t0\": -603764025.7729886,\n      \"rot\":[ -0.9719416288732995,0.09608511702299584,-0.23522217170819035,-0.3970251803714658,0.9127642940199197,5.256193149165075 ],\n    },\n    \"planetOrb\":{\n      \"e\": 0.05422726112595935,\n      \"a\": 1425282310992.9631,\n      \"per\": 927833881.5229275,\n      \"t0\": -821918763.4300356,\n      \"rot\":[ -0.40265213725435933,-0.9144916161986533,0.915353077432144,-0.4022731914515005,0.04337468549510899,5.892342162041153 ],\n    }\n   },\n   {\n    \"start\": -600480000 ,\n    \"stop\": -580780800 ,\n    \"interp\": -580953600 ,\n    \"sat\":{\n      \"e\": 3.728555732023528,\n      \"a\": -480843799960.5091,\n      \"per\": 181735136.18736646,\n      \"t0\": -632155947.6932374,\n      \"rot\":[ -0.9998358461812431,-0.014704641174247137,0.018118517904001315,-0.8114475714372905,0.5842402008904043,5.904537547164327 ],\n    }\n   },\n   {\n    \"start\": -580780800 ,\n    \"stop\": -560908800 ,\n    \"interp\": -561081600 ,\n    \"sat\":{\n      \"e\": 3.725525634904151,\n      \"a\": -481393020617.9738,\n      \"per\": 182046592.38309488,\n      \"t0\": -632173578.8625298,\n      \"rot\":[ -0.999834193161547,-0.014780166634556701,0.018209508093255215,-0.8115384504718647,0.5841120526748096,5.904597902420334 ],\n    }\n   },\n   {\n    \"start\": -560908800 ,\n    \"stop\": -521164800 ,\n    \"interp\": -521337600 ,\n    \"sat\":{\n      \"e\": 3.724736141302459,\n      \"a\": -481533629862.3785,\n      \"per\": 182126358.7126575,\n      \"t0\": -632181222.424468,\n      \"rot\":[ -0.999833012695353,-0.014833339730976731,0.018274209272474442,-0.8115734328322022,0.5840620987132965,5.904631337838904 ],\n    }\n   },\n   {\n    \"start\": -521164800 ,\n    \"stop\": -441763200 ,\n    \"interp\": -441936000 ,\n    \"sat\":{\n      \"e\": 3.7245760332618314,\n      \"a\": -481556530401.99854,\n      \"per\": 182139351.08086178,\n      \"t0\": -632183408.3915205,\n      \"rot\":[ -0.9998323477856443,-0.014863076669283128,0.018310552188459152,-0.8115858379701828,0.5840441049768067,5.904647413426268 ],\n    }\n   },\n   {\n    \"start\": -441763200 ,\n    \"stop\": 1000000000000 ,\n    \"sat\":{\n      \"e\": 3.7223768226718303,\n      \"a\": -482001746408.50726,\n      \"per\": 182392000.84095204,\n      \"t0\": -632202738.2747799,\n      \"rot\":[ -0.9998356781560522,-0.014708109194886285,0.018127787681544,-0.8112237736673372,0.5845508194852147,5.904266046366399 ],\n    }\n   }\n ]\n  },\n   \"Voyager 2\": {\n \"color\": 16776960 ,\n \"horizonsID\": -32 ,\n \"orbits\":[\n   {\n    \"start\": -705628800 ,\n    \"stop\": -702604800 ,\n    \"interp\": -702777600 ,\n    \"planet\":\"Earth\",\n    \"sat\":{\n      \"e\": 2.747576925466412,\n      \"a\": -3885714.5866012503,\n      \"per\": 2410.556584456962,\n      \"t0\": -705745921.6783239,\n      \"rot\":[ 0.6037263994406499,0.731258792275962,-0.797191592164913,0.5537943978073928,0.3982114308708987,0.25935141262653055 ],\n    },\n    \"planetOrb\":{\n      \"e\": 0.01685441821074475,\n      \"a\": 150700756817.3924,\n      \"per\": 31886582.38273381,\n      \"t0\": -727055678.2628325,\n      \"rot\":[ 0.537950160394738,-0.8429766426703938,0.8429766455432058,0.5379501585614372,0.00008255831623109389,0.5460218512525047 ],\n    }\n   },\n   {\n    \"start\": -702604800 ,\n    \"stop\": -701136000 ,\n    \"interp\": -701308800 ,\n    \"sat\":{\n      \"e\": 0.7215324912734997,\n      \"a\": 540813759253.51465,\n      \"per\": 216772640.77399766,\n      \"t0\": -704932946.3062446,\n      \"rot\":[ 0.8452703247677225,0.5324421244246931,-0.5343389168562113,0.8422697902679346,0.08418422975907792,0.20972545529969244 ],\n    }\n   },\n   {\n    \"start\": -701136000 ,\n    \"stop\": -694656000 ,\n    \"interp\": -694828800 ,\n    \"sat\":{\n      \"e\": 0.7198415980754964,\n      \"a\": 536293276085.2759,\n      \"per\": 214060432.10243604,\n      \"t0\": -704952076.075279,\n      \"rot\":[ 0.8458923371310029,0.5314582270328911,-0.5333536856374481,0.842886163269042,0.08423223069971497,0.2028872979926782 ],\n    }\n   },\n   {\n    \"start\": -694656000 ,\n    \"stop\": -688262400 ,\n    \"interp\": -688435200 ,\n    \"sat\":{\n      \"e\": 0.7215035831966166,\n      \"a\": 537647527124.34485,\n      \"per\": 214871763.814675,\n      \"t0\": -704943576.9363964,\n      \"rot\":[ 0.8459267610179888,0.531403796992584,-0.5332990858735973,0.8429204262486676,0.08423277007572084,0.19963851567831142 ],\n    }\n   },\n   {\n    \"start\": -688262400 ,\n    \"stop\": -675475200 ,\n    \"interp\": -675648000 ,\n    \"sat\":{\n      \"e\": 0.723454128856507,\n      \"a\": 540065971566.25366,\n      \"per\": 216323196.2236632,\n      \"t0\": -704905784.2156513,\n      \"rot\":[ 0.8455622233532101,0.5319771506645777,-0.5338768832211936,0.8425533984071727,0.08428571648459357,0.20028741044571693 ],\n    }\n   },\n   {\n    \"start\": -675475200 ,\n    \"stop\": -662688000 ,\n    \"interp\": -662860800 ,\n    \"sat\":{\n      \"e\": 0.7254839095666369,\n      \"a\": 542070040203.66034,\n      \"per\": 217528405.8327036,\n      \"t0\": -704820165.9287009,\n      \"rot\":[ 0.844244695701226,0.5340348807783651,-0.5359579216508927,0.8412155081649224,0.08463577810163275,0.2033465382736042 ],\n    }\n   },\n   {\n    \"start\": -662688000 ,\n    \"stop\": -656294400 ,\n    \"interp\": -656467200 ,\n    \"sat\":{\n      \"e\": 0.7284907880487819,\n      \"a\": 543319599405.05194,\n      \"per\": 218280996.41587952,\n      \"t0\": -704636891.2895641,\n      \"rot\":[ 0.8418697306656774,0.5376985100465126,-0.5396807913840364,0.8387774904333635,0.08563079957625797,0.2073278677394945 ],\n    }\n   },\n   {\n    \"start\": -656294400 ,\n    \"stop\": -653184000 ,\n    \"interp\": -653356800 ,\n    \"sat\":{\n      \"e\": 0.7324523147170595,\n      \"a\": 544022958159.93915,\n      \"per\": 218704999.69396642,\n      \"t0\": -704364546.4487714,\n      \"rot\":[ 0.8392131354277034,0.5417344547199375,-0.5438026418891354,0.8360214447200518,0.08713165060693727,0.21097918829165266 ],\n    }\n   },\n   {\n    \"start\": -653184000 ,\n    \"stop\": -647308800 ,\n    \"interp\": -647481600 ,\n    \"sat\":{\n      \"e\": 0.7384804373186032,\n      \"a\": 544624009842.3208,\n      \"per\": 219067546.82802626,\n      \"t0\": -703924287.4140005,\n      \"rot\":[ 0.8357702168178974,0.5468742531990581,-0.5490793610036391,0.8324137558783116,0.08953150402252297,0.2152120815374561 ],\n    }\n   },\n   {\n    \"start\": -647308800 ,\n    \"stop\": -632275200 ,\n    \"interp\": -632448000 ,\n    \"planet\":\"Jupiter\",\n    \"sat\":{\n      \"e\": 1.276942586150766,\n      \"a\": -2199999175.2798867,\n      \"per\": 1821392.1607455257,\n      \"t0\": -646263338.21641,\n      \"rot\":[ -0.8581325472132558,-0.5095035677854436,0.5134282144694517,-0.8515729796613632,0.12340816311967129,4.5405371385661075 ],\n    },\n    \"planetOrb\":{\n      \"e\": 0.048104332718888504,\n      \"a\": 776646666038.3038,\n      \"per\": 373585100.7003452,\n      \"t0\": -770436763.1638217,\n      \"rot\":[ -0.18081875587093738,-0.9832616001336131,0.9835164348018218,-0.1807719047090983,0.022762780377875998,4.76252875739247 ],\n    }\n   },\n   {\n    \"start\": -632275200 ,\n    \"stop\": -620352000 ,\n    \"interp\": -620524800 ,\n    \"sat\":{\n      \"e\": 1.289422940969879,\n      \"a\": -2595950012916.4536,\n      \"per\": 2279698209.6816835,\n      \"t0\": -664838874.6259674,\n      \"rot\":[ -0.49185388832712346,-0.8698112949428553,0.8706777547046264,-0.49136441722188007,0.04460180128689083,6.128268710554104 ],\n    }\n   },\n   {\n    \"start\": -620352000 ,\n    \"stop\": -608256000 ,\n    \"interp\": -608428800 ,\n    \"sat\":{\n      \"e\": 1.2844032959319371,\n      \"a\": -2642800371385.7817,\n      \"per\": 2341690039.387903,\n      \"t0\": -664910307.7289828,\n      \"rot\":[ -0.4906373505453624,-0.8704990555384854,0.8713638678817405,-0.4901504021504914,0.0445418632111025,6.129429079986683 ],\n    }\n   },\n   {\n    \"start\": -608256000 ,\n    \"stop\": -584064000 ,\n    \"interp\": -584236800 ,\n    \"sat\":{\n      \"e\": 1.2837092345736707,\n      \"a\": -2649650478604.73,\n      \"per\": 2350800385.712213,\n      \"t0\": -664920073.3019401,\n      \"rot\":[ -0.48990658614609134,-0.8709106532124484,0.8717749347455926,-0.4894208905858085,0.04451770411039078,6.130330976162526 ],\n    }\n   },\n   {\n    \"start\": -584064000 ,\n    \"stop\": -574041600 ,\n    \"interp\": -574214400 ,\n    \"planet\":\"Saturn\",\n    \"sat\":{\n      \"e\": 1.482554753301414,\n      \"a\": -333088313.31741476,\n      \"per\": 196095.19443840056,\n      \"t0\": -579040523.5788093,\n      \"rot\":[ 0.4874768459910807,-0.8710975068446146,0.8731359141752149,0.48633879135349917,0.06829138740656926,1.5430983332607209 ],\n    },\n    \"planetOrb\":{\n      \"e\": 0.05378229567278949,\n      \"a\": 1425096636787.137,\n      \"per\": 927652581.4320629,\n      \"t0\": -822353969.8222649,\n      \"rot\":[ -0.40227880423509166,-0.914655803665515,0.9155172110141812,-0.4019003013363894,0.043369443237261975,5.890401428921957 ],\n    }\n   },\n   {\n    \"start\": -574041600 ,\n    \"stop\": -557452800 ,\n    \"interp\": -557625600 ,\n    \"sat\":{\n      \"e\": 3.443605202929727,\n      \"a\": -587178295734.9269,\n      \"per\": 245238053.84868303,\n      \"t0\": -581426942.3378074,\n      \"rot\":[ 0.2170527086414383,-0.9751040359511574,0.9761598853012835,0.21681793668982152,0.04649840213741303,1.961171853122423 ],\n    }\n   },\n   {\n    \"start\": -557452800 ,\n    \"stop\": -540864000 ,\n    \"interp\": -541036800 ,\n    \"sat\":{\n      \"e\": 3.437718482498117,\n      \"a\": -588603610923.8035,\n      \"per\": 246131530.90388247,\n      \"t0\": -581442257.5405794,\n      \"rot\":[ 0.21676317354972455,-0.9751688200316769,0.9762242194253593,0.2165288301300625,0.04648696764184087,1.9608657620865062 ],\n    }\n   },\n   {\n    \"start\": -540864000 ,\n    \"stop\": -507513600 ,\n    \"interp\": -507686400 ,\n    \"sat\":{\n      \"e\": 3.435767708730641,\n      \"a\": -589083641420.3678,\n      \"per\": 246432687.89148605,\n      \"t0\": -581452169.5956193,\n      \"rot\":[ 0.2166324539433602,-0.975198202051761,0.9762532355380329,0.21639834000160454,0.04647822242257974,1.9607292844695883 ],\n    }\n   },\n   {\n    \"start\": -507513600 ,\n    \"stop\": -440812800 ,\n    \"interp\": -440985600 ,\n    \"sat\":{\n      \"e\": 3.4356221716183106,\n      \"a\": -589095844080.9093,\n      \"per\": 246440345.08088526,\n      \"t0\": -581452006.6379546,\n      \"rot\":[ 0.21654033031778988,-0.9752192504260024,0.9762736733856252,0.21630645624928246,0.04646429363955851,1.9605975941523237 ],\n    }\n   },\n   {\n    \"start\": -440812800 ,\n    \"stop\": -438048000 ,\n    \"interp\": -438220800 ,\n    \"planet\":\"Uranus\",\n    \"sat\":{\n      \"e\": 5.0125577246608275,\n      \"a\": -26698058.714837547,\n      \"per\": 11386.474999819544,\n      \"t0\": -439711214.3669455,\n      \"rot\":[ 0.17045993283235836,0.9663703132591962,-0.9853646083043514,0.1671740767844465,0.19540021930026266,4.774529410780698 ],\n    },\n    \"planetOrb\":{\n      \"e\": 0.04724056809678143,\n      \"a\": 2870228312386.816,\n      \"per\": 2650549639.258211,\n      \"t0\": -1049542456.2648152,\n      \"rot\":[ 0.27527973137741363,-0.9612766823074014,0.9613641711093559,0.2752546795868182,0.013490790104118458,1.6873356223582192 ],\n    }\n   },\n   {\n    \"start\": -438048000 ,\n    \"stop\": -437788800 ,\n    \"interp\": -437961600 ,\n    \"sat\":{\n      \"e\": 5.798208188115044,\n      \"a\": -448980586474.4328,\n      \"per\": 163973706.70935372,\n      \"t0\": -539617532.9930187,\n      \"rot\":[ -0.165836621850547,0.9852180732738691,-0.9861532410600284,-0.16567935920609897,0.04353961446294017,5.476298408346066 ],\n    }\n   },\n   {\n    \"start\": -437788800 ,\n    \"stop\": -403920000 ,\n    \"interp\": -404092800 ,\n    \"sat\":{\n      \"e\": 5.796492706467439,\n      \"a\": -448913438106.38275,\n      \"per\": 163936922.8635078,\n      \"t0\": -539675560.1527551,\n      \"rot\":[ -0.16583182836504085,0.9852197259343052,-0.986154047145327,-0.1656747127550076,0.043519894111525,5.475644560083685 ],\n    }\n   },\n   {\n    \"start\": -403920000 ,\n    \"stop\": -328752000 ,\n    \"interp\": -328924800 ,\n    \"sat\":{\n      \"e\": 5.801371314576158,\n      \"a\": -448420903819.8378,\n      \"per\": 163667196.90918887,\n      \"t0\": -539619738.7989433,\n      \"rot\":[ -0.16575836822890194,0.9852312483471989,-0.9861663974006069,-0.16560118503795943,0.043538888298204695,5.475558335545732 ],\n    }\n   },\n   {\n    \"start\": -328752000 ,\n    \"stop\": -327974400 ,\n    \"interp\": -328147200 ,\n    \"sat\":{\n      \"e\": 5.80889361967958,\n      \"a\": -447588054003.2422,\n      \"per\": 163211441.33855894,\n      \"t0\": -539470989.1377964,\n      \"rot\":[ -0.1655958580749706,0.9852577306976223,-0.9861936989194436,-0.1654386957842429,0.04355734195035553,5.475337019528283 ],\n    }\n   },\n   {\n    \"start\": -327974400 ,\n    \"stop\": -324864000 ,\n    \"interp\": -325036800 ,\n    \"planet\":\"Neptune\",\n    \"sat\":{\n      \"e\": 2.201341549741389,\n      \"a\": -24386528.91865012,\n      \"per\": 9151.390381447753,\n      \"t0\": -326664202.3301803,\n      \"rot\":[ -0.4253437161965187,0.39509278710200646,0.9050318906492386,0.18568432344174524,0.899679399346206,1.9892034126620879 ],\n    },\n    \"planetOrb\":{\n      \"e\": 0.008594978878095775,\n      \"a\": 4498299359906.747,\n      \"per\": 5200425932.702134,\n      \"t0\": -3744875742.3166137,\n      \"rot\":[ -0.6663503918397184,-0.7452830059270532,0.7456387565671823,-0.6660324703578221,0.030886720534768833,4.779541095962098 ],\n    }\n   },\n   {\n    \"start\": -324864000 ,\n    \"stop\": -323395200 ,\n    \"interp\": -323568000 ,\n    \"sat\":{\n      \"e\": 6.28446606213364,\n      \"a\": -601256563032.4457,\n      \"per\": 254110502.3928359,\n      \"t0\": -526018597.2517363,\n      \"rot\":[ -0.20160959931647499,-0.19050247749074004,0.9794659613602968,-0.03921231535434218,0.9809032574084162,2.2700058904862734 ],\n    }\n   },\n   {\n    \"start\": -323395200 ,\n    \"stop\": 1000000000000 ,\n    \"sat\":{\n      \"e\": 6.275576203159521,\n      \"a\": -602273576816.1936,\n      \"per\": 254755509.4146494,\n      \"t0\": -526167909.91554564,\n      \"rot\":[ -0.2016057867567373,-0.19079155212648413,0.979466746115557,-0.03927104327486872,0.980844722062198,2.2699174006638434 ],\n    }\n   }\n ]\n   },\n   \"Juno\": {\n \"color\": 16776960 ,\n \"horizonsID\": -61 ,\n \"orbits\":[\n   {\n    \"start\": 365990400 ,\n    \"stop\": 366595200 ,\n    \"interp\": 366422400 ,\n    \"planet\":\"Earth\",\n    \"sat\":{\n      \"e\": 1.5202296388369219,\n      \"a\": -12819003.15115274,\n      \"per\": 14444.162489162884,\n      \"t0\": 365879541.72346616,\n      \"rot\":[ 0.47118597139015506,-0.870464766994498,0.8820338884448352,0.46500570122126267,0.1614335381912194,3.951639739677181 ],\n    },\n    \"planetOrb\":{\n      \"e\": 0.02155632033594553,\n      \"a\": 148724726698.4528,\n      \"per\": 31261484.199589916,\n      \"t0\": 347402855.6413832,\n      \"rot\":[ -0.9456900243886099,-0.32506980379813016,0.32506980446031936,-0.9456900224621753,0.00006382895544590643,5.237969954960836 ],\n    }\n   },\n   {\n    \"start\": 366595200 ,\n    \"stop\": 370569600 ,\n    \"interp\": 370396800 ,\n    \"sat\":{\n      \"e\": 0.377237867999994,\n      \"a\": 241700124271.4559,\n      \"per\": 64766164.777138546,\n      \"t0\": 366715190.3799782,\n      \"rot\":[ -0.6843603473802711,-0.7291434705090086,0.7291439603628043,-0.6843598876130207,0.0011591550250328203,3.3248160440929735 ],\n    }\n   },\n   {\n    \"start\": 370569600 ,\n    \"stop\": 374716800 ,\n    \"interp\": 374544000 ,\n    \"sat\":{\n      \"e\": 0.3808925231088441,\n      \"a\": 242369698096.22342,\n      \"per\": 65035480.41321678,\n      \"t0\": 366676325.3263114,\n      \"rot\":[ -0.6841005370931225,-0.7293872367575234,0.7293877262121302,-0.6841000780284201,0.0011584889875276908,3.313251995747416 ],\n    }\n   },\n   {\n    \"start\": 374716800 ,\n    \"stop\": 383011200 ,\n    \"interp\": 382838400 ,\n    \"sat\":{\n      \"e\": 0.3853490692765604,\n      \"a\": 243836778913.30798,\n      \"per\": 65626869.593739524,\n      \"t0\": 366725111.38608974,\n      \"rot\":[ -0.6861818065075072,-0.7274295975142209,0.727430084900325,-0.6861813467582002,0.001157592934158588,3.3151248809391562 ],\n    }\n   },\n   {\n    \"start\": 383011200 ,\n    \"stop\": 399686400 ,\n    \"interp\": 399513600 ,\n    \"sat\":{\n      \"e\": 0.3857975372128429,\n      \"a\": 244716600511.0577,\n      \"per\": 65982386.044899315,\n      \"t0\": 366779063.7485286,\n      \"rot\":[ -0.6890045461070428,-0.7247565389335567,0.7247570182094327,-0.6890040904739835,0.0011500361605603466,3.3200392833788723 ],\n    }\n   },\n   {\n    \"start\": 399686400 ,\n    \"stop\": 401068800 ,\n    \"interp\": 400896000 ,\n    \"sat\":{\n      \"e\": 0.4114974909744963,\n      \"a\": 240324606756.4927,\n      \"per\": 64214074.91928798,\n      \"t0\": 367827542.40145314,\n      \"rot\":[ -0.558059345461661,-0.829800896247931,0.8298010405771389,-0.5580592483971125,0.0005898004582044879,3.495473100445866 ],\n    }\n   },\n   {\n    \"start\": 401068800 ,\n    \"stop\": 417744000 ,\n    \"interp\": 417571200 ,\n    \"sat\":{\n      \"e\": 0.4399970032347648,\n      \"a\": 235512057598.7353,\n      \"per\": 62294913.91786596,\n      \"t0\": 368957211.3549106,\n      \"rot\":[ 0.8642851849340848,-0.5030020894394497,0.5030021064602562,0.8642851556880224,0.00026014780155303577,5.139663796627662 ],\n    }\n   },\n   {\n    \"start\": 417744000 ,\n    \"stop\": 426038400 ,\n    \"interp\": 425865600 ,\n    \"sat\":{\n      \"e\": 0.4393460004881082,\n      \"a\": 236034320834.1963,\n      \"per\": 62502243.26048959,\n      \"t0\": 368750009.1824436,\n      \"rot\":[ 0.878620202061438,-0.4775212256787404,0.47752124615509817,0.8786201643857497,0.0002928498446520399,5.1645275782295075 ],\n    }\n   },\n   {\n    \"start\": 426038400 ,\n    \"stop\": 430185600 ,\n    \"interp\": 430012800 ,\n    \"sat\":{\n      \"e\": 0.4421435847179871,\n      \"a\": 237050923893.5962,\n      \"per\": 62906474.76806958,\n      \"t0\": 368331926.0502737,\n      \"rot\":[ 0.830481356813035,-0.5570463910355063,0.5570464217513478,0.8304813110198432,0.0003320859529388443,5.0704870431378435 ],\n    }\n   },\n   {\n    \"start\": 430185600 ,\n    \"stop\": 434505600 ,\n    \"interp\": 434332800 ,\n    \"sat\":{\n      \"e\": 0.4403745406232173,\n      \"a\": 236077085495.32507,\n      \"per\": 62519230.24976333,\n      \"t0\": 431263305.4316875,\n      \"rot\":[ 0.8021041271558677,-0.5971841699819199,0.597184200393416,0.8021040863088618,0.0003191388906852387,5.028949754290203 ],\n    }\n   },\n   {\n    \"start\": 434505600 ,\n    \"stop\": 435369600 ,\n    \"interp\": 435196800 ,\n    \"planet\":\"Earth\",\n    \"sat\":{\n      \"e\": 2.831181202279463,\n      \"a\": -3691649.212708807,\n      \"per\": 2232.2437938749217,\n      \"t0\": 434661768.145828,\n      \"rot\":[ 0.7953426805807794,-0.5432829453143316,0.6061600617383005,0.7128416095263496,0.44350927956297403,5.069194590393145 ],\n    },\n    \"planetOrb\":{\n      \"e\": 0.01909577653225946,\n      \"a\": 149337774000.2452,\n      \"per\": 31454974.261796717,\n      \"t0\": 411032897.2048323,\n      \"rot\":[ -0.7666784456768172,-0.642031273213184,0.6420312772245443,-0.7666784408866713,0.00011178479748418581,5.7252395471438025 ],\n    }\n   },\n   {\n    \"start\": 435369600 ,\n    \"stop\": 440208000 ,\n    \"interp\": 440035200 ,\n    \"sat\":{\n      \"e\": 0.6903988607791238,\n      \"a\": 473898791794.3221,\n      \"per\": 177812084.0232439,\n      \"t0\": 433552822.2728708,\n      \"rot\":[ 0.9592457677422637,-0.28169297157667483,0.2825731003980302,0.9562580104300358,0.0788649938356191,5.9895812322640865 ],\n    }\n   },\n   {\n    \"start\": 440208000 ,\n    \"stop\": 445219200 ,\n    \"interp\": 445046400 ,\n    \"sat\":{\n      \"e\": 0.6921397621122267,\n      \"a\": 475595217468.0672,\n      \"per\": 178767714.57162303,\n      \"t0\": 433553525.4716453,\n      \"rot\":[ 0.9591588214870623,-0.2819866715387519,0.28286808792005796,0.9561700845682062,0.07888147089985886,5.986673736882722 ],\n    }\n   },\n   {\n    \"start\": 445219200 ,\n    \"stop\": 455241600 ,\n    \"interp\": 455068800 ,\n    \"sat\":{\n      \"e\": 0.6939353055294262,\n      \"a\": 477707608396.67365,\n      \"per\": 179960050.89975524,\n      \"t0\": 433573886.3330754,\n      \"rot\":[ 0.9591744439167617,-0.2819338110138342,0.28281510945663957,0.9561854984342285,0.07888357744994555,5.986968742313126 ],\n    }\n   },\n   {\n    \"start\": 455241600 ,\n    \"stop\": 475113600 ,\n    \"interp\": 474940800 ,\n    \"sat\":{\n      \"e\": 0.6955513256989387,\n      \"a\": 479120634859.6669,\n      \"per\": 180759105.36003983,\n      \"t0\": 433624694.4236449,\n      \"rot\":[ 0.9597610625160788,-0.279940952191756,0.2808179176584134,0.9567638274568373,0.07896861247430172,5.989653771049838 ],\n    }\n   },\n   {\n    \"start\": 475113600 ,\n    \"stop\": 484963200 ,\n    \"interp\": 484790400 ,\n    \"sat\":{\n      \"e\": 0.6975216866864234,\n      \"a\": 479283372764.836,\n      \"per\": 180851208.01775753,\n      \"t0\": 433727815.19079787,\n      \"rot\":[ 0.9611485775421772,-0.2751614501462327,0.27603154147424774,0.9581188982606468,0.07933695954110416,5.99375957768585 ],\n    }\n   },\n   {\n    \"start\": 484963200 ,\n    \"stop\": 494985600 ,\n    \"interp\": 494812800 ,\n    \"sat\":{\n      \"e\": 0.6998421049788739,\n      \"a\": 478843083852.08453,\n      \"per\": 180602059.50859985,\n      \"t0\": 433864028.37427217,\n      \"rot\":[ 0.9626876124159258,-0.2697495871803577,0.27061515275557674,0.9596084453829191,0.07991740590011431,5.997918342032613 ],\n    }\n   },\n   {\n    \"start\": 494985600 ,\n    \"stop\": 505008000 ,\n    \"interp\": 504835200 ,\n    \"sat\":{\n      \"e\": 0.7043163837230613,\n      \"a\": 477721743753.94086,\n      \"per\": 179968038.47956213,\n      \"t0\": 434150152.2512766,\n      \"rot\":[ 0.9651614476894524,-0.2607918490229283,0.26165507809710165,0.9619772732068629,0.08116241320149965,6.0049017662056245 ],\n    }\n   },\n   {\n    \"start\": 505008000 ,\n    \"stop\": 510019200 ,\n    \"interp\": 509846400 ,\n    \"sat\":{\n      \"e\": 0.7114165168972912,\n      \"a\": 475798024694.9641,\n      \"per\": 178882074.1612206,\n      \"t0\": 434628021.37131834,\n      \"rot\":[ 0.9683975421785886,-0.24854429329502223,0.24941170843099714,0.9650296061221344,0.08332822797969551,6.014827698385747 ],\n    }\n   },\n   {\n    \"start\": 510019200 ,\n    \"stop\": 512438400 ,\n    \"interp\": 512265600 ,\n    \"sat\":{\n      \"e\": 0.7185851605774988,\n      \"a\": 473830841409.1914,\n      \"per\": 177773841.7866804,\n      \"t0\": 435123296.42094904,\n      \"rot\":[ 0.9711963864528713,-0.23740391479888232,0.2382804627762943,0.9676237048393799,0.08569566541592115,6.024202375842501 ],\n    }\n   },\n   {\n    \"start\": 512438400 ,\n    \"stop\": 515030400 ,\n    \"interp\": 514857600 ,\n    \"sat\":{\n      \"e\": 0.7263270612137364,\n      \"a\": 471716557962.2561,\n      \"per\": 176585301.5126249,\n      \"t0\": 435666722.61951315,\n      \"rot\":[ 0.9738763745650751,-0.22618923433533858,0.2270788564881932,0.9700610391773884,0.08843082347732861,6.033910917822994 ],\n    }\n   }\n ]},\n  \"Pioneer 10\": {\n \"color\": 16776960 ,\n \"horizonsID\": -23 ,\n \"orbits\":[\n   {\n    \"start\": -878169600 ,\n    \"stop\": -876528000 ,\n    \"interp\": -876700800 ,\n    \"planet\":\"Earth\",\n    \"sat\":{\n      \"e\": 2.377748622488513,\n      \"a\": -4740962.751393959,\n      \"per\": 3248.708903693728,\n      \"t0\": -878248690.0840381,\n      \"rot\":[ 0.8693268857673293,0.48810300672817636,-0.4942375599669421,0.8585366656493222,0.1570676559914796,2.886520142698656 ],\n    },\n    \"planetOrb\":{\n      \"e\": 0.01274648430717382,\n      \"a\": 149421756640.1641,\n      \"per\": 31481511.852408785,\n      \"t0\": -883133729.5670624,\n      \"rot\":[ 0.9964853866585243,0.08376678433114239,-0.0837667844435448,0.996485385321391,0.000051804429417797274,1.9279926012704633 ],\n    }\n   },\n   {\n    \"start\": -876528000 ,\n    \"stop\": -870307200 ,\n    \"interp\": -870480000 ,\n    \"sat\":{\n      \"e\": 0.7051733304859217,\n      \"a\": 501958611567.94324,\n      \"per\": 193836131.5756241,\n      \"t0\": -878427756.5352526,\n      \"rot\":[ 0.9554570859999337,0.2949343570419674,-0.2951300676185252,0.9548234905866091,0.03641190547396442,3.092319099097339 ],\n    }\n   },\n   {\n    \"start\": -870307200 ,\n    \"stop\": -864086400 ,\n    \"interp\": -864259200 ,\n    \"sat\":{\n      \"e\": 0.7085883213695413,\n      \"a\": 506244515355.3694,\n      \"per\": 196323987.58911481,\n      \"t0\": -878415791.1125188,\n      \"rot\":[ 0.955849754832203,0.2936608466886853,-0.293855825511793,0.9552155306852413,0.03642248014341242,3.0883903344113013 ],\n    }\n   },\n   {\n    \"start\": -864086400 ,\n    \"stop\": -851472000 ,\n    \"interp\": -851644800 ,\n    \"sat\":{\n      \"e\": 0.7107935326266704,\n      \"a\": 509519918331.8942,\n      \"per\": 198232390.9969962,\n      \"t0\": -878380951.8913164,\n      \"rot\":[ 0.9559052374281153,0.2934804285980862,-0.2936752918743737,0.9552709626643217,0.036422876331555276,3.089642526286745 ],\n    }\n   },\n   {\n    \"start\": -851472000 ,\n    \"stop\": -838857600 ,\n    \"interp\": -839030400 ,\n    \"sat\":{\n      \"e\": 0.712387118797237,\n      \"a\": 511473748293.2867,\n      \"per\": 199373710.803205,\n      \"t0\": -878318258.3159091,\n      \"rot\":[ 0.9551525863057905,0.29591661301034466,-0.2961140605803099,0.9545156947081996,0.03651228149826791,3.093657893337485 ],\n    }\n   },\n   {\n    \"start\": -838857600 ,\n    \"stop\": -832636800 ,\n    \"interp\": -832809600 ,\n    \"sat\":{\n      \"e\": 0.7148072936260352,\n      \"a\": 512562675196.8041,\n      \"per\": 200010749.09845918,\n      \"t0\": -878176571.1464477,\n      \"rot\":[ 0.9531794375774273,0.3021998930921512,-0.3024052905945584,0.952532026034331,0.03685056300825004,3.100386968595115 ],\n    }\n   },\n   {\n    \"start\": -832636800 ,\n    \"stop\": -829526400 ,\n    \"interp\": -829699200 ,\n    \"sat\":{\n      \"e\": 0.7180661929418074,\n      \"a\": 513122409926.8116,\n      \"per\": 200338465.6682131,\n      \"t0\": -877962603.833323,\n      \"rot\":[ 0.9506044638248935,0.31018775913054575,-0.3104048217347579,0.9499397168040825,0.03739102196718067,3.108081289794446 ],\n    }\n   },\n   {\n    \"start\": -829526400 ,\n    \"stop\": -826243200 ,\n    \"interp\": -826416000 ,\n    \"sat\":{\n      \"e\": 0.7234133588216985,\n      \"a\": 513565924477.3158,\n      \"per\": 200598263.97356412,\n      \"t0\": -877590765.8848407,\n      \"rot\":[ 0.9465716401243985,0.32225642738414967,-0.32249361251380804,0.9458754628716344,0.03834584393354292,3.1193768491468297 ],\n    }\n   },\n   {\n    \"start\": -826243200 ,\n    \"stop\": -813628800 ,\n    \"interp\": -813801600 ,\n    \"planet\":\"Jupiter\",\n    \"sat\":{\n      \"e\": 1.1137002594844163,\n      \"a\": -1748893249.354195,\n      \"per\": 1290965.505534554,\n      \"t0\": -822866307.3472102,\n      \"rot\":[ -0.0713265812840487,0.9660689960029517,-0.9974530158370017,-0.06908235042187105,0.2488741123982942,6.02143556074265 ],\n    },\n    \"planetOrb\":{\n      \"e\": 0.0480682241934893,\n      \"a\": 778004452593.5118,\n      \"per\": 374565219.11130565,\n      \"t0\": -1144514805.3732982,\n      \"rot\":[ -0.18080152023803592,-0.9832645967444765,0.9835196034038239,-0.18075464207564723,0.022770422855685056,4.773486291086205 ],\n    }\n   },\n   {\n    \"start\": -813628800 ,\n    \"stop\": -805852800 ,\n    \"interp\": -806025600 ,\n    \"sat\":{\n      \"e\": 1.7503867495939398,\n      \"a\": -1008249277452.194,\n      \"per\": 551803878.9391502,\n      \"t0\": -822968605.2059951,\n      \"rot\":[ 0.8854134415248428,0.46409157144765056,-0.4648043002889858,0.8840557525019825,0.05535738233879518,6.04739212528026 ],\n    }\n   },\n   {\n    \"start\": -805852800 ,\n    \"stop\": -798076800 ,\n    \"interp\": -798249600 ,\n    \"sat\":{\n      \"e\": 1.739675549189699,\n      \"a\": -1022854223563.109,\n      \"per\": 563836886.2812521,\n      \"t0\": -823018546.0990157,\n      \"rot\":[ 0.8849488941458262,0.4649804386130447,-0.4656881518248872,0.8836040241470122,0.05511007365651645,6.047891532106717 ],\n    }\n   },\n   {\n    \"start\": -798076800 ,\n    \"stop\": -782524800 ,\n    \"interp\": -782697600 ,\n    \"sat\":{\n      \"e\": 1.7336105554761048,\n      \"a\": -1031307938462.943,\n      \"per\": 570841332.1676683,\n      \"t0\": -823064531.7847635,\n      \"rot\":[ 0.8843305056966754,0.46615585317730857,-0.46686138916627323,0.8829940769141998,0.054956170563237525,6.048762458062414 ],\n    }\n   },\n   {\n    \"start\": -782524800 ,\n    \"stop\": -751420800 ,\n    \"interp\": -751593600 ,\n    \"sat\":{\n      \"e\": 1.730163925192199,\n      \"a\": -1036272102597.4801,\n      \"per\": 574967874.6918488,\n      \"t0\": -823105171.6758465,\n      \"rot\":[ 0.8835473075281384,0.4676367735879921,-0.46834192142042685,0.8822170156190403,0.054854218984931764,6.050176025540281 ],\n    }\n   },\n   {\n    \"start\": -751420800 ,\n    \"stop\": -689212800 ,\n    \"interp\": -689385600 ,\n    \"sat\":{\n      \"e\": 1.7293992061737,\n      \"a\": -1037620535074.819,\n      \"per\": 576090491.29872,\n      \"t0\": -823122392.2322049,\n      \"rot\":[ 0.8830663801110002,0.46854238710898233,-0.46924808824080944,0.8817383385919413,0.05482274837455324,6.0512949259828135 ],\n    }\n   },\n   {\n    \"start\": -689212800 ,\n    \"stop\": -564624000 ,\n    \"interp\": -564796800 ,\n    \"sat\":{\n      \"e\": 1.7294208635592638,\n      \"a\": -1037664338587.385,\n      \"per\": 576126971.4750615,\n      \"t0\": -823123499.627094,\n      \"rot\":[ 0.8829904726994519,0.46868504120577625,-0.46939090864864286,0.8816626365280307,0.05482086738078414,6.051503400131622 ],\n    }\n   },\n   {\n    \"start\": -564624000 ,\n    \"stop\": 1000000000000 ,\n    \"sat\":{\n      \"e\": 1.7292762051091588,\n      \"a\": -1037842790585.115,\n      \"per\": 576275596.7461803,\n      \"t0\": -823129108.3682705,\n      \"rot\":[ 0.8828722231774343,0.4689068043952808,-0.4696132850992767,0.8815440405864393,0.054831681520266254,6.051714948715675 ],\n    }\n   }\n ]},\n\n \"Pioneer 11\": {\n \"color\": 16776960 ,\n \"horizonsID\": -24 ,\n \"orbits\":[\n   {\n    \"start\": -843696000 ,\n    \"stop\": -837216000 ,\n    \"interp\": -837388800 ,\n    \"sat\":{\n      \"e\": 0.7089852637593915,\n      \"a\": 514113840071.2392,\n      \"per\": 200919372.39040494,\n      \"t0\": -843823759.6410844,\n      \"rot\":[ 0.959343847857906,-0.28183678062955136,0.28223993618406795,0.9579735074086261,0.05343021792567306,3.1274110916972027 ],\n    }\n   },\n   {\n    \"start\": -837216000 ,\n    \"stop\": -830822400 ,\n    \"interp\": -830995200 ,\n    \"sat\":{\n      \"e\": 0.7118242933895452,\n      \"a\": 517421107094.6068,\n      \"per\": 202861242.50780126,\n      \"t0\": -843825297.6999439,\n      \"rot\":[ 0.9590455876850135,-0.2828468015219801,0.2832517621161553,0.957674455275709,0.05345394822797743,3.1215453934652944 ],\n    }\n   },\n   {\n    \"start\": -830822400 ,\n    \"stop\": -817862400 ,\n    \"interp\": -818035200 ,\n    \"sat\":{\n      \"e\": 0.7142543185691659,\n      \"a\": 521117962546.53033,\n      \"per\": 205039217.01096958,\n      \"t0\": -843793074.8688005,\n      \"rot\":[ 0.959001402351643,-0.2829961395513504,0.2834013237223532,0.957630300117191,0.05345459097674654,3.1225285885173597 ],\n    }\n   },\n   {\n    \"start\": -817862400 ,\n    \"stop\": -805075200 ,\n    \"interp\": -805248000 ,\n    \"sat\":{\n      \"e\": 0.715989885504531,\n      \"a\": 523265905164.1745,\n      \"per\": 206308217.5511015,\n      \"t0\": -843730021.7396674,\n      \"rot\":[ 0.9596033862732858,-0.2809523387167361,0.28135625291228744,0.9582257825207374,0.05356428924308469,3.1259642154463667 ],\n    }\n   },\n   {\n    \"start\": -805075200 ,\n    \"stop\": -798681600 ,\n    \"interp\": -798854400 ,\n    \"sat\":{\n      \"e\": 0.7201726000008503,\n      \"a\": 527713870208.60455,\n      \"per\": 208944350.7581302,\n      \"t0\": -843475857.8102212,\n      \"rot\":[ 0.9612172722314117,-0.27538966527471087,0.2757922326027404,0.9598142063608244,0.054011309258555705,3.135970088973926 ],\n    }\n   },\n   {\n    \"start\": -798681600 ,\n    \"stop\": -795398400 ,\n    \"interp\": -795571200 ,\n    \"sat\":{\n      \"e\": 0.7254006514827038,\n      \"a\": 528670294991.09235,\n      \"per\": 209512641.88932675,\n      \"t0\": -843147070.3576015,\n      \"rot\":[ 0.9639717080917243,-0.2656022225605914,0.2660047856688364,0.9625128642363631,0.05499495931798418,3.1443650590855263 ],\n    }\n   },\n   {\n    \"start\": -795398400 ,\n    \"stop\": -793843200 ,\n    \"interp\": -794016000 ,\n    \"sat\":{\n      \"e\": 0.7332730296973288,\n      \"a\": 529485851624.27716,\n      \"per\": 209997637.852935,\n      \"t0\": -842625956.7841562,\n      \"rot\":[ 0.9677742711050327,-0.2514149450546428,0.2518193006644302,0.9662202799911794,0.05664711764015568,3.155967558453465 ],\n    }\n   },\n   {\n    \"start\": -793843200 ,\n    \"stop\": -792115200 ,\n    \"interp\": -792288000 ,\n    \"sat\":{\n      \"e\": 0.7507850775852037,\n      \"a\": 530853228765.67206,\n      \"per\": 210811629.22318518,\n      \"t0\": -841439888.1635865,\n      \"rot\":[ 0.9754243661571573,-0.21992446636906876,0.22033453180767598,0.973609000144146,0.060981504823974575,3.180938533279477 ],\n    }\n   },\n   {\n    \"start\": -792115200 ,\n    \"stop\": -789004800 ,\n    \"interp\": -789177600 ,\n    \"planet\":\"Jupiter\",\n    \"sat\":{\n      \"e\": 1.0716308078849792,\n      \"a\": -1589626871.392422,\n      \"per\": 1118697.0152907467,\n      \"t0\": -791404606.8761845,\n      \"rot\":[ 0.6951422911557086,-0.4618754009345342,-0.7188721687802304,-0.44662895348818143,0.7662856464254143,5.971042020640445 ],\n    },\n    \"planetOrb\":{\n      \"e\": 0.04820104884307285,\n      \"a\": 778031028045.1222,\n      \"per\": 374584411.1445142,\n      \"t0\": -1144375912.1834412,\n      \"rot\":[ -0.18076205350179245,-0.9832718641954332,0.9835268577999358,-0.18071518831736544,0.02276975610445962,4.776533693027581 ],\n    }\n   },\n   {\n    \"start\": -789004800 ,\n    \"stop\": -784512000 ,\n    \"interp\": -784684800 ,\n    \"sat\":{\n      \"e\": 0.802952256960612,\n      \"a\": 2822219289921.941,\n      \"per\": 2584157643.7670217,\n      \"t0\": -3339006045.1886015,\n      \"rot\":[ 0.9963556482509556,0.08213073689089304,-0.08529608548121091,0.959380763309241,0.2698945961851347,1.0437238538021099 ],\n    }\n   },\n   {\n    \"start\": -784512000 ,\n    \"stop\": -780019200 ,\n    \"interp\": -780192000 ,\n    \"sat\":{\n      \"e\": 0.7871173550060961,\n      \"a\": 2618231090354.559,\n      \"per\": 2309111123.0910196,\n      \"t0\": -3063744901.871379,\n      \"rot\":[ 0.9962723503044284,0.08314425026463877,-0.0862635729545809,0.9602467737925117,0.2664829583087897,1.045495873293876 ],\n    }\n   },\n   {\n    \"start\": -780019200 ,\n    \"stop\": -770860800 ,\n    \"interp\": -771033600 ,\n    \"sat\":{\n      \"e\": 0.7790057386080943,\n      \"a\": 2524394544885.701,\n      \"per\": 2186093431.823681,\n      \"t0\": -2940647264.943976,\n      \"rot\":[ 0.9961680214454608,0.08433151926130851,-0.08746012262417628,0.9605333284177828,0.2650734235221165,1.0468239661423528 ],\n    }\n   },\n   {\n    \"start\": -770860800 ,\n    \"stop\": -752544000 ,\n    \"interp\": -752716800 ,\n    \"sat\":{\n      \"e\": 0.7728365092801567,\n      \"a\": 2457242647364.147,\n      \"per\": 2099447100.4042985,\n      \"t0\": -2854003148.7239885,\n      \"rot\":[ 0.9960426856370631,0.08571344042160957,-0.08887614071789339,0.9605980266821379,0.2643948510570392,1.0469053369327483 ],\n    }\n   },\n   {\n    \"start\": -752544000 ,\n    \"stop\": -748051200 ,\n    \"interp\": -748224000 ,\n    \"sat\":{\n      \"e\": 0.7708541785763611,\n      \"a\": 2436099873049.946,\n      \"per\": 2072409161.933826,\n      \"t0\": -754606061.772095,\n      \"rot\":[ 0.9959931946701605,0.08624912603690663,-0.08942905663556935,0.9605775327483531,0.26429508477638475,1.045544310721136 ],\n    }\n   },\n   {\n    \"start\": -748051200 ,\n    \"stop\": -745804800 ,\n    \"interp\": -745977600 ,\n    \"sat\":{\n      \"e\": 0.7705727707257874,\n      \"a\": 2432986923469.5703,\n      \"per\": 2068438115.4713278,\n      \"t0\": -754621904.7095745,\n      \"rot\":[ 0.9959844646036816,0.08634304415358919,-0.08952623229041735,0.9605713141663104,0.2642870203530603,1.0450670471137764 ],\n    }\n   },\n   {\n    \"start\": -745804800 ,\n    \"stop\": -745286400 ,\n    \"interp\": -745459200 ,\n    \"sat\":{\n      \"e\": 0.7704844713784901,\n      \"a\": 2431979469665.206,\n      \"per\": 2067153496.9070718,\n      \"t0\": -754628382.1587543,\n      \"rot\":[ 0.9959813087064868,0.08637694980155285,-0.08956133489019626,0.9605688393423253,0.26428493605863784,1.044866021017028 ],\n    }\n   },\n   {\n    \"start\": -745286400 ,\n    \"stop\": -744940800 ,\n    \"interp\": -745113600 ,\n    \"sat\":{\n      \"e\": 0.7704555690081287,\n      \"a\": 2431643810520.752,\n      \"per\": 2066725552.279506,\n      \"t0\": -754630766.5101714,\n      \"rot\":[ 0.9959801949684478,0.08638890939567492,-0.08957371953096929,0.9605679352554717,0.26428431298975336,1.0447911009760218 ],\n    }\n   },\n   {\n    \"start\": -744940800 ,\n    \"stop\": -744768000 ,\n    \"interp\": -744940800 ,\n    \"sat\":{\n      \"e\": 0.7704464257055623,\n      \"a\": 2431536831597.861,\n      \"per\": 2066589166.9827974,\n      \"t0\": -754631555.226224,\n      \"rot\":[ 0.9959798317274092,0.08639280928854547,-0.08957775835686886,0.9605676368330963,0.2642841228150373,1.044766204840557 ],\n    }\n   },\n   {\n    \"start\": -744768000 ,\n    \"stop\": -744595200 ,\n    \"interp\": -744768000 ,\n    \"sat\":{\n      \"e\": 0.7704375237773591,\n      \"a\": 2431432265182.741,\n      \"per\": 2066455860.24364,\n      \"t0\": -754632340.7813534,\n      \"rot\":[ 0.9959794723968041,0.08639666686713121,-0.0895817535225994,0.9605673398819945,0.2642839410677063,1.0447413514413297 ],\n    }\n   },\n   {\n    \"start\": -744595200 ,\n    \"stop\": -743385600 ,\n    \"interp\": -743558400 ,\n    \"sat\":{\n      \"e\": 0.7707911520131341,\n      \"a\": 2433958545823.8877,\n      \"per\": 2069677296.8217056,\n      \"t0\": -754596272.9183059,\n      \"rot\":[ 0.9957780852187028,0.08854123270423223,-0.0917932731640717,0.9604997852896381,0.2638192801327723,1.0481303152633827 ],\n    }\n   },\n   {\n    \"start\": -743385600 ,\n    \"stop\": -734227200 ,\n    \"interp\": -734400000 ,\n    \"sat\":{\n      \"e\": 0.7706484371239704,\n      \"a\": 2432058594616.1133,\n      \"per\": 2067254380.6221993,\n      \"t0\": -754617546.7977011,\n      \"rot\":[ 0.9957690151516871,0.08863612808078633,-0.09189161258699853,0.9604914690369817,0.26381769217781315,1.0474240870184248 ],\n    }\n   },\n   {\n    \"start\": -734227200 ,\n    \"stop\": -715910400 ,\n    \"interp\": -716083200 ,\n    \"sat\":{\n      \"e\": 0.7708344759152904,\n      \"a\": 2432704172580.37,\n      \"per\": 2068077548.9687781,\n      \"t0\": -754652860.4318366,\n      \"rot\":[ 0.9957525560678606,0.0888077372771583,-0.09206979463603795,0.9604727776564402,0.26382802955833506,1.046023085236139 ],\n    }\n   },\n   {\n    \"start\": -715910400 ,\n    \"stop\": -679276800 ,\n    \"interp\": -679449600 ,\n    \"sat\":{\n      \"e\": 0.7717592785845099,\n      \"a\": 2440016774748.105,\n      \"per\": 2077409378.7332435,\n      \"t0\": -754655638.2981532,\n      \"rot\":[ 0.9957204197412889,0.0891403188376063,-0.092416696057755,0.9604199184245302,0.2639082868175012,1.0449905937576387 ],\n    }\n   },\n   {\n    \"start\": -679276800 ,\n    \"stop\": -660960000 ,\n    \"interp\": -661132800 ,\n    \"sat\":{\n      \"e\": 0.7745427704822198,\n      \"a\": 2464430920868.189,\n      \"per\": 2108666233.57376,\n      \"t0\": -754503602.8658047,\n      \"rot\":[ 0.9956530788869803,0.08982775230324931,-0.093139392862938,0.9602518912898784,0.2642863602049071,1.0451351692992605 ],\n    }\n   },\n   {\n    \"start\": -660960000 ,\n    \"stop\": -651801600 ,\n    \"interp\": -651974400 ,\n    \"sat\":{\n      \"e\": 0.775894771339931,\n      \"a\": 2476402135895.421,\n      \"per\": 2124049456.9559798,\n      \"t0\": -754395905.3766274,\n      \"rot\":[ 0.995592317208254,0.09043655896368209,-0.09378666171636126,0.9600293010886202,0.26488671135808955,1.0457788325523218 ],\n    }\n   },\n   {\n    \"start\": -651801600 ,\n    \"stop\": -642643200 ,\n    \"interp\": -642816000 ,\n    \"sat\":{\n      \"e\": 0.7799071180589886,\n      \"a\": 2512476861394.019,\n      \"per\": 2170630874.996732,\n      \"t0\": -754010240.4933906,\n      \"rot\":[ 0.9954519744700377,0.09180928200558015,-0.09526471814739823,0.9593450001681159,0.26688616747605604,1.0476472651310165 ],\n    }\n   },\n   {\n    \"start\": -642643200 ,\n    \"stop\": -639878400 ,\n    \"interp\": -640051200 ,\n    \"planet\":\"Saturn\",\n    \"sat\":{\n      \"e\": 1.149592506035258,\n      \"a\": -542966513.6183361,\n      \"per\": 408119.57624610135,\n      \"t0\": -641633354.1729231,\n      \"rot\":[ -0.9984925160128337,-0.045818589433214735,0.054888026621122125,-0.8335063484633312,0.5506067779583488,5.310414817428644 ],\n    },\n    \"planetOrb\":{\n      \"e\": 0.05479185075841202,\n      \"a\": 1426368382267.525,\n      \"per\": 928894603.662903,\n      \"t0\": -820246650.8686597,\n      \"rot\":[ -0.402902434087566,-0.9143813390577932,0.9152429342017968,-0.40252314814309725,0.04338066380136723,5.904018941159137 ],\n    }\n   },\n   {\n    \"start\": -639878400 ,\n    \"stop\": -629856000 ,\n    \"interp\": -630028800 ,\n    \"sat\":{\n      \"e\": 2.174590957251521,\n      \"a\": -1190095837956.909,\n      \"per\": 707629247.0203685,\n      \"t0\": -633778832.5129073,\n      \"rot\":[ -0.9425649514492923,-0.31992185961025743,0.3340229218173405,-0.9027737690289704,0.2874883053216979,0.2214872530733155 ],\n    }\n   },\n   {\n    \"start\": -629856000 ,\n    \"stop\": -619660800 ,\n    \"interp\": -619833600 ,\n    \"sat\":{\n      \"e\": 2.158290599344058,\n      \"a\": -1206833690640.52,\n      \"per\": 722610068.2909492,\n      \"t0\": -633820623.4091107,\n      \"rot\":[ -0.9423350474559896,-0.3206164624205096,0.334670970262014,-0.9027616858840977,0.2867514996031578,0.22170489531241383 ],\n    }\n   },\n   {\n    \"start\": -619660800 ,\n    \"stop\": -599443200 ,\n    \"interp\": -599616000 ,\n    \"sat\":{\n      \"e\": 2.152511830963026,\n      \"a\": -1212862917211.13,\n      \"per\": 728031963.0184056,\n      \"t0\": -633852155.7780033,\n      \"rot\":[ -0.9422134222472707,-0.3209676299062875,0.3350132339730572,-0.9027106344966662,0.28651926797157395,0.22183192995905787 ],\n    }\n   },\n   {\n    \"start\": -599443200 ,\n    \"stop\": -558835200 ,\n    \"interp\": -559008000 ,\n    \"sat\":{\n      \"e\": 2.148932402027187,\n      \"a\": -1216606194980.65,\n      \"per\": 731404966.8472681,\n      \"t0\": -633889634.5556309,\n      \"rot\":[ -0.9420832341819225,-0.32133198935903895,0.33537915837649906,-0.9026246032904561,0.2863818746871196,0.22199429815132718 ],\n    }\n   },\n   {\n    \"start\": -558835200 ,\n    \"stop\": -477792000 ,\n    \"interp\": -477964800 ,\n    \"sat\":{\n      \"e\": 2.147419074868967,\n      \"a\": -1218179832567.235,\n      \"per\": 732824495.7651936,\n      \"t0\": -633918818.3814149,\n      \"rot\":[ -0.9419150090553157,-0.321792372095385,0.33585132978198046,-0.9024858269071486,0.28630229040813737,0.2223401102722094 ],\n    }\n   },\n   {\n    \"start\": -477792000 ,\n    \"stop\": 1000000000000 ,\n    \"sat\":{\n      \"e\": 2.147355970580101,\n      \"a\": -1218272638991.577,\n      \"per\": 732908242.1644894,\n      \"t0\": -633917206.6801636,\n      \"rot\":[ -0.9417351377108875,-0.32229006296285756,0.336355363270241,-0.902354800816195,0.28615542762520224,0.2229048364545936 ],\n    }\n   }\n ]},\n\n\n  \"New Horizons\": {\n \"color\": 16776960 ,\n \"horizonsID\": -98 ,\n \"orbits\":[\n   {\n    \"start\": 191116800 ,\n    \"stop\": 193449600 ,\n    \"interp\": 193276800 ,\n    \"planet\":\"Earth\",\n    \"sat\":{\n      \"e\": 3.655156221487707,\n      \"a\": -2529437.335633975,\n      \"per\": 1266.0383781524106,\n      \"t0\": 191014701.5594665,\n      \"rot\":[ -0.8845220805450497,0.30747658730040917,-0.4664983269297508,-0.583002799833846,0.7520411449169456,4.503130206366577 ],\n    },\n    \"planetOrb\":{\n      \"e\": 0.014362436156130962,\n      \"a\": 149362107064.6668,\n      \"per\": 31462662.47495373,\n      \"t0\": 190700089.03349033,\n      \"rot\":[ -0.9766173513563975,0.21498499520730224,-0.21498499721984074,-0.976617342213992,0.00013683053302279282,4.941602418061261 ],\n    }\n   },\n   {\n    \"start\": 193449600 ,\n    \"stop\": 200534400 ,\n    \"interp\": 200361600 ,\n    \"sat\":{\n      \"e\": 1.026007498996234,\n      \"a\": -5645723369894.611,\n      \"per\": 7311597268.518585,\n      \"t0\": 191030784.82857528,\n      \"rot\":[ -0.5011335172823435,-0.8652703881085906,0.8653699774409944,-0.5010758453573491,0.015170783164596597,6.272249253477739 ],\n    }\n   },\n   {\n    \"start\": 200534400 ,\n    \"stop\": 207792000 ,\n    \"interp\": 207619200 ,\n    \"sat\":{\n      \"e\": 1.028987611543397,\n      \"a\": -5055452678832.635,\n      \"per\": 6195451253.173139,\n      \"t0\": 191045397.6694506,\n      \"rot\":[ -0.5004856987928642,-0.8656451833219261,0.8657448037983355,-0.5004281083533593,0.015169870184922463,6.272291174291221 ],\n    }\n   },\n   {\n    \"start\": 207792000 ,\n    \"stop\": 215049600 ,\n    \"interp\": 214876800 ,\n    \"sat\":{\n      \"e\": 1.0302937874856097,\n      \"a\": -4834605937467.435,\n      \"per\": 5793946643.877525,\n      \"t0\": 191061930.72451416,\n      \"rot\":[ -0.5004343960802307,-0.8656748342274492,0.8657744597871981,-0.5003768105782982,0.01516999738853918,6.272819209711117 ],\n    }\n   },\n   {\n    \"start\": 215049600 ,\n    \"stop\": 222307200 ,\n    \"interp\": 222134400 ,\n    \"sat\":{\n      \"e\": 1.031620802601826,\n      \"a\": -4626288986282.796,\n      \"per\": 5423529501.170742,\n      \"t0\": 191093690.27425134,\n      \"rot\":[ -0.5012867972452724,-0.8651817384651261,0.865281195281382,-0.5012291785322378,0.015161464782801157,6.272285443314467 ],\n    }\n   },\n   {\n    \"start\": 222307200 ,\n    \"stop\": 228009600 ,\n    \"interp\": 227836800 ,\n    \"planet\":\"Jupiter\",\n    \"sat\":{\n      \"e\": 7.192277507260475,\n      \"a\": -372069046.68474597,\n      \"per\": 126679.10847970724,\n      \"t0\": 225956533.62181988,\n      \"rot\":[ -0.7434018798201689,0.6639954781609921,-0.6688450082641263,-0.7380117673869895,0.12020247992486488,5.026157730529026 ],\n    },\n    \"planetOrb\":{\n      \"e\": 0.04913816432812032,\n      \"a\": 777399943134.0806,\n      \"per\": 374128748.1605422,\n      \"t0\": -20226335.473179996,\n      \"rot\":[ -0.18203998932195145,-0.983036559163931,0.9832911279410914,-0.181992860149157,0.022753509660461316,4.786900202496397 ],\n    }\n   },\n   {\n    \"start\": 228009600 ,\n    \"stop\": 231984000 ,\n    \"interp\": 231811200 ,\n    \"sat\":{\n      \"e\": 1.404117282359768,\n      \"a\": -834199933054.8215,\n      \"per\": 415277207.8501324,\n      \"t0\": 192628279.66811585,\n      \"rot\":[ -0.6475416089945765,0.7613859782974121,-0.7620300943012127,-0.6469942658954004,0.04110732234729926,5.022926259856982 ],\n    }\n   },\n   {\n    \"start\": 231984000 ,\n    \"stop\": 236131200 ,\n    \"interp\": 235958400 ,\n    \"sat\":{\n      \"e\": 1.4009888955775962,\n      \"a\": -842424117957.2833,\n      \"per\": 421433502.6393289,\n      \"t0\": 192559276.1988676,\n      \"rot\":[ -0.6486110430736164,0.760481184204473,-0.7611200396803092,-0.6480666234092367,0.04096364356246928,5.024650450265645 ],\n    }\n   },\n   {\n    \"start\": 236131200 ,\n    \"stop\": 244252800 ,\n    \"interp\": 244080000 ,\n    \"sat\":{\n      \"e\": 1.399957082756073,\n      \"a\": -845368544967.2268,\n      \"per\": 423644913.38867736,\n      \"t0\": 192529782.20864195,\n      \"rot\":[ -0.6491676458725386,0.7600088823539319,-0.7606453625391444,-0.6486244461584174,0.04090020279672873,5.025572573215469 ],\n    }\n   },\n   {\n    \"start\": 244252800 ,\n    \"stop\": 260668800 ,\n    \"interp\": 260496000 ,\n    \"sat\":{\n      \"e\": 1.399318059895837,\n      \"a\": -846981128157.7499,\n      \"per\": 424857677.3810238,\n      \"t0\": 192510187.90827414,\n      \"rot\":[ -0.6485206546320801,0.7605581682300822,-0.7611970576109568,-0.6479763370268299,0.04096265850496244,5.024648593777123 ],\n    }\n   },\n   {\n    \"start\": 260668800 ,\n    \"stop\": 293500800 ,\n    \"interp\": 293328000 ,\n    \"sat\":{\n      \"e\": 1.399329257434605,\n      \"a\": -847289868032.8989,\n      \"per\": 425090000.96183306,\n      \"t0\": 192503021.27628797,\n      \"rot\":[ -0.6487927871670582,0.7603270629049358,-0.7609651235897741,-0.6482487817228335,0.04094233028560719,5.0251796916818305 ],\n    }\n   },\n   {\n    \"start\": 293500800 ,\n    \"stop\": 358992000 ,\n    \"interp\": 358819200 ,\n    \"sat\":{\n      \"e\": 1.3994165049828409,\n      \"a\": -847217361320.5898,\n      \"per\": 425035436.6028736,\n      \"t0\": 192504123.51602727,\n      \"rot\":[ -0.6489034909448189,0.7602329494982045,-0.7608707245252818,-0.6483595687933048,0.04093570631392703,5.025410396175248 ],\n    }\n   },\n   {\n    \"start\": 358992000 ,\n    \"stop\": 490233600 ,\n    \"interp\": 490060800 ,\n    \"sat\":{\n      \"e\": 1.3994241355023302,\n      \"a\": -847114517955.0402,\n      \"per\": 424958046.63744235,\n      \"t0\": 192509461.31474838,\n      \"rot\":[ -0.6491020383039569,0.7600639958143321,-0.7607013499854254,-0.6485581876961117,0.040926757006707316,5.025650489048459 ],\n    }\n   },\n   {\n    \"start\": 490233600 ,\n    \"stop\": 498873600 ,\n    \"interp\": 498700800 ,\n    \"sat\":{\n      \"e\": 1.396468912866894,\n      \"a\": -847836200071.0997,\n      \"per\": 425501213.92770386,\n      \"t0\": 192524875.20666277,\n      \"rot\":[ -0.613654156209834,0.7888666304731995,-0.7895749341046717,-0.6131036657515669,0.04234777878297167,4.977246261542398 ],\n    }\n   },\n   {\n    \"start\": 498873600 ,\n    \"stop\": 499132800 ,\n    \"interp\": 498960000 ,\n    \"sat\":{\n      \"e\": 1.3999500117381591,\n      \"a\": -847336365274.47,\n      \"per\": 425124993.3258015,\n      \"t0\": 192464435.1537559,\n      \"rot\":[ -0.6298804731822059,0.7760169250139288,-0.7766920815250793,-0.6293329358597183,0.04168678368636763,5.001194230653972 ],\n    }\n   },\n   {\n    \"start\": 499132800 ,\n    \"stop\": 499478400 ,\n    \"interp\": 499305600 ,\n    \"planet\":\"Neptune\",\n    \"sat\":{\n      \"e\": 180812.37709324821,\n      \"a\": -19320843.684231002,\n      \"per\": 6453.587886783207,\n      \"t0\": 358857246.960166,\n      \"rot\":[ -0.8058423412421376,-0.591295098504292,0.5921301555075458,-0.8047058946614092,0.05308982559757317,0.8252361170495233 ],\n    },\n    \"planetOrb\":{\n      \"e\": 0.008750710564817368,\n      \"a\": 4499024029161.566,\n      \"per\": 5201682654.49573,\n      \"t0\": -3765009914.432088,\n      \"rot\":[ -0.6663089453421174,-0.7453199149772604,0.7456757937314817,-0.6659909449465188,0.030891513195903463,4.756749274048066 ],\n    }\n   },\n   {\n    \"start\": 499478400 ,\n    \"stop\": 500083200 ,\n    \"interp\": 499910400 ,\n    \"sat\":{\n      \"e\": 1.4117984311968979,\n      \"a\": -845647332454.3058,\n      \"per\": 423854496.4841925,\n      \"t0\": 192262768.64369106,\n      \"rot\":[ -0.6818618328738961,0.7309029297049581,-0.7314809914617405,-0.6813229832611313,0.0397479537694867,5.080931510830205 ],\n    }\n   },\n   {\n    \"start\": 500083200 ,\n    \"stop\": 597283200 ,\n    \"interp\": 597110400 ,\n    \"sat\":{\n      \"e\": 1.416102015971234,\n      \"a\": -845049909675.7737,\n      \"per\": 423405416.36594915,\n      \"t0\": 192189704.34845513,\n      \"rot\":[ -0.7012424981197416,0.7123779578665124,-0.7129228281032837,-0.700706554885884,0.03908924514355765,5.111637031893493 ],\n    }\n   },\n   {\n    \"start\": 597283200 ,\n    \"stop\": 1000000000000 ,\n    \"sat\":{\n      \"e\": 1.416285358575133,\n      \"a\": -844404328355.5688,\n      \"per\": 422920314.10316664,\n      \"t0\": 192291446.58197194,\n      \"rot\":[ -0.6977028421585185,0.7158366863675433,-0.716387286350006,-0.6971666026411844,0.03919906391847248,5.106756858786757 ],\n    }\n   }\n ]},\n   \"MESSENGER\": {\n \"color\": 16776960 ,\n \"horizonsID\": -236 ,\n \"orbits\":[\n   {\n    \"start\": 145065600 ,\n    \"stop\": 148953600 ,\n    \"interp\": 148780800 ,\n    \"sat\":{\n      \"e\": 0.07495427484173192,\n      \"a\": 150727354860.0664,\n      \"per\": 31894881.022582423,\n      \"t0\": 136446404.51072666,\n      \"rot\":[ 0.6571196391571413,0.7491656139302932,-0.7537862958650736,0.6530915202296697,0.11055473354201424,4.488254814697629 ],\n    }\n   },\n   {\n    \"start\": 148953600 ,\n    \"stop\": 152928000 ,\n    \"interp\": 152755200 ,\n    \"sat\":{\n      \"e\": 0.0732736340594372,\n      \"a\": 150553154396.56992,\n      \"per\": 31839604.088167563,\n      \"t0\": 136149665.20922244,\n      \"rot\":[ 0.6553176267876897,0.7507499165346294,-0.7553534325210618,0.6513237809385495,0.11023563492428129,4.436989461937052 ],\n    }\n   },\n   {\n    \"start\": 152928000 ,\n    \"stop\": 156729600 ,\n    \"interp\": 156556800 ,\n    \"sat\":{\n      \"e\": 0.07713306197155528,\n      \"a\": 150038987482.7407,\n      \"per\": 31676636.2080022,\n      \"t0\": 136046262.63331875,\n      \"rot\":[ 0.6533080561053479,0.752482070173013,-0.757092189781305,0.6493299034835697,0.11018806881942618,4.4085683819548205 ],\n    }\n   },\n   {\n    \"start\": 156729600 ,\n    \"stop\": 160704000 ,\n    \"interp\": 160531200 ,\n    \"sat\":{\n      \"e\": 0.08065525631417446,\n      \"a\": 149288969308.3056,\n      \"per\": 31439414.490757745,\n      \"t0\": 136420882.86326656,\n      \"rot\":[ 0.6515489703901396,0.7539746491957611,-0.758606577340026,0.6475707185485869,0.11033763115363515,4.455608184406688 ],\n    }\n   },\n   {\n    \"start\": 160704000 ,\n    \"stop\": 164505600 ,\n    \"interp\": 164332800 ,\n    \"sat\":{\n      \"e\": 0.0771888054626827,\n      \"a\": 148315350126.0767,\n      \"per\": 31132358.429781538,\n      \"t0\": 137057736.74121594,\n      \"rot\":[ 0.6508348102449494,0.754555187578121,-0.7592193686764194,0.6468364778191695,0.11067538055700364,4.529973231709933 ],\n    }\n   },\n   {\n    \"start\": 164505600 ,\n    \"stop\": 166406400 ,\n    \"interp\": 166233600 ,\n    \"sat\":{\n      \"e\": 0.07130631141495136,\n      \"a\": 147824675209.4436,\n      \"per\": 30977992.48568815,\n      \"t0\": 137173180.46267796,\n      \"rot\":[ 0.6516026394066011,0.7538782814546541,-0.7585604790116283,0.6475806367176096,0.1109362686383171,4.5147805682932685 ],\n    }\n   },\n   {\n    \"start\": 166406400 ,\n    \"stop\": 168480000 ,\n    \"interp\": 168307200 ,\n    \"sat\":{\n      \"e\": 0.06943385303884449,\n      \"a\": 147788621135.3089,\n      \"per\": 30966659.99266529,\n      \"t0\": 136910690.74074435,\n      \"rot\":[ 0.6528748918554377,0.7527790291611813,-0.7574657586879757,0.6488353059099797,0.11106970360927602,4.448167375909584 ],\n    }\n   },\n   {\n    \"start\": 168480000 ,\n    \"stop\": 172281600 ,\n    \"interp\": 172108800 ,\n    \"sat\":{\n      \"e\": 0.073867072463166,\n      \"a\": 148322848843.0752,\n      \"per\": 31134719.50396511,\n      \"t0\": 167577274.4956044,\n      \"rot\":[ 0.6550596754058288,0.7509008004730942,-0.7555771447424877,0.6510054440404281,0.11108510106486584,4.374066968116106 ],\n    }\n   },\n   {\n    \"start\": 172281600 ,\n    \"stop\": 176256000 ,\n    \"interp\": 176083200 ,\n    \"sat\":{\n      \"e\": 0.08045632444252443,\n      \"a\": 149474106287.2612,\n      \"per\": 31497915.82317788,\n      \"t0\": 167787744.85728636,\n      \"rot\":[ 0.6565109657144411,0.7496603980286017,-0.7543164799317935,0.6524585965722657,0.11093722272775644,4.417779432796243 ],\n    }\n   },\n   {\n    \"start\": 176256000 ,\n    \"stop\": 176601600 ,\n    \"interp\": 176428800 ,\n    \"planet\":\"Earth\",\n    \"sat\":{\n      \"e\": 1.360056692154584,\n      \"a\": -24203499.312835,\n      \"per\": 37473.842259814046,\n      \"t0\": 176325252.5109043,\n      \"rot\":[ 0.5010676347683707,0.48902643844115923,0.8654081264857817,-0.28314423374315023,0.8250348389029153,1.0876374613167548 ],\n    },\n    \"planetOrb\":{\n      \"e\": 0.01377938959325565,\n      \"a\": 150107274775.7899,\n      \"per\": 31698406.782268226,\n      \"t0\": 158901407.87628388,\n      \"rot\":[ 0.6878460420194947,-0.7258566087175287,0.7258566128913585,0.6878460380642337,0.0001072400357956776,1.1655698214257497 ],\n    }\n   },\n   {\n    \"start\": 176601600 ,\n    \"stop\": 179366400 ,\n    \"interp\": 179193600 ,\n    \"sat\":{\n      \"e\": 0.2532517559522173,\n      \"a\": 121425734550.3976,\n      \"per\": 23062106.79549651,\n      \"t0\": 165037465.98988286,\n      \"rot\":[ -0.6490016899602653,-0.7600419531695766,0.7607869652068966,-0.6483661453290164,0.04424444613019725,0.04464174030338099 ],\n    }\n   },\n   {\n    \"start\": 179366400 ,\n    \"stop\": 182131200 ,\n    \"interp\": 181958400 ,\n    \"sat\":{\n      \"e\": 0.2516802004983805,\n      \"a\": 121851422215.00119,\n      \"per\": 23183487.822293412,\n      \"t0\": 164880637.64575282,\n      \"rot\":[ -0.6477205521985452,-0.7611369875284723,0.7618779995902308,-0.6470905710964708,0.04409397934101342,0.03036666889965048 ],\n    }\n   },\n   {\n    \"start\": 182131200 ,\n    \"stop\": 184896000 ,\n    \"interp\": 184723200 ,\n    \"sat\":{\n      \"e\": 0.2558161879528544,\n      \"a\": 122278692453.6893,\n      \"per\": 23305533.498088323,\n      \"t0\": 164698492.54365265,\n      \"rot\":[ -0.6465173047364621,-0.7621586147113933,0.7628993214548697,-0.6458895944817469,0.044055394237419686,0.018604048673269116 ],\n    }\n   },\n   {\n    \"start\": 184896000 ,\n    \"stop\": 187747200 ,\n    \"interp\": 187574400 ,\n    \"sat\":{\n      \"e\": 0.26043248233462213,\n      \"a\": 121883213239.4383,\n      \"per\": 23192561.268687766,\n      \"t0\": 164848061.13094229,\n      \"rot\":[ -0.645061413198502,-0.7633879350641096,0.7641307304397276,-0.6444343625962605,0.044081888613197576,0.048857265828504116 ],\n    }\n   },\n   {\n    \"start\": 187747200 ,\n    \"stop\": 189388800 ,\n    \"interp\": 189216000 ,\n    \"sat\":{\n      \"e\": 0.2662594036105156,\n      \"a\": 122650863636.9175,\n      \"per\": 23412014.573876735,\n      \"t0\": 188045173.96714723,\n      \"rot\":[ -0.6429536784217061,-0.7651279568155879,0.765905064224018,-0.64230132072084,0.04503579797748125,0.05403877276918537 ],\n    }\n   },\n   {\n    \"start\": 189388800 ,\n    \"stop\": 191116800 ,\n    \"interp\": 190944000 ,\n    \"sat\":{\n      \"e\": 0.26486937196879556,\n      \"a\": 121825371373.9987,\n      \"per\": 23176053.55854231,\n      \"t0\": 187969291.67428616,\n      \"rot\":[ -0.6437216157047108,-0.764481136863605,0.765259747716105,-0.6430666633993368,0.045098312653293726,0.014673193808495896 ],\n    }\n   },\n   {\n    \"start\": 191116800 ,\n    \"stop\": 192844800 ,\n    \"interp\": 192672000 ,\n    \"sat\":{\n      \"e\": 0.2720775207550271,\n      \"a\": 122241842763.4487,\n      \"per\": 23294999.320365973,\n      \"t0\": 187968101.303931,\n      \"rot\":[ -0.6447329428563019,-0.763629594614323,0.7644078966074673,-0.6440764910630932,0.04511447538227698,0.002474270800528648 ],\n    }\n   },\n   {\n    \"start\": 192844800 ,\n    \"stop\": 194572800 ,\n    \"interp\": 194400000 ,\n    \"sat\":{\n      \"e\": 0.2768289672650955,\n      \"a\": 122825320605.3107,\n      \"per\": 23461983.74266027,\n      \"t0\": 188013150.67112333,\n      \"rot\":[ -0.6455221424587163,-0.7629643542534804,0.7637415554986573,-0.6448652440494362,0.045102230051634405,0.012367663827635877 ],\n    }\n   },\n   {\n    \"start\": 194572800 ,\n    \"stop\": 197856000 ,\n    \"interp\": 197683200 ,\n    \"sat\":{\n      \"e\": 0.2779875230620891,\n      \"a\": 123407543896.008,\n      \"per\": 23629004.947865486,\n      \"t0\": 188066884.057361,\n      \"rot\":[ -0.646233148528119,-0.7623647153028342,0.7631400380948664,-0.6455765989251505,0.04506546107013439,0.03008307063484417 ],\n    }\n   },\n   {\n    \"start\": 197856000 ,\n    \"stop\": 201312000 ,\n    \"interp\": 201139200 ,\n    \"sat\":{\n      \"e\": 0.2745689180673131,\n      \"a\": 123940545922.1138,\n      \"per\": 23782252.020548534,\n      \"t0\": 188075706.49240583,\n      \"rot\":[ -0.6465653442362663,-0.7620856460759821,0.7628586078905044,-0.6459102158592396,0.04500512297087345,0.04341804434686416 ],\n    }\n   },\n   {\n    \"start\": 201312000 ,\n    \"stop\": 204595200 ,\n    \"interp\": 204422400 ,\n    \"sat\":{\n      \"e\": 0.270472541043114,\n      \"a\": 124385918275.48691,\n      \"per\": 23910557.094080247,\n      \"t0\": 187986407.616882,\n      \"rot\":[ -0.6463325220061708,-0.7622847054380296,0.7630558767201409,-0.645679315478481,0.0449471847671976,0.0393326602944244 ],\n    }\n   },\n   {\n    \"start\": 204595200 ,\n    \"stop\": 208051200 ,\n    \"interp\": 207878400 ,\n    \"sat\":{\n      \"e\": 0.2702192538395962,\n      \"a\": 125086927966.8057,\n      \"per\": 24112973.006852888,\n      \"t0\": 187733564.43350774,\n      \"rot\":[ -0.6453573450069293,-0.7631105938698985,0.763880813507976,-0.6447066323670618,0.04489520804554641,0.01896673666285085 ],\n    }\n   },\n   {\n    \"start\": 208051200 ,\n    \"stop\": 209779200 ,\n    \"interp\": 209606400 ,\n    \"sat\":{\n      \"e\": 0.27720568800319056,\n      \"a\": 125789545254.5162,\n      \"per\": 24316423.050968356,\n      \"t0\": 187489795.19324794,\n      \"rot\":[ -0.6438893902923732,-0.7643472310561491,0.7651185875855558,-0.6432402513308103,0.044891975281488285,0.015040727295004145 ],\n    }\n   },\n   {\n    \"start\": 209779200 ,\n    \"stop\": 211507200 ,\n    \"interp\": 211334400 ,\n    \"sat\":{\n      \"e\": 0.2797580673899944,\n      \"a\": 125495769376.6411,\n      \"per\": 24231287.9229429,\n      \"t0\": 187620818.78384534,\n      \"rot\":[ -0.6427911706008971,-0.7652674194052246,0.7660414551429501,-0.6421416713674037,0.044942749029684606,0.0427745216062957 ],\n    }\n   },\n   {\n    \"start\": 211507200 ,\n    \"stop\": 213235200 ,\n    \"interp\": 213062400 ,\n    \"sat\":{\n      \"e\": 0.27000969310687195,\n      \"a\": 123656629814.68611,\n      \"per\": 23700580.247751255,\n      \"t0\": 211887842.77508986,\n      \"rot\":[ -0.642524445636741,-0.7654874789285908,0.7662651869680618,-0.6418723261937248,0.04504260727585611,0.05994356831424023 ],\n    }\n   },\n   {\n    \"start\": 213235200 ,\n    \"stop\": 215049600 ,\n    \"interp\": 214876800 ,\n    \"sat\":{\n      \"e\": 0.2647025607669553,\n      \"a\": 122271964699.9415,\n      \"per\": 23303610.124557603,\n      \"t0\": 211819342.32718402,\n      \"rot\":[ -0.6434365412821734,-0.7647199991177417,0.7654994561349041,-0.6427813727863873,0.04511573725662392,0.02544332487416523 ],\n    }\n   },\n   {\n    \"start\": 215049600 ,\n    \"stop\": 217382400 ,\n    \"interp\": 217209600 ,\n    \"sat\":{\n      \"e\": 0.24633523554967687,\n      \"a\": 106739213616.4436,\n      \"per\": 19007231.672425587,\n      \"t0\": 210916273.65996236,\n      \"rot\":[ 0.6891829302220046,-0.7172292101815453,0.7245873920312246,0.6821842805297259,0.14215086162418009,0.9830503998419415 ],\n    }\n   },\n   {\n    \"start\": 217382400 ,\n    \"stop\": 219801600 ,\n    \"interp\": 219628800 ,\n    \"sat\":{\n      \"e\": 0.24972748874985468,\n      \"a\": 107158195314.02249,\n      \"per\": 19119254.589007016,\n      \"t0\": 211011952.83099332,\n      \"rot\":[ 0.689502749135938,-0.7169305269239123,0.7242830654750833,0.6825032819582332,0.14212631593354466,1.0103129816360268 ],\n    }\n   },\n   {\n    \"start\": 219801600 ,\n    \"stop\": 222220800 ,\n    \"interp\": 222048000 ,\n    \"sat\":{\n      \"e\": 0.24781216949286738,\n      \"a\": 107474066583.53139,\n      \"per\": 19203853.879152015,\n      \"t0\": 211076308.1754494,\n      \"rot\":[ 0.6888259792918509,-0.7175552933886734,0.724926734403293,0.6818216299766514,0.1422450906916539,1.031011814364973 ],\n    }\n   },\n   {\n    \"start\": 222220800 ,\n    \"stop\": 224640000 ,\n    \"interp\": 224467200 ,\n    \"sat\":{\n      \"e\": 0.2425539706232283,\n      \"a\": 107844642830.6307,\n      \"per\": 19303263.29924712,\n      \"t0\": 211061055.553615,\n      \"rot\":[ 0.6878227301232059,-0.7184928056965209,0.72587870331472,0.680824056321424,0.1422908728498914,1.0354062191547073 ],\n    }\n   },\n   {\n    \"start\": 224640000 ,\n    \"stop\": 227059200 ,\n    \"interp\": 226886400 ,\n    \"sat\":{\n      \"e\": 0.2383804322049163,\n      \"a\": 108524571155.4178,\n      \"per\": 19486102.712829106,\n      \"t0\": 210868896.96885547,\n      \"rot\":[ 0.6865520995856017,-0.7196912938112006,0.7270806107678859,0.6795746737046421,0.14220655565616316,1.0113631452262573 ],\n    }\n   },\n   {\n    \"start\": 227059200 ,\n    \"stop\": 228268800 ,\n    \"interp\": 228096000 ,\n    \"sat\":{\n      \"e\": 0.2422385803655009,\n      \"a\": 109463215469.49739,\n      \"per\": 19739455.64221264,\n      \"t0\": 210557683.73561096,\n      \"rot\":[ 0.685730125383741,-0.7204807008843542,0.7278558889925937,0.6787817874741701,0.14199593179581052,0.9830935088012482 ],\n    }\n   },\n   {\n    \"start\": 228268800 ,\n    \"stop\": 229478400 ,\n    \"interp\": 229305600 ,\n    \"sat\":{\n      \"e\": 0.2497223258157525,\n      \"a\": 110236183762.0385,\n      \"per\": 19948907.887915287,\n      \"t0\": 210338349.3761969,\n      \"rot\":[ 0.6856057474956319,-0.7206224786355718,0.7279730482654944,0.6786829736406803,0.14174859637882956,0.9838385341869833 ],\n    }\n   },\n   {\n    \"start\": 229478400 ,\n    \"stop\": 230688000 ,\n    \"interp\": 230515200 ,\n    \"sat\":{\n      \"e\": 0.2532699039296182,\n      \"a\": 110341913456.5085,\n      \"per\": 19977614.85406376,\n      \"t0\": 210366669.00327867,\n      \"rot\":[ 0.6863278260503742,-0.7199768314459247,0.7272923175649302,0.6794243821897694,0.1414774578056044,1.0180242208260135 ],\n    }\n   },\n   {\n    \"start\": 230688000 ,\n    \"stop\": 231897600 ,\n    \"interp\": 231724800 ,\n    \"sat\":{\n      \"e\": 0.2455706701552856,\n      \"a\": 109227792876.756,\n      \"per\": 19675809.40809464,\n      \"t0\": 230391885.6145483,\n      \"rot\":[ 0.6879200219065412,-0.7185016789002122,0.7257864999158526,0.6810152720479455,0.14132776321388227,1.0466677929472359 ],\n    }\n   },\n   {\n    \"start\": 231897600 ,\n    \"stop\": 234316800 ,\n    \"interp\": 234144000 ,\n    \"sat\":{\n      \"e\": 0.2363215406994924,\n      \"a\": 107405405229.3134,\n      \"per\": 19185453.831065744,\n      \"t0\": 230323294.15906462,\n      \"rot\":[ 0.6902289445603884,-0.716312906681065,0.7235910475476133,0.6832863718106214,0.14147633660793377,1.013588930545483 ],\n    }\n   },\n   {\n    \"start\": 234316800 ,\n    \"stop\": 234662400 ,\n    \"interp\": 234489600 ,\n    \"planet\":\"Venus\",\n    \"sat\":{\n      \"e\": 2.601429022685177,\n      \"a\": -3990258.130843854,\n      \"per\": 2778.652111763314,\n      \"t0\": 234400163.8822461,\n      \"rot\":[ -0.5826310411375135,0.7684022071324083,0.812736777747271,0.5508486759942514,0.3257664565749886,3.8026622122667906 ],\n    },\n    \"planetOrb\":{\n      \"e\": 0.005564793297399281,\n      \"a\": 106968871490.9109,\n      \"per\": 19068677.92573935,\n      \"t0\": 226060406.7536662,\n      \"rot\":[ 0.23194316113159902,-0.9710262576769912,0.9727293405692464,0.23153706828210438,0.05914890458111119,5.827890022931182 ],\n    }\n   },\n   {\n    \"start\": 234662400 ,\n    \"stop\": 236908800 ,\n    \"interp\": 236736000 ,\n    \"sat\":{\n      \"e\": 0.3885011362543679,\n      \"a\": 79818713177.96732,\n      \"per\": 12291077.376665683,\n      \"t0\": 229524072.15375483,\n      \"rot\":[ 0.6414057886515157,-0.7618476030496936,0.7672018080559556,0.6369294982562342,0.11793661000087466,6.215829029729255 ],\n    }\n   },\n   {\n    \"start\": 236908800 ,\n    \"stop\": 238118400 ,\n    \"interp\": 237945600 ,\n    \"sat\":{\n      \"e\": 0.3887075599506479,\n      \"a\": 79645197780.8517,\n      \"per\": 12251020.384654038,\n      \"t0\": 229610870.48425728,\n      \"rot\":[ 0.641144750184828,-0.7620388893048631,0.76741996931956,0.636649100684325,0.11821443983224172,6.231440520805625 ],\n    }\n   },\n   {\n    \"start\": 238118400 ,\n    \"stop\": 239328000 ,\n    \"interp\": 239155200 ,\n    \"sat\":{\n      \"e\": 0.3852200470043907,\n      \"a\": 79454073757.53325,\n      \"per\": 12206948.81895357,\n      \"t0\": 229691005.75931403,\n      \"rot\":[ 0.6402925679287265,-0.7627250245086147,0.7681311264720608,0.6357861929240347,0.11843333093135243,6.2414720945346795 ],\n    }\n   },\n   {\n    \"start\": 239328000 ,\n    \"stop\": 240537600 ,\n    \"interp\": 240364800 ,\n    \"sat\":{\n      \"e\": 0.3772728928527513,\n      \"a\": 79291521518.43681,\n      \"per\": 12169507.347336406,\n      \"t0\": 229756984.18251395,\n      \"rot\":[ 0.6383643839406521,-0.7642981794395932,0.769734313458918,0.6338560304950702,0.11863736978859557,6.239804567333657 ],\n    }\n   },\n   {\n    \"start\": 240537600 ,\n    \"stop\": 241747200 ,\n    \"interp\": 241574400 ,\n    \"sat\":{\n      \"e\": 0.37453986373369186,\n      \"a\": 80328903486.29854,\n      \"per\": 12409109.81848758,\n      \"t0\": 229497625.38702855,\n      \"rot\":[ 0.634441259266378,-0.7675150018817652,0.7729710787218966,0.6299630059961123,0.11860578806608081,6.193860324418172 ],\n    }\n   },\n   {\n    \"start\": 241747200 ,\n    \"stop\": 242265600 ,\n    \"interp\": 242092800 ,\n    \"sat\":{\n      \"e\": 0.39750123817974714,\n      \"a\": 83457420636.70447,\n      \"per\": 13141057.242121203,\n      \"t0\": 228758125.19321498,\n      \"rot\":[ 0.631708822658187,-0.7697852509178735,0.7752057555099854,0.6272916978500209,0.11804996093919096,6.185782891007107 ],\n    }\n   },\n   {\n    \"start\": 242265600 ,\n    \"stop\": 242956800 ,\n    \"interp\": 242784000 ,\n    \"sat\":{\n      \"e\": 0.3975314680921864,\n      \"a\": 83833354339.45464,\n      \"per\": 13229947.936457815,\n      \"t0\": 241938940.9715773,\n      \"rot\":[ 0.6326196281819788,-0.7691022243441902,0.7744626563230114,0.6282409606534023,0.1174523897845805,6.2367862924523365 ],\n    }\n   },\n   {\n    \"start\": 242956800 ,\n    \"stop\": 244166400 ,\n    \"interp\": 243993600 ,\n    \"sat\":{\n      \"e\": 0.3800367506821947,\n      \"a\": 81885591315.75984,\n      \"per\": 12771564.59201731,\n      \"t0\": 241930382.49857858,\n      \"rot\":[ 0.6358710847333634,-0.7664816992512496,0.7717952860700924,0.6314932966394159,0.11714103043937958,6.243115529287657 ],\n    }\n   },\n   {\n    \"start\": 244166400 ,\n    \"stop\": 245203200 ,\n    \"interp\": 245030400 ,\n    \"sat\":{\n      \"e\": 0.3760582390999161,\n      \"a\": 80587111158.8607,\n      \"per\": 12468989.276611462,\n      \"t0\": 241903653.35498345,\n      \"rot\":[ 0.6392196084827043,-0.7637234136693036,0.769024246777186,0.6348135101339816,0.11721072802725464,6.216040410701498 ],\n    }\n   },\n   {\n    \"start\": 245203200 ,\n    \"stop\": 246412800 ,\n    \"interp\": 246240000 ,\n    \"sat\":{\n      \"e\": 0.37982870973885596,\n      \"a\": 80227996130.00624,\n      \"per\": 12385735.097335733,\n      \"t0\": 241909063.11939853,\n      \"rot\":[ 0.6408169566138356,-0.7623853996615896,0.7676937072271606,0.6363859531199736,0.11739429736755073,6.206600294863104 ],\n    }\n   },\n   {\n    \"start\": 246412800 ,\n    \"stop\": 248832000 ,\n    \"interp\": 248659200 ,\n    \"sat\":{\n      \"e\": 0.394790160784177,\n      \"a\": 79350312117.57654,\n      \"per\": 12183044.454759017,\n      \"t0\": 241981202.16107363,\n      \"rot\":[ 0.6443867877098471,-0.759333885787401,0.7646997239603166,0.6398651760036091,0.11825652807721226,6.197801224213342 ],\n    }\n   },\n   {\n    \"start\": 248832000 ,\n    \"stop\": 250041600 ,\n    \"interp\": 249868800 ,\n    \"sat\":{\n      \"e\": 0.39746813131023556,\n      \"a\": 79137499355.24878,\n      \"per\": 12134066.042593766,\n      \"t0\": 242061576.3187231,\n      \"rot\":[ 0.6443933108439204,-0.7592940670677988,0.7646942270866248,0.639842698494098,0.11863322005000015,6.211362386772505 ],\n    }\n   },\n   {\n    \"start\": 250041600 ,\n    \"stop\": 251251200 ,\n    \"interp\": 251078400 ,\n    \"sat\":{\n      \"e\": 0.39629399767233686,\n      \"a\": 78909965063.7007,\n      \"per\": 12081772.300802533,\n      \"t0\": 242145401.7829645,\n      \"rot\":[ 0.643668329278049,-0.7598742175952754,0.7653045680540559,0.6391010697148594,0.11891592039458115,6.223185348824478 ],\n    }\n   },\n   {\n    \"start\": 251251200 ,\n    \"stop\": 252460800 ,\n    \"interp\": 252288000 ,\n    \"sat\":{\n      \"e\": 0.3905943181484526,\n      \"a\": 78579531984.24652,\n      \"per\": 12005963.719846718,\n      \"t0\": 242255960.08791575,\n      \"rot\":[ 0.6420026328707132,-0.7612368917604497,0.7667024320993591,0.6374260316487333,0.11919080836808428,6.231755739107631 ],\n    }\n   },\n   {\n    \"start\": 252460800 ,\n    \"stop\": 253756800 ,\n    \"interp\": 253584000 ,\n    \"sat\":{\n      \"e\": 0.38010458048294593,\n      \"a\": 78508565822.57738,\n      \"per\": 11989703.287676657,\n      \"t0\": 242285629.8137742,\n      \"rot\":[ 0.6381289592641712,-0.7644259815385378,0.7699294976479507,0.6335675636845476,0.11935267485762424,6.211954334360877 ],\n    }\n   },\n   {\n    \"start\": 253756800 ,\n    \"stop\": 254534400 ,\n    \"interp\": 254361600 ,\n    \"sat\":{\n      \"e\": 0.38876952501195194,\n      \"a\": 77729793177.50064,\n      \"per\": 11811747.05460466,\n      \"t0\": 242552670.02044526,\n      \"rot\":[ 0.6467795846574903,-0.7570972777861333,0.7626769754426079,0.6420477851552506,0.12074085284634847,0.06327795721068166 ],\n    }\n   },\n   {\n    \"start\": 254534400 ,\n    \"stop\": 255225600 ,\n    \"interp\": 255052800 ,\n    \"sat\":{\n      \"e\": 0.39980262430153796,\n      \"a\": 79324980616.01736,\n      \"per\": 12177211.014981821,\n      \"t0\": 254403752.58449233,\n      \"rot\":[ 0.6477692294569617,-0.7563457368177435,0.7618366133028355,0.6431004845217829,0.11984528862442918,0.11756548960617727 ],\n    }\n   },\n   {\n    \"start\": 255225600 ,\n    \"stop\": 255916800 ,\n    \"interp\": 255744000 ,\n    \"sat\":{\n      \"e\": 0.3830025543571277,\n      \"a\": 77759243471.64561,\n      \"per\": 11818460.54935553,\n      \"t0\": 254411818.34542233,\n      \"rot\":[ 0.6517752137592561,-0.7529841447824425,0.7584122037052647,0.6471103702250462,0.11942799694149228,0.1437223164760256 ],\n    }\n   },\n   {\n    \"start\": 255916800 ,\n    \"stop\": 256608000 ,\n    \"interp\": 256435200 ,\n    \"sat\":{\n      \"e\": 0.3738433983425808,\n      \"a\": 76461020305.2446,\n      \"per\": 11523728.11967057,\n      \"t0\": 254389127.68092892,\n      \"rot\":[ 0.6551449263719199,-0.7500944882551684,0.7555032266305233,0.6504546651264577,0.11944449465942315,0.12749012748920932 ],\n    }\n   },\n   {\n    \"start\": 256608000 ,\n    \"stop\": 257990400 ,\n    \"interp\": 257817600 ,\n    \"sat\":{\n      \"e\": 0.3747263817580416,\n      \"a\": 75667404687.62244,\n      \"per\": 11344781.28163535,\n      \"t0\": 254375605.36759824,\n      \"rot\":[ 0.6580680116871052,-0.7475428953274418,0.7529584928760549,0.6533349068152805,0.11972100560108091,0.10556516337420699 ],\n    }\n   },\n   {\n    \"start\": 257990400 ,\n    \"stop\": 259545600 ,\n    \"interp\": 259372800 ,\n    \"sat\":{\n      \"e\": 0.38112281559220323,\n      \"a\": 75321219244.66695,\n      \"per\": 11267015.24753616,\n      \"t0\": 254398231.10343286,\n      \"rot\":[ 0.6597061897182208,-0.7460787846690897,0.7515236145640847,0.6549265821129768,0.12015664404646315,0.09966114640558875 ],\n    }\n   },\n   {\n    \"start\": 259545600 ,\n    \"stop\": 260928000 ,\n    \"interp\": 260755200 ,\n    \"sat\":{\n      \"e\": 0.3833996693175108,\n      \"a\": 75279802577.09825,\n      \"per\": 11257723.48202868,\n      \"t0\": 254442023.82716066,\n      \"rot\":[ 0.6595655657846501,-0.7462105803223608,0.751647034472414,0.6547951113121476,0.12005470426716967,0.10951296408876271 ],\n    }\n   },\n   {\n    \"start\": 260928000 ,\n    \"stop\": 262310400 ,\n    \"interp\": 262137600 ,\n    \"sat\":{\n      \"e\": 0.384706045914521,\n      \"a\": 75063354203.72255,\n      \"per\": 11209205.218116038,\n      \"t0\": 254523207.22142476,\n      \"rot\":[ 0.6587071636961532,-0.746920438640171,0.7523994102173188,0.6539104589426068,0.12046148773381474,0.12358767480242344 ],\n    }\n   },\n   {\n    \"start\": 262310400 ,\n    \"stop\": 263692800 ,\n    \"interp\": 263520000 ,\n    \"sat\":{\n      \"e\": 0.3806137843254844,\n      \"a\": 74724040090.2977,\n      \"per\": 11133286.547411256,\n      \"t0\": 254641988.50798717,\n      \"rot\":[ 0.6564539338303349,-0.7488373302959254,0.7543661132094139,0.65164275364965,0.12084855965700571,0.13807468482259508 ],\n    }\n   },\n   {\n    \"start\": 263692800 ,\n    \"stop\": 264384000 ,\n    \"interp\": 264211200 ,\n    \"sat\":{\n      \"e\": 0.3716312107449027,\n      \"a\": 74447184378.44878,\n      \"per\": 11071469.95176018,\n      \"t0\": 254731132.9675338,\n      \"rot\":[ 0.6530957515138518,-0.7517075358802173,0.7572753391960926,0.6482939198647147,0.12104038155646427,0.13587553852983725 ],\n    }\n   },\n   {\n    \"start\": 264384000 ,\n    \"stop\": 265248000 ,\n    \"interp\": 265075200 ,\n    \"sat\":{\n      \"e\": 0.365692330319806,\n      \"a\": 74690246892.5442,\n      \"per\": 11125735.025562454,\n      \"t0\": 254671993.5214046,\n      \"rot\":[ 0.6495980084980639,-0.7546954554480999,0.7602778619395342,0.6448282784809208,0.12095974866589783,0.1086313732150222 ],\n    }\n   },\n   {\n    \"start\": 265248000 ,\n    \"stop\": 265939200 ,\n    \"interp\": 265766400 ,\n    \"sat\":{\n      \"e\": 0.3825169897368969,\n      \"a\": 77337003062.78221,\n      \"per\": 11722328.226971379,\n      \"t0\": 254042775.80329898,\n      \"rot\":[ 0.6452434470393504,-0.7584389969038766,0.7639770245581846,0.6405661125926353,0.12018878222779664,0.06155356421256367 ],\n    }\n   },\n   {\n    \"start\": 265939200 ,\n    \"stop\": 266630400 ,\n    \"interp\": 266457600 ,\n    \"sat\":{\n      \"e\": 0.3969351339178917,\n      \"a\": 79366914062.12903,\n      \"per\": 12186868.122283144,\n      \"t0\": 265801079.53568235,\n      \"rot\":[ 0.6463627474978664,-0.7575905265969097,0.7630302737421428,0.6417547390983533,0.11919500348345707,0.11084968752472614 ],\n    }\n   },\n   {\n    \"start\": 266630400 ,\n    \"stop\": 267321600 ,\n    \"interp\": 267148800 ,\n    \"sat\":{\n      \"e\": 0.3822933237307248,\n      \"a\": 78181956169.91684,\n      \"per\": 11914962.196856208,\n      \"t0\": 265814479.64357343,\n      \"rot\":[ 0.6508206622283621,-0.7538612025207734,0.7592314967232565,0.6462171935309943,0.11872921341800864,0.1442234608482815 ],\n    }\n   },\n   {\n    \"start\": 267321600 ,\n    \"stop\": 268012800 ,\n    \"interp\": 267840000 ,\n    \"sat\":{\n      \"e\": 0.3720543042350356,\n      \"a\": 76915454085.79039,\n      \"per\": 11626614.752647903,\n      \"t0\": 265792898.23351637,\n      \"rot\":[ 0.6545882903851606,-0.7506369630890292,0.7559855620913885,0.6499570772344432,0.11874319937301377,0.13277732246274926 ],\n    }\n   },\n   {\n    \"start\": 268012800 ,\n    \"stop\": 270950400 ,\n    \"interp\": 270777600 ,\n    \"sat\":{\n      \"e\": 0.37398450215122075,\n      \"a\": 75790152323.43683,\n      \"per\": 11372397.723896772,\n      \"t0\": 265777266.13194466,\n      \"rot\":[ 0.6590491998927075,-0.7467295602883989,0.7520998285605324,0.6543433471939605,0.1192885064643649,0.10350752733937514 ],\n    }\n   },\n   {\n    \"start\": 270950400 ,\n    \"stop\": 272332800 ,\n    \"interp\": 272160000 ,\n    \"sat\":{\n      \"e\": 0.3828151813550524,\n      \"a\": 75374129806.23148,\n      \"per\": 11278889.367278954,\n      \"t0\": 265844032.06633556,\n      \"rot\":[ 0.6600173675273413,-0.7458170877795237,0.7512503408067637,0.6552439369338885,0.12005105033879769,0.10769098453519806 ],\n    }\n   },\n   {\n    \"start\": 272332800 ,\n    \"stop\": 273715200 ,\n    \"interp\": 273542400 ,\n    \"sat\":{\n      \"e\": 0.38499708231620217,\n      \"a\": 75120200196.78146,\n      \"per\": 11221940.84055611,\n      \"t0\": 265926099.26898357,\n      \"rot\":[ 0.6590848202473487,-0.7465885407566759,0.7520686137045742,0.6542822891644245,0.12049994562894048,0.12092250475904182 ],\n    }\n   },\n   {\n    \"start\": 273715200 ,\n    \"stop\": 275097600 ,\n    \"interp\": 274924800 ,\n    \"sat\":{\n      \"e\": 0.3819355878128528,\n      \"a\": 74713392270.00142,\n      \"per\": 11130906.971617697,\n      \"t0\": 266057163.8341085,\n      \"rot\":[ 0.6566418754408688,-0.7486679429377334,0.7542025241389069,0.6518232257235829,0.12092474364118286,0.13693487081754302 ],\n    }\n   },\n   {\n    \"start\": 275097600 ,\n    \"stop\": 275788800 ,\n    \"interp\": 275616000 ,\n    \"sat\":{\n      \"e\": 0.3730368008418971,\n      \"a\": 74297167777.57379,\n      \"per\": 11038022.065648446,\n      \"t0\": 266180301.1150935,\n      \"rot\":[ 0.6530031696091056,-0.7517777570630557,0.7573551745914605,0.6481942352458508,0.12113809218940083,0.13907170020608098 ],\n    }\n   },\n   {\n    \"start\": 275788800 ,\n    \"stop\": 276739200 ,\n    \"interp\": 276566400 ,\n    \"sat\":{\n      \"e\": 0.365413236427643,\n      \"a\": 74323884164.20018,\n      \"per\": 11043976.314968126,\n      \"t0\": 266174377.4969903,\n      \"rot\":[ 0.6492058303149781,-0.7550188421382608,0.7606127726281224,0.6444312427467905,0.12105751272856699,0.11562322785851861 ],\n    }\n   },\n   {\n    \"start\": 276739200 ,\n    \"stop\": 277171200 ,\n    \"interp\": 276998400 ,\n    \"sat\":{\n      \"e\": 0.3489776062123011,\n      \"a\": 70363392186.58804,\n      \"per\": 10173093.182404282,\n      \"t0\": 267162417.6498113,\n      \"rot\":[ 0.6537619990685403,-0.7510338941073786,0.756700236932635,0.6488664810918794,0.12214900579762676,0.2817846405524064 ],\n    }\n   },\n   {\n    \"start\": 277171200 ,\n    \"stop\": 277689600 ,\n    \"interp\": 277516800 ,\n    \"sat\":{\n      \"e\": 0.363149386528786,\n      \"a\": 71884825925.32886,\n      \"per\": 10504822.244778736,\n      \"t0\": 266832943.01285,\n      \"rot\":[ 0.6535584554060585,-0.7512665299450177,0.7568760435944891,0.6487146700764069,0.12152315751341435,0.2865643944998403 ],\n    }\n   },\n   {\n    \"start\": 277689600 ,\n    \"stop\": 278208000 ,\n    \"interp\": 278035200 ,\n    \"sat\":{\n      \"e\": 0.3701866757125223,\n      \"a\": 72928086489.24507,\n      \"per\": 10734333.837557616,\n      \"t0\": 277374715.9863663,\n      \"rot\":[ 0.6565663062914555,-0.7487537222275203,0.7542683113075841,0.6517660338569211,0.12070170073719792,0.3419383493610885 ],\n    }\n   },\n   {\n    \"start\": 278208000 ,\n    \"stop\": 278726400 ,\n    \"interp\": 278553600 ,\n    \"sat\":{\n      \"e\": 0.35730281767392064,\n      \"a\": 72032300856.95871,\n      \"per\": 10537165.487175977,\n      \"t0\": 277388260.3073861,\n      \"rot\":[ 0.661243032819994,-0.7447154748492748,0.7501717480330864,0.6564335706702692,0.12039031861864939,0.37497529674290864 ],\n    }\n   },\n   {\n    \"start\": 278726400 ,\n    \"stop\": 280627200 ,\n    \"interp\": 280454400 ,\n    \"sat\":{\n      \"e\": 0.34251069981834403,\n      \"a\": 70095412353.26874,\n      \"per\": 10115032.02862705,\n      \"t0\": 277348798.0042135,\n      \"rot\":[ 0.6682238925928508,-0.7385124705365687,0.7439602337276222,0.6633307204037809,0.12079605221436164,0.34584939149051086 ],\n    }\n   },\n   {\n    \"start\": 280627200 ,\n    \"stop\": 282528000 ,\n    \"interp\": 282355200 ,\n    \"sat\":{\n      \"e\": 0.3518488132111616,\n      \"a\": 69319240857.46902,\n      \"per\": 9947491.272456676,\n      \"t0\": 277368886.8487844,\n      \"rot\":[ 0.6706730859969601,-0.7362310252797819,0.7417530665385309,0.6656802054561483,0.1217938482820109,0.32455992724331734 ],\n    }\n   },\n   {\n    \"start\": 282528000 ,\n    \"stop\": 283392000 ,\n    \"interp\": 283219200 ,\n    \"sat\":{\n      \"e\": 0.3473178141217651,\n      \"a\": 69600027353.12985,\n      \"per\": 10007992.824722668,\n      \"t0\": 277393919.51176757,\n      \"rot\":[ 0.6698889744968561,-0.736892127581925,0.7424612864301752,0.6648641763318204,0.12225227743643124,0.3423636289658918 ],\n    }\n   },\n   {\n    \"start\": 283392000 ,\n    \"stop\": 284428800 ,\n    \"interp\": 284256000 ,\n    \"sat\":{\n      \"e\": 0.34827194989177024,\n      \"a\": 69368117706.82285,\n      \"per\": 9958014.05923188,\n      \"t0\": 277473557.5364827,\n      \"rot\":[ 0.6680777429955629,-0.7384739379232902,0.744091479130056,0.6630340697969551,0.12264609776326003,0.35740819102589594 ],\n    }\n   },\n   {\n    \"start\": 284428800 ,\n    \"stop\": 285292800 ,\n    \"interp\": 285120000 ,\n    \"sat\":{\n      \"e\": 0.345374145128741,\n      \"a\": 69110629002.77397,\n      \"per\": 9902620.558526801,\n      \"t0\": 277561425.52364707,\n      \"rot\":[ 0.6656286940221003,-0.7406247292036285,0.746283084154018,0.6605818646139131,0.12290895262452514,0.37059032848755546 ],\n    }\n   },\n   {\n    \"start\": 285292800 ,\n    \"stop\": 286329600 ,\n    \"interp\": 286156800 ,\n    \"sat\":{\n      \"e\": 0.3350914755990126,\n      \"a\": 68783939279.3175,\n      \"per\": 9832488.25841969,\n      \"t0\": 277666544.119998,\n      \"rot\":[ 0.6610186314563722,-0.7446702553425786,0.7503694882306615,0.655998039357252,0.12301537776822881,0.37242754676234263 ],\n    }\n   },\n   {\n    \"start\": 286329600 ,\n    \"stop\": 287193600 ,\n    \"interp\": 287020800 ,\n    \"sat\":{\n      \"e\": 0.3275332755448804,\n      \"a\": 69237125863.27043,\n      \"per\": 9929820.935361495,\n      \"t0\": 277555125.1600953,\n      \"rot\":[ 0.6557605529778269,-0.7492757250153999,0.7549689378763969,0.6508154695092947,0.1225769658216552,0.3256451560699167 ],\n    }\n   },\n   {\n    \"start\": 287193600 ,\n    \"stop\": 287712000 ,\n    \"interp\": 287539200 ,\n    \"sat\":{\n      \"e\": 0.34577537380249235,\n      \"a\": 71523532867.08937,\n      \"per\": 10425725.999786077,\n      \"t0\": 277030488.47253084,\n      \"rot\":[ 0.6534193149028995,-0.7513843980098887,0.7569961683600688,0.6485753813522835,0.12153789997798016,0.2870977253355182 ],\n    }\n   },\n   {\n    \"start\": 287712000 ,\n    \"stop\": 288230400 ,\n    \"interp\": 288057600 ,\n    \"sat\":{\n      \"e\": 0.3593323374714839,\n      \"a\": 73147590647.0573,\n      \"per\": 10782833.732216202,\n      \"t0\": 287486030.77183646,\n      \"rot\":[ 0.6557149727572098,-0.7494917225779232,0.7550085261121304,0.6509237014615499,0.12066686646620335,0.32982065440180636 ],\n    }\n   },\n   {\n    \"start\": 288230400 ,\n    \"stop\": 289094400 ,\n    \"interp\": 288921600 ,\n    \"sat\":{\n      \"e\": 0.34743242522762424,\n      \"a\": 72564399563.0374,\n      \"per\": 10654137.046735207,\n      \"t0\": 287512112.0950858,\n      \"rot\":[ 0.6617659520773833,-0.7442741017505838,0.7497104939048902,0.6569672741088755,0.12020841157471153,0.38134800562444016 ],\n    }\n   },\n   {\n    \"start\": 289094400 ,\n    \"stop\": 290131200 ,\n    \"interp\": 289958400 ,\n    \"sat\":{\n      \"e\": 0.33294835240861403,\n      \"a\": 70981889733.84615,\n      \"per\": 10307520.466525203,\n      \"t0\": 287477376.0784694,\n      \"rot\":[ 0.6679635142923265,-0.7387672172997743,0.7441940228020143,0.6630925962741883,0.12054545785513643,0.3621008807992346 ],\n    }\n   },\n   {\n    \"start\": 290131200 ,\n    \"stop\": 292204800 ,\n    \"interp\": 292032000 ,\n    \"sat\":{\n      \"e\": 0.33784183143585667,\n      \"a\": 70126262727.41243,\n      \"per\": 10121710.501112219,\n      \"t0\": 287469783.3352853,\n      \"rot\":[ 0.6708660841399324,-0.7360947252848571,0.7415785171853032,0.6659051934004677,0.12138710314566557,0.3329484724555527 ],\n    }\n   },\n   {\n    \"start\": 292204800 ,\n    \"stop\": 294105600 ,\n    \"interp\": 293932800 ,\n    \"sat\":{\n      \"e\": 0.34693958711715267,\n      \"a\": 69684900623.0311,\n      \"per\": 10026304.670450294,\n      \"t0\": 287548272.60044456,\n      \"rot\":[ 0.6699958567345532,-0.7367949025646684,0.7423648375014351,0.6649689034881212,0.12226867525464787,0.34027571002653056 ],\n    }\n   },\n   {\n    \"start\": 294105600 ,\n    \"stop\": 294969600 ,\n    \"interp\": 294796800 ,\n    \"sat\":{\n      \"e\": 0.34815198754955545,\n      \"a\": 69313049115.65393,\n      \"per\": 9946158.505648445,\n      \"t0\": 287664108.84094995,\n      \"rot\":[ 0.6672313888706778,-0.7392142838368652,0.744850504266263,0.6621825056873429,0.12278669200358157,0.36043288259663014 ],\n    }\n   },\n   {\n    \"start\": 294969600 ,\n    \"stop\": 296006400 ,\n    \"interp\": 295833600 ,\n    \"sat\":{\n      \"e\": 0.34235654360438844,\n      \"a\": 68897431615.28423,\n      \"per\": 9856833.452697804,\n      \"t0\": 287792604.82406557,\n      \"rot\":[ 0.6634892189203827,-0.7425015157876412,0.7481858434750156,0.6584483722239703,0.12303349206073606,0.37519673023982936 ],\n    }\n   },\n   {\n    \"start\": 296006400 ,\n    \"stop\": 296870400 ,\n    \"interp\": 296697600 ,\n    \"sat\":{\n      \"e\": 0.3310821820588432,\n      \"a\": 68611755561.55486,\n      \"per\": 9795591.539662872,\n      \"t0\": 287874389.9954141,\n      \"rot\":[ 0.6587574117186946,-0.7466478720276446,0.7523554163463477,0.6537599237748746,0.12294273977124627,0.3652263984118991 ],\n    }\n   },\n   {\n    \"start\": 296870400 ,\n    \"stop\": 297907200 ,\n    \"interp\": 297734400 ,\n    \"sat\":{\n      \"e\": 0.33689860759767826,\n      \"a\": 70407956450.74153,\n      \"per\": 10182759.320708552,\n      \"t0\": 287442930.2354532,\n      \"rot\":[ 0.6533143025649716,-0.7514495059528327,0.7570867995573854,0.6484497024401701,0.12180567888443693,0.2891745960689723 ],\n    }\n   },\n   {\n    \"start\": 297907200 ,\n    \"stop\": 298252800 ,\n    \"interp\": 298080000 ,\n    \"sat\":{\n      \"e\": 0.3583207009753848,\n      \"a\": 72892729546.26912,\n      \"per\": 10726528.465663072,\n      \"t0\": 297650456.7350046,\n      \"rot\":[ 0.6557996951621465,-0.7494230710521256,0.7549349374782146,0.6510116264921786,0.12061891537735324,0.3261126376326998 ],\n    }\n   },\n   {\n    \"start\": 298252800 ,\n    \"stop\": 298771200 ,\n    \"interp\": 298598400 ,\n    \"sat\":{\n      \"e\": 0.3559579437210585,\n      \"a\": 73015732230.91805,\n      \"per\": 10753690.603463048,\n      \"t0\": 297671675.2106313,\n      \"rot\":[ 0.6588621316356388,-0.746801054994968,0.7522637114048119,0.6540777224025234,0.12029346331006668,0.3607441493305078 ],\n    }\n   },\n   {\n    \"start\": 298771200 ,\n    \"stop\": 299808000 ,\n    \"interp\": 299635200 ,\n    \"sat\":{\n      \"e\": 0.3383091360091163,\n      \"a\": 71749689109.27019,\n      \"per\": 10475214.031285124,\n      \"t0\": 297664094.6036664,\n      \"rot\":[ 0.6656189338682873,-0.7408718475723062,0.7462917893666288,0.66078487843559,0.12030066461021721,0.37878757028505716 ],\n    }\n   },\n   {\n    \"start\": 299808000 ,\n    \"stop\": 301708800 ,\n    \"interp\": 301536000 ,\n    \"sat\":{\n      \"e\": 0.3340758467536812,\n      \"a\": 70534365365.18285,\n      \"per\": 10210194.482716518,\n      \"t0\": 297627583.22882324,\n      \"rot\":[ 0.6702242975087455,-0.7367033384849293,0.7421586023411092,0.6652977893820465,0.12102496646775658,0.34372400176142837 ],\n    }\n   },\n   {\n    \"start\": 301708800 ,\n    \"stop\": 303609600 ,\n    \"interp\": 303436800 ,\n    \"sat\":{\n      \"e\": 0.3435155410242633,\n      \"a\": 69947824836.99593,\n      \"per\": 10083102.69860688,\n      \"t0\": 297665178.1353844,\n      \"rot\":[ 0.6706859101215732,-0.7362032480776017,0.7417414711099798,0.665678224425682,0.12197245199413091,0.333266909792683 ],\n    }\n   },\n   {\n    \"start\": 303609600 ,\n    \"stop\": 304473600 ,\n    \"interp\": 304300800 ,\n    \"sat\":{\n      \"e\": 0.3482920407773603,\n      \"a\": 69605799942.56569,\n      \"per\": 10009237.936981888,\n      \"t0\": 297750556.0556569,\n      \"rot\":[ 0.6688295219447911,-0.7378128613611972,0.7434158127018166,0.6637887100564791,0.12254276809162844,0.34672484985901825 ],\n    }\n   },\n   {\n    \"start\": 304473600 ,\n    \"stop\": 305510400 ,\n    \"interp\": 305337600 ,\n    \"sat\":{\n      \"e\": 0.34772399907225543,\n      \"a\": 69240589356.63501,\n      \"per\": 9930566.033426812,\n      \"t0\": 297858881.71916336,\n      \"rot\":[ 0.6661281343946719,-0.7401845113964994,0.7458373204445283,0.6610794528095126,0.12288550020975074,0.36370602758079257 ],\n    }\n   },\n   {\n    \"start\": 305510400 ,\n    \"stop\": 306547200 ,\n    \"interp\": 306374400 ,\n    \"sat\":{\n      \"e\": 0.3395591401914559,\n      \"a\": 68706331827.7208,\n      \"per\": 9815852.272956496,\n      \"t0\": 298012016.10891914,\n      \"rot\":[ 0.6617110743520549,-0.7440624172966883,0.7497589306436098,0.6566835304138767,0.12303601119093462,0.3766439208974613 ],\n    }\n   },\n   {\n    \"start\": 306547200 ,\n    \"stop\": 307670400 ,\n    \"interp\": 307497600 ,\n    \"sat\":{\n      \"e\": 0.3262036067669389,\n      \"a\": 68676879734.17204,\n      \"per\": 9809541.360819636,\n      \"t0\": 298015979.2900958,\n      \"rot\":[ 0.6554410161769313,-0.7495554874856446,0.7552463666333997,0.6505021832657956,0.12252950969701522,0.3353625553269137 ],\n    }\n   },\n   {\n    \"start\": 307670400 ,\n    \"stop\": 308448000 ,\n    \"interp\": 308275200 ,\n    \"sat\":{\n      \"e\": 0.31527947263862605,\n      \"a\": 66760466325.81578,\n      \"per\": 9401819.567071931,\n      \"t0\": 307961011.363443,\n      \"rot\":[ 0.6549482170214984,-0.7501245041011916,0.7556737609712013,0.6501386337323604,0.12096687677030177,0.5152992967405929 ],\n    }\n   },\n   {\n    \"start\": 308448000 ,\n    \"stop\": 309139200 ,\n    \"interp\": 308966400 ,\n    \"sat\":{\n      \"e\": 0.3168083537283927,\n      \"a\": 67480825489.55686,\n      \"per\": 9554400.672383975,\n      \"t0\": 308010349.207089,\n      \"rot\":[ 0.661711828342353,-0.744311428065135,0.7497582651974037,0.6569046301762512,0.12031959484906124,0.5942366125765229 ],\n    }\n   },\n   {\n    \"start\": 309139200 ,\n    \"stop\": 309830400 ,\n    \"interp\": 309657600 ,\n    \"sat\":{\n      \"e\": 0.3007781346085318,\n      \"a\": 66468794868.19623,\n      \"per\": 9340273.148489827,\n      \"t0\": 308002085.5073786,\n      \"rot\":[ 0.6675093940718693,-0.7391724060743057,0.7446013757882844,0.6626425103914892,0.12053654018755779,0.6076409203340607 ],\n    }\n   },\n   {\n    \"start\": 309830400 ,\n    \"stop\": 310521600 ,\n    \"interp\": 310348800 ,\n    \"sat\":{\n      \"e\": 0.29483455131954,\n      \"a\": 65660888303.890526,\n      \"per\": 9170499.692993945,\n      \"t0\": 307971801.72819984,\n      \"rot\":[ 0.6704879261154891,-0.7364662964945856,0.7419204411076368,0.6655589095960371,0.12103194613358485,0.581506285230647 ],\n    }\n   },\n   {\n    \"start\": 310521600 ,\n    \"stop\": 311904000 ,\n    \"interp\": 311731200 ,\n    \"sat\":{\n      \"e\": 0.2987661931412893,\n      \"a\": 65035563616.12388,\n      \"per\": 9039808.539636463,\n      \"t0\": 307960154.2422718,\n      \"rot\":[ 0.6717229781711416,-0.7352899085077659,0.7408024302044993,0.6667244963352482,0.12176697595469341,0.5526088236922833 ],\n    }\n   },\n   {\n    \"start\": 311904000 ,\n    \"stop\": 313459200 ,\n    \"interp\": 313286400 ,\n    \"sat\":{\n      \"e\": 0.3004935113435546,\n      \"a\": 64965682942.32376,\n      \"per\": 9025242.550956994,\n      \"t0\": 307973777.0649597,\n      \"rot\":[ 0.6691243020937518,-0.7375167552780193,0.7431505018147735,0.6640517404654233,0.12289964063830491,0.549863962830629 ],\n    }\n   },\n   {\n    \"start\": 313459200 ,\n    \"stop\": 314841600 ,\n    \"interp\": 314668800 ,\n    \"sat\":{\n      \"e\": 0.30405039913339116,\n      \"a\": 64475191299.97562,\n      \"per\": 8923224.69272058,\n      \"t0\": 308116197.6878753,\n      \"rot\":[ 0.6648239744790219,-0.7412827770039546,0.7470000555273854,0.6597356430886483,0.12348573098019418,0.5794355031361064 ],\n    }\n   },\n   {\n    \"start\": 314841600 ,\n    \"stop\": 315532800 ,\n    \"interp\": 315360000 ,\n    \"sat\":{\n      \"e\": 0.2964531862633245,\n      \"a\": 64032066286.242874,\n      \"per\": 8831391.642468305,\n      \"t0\": 308255755.7397832,\n      \"rot\":[ 0.6600550959024604,-0.7454602049735443,0.7512171925436703,0.6549967332605698,0.12356521443668204,0.5999028040843662 ],\n    }\n   },\n   {\n    \"start\": 315532800 ,\n    \"stop\": 316224000 ,\n    \"interp\": 316051200 ,\n    \"sat\":{\n      \"e\": 0.2857013124371657,\n      \"a\": 63862596491.12128,\n      \"per\": 8796354.585901162,\n      \"t0\": 308305566.1949427,\n      \"rot\":[ 0.6560553827238118,-0.7489562971051048,0.7547127498585887,0.651051423515456,0.12327412123032327,0.5872982620146958 ],\n    }\n   },\n   {\n    \"start\": 316224000 ,\n    \"stop\": 316915200 ,\n    \"interp\": 316742400 ,\n    \"sat\":{\n      \"e\": 0.28380586877146324,\n      \"a\": 64622447603.831024,\n      \"per\": 8953812.063859189,\n      \"t0\": 308112124.14237165,\n      \"rot\":[ 0.652897863281535,-0.751745686890893,0.7574459585491271,0.6479843837866888,0.12245268722867839,0.5253403988738442 ],\n    }\n   },\n   {\n    \"start\": 316915200 ,\n    \"stop\": 317606400 ,\n    \"interp\": 317433600 ,\n    \"sat\":{\n      \"e\": 0.30685014434720037,\n      \"a\": 66906538709.78596,\n      \"per\": 9432693.313674796,\n      \"t0\": 317055837.692549,\n      \"rot\":[ 0.6546364061084773,-0.7503640895356872,0.7559438972551976,0.6498043738828854,0.12127657984108293,0.5163638090157786 ],\n    }\n   },\n   {\n    \"start\": 317606400 ,\n    \"stop\": 318297600 ,\n    \"interp\": 318124800 ,\n    \"sat\":{\n      \"e\": 0.3086952913972876,\n      \"a\": 67683941629.50702,\n      \"per\": 9597570.993094895,\n      \"t0\": 317103717.90046024,\n      \"rot\":[ 0.6610801321717745,-0.7448254650686961,0.7503153062864633,0.6562431990485443,0.12074721648027,0.5913630694899068 ],\n    }\n   },\n   {\n    \"start\": 318297600 ,\n    \"stop\": 319161600 ,\n    \"interp\": 318988800 ,\n    \"sat\":{\n      \"e\": 0.2942513347088465,\n      \"a\": 66877525554.27738,\n      \"per\": 9426558.430616193,\n      \"t0\": 317097322.5172084,\n      \"rot\":[ 0.6663473298274176,-0.7401649344375386,0.7456414929655342,0.6614531679732273,0.12097758638382476,0.6067645274968595 ],\n    }\n   },\n   {\n    \"start\": 319161600 ,\n    \"stop\": 320544000 ,\n    \"interp\": 320371200 ,\n    \"sat\":{\n      \"e\": 0.28838850165657487,\n      \"a\": 65791647826.98745,\n      \"per\": 9197907.035419298,\n      \"t0\": 317052732.01022,\n      \"rot\":[ 0.669937250534248,-0.736889678133565,0.7424177263149178,0.6649488925409404,0.12180547019238426,0.5655524661220029 ],\n    }\n   },\n   {\n    \"start\": 320544000 ,\n    \"stop\": 321926400 ,\n    \"interp\": 321753600 ,\n    \"sat\":{\n      \"e\": 0.296537523403882,\n      \"a\": 65229648559.53317,\n      \"per\": 9080304.822544826,\n      \"t0\": 317069530.7302295,\n      \"rot\":[ 0.6696224100293493,-0.7370964158388515,0.7427017086196086,0.664568658816434,0.12262696064261289,0.5463616684620168 ],\n    }\n   },\n   {\n    \"start\": 321926400 ,\n    \"stop\": 323308800 ,\n    \"interp\": 323136000 ,\n    \"sat\":{\n      \"e\": 0.3036558445815667,\n      \"a\": 64807571180.541794,\n      \"per\": 8992314.511038465,\n      \"t0\": 317159295.6543799,\n      \"rot\":[ 0.6669060221511394,-0.7394625289582558,0.7451418372488181,0.661823010150883,0.12322934513128397,0.5608087558390011 ],\n    }\n   },\n   {\n    \"start\": 323308800 ,\n    \"stop\": 324000000 ,\n    \"interp\": 323827200 ,\n    \"sat\":{\n      \"e\": 0.3032686007611643,\n      \"a\": 64396842690.262634,\n      \"per\": 8906964.721959293,\n      \"t0\": 317280695.86280036,\n      \"rot\":[ 0.6633821653701478,-0.7425528830953748,0.7482807645989664,0.6583041590727754,0.12349433166843105,0.5849429869107006 ],\n    }\n   },\n   {\n    \"start\": 324000000 ,\n    \"stop\": 324864000 ,\n    \"interp\": 324691200 ,\n    \"sat\":{\n      \"e\": 0.29747763499439034,\n      \"a\": 64041715575.57658,\n      \"per\": 8833387.982781745,\n      \"t0\": 317385833.3552127,\n      \"rot\":[ 0.6601608649243751,-0.7453742710628152,0.7511242456626607,0.6551072293546987,0.1234978302837221,0.5992708199535076 ],\n    }\n   },\n   {\n    \"start\": 324864000 ,\n    \"stop\": 325555200 ,\n    \"interp\": 325382400 ,\n    \"sat\":{\n      \"e\": 0.2837667894491576,\n      \"a\": 63784530360.00649,\n      \"per\": 8780230.418328822,\n      \"t0\": 317453341.23957986,\n      \"rot\":[ 0.6554365282221235,-0.7495093994135172,0.7552502614843172,0.6504543774085745,0.12306406096343601,0.5809106456713622 ],\n    }\n   },\n   {\n    \"start\": 325555200 ,\n    \"stop\": 326246400 ,\n    \"interp\": 326073600 ,\n    \"sat\":{\n      \"e\": 0.2865957488859374,\n      \"a\": 64821235162.08169,\n      \"per\": 8995158.560588062,\n      \"t0\": 317194837.0697078,\n      \"rot\":[ 0.6533325471633409,-0.7514034721211666,0.7570710553290629,0.6484415708838877,0.12213251505594831,0.51482654056675 ],\n    }\n   },\n   {\n    \"start\": 326246400 ,\n    \"stop\": 326937600 ,\n    \"interp\": 326764800 ,\n    \"sat\":{\n      \"e\": 0.3093737051454629,\n      \"a\": 67075456358.66597,\n      \"per\": 9468437.659274982,\n      \"t0\": 326199543.7731177,\n      \"rot\":[ 0.6567000375021403,-0.7486013232556451,0.754151881748423,0.6518667246661181,0.12110256848211202,0.532522383598367 ],\n    }\n   },\n   {\n    \"start\": 326937600 ,\n    \"stop\": 327801600 ,\n    \"interp\": 327628800 ,\n    \"sat\":{\n      \"e\": 0.3054223798208824,\n      \"a\": 67437674484.151276,\n      \"per\": 9545237.712179739,\n      \"t0\": 326238056.9164317,\n      \"rot\":[ 0.6629014298929845,-0.743218599405668,0.7487066810479499,0.6580423078093589,0.1208570834929012,0.5982777417695937 ],\n    }\n   },\n   {\n    \"start\": 327801600 ,\n    \"stop\": 329184000 ,\n    \"interp\": 329011200 ,\n    \"sat\":{\n      \"e\": 0.288794742462152,\n      \"a\": 66241421074.48294,\n      \"per\": 9292387.90898761,\n      \"t0\": 326200990.5448119,\n      \"rot\":[ 0.6687678366323971,-0.7379616760758251,0.7434713045478106,0.6638118117107641,0.12151725505718163,0.5855257734672529 ],\n    }\n   },\n   {\n    \"start\": 329184000 ,\n    \"stop\": 330739200 ,\n    \"interp\": 330566400 ,\n    \"sat\":{\n      \"e\": 0.29257476658839693,\n      \"a\": 65516992372.93619,\n      \"per\": 9140370.470284184,\n      \"t0\": 326182106.82561034,\n      \"rot\":[ 0.6696524782328509,-0.7370944373804487,0.7426745979206513,0.6646209767581188,0.12235500658282807,0.5504651355443693 ],\n    }\n   },\n   {\n    \"start\": 330739200 ,\n    \"stop\": 332121600 ,\n    \"interp\": 331948800 ,\n    \"sat\":{\n      \"e\": 0.3018194973504288,\n      \"a\": 65025914210.099884,\n      \"per\": 9037796.743109578,\n      \"t0\": 326248323.31343263,\n      \"rot\":[ 0.6674757782042423,-0.738972275183632,0.7446315098830033,0.6624029307154261,0.12305419086541122,0.5528069336623671 ],\n    }\n   },\n   {\n    \"start\": 332121600 ,\n    \"stop\": 333504000 ,\n    \"interp\": 333331200 ,\n    \"sat\":{\n      \"e\": 0.3036633168143741,\n      \"a\": 64476093093.55547,\n      \"per\": 8923411.902747754,\n      \"t0\": 326397785.4002936,\n      \"rot\":[ 0.6633520571488314,-0.7425868360609821,0.7483074557135012,0.6582808998515326,0.12341413127999863,0.5819976374498732 ],\n    }\n   },\n   {\n    \"start\": 333504000 ,\n    \"stop\": 334195200 ,\n    \"interp\": 334022400 ,\n    \"sat\":{\n      \"e\": 0.293474741941813,\n      \"a\": 63865219987.369156,\n      \"per\": 8796896.627131607,\n      \"t0\": 326568124.90724194,\n      \"rot\":[ 0.65860780477655,-0.7467428047935506,0.7524863849183012,0.6535807813335531,0.12331806745357067,0.6010725258072243 ],\n    }\n   },\n   {\n    \"start\": 334195200 ,\n    \"stop\": 334886400 ,\n    \"interp\": 334713600 ,\n    \"sat\":{\n      \"e\": 0.28206687596536933,\n      \"a\": 63732326898.28138,\n      \"per\": 8769453.558568897,\n      \"t0\": 326593353.6708851,\n      \"rot\":[ 0.6552161546562585,-0.749721915250877,0.7554414541693261,0.6502554336422471,0.12282068560014611,0.5723443149109639 ],\n    }\n   },\n   {\n    \"start\": 334886400 ,\n    \"stop\": 335577600 ,\n    \"interp\": 335404800 ,\n    \"sat\":{\n      \"e\": 0.2906043558637526,\n      \"a\": 65083095397.68644,\n      \"per\": 9049720.578832129,\n      \"t0\": 326267670.41255647,\n      \"rot\":[ 0.6544511245217975,-0.7504704137923719,0.7561043086850879,0.6495746692422506,0.12184788509090695,0.5091121947532423 ],\n    }\n   },\n   {\n    \"start\": 335577600 ,\n    \"stop\": 335923200 ,\n    \"interp\": 335750400 ,\n    \"sat\":{\n      \"e\": 0.3077256788094053,\n      \"a\": 66770622553.01513,\n      \"per\": 9403965.087895148,\n      \"t0\": 335330934.00098133,\n      \"rot\":[ 0.6574519182232458,-0.7479434011085861,0.7534964998091063,0.6526066463558052,0.12118264673768098,0.5306145534979757 ],\n    }\n   },\n   {\n    \"start\": 335923200 ,\n    \"stop\": 336441600 ,\n    \"interp\": 336268800 ,\n    \"sat\":{\n      \"e\": 0.3100932625657719,\n      \"a\": 67309700401.11448,\n      \"per\": 9518080.117783643,\n      \"t0\": 335355100.1310362,\n      \"rot\":[ 0.6603838074982807,-0.745411971262074,0.7509282434387947,0.6555326691170986,0.1209872423828292,0.5674348154223365 ],\n    }\n   },\n   {\n    \"start\": 336441600 ,\n    \"stop\": 337132800 ,\n    \"interp\": 336960000 ,\n    \"sat\":{\n      \"e\": 0.29931861264766607,\n      \"a\": 67050157838.6636,\n      \"per\": 9463081.418300888,\n      \"t0\": 335367348.9685836,\n      \"rot\":[ 0.6653158754261853,-0.7410667648041198,0.7465619772703996,0.6604186904583368,0.12110823009214104,0.6041301509537055 ],\n    }\n   },\n   {\n    \"start\": 337132800 ,\n    \"stop\": 337824000 ,\n    \"interp\": 337651200 ,\n    \"sat\":{\n      \"e\": 0.29064000350888,\n      \"a\": 66440271493.88292,\n      \"per\": 9334261.586426431,\n      \"t0\": 335342387.62529504,\n      \"rot\":[ 0.6679804023972483,-0.7386658372788241,0.7441788642612811,0.6630318689746764,0.12149700227216094,0.5926668276656687 ],\n    }\n   },\n   {\n    \"start\": 337824000 ,\n    \"stop\": 339206400 ,\n    \"interp\": 339033600 ,\n    \"sat\":{\n      \"e\": 0.2898058995245806,\n      \"a\": 65830101517.75415,\n      \"per\": 9205972.158293491,\n      \"t0\": 335312368.1988275,\n      \"rot\":[ 0.6692079115234537,-0.7375156245732594,0.743075212313274,0.6642009888879318,0.12209729673751359,0.5620056101139755 ],\n    }\n   },\n   {\n    \"start\": 339206400 ,\n    \"stop\": 340588800 ,\n    \"interp\": 340416000 ,\n    \"sat\":{\n      \"e\": 0.2972595868828009,\n      \"a\": 65352465493.90669,\n      \"per\": 9105962.019943787,\n      \"t0\": 335330372.38579524,\n      \"rot\":[ 0.6682729300787957,-0.7382913455840974,0.7439161854160057,0.6632200380065641,0.12273984773574764,0.5469181232300804 ],\n    }\n   },\n   {\n    \"start\": 340588800 ,\n    \"stop\": 342144000 ,\n    \"interp\": 341971200 ,\n    \"sat\":{\n      \"e\": 0.30378332589067186,\n      \"a\": 64896105052.473526,\n      \"per\": 9010747.455879603,\n      \"t0\": 335424806.7475262,\n      \"rot\":[ 0.6654823825065478,-0.7407284475578533,0.7464135573349461,0.6604136905433695,0.12318735455159058,0.5621463325598755 ],\n    }\n   },\n   {\n    \"start\": 342144000 ,\n    \"stop\": 342835200 ,\n    \"interp\": 342662400 ,\n    \"sat\":{\n      \"e\": 0.30108861939046827,\n      \"a\": 64262024462.33243,\n      \"per\": 8879008.557465363,\n      \"t0\": 335598050.1019393,\n      \"rot\":[ 0.6613609064786907,-0.7443425131594913,0.7500678311870764,0.6563126943528489,0.12332019435079053,0.5927558631286711 ],\n    }\n   },\n   {\n    \"start\": 342835200 ,\n    \"stop\": 343526400 ,\n    \"interp\": 343353600 ,\n    \"sat\":{\n      \"e\": 0.291581992455106,\n      \"a\": 63778032367.83161,\n      \"per\": 8778888.735279799,\n      \"t0\": 335724272.7918837,\n      \"rot\":[ 0.6582542155368261,-0.7470666762765155,0.752795714472391,0.6532446711532616,0.12313724378524553,0.600864267867982 ],\n    }\n   },\n   {\n    \"start\": 343526400 ,\n    \"stop\": 344217600 ,\n    \"interp\": 344044800 ,\n    \"sat\":{\n      \"e\": 0.2810223127862813,\n      \"a\": 63723748098.388466,\n      \"per\": 8767682.977000855,\n      \"t0\": 335721801.5853626,\n      \"rot\":[ 0.6555291701035993,-0.7494764971836452,0.755169853174295,0.6505870224371277,0.12256225522454176,0.5617627595724413 ],\n    }\n   },\n   {\n    \"start\": 344217600 ,\n    \"stop\": 344908800 ,\n    \"interp\": 344736000 ,\n    \"sat\":{\n      \"e\": 0.2951074843675135,\n      \"a\": 65363334462.67413,\n      \"per\": 9108233.775057344,\n      \"t0\": 344449957.5569181,\n      \"rot\":[ 0.656168116041604,-0.7490107010601473,0.7546147384529487,0.6512951782749764,0.12164522371697614,0.5100366266442933 ],\n    }\n   },\n   {\n    \"start\": 344908800 ,\n    \"stop\": 345600000 ,\n    \"interp\": 345427200 ,\n    \"sat\":{\n      \"e\": 0.3091300599393764,\n      \"a\": 67046730603.55805,\n      \"per\": 9462355.876599427,\n      \"t0\": 344485421.5556432,\n      \"rot\":[ 0.6609244715219768,-0.7449261519718305,0.75045242550304,0.6560574749090305,0.12113470899964286,0.5632113301323443 ],\n    }\n   },\n   {\n    \"start\": 345600000 ,\n    \"stop\": 346291200 ,\n    \"interp\": 346118400 ,\n    \"sat\":{\n      \"e\": 0.3001357427309256,\n      \"a\": 66967448024.96215,\n      \"per\": 9445577.023723671,\n      \"t0\": 344499322.8369607,\n      \"rot\":[ 0.6652331690625239,-0.7411261873606326,0.7466356747296712,0.6603243576214655,0.12125888478825471,0.6006123764416942 ],\n    }\n   },\n   {\n    \"start\": 346291200 ,\n    \"stop\": 347846400 ,\n    \"interp\": 347673600 ,\n    \"sat\":{\n      \"e\": 0.2899639198914826,\n      \"a\": 66249326368.2822,\n      \"per\": 9294051.39794086,\n      \"t0\": 344464006.01427037,\n      \"rot\":[ 0.6681116215428191,-0.7385221371712624,0.7440610601015383,0.6631380797476842,0.12179055832266003,0.583126736332132 ],\n    }\n   },\n   {\n    \"start\": 347846400 ,\n    \"stop\": 349228800 ,\n    \"interp\": 349056000 ,\n    \"sat\":{\n      \"e\": 0.293643244829453,\n      \"a\": 65615200790.94049,\n      \"per\": 9160929.967918346,\n      \"t0\": 344443495.3908195,\n      \"rot\":[ 0.668235235956628,-0.7383464884597957,0.7439500449801651,0.6632019760773504,0.12250551786016203,0.5501994028446828 ],\n    }\n   },\n   {\n    \"start\": 349228800 ,\n    \"stop\": 350784000 ,\n    \"interp\": 350611200 ,\n    \"sat\":{\n      \"e\": 0.30123667668819337,\n      \"a\": 65201581524.370026,\n      \"per\": 9074444.838088525,\n      \"t0\": 344496391.0321834,\n      \"rot\":[ 0.666348287826617,-0.7399823340567706,0.7456406368422633,0.6612916959687952,0.12296112445243988,0.5516458929819911 ],\n    }\n   },\n   {\n    \"start\": 350784000 ,\n    \"stop\": 352166400 ,\n    \"interp\": 351993600 ,\n    \"sat\":{\n      \"e\": 0.3028254507968502,\n      \"a\": 64484074578.748924,\n      \"per\": 8925068.895611072,\n      \"t0\": 344678555.33844364,\n      \"rot\":[ 0.6622330975206213,-0.743589574647118,0.7492978877243971,0.6571880628118428,0.12320062732687502,0.5853857870693775 ],\n    }\n   },\n   {\n    \"start\": 352166400 ,\n    \"stop\": 352857600 ,\n    \"interp\": 352684800 ,\n    \"sat\":{\n      \"e\": 0.2894436378403664,\n      \"a\": 63695297008.59425,\n      \"per\": 8761811.799511403,\n      \"t0\": 344878265.6497931,\n      \"rot\":[ 0.6582336990912842,-0.7471032458873056,0.7528136538218504,0.6532407198606429,0.1229361700257548,0.5995319050156283 ],\n    }\n   },\n   {\n    \"start\": 352857600 ,\n    \"stop\":  352857601,\n    \"sat\":{\n      \"e\": 0.2811735652638273,\n      \"a\": 63789060481.15294,\n      \"per\": 8781165.822575565,\n      \"t0\": 344832921.5687451,\n      \"rot\":[ 0.656379774062156,-0.7487649639274095,0.7544306410811488,0.6514504463180559,0.12232475132527704,0.5498753114025992 ],\n    }\n   }\n ]},\n \"Mariner 2\": {\n \"color\": 16776960 ,\n \"horizonsID\": -2 ,\n \"orbits\":[\n   {\n    \"start\": -1178496000 ,\n    \"stop\": -1177718400 ,\n    \"interp\": -1177891200 ,\n    \"sat\":{\n      \"e\": 0.20427898472931266,\n      \"a\": 124844610363.7341,\n      \"per\": 24042939.703837026,\n      \"t0\": -1190964901.4915946,\n      \"rot\":[ 0.8978275509157395,0.44012186872810527,-0.4403472366401828,0.8973680464526266,0.031989527553201356,3.078360337437301 ],\n    }\n   },\n   {\n    \"start\": -1177718400 ,\n    \"stop\": -1177200000 ,\n    \"interp\": -1177372800 ,\n    \"sat\":{\n      \"e\": 0.1986325858289038,\n      \"a\": 125928952334.47,\n      \"per\": 24356857.499237552,\n      \"t0\": -1191521972.1193082,\n      \"rot\":[ 0.899213232791007,0.43727795317400786,-0.4375106421260474,0.89873498845898,0.03261000134294902,3.0043745798689363 ],\n    }\n   },\n   {\n    \"start\": -1177200000 ,\n    \"stop\": -1175990400 ,\n    \"interp\": -1176163200 ,\n    \"sat\":{\n      \"e\": 0.19576299431294325,\n      \"a\": 126134273887.4835,\n      \"per\": 24416450.93228784,\n      \"t0\": -1191517518.8299792,\n      \"rot\":[ 0.8984447352583499,0.4388565739718011,-0.4390866175215927,0.8979740276395274,0.03236592601144357,3.0113208938587306 ],\n    }\n   },\n   {\n    \"start\": -1175990400 ,\n    \"stop\": -1173744000 ,\n    \"interp\": -1173916800 ,\n    \"sat\":{\n      \"e\": 0.19084371728205202,\n      \"a\": 126435055047.8034,\n      \"per\": 24503838.57834076,\n      \"t0\": -1191527590.8238666,\n      \"rot\":[ 0.897654379614021,0.44047095495444744,-0.4407001415472512,0.8971875534676602,0.03224642219272524,3.0164447510674344 ],\n    }\n   },\n   {\n    \"start\": -1173744000 ,\n    \"stop\": -1171497600 ,\n    \"interp\": -1171670400 ,\n    \"sat\":{\n      \"e\": 0.18550101857150522,\n      \"a\": 127059420977.5038,\n      \"per\": 24685571.022612773,\n      \"t0\": -1191713937.0254138,\n      \"rot\":[ 0.897277416956465,0.4412379146546854,-0.4414671414951899,0.8968115157647062,0.032221233107913465,2.9958775092546084 ],\n    }\n   },\n   {\n    \"start\": -1171497600 ,\n    \"stop\": -1168992000 ,\n    \"interp\": -1169164800 ,\n    \"sat\":{\n      \"e\": 0.18808302007345082,\n      \"a\": 128404688984.1176,\n      \"per\": 25078652.328886874,\n      \"t0\": -1192231001.9169755,\n      \"rot\":[ 0.8967271220900992,0.442354010532323,-0.44258385477557627,0.8962614305277941,0.03222386560054309,2.9492009579642846 ],\n    }\n   },\n   {\n    \"start\": -1168992000 ,\n    \"stop\": 1000000000000 ,\n    \"sat\":{\n      \"e\": 0.278748234476684,\n      \"a\": 147368205043.0105,\n      \"per\": 30834617.15728264,\n      \"t0\": -1198813679.131493,\n      \"rot\":[ 0.6795424835664181,-0.7332991302325248,0.7336361584793816,0.6792303056438144,0.030308043408192077,1.3768603051662403 ],\n    }\n   }\n ]},\n  \"Cassini\": {\n \"color\": 16776960 ,\n \"horizonsID\": -82 ,\n \"orbits\":[\n   {\n    \"start\": -69638400 ,\n    \"stop\": -65577600 ,\n    \"interp\": -65750400 ,\n    \"sat\":{\n      \"e\": 0.2048136540140955,\n      \"a\": 125179767298.3996,\n      \"per\": 24139822.906268165,\n      \"t0\": -79788481.56632495,\n      \"rot\":[ 0.9289932013893897,-0.3700104805171749,0.3700967870331933,0.9287765603121746,0.021595030033202203,3.5189996645387316 ],\n    }\n   },\n   {\n    \"start\": -65577600 ,\n    \"stop\": -63504000 ,\n    \"interp\": -63676800 ,\n    \"sat\":{\n      \"e\": 0.19531756803748987,\n      \"a\": 126223343057.77899,\n      \"per\": 24442317.853747718,\n      \"t0\": -79974866.16211554,\n      \"rot\":[ 0.9284715114746178,-0.37131648246570476,0.37140362461887555,0.9282536649020361,0.021661104432474414,3.5098197688451975 ],\n    }\n   },\n   {\n    \"start\": -63504000 ,\n    \"stop\": -61430400 ,\n    \"interp\": -61603200 ,\n    \"sat\":{\n      \"e\": 0.1922982970026822,\n      \"a\": 127140576001.92679,\n      \"per\": 24709225.443094306,\n      \"t0\": -80314718.42189291,\n      \"rot\":[ 0.9281401516680965,-0.37214351725611905,0.37223092142045755,0.9279222135289543,0.021669522462906772,3.4725391215700943 ],\n    }\n   },\n   {\n    \"start\": -61430400 ,\n    \"stop\": -59356800 ,\n    \"interp\": -59529600 ,\n    \"sat\":{\n      \"e\": 0.1972063873084244,\n      \"a\": 128339674827.1539,\n      \"per\": 25059607.918800447,\n      \"t0\": -80804985.20299023,\n      \"rot\":[ 0.9275078903090356,-0.3737158150987408,0.3738035759787244,0.9272901318019584,0.02166797193533108,3.4275401288528804 ],\n    }\n   },\n   {\n    \"start\": -59356800 ,\n    \"stop\": -57283200 ,\n    \"interp\": -57456000 ,\n    \"sat\":{\n      \"e\": 0.2097896375431184,\n      \"a\": 129414878000.548,\n      \"per\": 25375182.87187296,\n      \"t0\": -81150513.12607019,\n      \"rot\":[ 0.9266981849916925,-0.3757184565632415,0.3758064314685193,0.9264812483503286,0.021636493545680834,3.429333985438326 ],\n    }\n   },\n   {\n    \"start\": -57283200 ,\n    \"stop\": -55209600 ,\n    \"interp\": -55382400 ,\n    \"sat\":{\n      \"e\": 0.212088940212688,\n      \"a\": 128687767131.9587,\n      \"per\": 25161629.78593885,\n      \"t0\": -80757412.27544618,\n      \"rot\":[ 0.926290403785835,-0.3767228175090841,0.3768104136754644,0.9260750713921916,0.021561097234710003,3.502825811379388 ],\n    }\n   },\n   {\n    \"start\": -55209600 ,\n    \"stop\": -53136000 ,\n    \"interp\": -53308800 ,\n    \"sat\":{\n      \"e\": 0.19448565747138968,\n      \"a\": 125773913574.51349,\n      \"per\": 24311890.543110374,\n      \"t0\": -55547085.49834164,\n      \"rot\":[ 0.9272515442953948,-0.3743527429772499,0.3744390118588145,0.9270379101624066,0.021464783882600067,3.5254711928894196 ],\n    }\n   },\n   {\n    \"start\": -53136000 ,\n    \"stop\": -52790400 ,\n    \"interp\": -52963200 ,\n    \"planet\":\"Venus\",\n    \"sat\":{\n      \"e\": 1.7087568305636343,\n      \"a\": -8936333.507348064,\n      \"per\": 9312.617002171955,\n      \"t0\": -53086457.17241263,\n      \"rot\":[ -0.9991497426598133,-0.03924240705788052,0.041228530689669474,-0.9510171780887032,0.30663718050572963,1.132060851357646 ],\n    },\n    \"planetOrb\":{\n      \"e\": 0.01388876984587561,\n      \"a\": 106973165999.10709,\n      \"per\": 19069826.27031497,\n      \"t0\": -64115315.21990055,\n      \"rot\":[ 0.23669097482995075,-0.9698718612633533,0.9715849846688902,0.236273635271128,0.05935774595892893,6.158048644785687 ],\n    }\n   },\n   {\n    \"start\": -52790400 ,\n    \"stop\": -51753600 ,\n    \"interp\": -51926400 ,\n    \"sat\":{\n      \"e\": 0.35583702789386323,\n      \"a\": 168039071530.4394,\n      \"per\": 37544668.99107968,\n      \"t0\": -53034866.07697038,\n      \"rot\":[ 0.23420059422175124,-0.9704580902684082,0.9721882953760442,0.2337837870391703,0.05963418440976554,3.5131912380929387 ],\n    }\n   },\n   {\n    \"start\": -51753600 ,\n    \"stop\": -50544000 ,\n    \"interp\": -50716800 ,\n    \"sat\":{\n      \"e\": 0.3533830709082373,\n      \"a\": 166961092839.1953,\n      \"per\": 37183972.73882317,\n      \"t0\": -53095489.160668,\n      \"rot\":[ 0.2328963999616664,-0.9707663598867953,0.9725015510963957,0.2324808532866966,0.059710362310328384,3.4886892785433465 ],\n    }\n   },\n   {\n    \"start\": -50544000 ,\n    \"stop\": -48124800 ,\n    \"interp\": -48297600 ,\n    \"sat\":{\n      \"e\": 0.36068833223890445,\n      \"a\": 167535044559.46793,\n      \"per\": 37375874.956364654,\n      \"t0\": -53142589.53820568,\n      \"rot\":[ 0.23028094932775134,-0.9713850461226421,0.9731241875406805,0.22986939739852302,0.059759119044313753,3.4605691975732578 ],\n    }\n   },\n   {\n    \"start\": -48124800 ,\n    \"stop\": -45878400 ,\n    \"interp\": -46051200 ,\n    \"sat\":{\n      \"e\": 0.37005749137769295,\n      \"a\": 169202034542.3652,\n      \"per\": 37935100.69007211,\n      \"t0\": -53098477.160333194,\n      \"rot\":[ 0.22799873609992813,-0.9719232517255075,0.9736614279804019,0.22759171372249162,0.05972607973218285,3.4612656049153765 ],\n    }\n   },\n   {\n    \"start\": -45878400 ,\n    \"stop\": -43459200 ,\n    \"interp\": -43632000 ,\n    \"sat\":{\n      \"e\": 0.3743547179373909,\n      \"a\": 170494414289.65433,\n      \"per\": 38370556.92799371,\n      \"t0\": -53036313.97360082,\n      \"rot\":[ 0.22657641765072517,-0.972258599900348,0.9739933916431693,0.22617285957545383,0.05965779505879404,3.4733562399315896 ],\n    }\n   },\n   {\n    \"start\": -43459200 ,\n    \"stop\": -38793600 ,\n    \"interp\": -38966400 ,\n    \"sat\":{\n      \"e\": 0.37471465549773714,\n      \"a\": 171521324248.19992,\n      \"per\": 38717744.66666809,\n      \"t0\": -52984917.072757885,\n      \"rot\":[ 0.22565263154672063,-0.9724784372192598,0.9742078268398586,0.22525205858055633,0.0595583684196279,3.488077385641884 ],\n    }\n   },\n   {\n    \"start\": -38793600 ,\n    \"stop\": -33868800 ,\n    \"interp\": -34041600 ,\n    \"sat\":{\n      \"e\": 0.37150808815037595,\n      \"a\": 172260994054.5817,\n      \"per\": 38968464.50915964,\n      \"t0\": -52987031.48162809,\n      \"rot\":[ 0.22545722401207108,-0.9725305210123566,0.9742530678118344,0.22505860004826525,0.05943914740092675,3.4983993562430302 ],\n    }\n   },\n   {\n    \"start\": -33868800 ,\n    \"stop\": -29462400 ,\n    \"interp\": -29635200 ,\n    \"sat\":{\n      \"e\": 0.39746349632809314,\n      \"a\": 169067313176.8385,\n      \"per\": 37889802.90911339,\n      \"t0\": -52497000.73060826,\n      \"rot\":[ 0.22859058945677033,-0.9718349344173066,0.973522646070345,0.22819430180680308,0.05885763220700277,3.496944277827719 ],\n    }\n   },\n   {\n    \"start\": -29462400 ,\n    \"stop\": -25142400 ,\n    \"interp\": -25315200 ,\n    \"sat\":{\n      \"e\": 0.3948935210184656,\n      \"a\": 169593748886.36942,\n      \"per\": 38066910.45340989,\n      \"t0\": -52674381.072298646,\n      \"rot\":[ 0.22829982209312927,-0.9719026975869114,0.9735908746656603,0.22790395711866304,0.058863679403678516,3.4892948799462955 ],\n    }\n   },\n   {\n    \"start\": -25142400 ,\n    \"stop\": -20822400 ,\n    \"interp\": -20995200 ,\n    \"sat\":{\n      \"e\": 0.3949419604356786,\n      \"a\": 170526905625.891,\n      \"per\": 38381525.938915744,\n      \"t0\": -53036368.545553476,\n      \"rot\":[ 0.23001793715532756,-0.9715020622525411,0.9731863894377109,0.22961983719335496,0.05880878681249192,3.476980628772491 ],\n    }\n   },\n   {\n    \"start\": -20822400 ,\n    \"stop\": -18748800 ,\n    \"interp\": -18921600 ,\n    \"sat\":{\n      \"e\": 0.4008988544981718,\n      \"a\": 171965155394.8729,\n      \"per\": 38868121.76511014,\n      \"t0\": -53586784.18652018,\n      \"rot\":[ 0.2321352955571372,-0.9709999895080963,0.972683506880116,0.23173351656123042,0.05880984337203199,3.468244972939581 ],\n    }\n   },\n   {\n    \"start\": -18748800 ,\n    \"stop\": -16502400 ,\n    \"interp\": -16675200 ,\n    \"sat\":{\n      \"e\": 0.4082782474437211,\n      \"a\": 172955270517.3925,\n      \"per\": 39204288.03296439,\n      \"t0\": -53932117.409795836,\n      \"rot\":[ 0.23381891939635222,-0.9705939480738697,0.972280161749854,0.233413410084221,0.0588690746932021,3.4775071153008286 ],\n    }\n   },\n   {\n    \"start\": -16502400 ,\n    \"stop\": -16156800 ,\n    \"interp\": -16329600 ,\n    \"planet\":\"Venus\",\n    \"sat\":{\n      \"e\": 2.813489007013097,\n      \"a\": -3668987.341609785,\n      \"per\": 2449.9206009781624,\n      \"t0\": -16428540.947423102,\n      \"rot\":[ 0.9534933512374131,0.282857761580354,0.3014140493508013,-0.8947923814223754,0.3454534423945227,4.942679571595003 ],\n    },\n    \"planetOrb\":{\n      \"e\": 0.005144820312879257,\n      \"a\": 109748858005.43921,\n      \"per\": 19816843.388349384,\n      \"t0\": -35316274.011801235,\n      \"rot\":[ 0.23500092373437192,-0.9702962092674705,0.9719951470269756,0.23459016865594165,0.059099230546209004,3.097264497335862 ],\n    }\n   },\n   {\n    \"start\": -16156800 ,\n    \"stop\": -13910400 ,\n    \"interp\": -14083200 ,\n    \"sat\":{\n      \"e\": 0.5680155596293667,\n      \"a\": 251211966113.28952,\n      \"per\": 68626737.59012575,\n      \"t0\": -15963574.744625058,\n      \"rot\":[ -0.8156904243519298,-0.5783790426408738,0.578488661617986,-0.8155358575368992,0.019466589464534955,1.7970041255599518 ],\n    }\n   },\n   {\n    \"start\": -13910400 ,\n    \"stop\": -11577600 ,\n    \"interp\": -11750400 ,\n    \"sat\":{\n      \"e\": 0.5585447930012262,\n      \"a\": 245216666557.4204,\n      \"per\": 66184736.85375498,\n      \"t0\": -15996449.40625304,\n      \"rot\":[ -0.8184457544378968,-0.5744756982764405,0.5745838033242687,-0.818291767992549,0.019397281392618763,1.7798497697972 ],\n    }\n   },\n   {\n    \"start\": -11577600 ,\n    \"stop\": -8899200 ,\n    \"interp\": -9072000 ,\n    \"sat\":{\n      \"e\": 0.774643181479461,\n      \"a\": 571670523762.6597,\n      \"per\": 235587134.45651707,\n      \"t0\": -14548714.130589308,\n      \"rot\":[ -0.8228428184263821,-0.5682247219834855,0.5682690350213779,-0.8227786539853421,0.012488069220636623,2.2873546972547705 ],\n    }\n   },\n   {\n    \"start\": -8899200 ,\n    \"stop\": -6307200 ,\n    \"interp\": -6480000 ,\n    \"sat\":{\n      \"e\": 0.7782682676983945,\n      \"a\": 579017888407.795,\n      \"per\": 240143503.13000932,\n      \"t0\": -14543390.861172926,\n      \"rot\":[ -0.8221459651970964,-0.5692325685807997,0.5692767445716844,-0.8220821665033841,0.012457703801566484,2.2851557746166846 ],\n    }\n   },\n   {\n    \"start\": -6307200 ,\n    \"stop\": -950400 ,\n    \"interp\": -1123200 ,\n    \"sat\":{\n      \"e\": 0.7818290847617586,\n      \"a\": 587202973178.6771,\n      \"per\": 245253514.00424805,\n      \"t0\": -14520284.618354788,\n      \"rot\":[ -0.8211924719295586,-0.5706071690252696,0.570651315643994,-0.821128942993475,0.012438554392927285,2.28713549837224 ],\n    }\n   },\n   {\n    \"start\": -950400 ,\n    \"stop\": 9763200 ,\n    \"interp\": 9590400 ,\n    \"sat\":{\n      \"e\": 0.7845576236409145,\n      \"a\": 594179805982.035,\n      \"per\": 249637429.08887652,\n      \"t0\": -14480822.245663434,\n      \"rot\":[ -0.8203180143506261,-0.5718634618139321,0.5719076458064238,-0.8202546388646492,0.012430143330200136,2.2910623639357657 ],\n    }\n   },\n   {\n    \"start\": 9763200 ,\n    \"stop\": 20304000 ,\n    \"interp\": 20131200 ,\n    \"sat\":{\n      \"e\": 0.7862562554611617,\n      \"a\": 598162046279.7838,\n      \"per\": 252151264.19110087,\n      \"t0\": -14422609.101836685,\n      \"rot\":[ -0.8200254649234573,-0.5722828111945225,0.57232703664694,-0.8199620990594357,0.01243141654593717,2.2934434235184034 ],\n    }\n   },\n   {\n    \"start\": 20304000 ,\n    \"stop\": 25660800 ,\n    \"interp\": 25488000 ,\n    \"sat\":{\n      \"e\": 0.788653637492941,\n      \"a\": 601361613198.5538,\n      \"per\": 254177101.7068912,\n      \"t0\": -14292135.459734261,\n      \"rot\":[ -0.825714116761172,-0.5640453110190496,0.5640888204718452,-0.8256504275546465,0.012420088415669977,2.2839993132929206 ],\n    }\n   },\n   {\n    \"start\": 25660800 ,\n    \"stop\": 28252800 ,\n    \"interp\": 28080000 ,\n    \"sat\":{\n      \"e\": 0.7924707329068282,\n      \"a\": 605328554389.1243,\n      \"per\": 256696301.34186247,\n      \"t0\": -14043105.569773376,\n      \"rot\":[ -0.8361342251161175,-0.5484828147799294,0.5485248924064156,-0.8360700848298629,0.012386086697232478,2.2655067901722954 ],\n    }\n   },\n   {\n    \"start\": 28252800 ,\n    \"stop\": 29635200 ,\n    \"interp\": 29462400 ,\n    \"sat\":{\n      \"e\": 0.797987303056404,\n      \"a\": 612169923014.529,\n      \"per\": 261060311.61967438,\n      \"t0\": -13628726.288518265,\n      \"rot\":[ -0.8510450169829297,-0.5250527981764664,0.5250927337799723,-0.8509802912798728,0.012333003700862764,2.2397528210880404 ],\n    }\n   },\n   {\n    \"start\": 29635200 ,\n    \"stop\": 31017600 ,\n    \"interp\": 30844800 ,\n    \"sat\":{\n      \"e\": 0.8062120731194597,\n      \"a\": 630670510752.4026,\n      \"per\": 272983662.75073874,\n      \"t0\": -12851014.770911343,\n      \"rot\":[ -0.8709115878072715,-0.49140275231081965,0.49143972796571617,-0.8708460608983066,0.01226675341131905,2.213139074256937 ],\n    }\n   },\n   {\n    \"start\": 31017600 ,\n    \"stop\": 31881600 ,\n    \"interp\": 31708800 ,\n    \"planet\":\"Jupiter\",\n    \"sat\":{\n      \"e\": 9.403593534017853,\n      \"a\": -1165507520.71905,\n      \"per\": 702331.7574140694,\n      \"t0\": 31485939.69876293,\n      \"rot\":[ -0.2406333265293163,-0.9700393451414395,0.9706160941193153,-0.24049034000152278,0.034468322319474366,3.5837657683455726 ],\n    },\n    \"planetOrb\":{\n      \"e\": 0.04856346633640871,\n      \"a\": 776706289607.2986,\n      \"per\": 373628122.01010174,\n      \"t0\": -20952708.906114914,\n      \"rot\":[ -0.1821908029133503,-0.9830085540442758,0.9832631953519814,-0.18214361991644254,0.022757073614959267,4.774102971995667 ],\n    }\n   },\n   {\n    \"start\": 31881600 ,\n    \"stop\": 32572800 ,\n    \"interp\": 32400000 ,\n    \"sat\":{\n      \"e\": 0.780468551227308,\n      \"a\": 785480913134.9924,\n      \"per\": 379434070.0529163,\n      \"t0\": -12732846.311989143,\n      \"rot\":[ -0.7334841284110316,-0.6796487832028373,0.6797065788773191,-0.733421760013784,0.013040453565193972,2.6539275792118278 ],\n    }\n   },\n   {\n    \"start\": 32572800 ,\n    \"stop\": 33436800 ,\n    \"interp\": 33264000 ,\n    \"sat\":{\n      \"e\": 0.7628423765053114,\n      \"a\": 803954625578.0251,\n      \"per\": 392898324.9669407,\n      \"t0\": -13635571.890763484,\n      \"rot\":[ -0.677259474269258,-0.7356770893728243,0.7357442521097451,-0.6771976503409473,0.01351157076840716,2.7823612299114084 ],\n    }\n   },\n   {\n    \"start\": 33436800 ,\n    \"stop\": 35164800 ,\n    \"interp\": 34992000 ,\n    \"sat\":{\n      \"e\": 0.7474564833049099,\n      \"a\": 806643161751.1208,\n      \"per\": 394870831.7886024,\n      \"t0\": -14510644.136746459,\n      \"rot\":[ -0.6389506721328233,-0.7691735105786027,0.7692477095065109,-0.6388890411987658,0.013888976215332536,2.8615333677475316 ],\n    }\n   },\n   {\n    \"start\": 35164800 ,\n    \"stop\": 38620800 ,\n    \"interp\": 38448000 ,\n    \"sat\":{\n      \"e\": 0.7383186044331402,\n      \"a\": 803904228706.5327,\n      \"per\": 392861381.5833534,\n      \"t0\": -15080218.398886345,\n      \"rot\":[ -0.6219829576082357,-0.7829531907279166,0.7830307787340877,-0.6219213273136626,0.014077065084274861,2.894535108641298 ],\n    }\n   },\n   {\n    \"start\": 38620800 ,\n    \"stop\": 45532800 ,\n    \"interp\": 45360000 ,\n    \"sat\":{\n      \"e\": 0.7332240022919712,\n      \"a\": 801778145560.8024,\n      \"per\": 391303913.46940994,\n      \"t0\": -15432228.767570905,\n      \"rot\":[ -0.6127362282313288,-0.7902078885573971,0.7902874885842778,-0.6126745116776157,0.014192801071511793,2.9110585952070256 ],\n    }\n   },\n   {\n    \"start\": 45532800 ,\n    \"stop\": 59184000 ,\n    \"interp\": 59011200 ,\n    \"sat\":{\n      \"e\": 0.7306380727329358,\n      \"a\": 801132238151.6753,\n      \"per\": 390831160.7718687,\n      \"t0\": -15635492.390162244,\n      \"rot\":[ -0.6085876568117495,-0.7934060414826665,0.7934866501563742,-0.6085258316457675,0.014253615633678355,2.9186415336060625 ],\n    }\n   },\n   {\n    \"start\": 59184000 ,\n    \"stop\": 86486400 ,\n    \"interp\": 86313600 ,\n    \"sat\":{\n      \"e\": 0.7295293913665001,\n      \"a\": 801392706288.1871,\n      \"per\": 391021779.7481053,\n      \"t0\": -15729661.06936282,\n      \"rot\":[ -0.6042161523093892,-0.7967384505774786,0.7968204573732008,-0.6041539678735907,0.014346584053182704,2.925436228191464 ],\n    }\n   },\n   {\n    \"start\": 86486400 ,\n    \"stop\": 113788800 ,\n    \"interp\": 113616000 ,\n    \"sat\":{\n      \"e\": 0.7300247282661436,\n      \"a\": 801497965965.5104,\n      \"per\": 391098820.9618347,\n      \"t0\": -15644761.909500644,\n      \"rot\":[ -0.6072505007036466,-0.7944295962507218,0.794510433786222,-0.6071887159468697,0.014264635561652264,2.9216825093770655 ],\n    }\n   },\n   {\n    \"start\": 113788800 ,\n    \"stop\": 127440000 ,\n    \"interp\": 127267200 ,\n    \"sat\":{\n      \"e\": 0.7327932706121236,\n      \"a\": 800613048819.4832,\n      \"per\": 390451293.7280755,\n      \"t0\": -15227309.692860126,\n      \"rot\":[ -0.615967939619207,-0.7876943670221985,0.787771221460437,-0.6159078461952755,0.01396814793001598,2.9095744814663536 ],\n    }\n   },\n   {\n    \"start\": 127440000 ,\n    \"stop\": 134179200 ,\n    \"interp\": 134006400 ,\n    \"sat\":{\n      \"e\": 0.7375299260692372,\n      \"a\": 798823511982.8047,\n      \"per\": 389142915.64497095,\n      \"t0\": -14477011.91544509,\n      \"rot\":[ -0.6298914325372318,-0.7766129003547004,0.7766831935971024,-0.6298344245943288,0.013453646293507945,2.890255945341889 ],\n    }\n   },\n   {\n    \"start\": 134179200 ,\n    \"stop\": 137635200 ,\n    \"interp\": 137462400 ,\n    \"sat\":{\n      \"e\": 0.7454960518185282,\n      \"a\": 795707911944.8674,\n      \"per\": 386868513.251601,\n      \"t0\": -13179495.36225155,\n      \"rot\":[ -0.6549987609178979,-0.7555704561154032,0.7556299512301101,-0.6549471890785997,0.012548520375034126,2.8553509218645083 ],\n    }\n   },\n   {\n    \"start\": 137635200 ,\n    \"stop\": 139363200 ,\n    \"interp\": 139190400 ,\n    \"sat\":{\n      \"e\": 0.7569686102218152,\n      \"a\": 791224306011.7079,\n      \"per\": 383603269.47413737,\n      \"t0\": -11286781.665195793,\n      \"rot\":[ -0.6992403260145529,-0.7148422130173536,0.7148866808628217,-0.6991968314138076,0.011153538870869749,2.7924513911846605 ],\n    }\n   },\n   {\n    \"start\": 139363200 ,\n    \"stop\": 141091200 ,\n    \"interp\": 140918400 ,\n    \"sat\":{\n      \"e\": 0.7768259533813359,\n      \"a\": 783554181459.3455,\n      \"per\": 378038837.2769981,\n      \"t0\": -8038320.910786271,\n      \"rot\":[ -0.6494266611176754,-0.7603623136309442,0.7604242314849967,-0.6493737812861867,0.01276104180219294,2.8552926146401663 ],\n    }\n   }\n ]},\n  \"Galileo\": {\n \"color\": 16776960 ,\n \"horizonsID\": -77 ,\n \"orbits\":[\n   {\n    \"start\": -321840000 ,\n    \"stop\": -316915200 ,\n    \"interp\": -317088000 ,\n    \"sat\":{\n      \"e\": 0.19896862289530398,\n      \"a\": 124279128853.0385,\n      \"per\": 23879771.6985624,\n      \"t0\": -333396286.4866948,\n      \"rot\":[ 0.9036003068601922,-0.4271580374555389,0.4283765696699184,0.9010299840162496,0.07537226904378926,3.2322948172165082 ],\n    }\n   },\n   {\n    \"start\": -316915200 ,\n    \"stop\": -311990400 ,\n    \"interp\": -312163200 ,\n    \"sat\":{\n      \"e\": 0.1969108006921091,\n      \"a\": 124456238040.7628,\n      \"per\": 23930836.18676198,\n      \"t0\": -333429684.1038491,\n      \"rot\":[ 0.9047372858774577,-0.42476375572952085,0.42597000310243843,0.9021752815900154,0.07520314558932041,3.2322344457903425 ],\n    }\n   },\n   {\n    \"start\": -311990400 ,\n    \"stop\": -305510400 ,\n    \"interp\": -305683200 ,\n    \"sat\":{\n      \"e\": 0.2935913228064322,\n      \"a\": 147974847413.2945,\n      \"per\": 31025209.379688345,\n      \"t0\": -310744213.89940923,\n      \"rot\":[ 0.2346039683483428,-0.9704021486253069,0.972091033821015,0.23419637363219728,0.05892137575545818,1.8700557237659177 ],\n    }\n   },\n   {\n    \"start\": -305510400 ,\n    \"stop\": -298944000 ,\n    \"interp\": -299116800 ,\n    \"sat\":{\n      \"e\": 0.2951534949831798,\n      \"a\": 147757022449.889,\n      \"per\": 30956729.051081415,\n      \"t0\": -310753621.6586503,\n      \"rot\":[ 0.23272666194390623,-0.9708392912992507,0.9725421845968671,0.23231916427534474,0.059151300746255395,1.8593362966957308 ],\n    }\n   },\n   {\n    \"start\": -298944000 ,\n    \"stop\": -285897600 ,\n    \"interp\": -286070400 ,\n    \"sat\":{\n      \"e\": 0.2948402300062541,\n      \"a\": 147905785675.5601,\n      \"per\": 31003492.126145378,\n      \"t0\": -310741829.3075935,\n      \"rot\":[ 0.23204049417713749,-0.9710028442541944,0.9727061267731533,0.23163417359731997,0.05915307322659839,1.862407206946178 ],\n    }\n   },\n   {\n    \"start\": -285897600 ,\n    \"stop\": -282009600 ,\n    \"interp\": -282182400 ,\n    \"sat\":{\n      \"e\": 0.4287745207318504,\n      \"a\": 236962523058.1649,\n      \"per\": 62871289.50270234,\n      \"t0\": -345964457.206452,\n      \"rot\":[ -0.23246254027369725,0.9695428164403999,-0.9726053502677742,-0.23173056363693545,0.07929484828994417,3.8995859868978844 ],\n    }\n   },\n   {\n    \"start\": -282009600 ,\n    \"stop\": -278035200 ,\n    \"interp\": -278208000 ,\n    \"sat\":{\n      \"e\": 0.4263961340383794,\n      \"a\": 235824747854.24658,\n      \"per\": 62419018.88031544,\n      \"t0\": -283112949.20106226,\n      \"rot\":[ -0.23149190878209833,0.9697699686463687,-0.9728368291591456,-0.23076213234601828,0.07934132710473059,3.893060049510347 ],\n    }\n   },\n   {\n    \"start\": -278035200 ,\n    \"stop\": -270086400 ,\n    \"interp\": -270259200 ,\n    \"sat\":{\n      \"e\": 0.4292664093017604,\n      \"a\": 236221636474.381,\n      \"per\": 62576660.21483292,\n      \"t0\": -283115341.312207,\n      \"rot\":[ -0.2297663438623552,0.9701832787217348,-0.9732458205551802,-0.22904333121217516,0.07926889753222532,3.885729186159199 ],\n    }\n   },\n   {\n    \"start\": -270086400 ,\n    \"stop\": -262310400 ,\n    \"interp\": -262483200 ,\n    \"sat\":{\n      \"e\": 0.4313114161407954,\n      \"a\": 236819068486.9663,\n      \"per\": 62814205.737339094,\n      \"t0\": -283073444.9184045,\n      \"rot\":[ -0.22957947143996657,0.9702265678667731,-0.9732899189313252,-0.22885688867756915,0.0792775599415417,3.8889683458116733 ],\n    }\n   },\n   {\n    \"start\": -262310400 ,\n    \"stop\": -254361600 ,\n    \"interp\": -254534400 ,\n    \"sat\":{\n      \"e\": 0.4313541602187829,\n      \"a\": 237119213612.98932,\n      \"per\": 62933659.907109365,\n      \"t0\": -283041789.218866,\n      \"rot\":[ -0.2296648513827037,0.9702096416649933,-0.9732697755706589,-0.22894274409416313,0.07923680424474282,3.892718683084921 ],\n    }\n   },\n   {\n    \"start\": -254361600 ,\n    \"stop\": -238636800 ,\n    \"interp\": -238809600 ,\n    \"sat\":{\n      \"e\": 0.4300637626075738,\n      \"a\": 237371908364.0886,\n      \"per\": 63034288.034851894,\n      \"t0\": -283027616.776453,\n      \"rot\":[ -0.23041100153842933,0.9700398995625804,-0.9730934026957834,-0.22968798696123363,0.07915820805396658,3.8963003769943287 ],\n    }\n   },\n   {\n    \"start\": -238636800 ,\n    \"stop\": -230860800 ,\n    \"interp\": -231033600 ,\n    \"sat\":{\n      \"e\": 0.42813341629901375,\n      \"a\": 237778128082.03458,\n      \"per\": 63196165.16695698,\n      \"t0\": -283150169.35008216,\n      \"rot\":[ -0.2315338966772904,0.9697763575110093,-0.972826836949634,-0.23080787909190661,0.07912988918085774,3.894782502883213 ],\n    }\n   },\n   {\n    \"start\": -230860800 ,\n    \"stop\": -226886400 ,\n    \"interp\": -227059200 ,\n    \"sat\":{\n      \"e\": 0.42795080035970945,\n      \"a\": 238864857975.09958,\n      \"per\": 63629902.94854069,\n      \"t0\": -283607688.76124656,\n      \"rot\":[ -0.2272187368176212,0.9707926034447898,-0.9738437480617743,-0.22650683901358545,0.07909723747995843,3.8810271238305756 ],\n    }\n   },\n   {\n    \"start\": -226886400 ,\n    \"stop\": -222912000 ,\n    \"interp\": -223084800 ,\n    \"sat\":{\n      \"e\": 0.43143358972782686,\n      \"a\": 240159421053.4654,\n      \"per\": 64147880.54782811,\n      \"t0\": -284152845.92612994,\n      \"rot\":[ -0.22799697173596398,0.9706058488689148,-0.9736618411333732,-0.2272813670439551,0.07916733124265618,3.8786842377236987 ],\n    }\n   },\n   {\n    \"start\": -222912000 ,\n    \"stop\": -222566400 ,\n    \"interp\": -222739200 ,\n    \"planet\":\"Earth\",\n    \"sat\":{\n      \"e\": 2.317646126512765,\n      \"a\": -5058281.443798965,\n      \"per\": 3580.2674388807504,\n      \"t0\": -222857375.9306309,\n      \"rot\":[ -0.9180518583345149,0.37511425691794725,0.39646032009337806,0.8686224653457927,0.323704042226064,3.898226074253219 ],\n    },\n    \"planetOrb\":{\n      \"e\": 0.019766168431439315,\n      \"a\": 150740527590.7203,\n      \"per\": 31899205.786870796,\n      \"t0\": -252596581.4920109,\n      \"rot\":[ -0.6761590291634716,-0.736755701844958,0.7367557039349689,-0.6761590272453598,0.00007532298446797636,5.75277089588498 ],\n    }\n   },\n   {\n    \"start\": -222566400 ,\n    \"stop\": -216864000 ,\n    \"interp\": -217036800 ,\n    \"sat\":{\n      \"e\": 0.687238661270853,\n      \"a\": 472300746438.9231,\n      \"per\": 176913436.15880626,\n      \"t0\": -222423524.15051794,\n      \"rot\":[ -0.23119704914343903,0.9725633114135237,-0.9729069454307366,-0.23111538956526656,0.026575966557330036,3.2601717884125794 ],\n    }\n   },\n   {\n    \"start\": -216864000 ,\n    \"stop\": -210988800 ,\n    \"interp\": -211161600 ,\n    \"sat\":{\n      \"e\": 0.6827798856772446,\n      \"a\": 464471506838.2251,\n      \"per\": 172532726.59843102,\n      \"t0\": -222449575.9297601,\n      \"rot\":[ -0.2296773266417164,0.9729226255793909,-0.9732668316688462,-0.2295960988305268,0.026593157719742255,3.251807937637199 ],\n    }\n   },\n   {\n    \"start\": -210988800 ,\n    \"stop\": -199411200 ,\n    \"interp\": -199584000 ,\n    \"sat\":{\n      \"e\": 0.6845287735101695,\n      \"a\": 465137929657.939,\n      \"per\": 172904184.1941542,\n      \"t0\": -222432173.45302796,\n      \"rot\":[ -0.22921534375071223,0.9730315526395249,-0.9733757374155382,-0.2291342934135042,0.026590847105902347,3.2482076996063194 ],\n    }\n   },\n   {\n    \"start\": -199411200 ,\n    \"stop\": -187833600 ,\n    \"interp\": -188006400 ,\n    \"sat\":{\n      \"e\": 0.6854433200918012,\n      \"a\": 468041385680.0368,\n      \"per\": 174525646.13783136,\n      \"t0\": -222390386.10221258,\n      \"rot\":[ -0.227652610646565,0.9733997489206915,-0.9737424140222113,-0.22757249848978195,0.02652709430475019,3.2516045119422903 ],\n    }\n   },\n   {\n    \"start\": -187833600 ,\n    \"stop\": -176083200 ,\n    \"interp\": -176256000 ,\n    \"sat\":{\n      \"e\": 0.6869546664325505,\n      \"a\": 468439255643.1723,\n      \"per\": 174748233.08015308,\n      \"t0\": -222316653.8342642,\n      \"rot\":[ -0.23026061678631304,0.972783034118573,-0.9731289988265619,-0.23017875503196816,0.026662881745907308,3.254033997451709 ],\n    }\n   },\n   {\n    \"start\": -176083200 ,\n    \"stop\": -164505600 ,\n    \"interp\": -164678400 ,\n    \"sat\":{\n      \"e\": 0.6888276039837579,\n      \"a\": 468339821209.35114,\n      \"per\": 174692595.974746,\n      \"t0\": -222202487.8854828,\n      \"rot\":[ -0.23325824076257062,0.9720623121955388,-0.9724148256358244,-0.23317368151608608,0.026923882656440926,3.256407272191885 ],\n    }\n   },\n   {\n    \"start\": -164505600 ,\n    \"stop\": -152928000 ,\n    \"interp\": -153100800 ,\n    \"sat\":{\n      \"e\": 0.6917963182970182,\n      \"a\": 467736737111.995,\n      \"per\": 174355275.51377663,\n      \"t0\": -222003747.53644103,\n      \"rot\":[ -0.23623881605541722,0.9713297131496424,-0.9716950250920989,-0.23615000129507754,0.0274183376769644,3.258290442790707 ],\n    }\n   },\n   {\n    \"start\": -152928000 ,\n    \"stop\": -147225600 ,\n    \"interp\": -147398400 ,\n    \"sat\":{\n      \"e\": 0.6957309176326864,\n      \"a\": 466734950897.3713,\n      \"per\": 173795431.2465182,\n      \"t0\": -221728078.7774267,\n      \"rot\":[ -0.2377692852366135,0.9709376123397528,-0.9713216599036953,-0.2376752744484833,0.0281179099475436,3.2586450389959136 ],\n    }\n   },\n   {\n    \"start\": -147225600 ,\n    \"stop\": -141350400 ,\n    \"interp\": -141523200 ,\n    \"sat\":{\n      \"e\": 0.7004714364148846,\n      \"a\": 465463050951.6946,\n      \"per\": 173085500.26375875,\n      \"t0\": -221387451.31986666,\n      \"rot\":[ -0.23760500048231062,0.9709534332660069,-0.9713618603516412,-0.23750509505896614,0.02899586608441328,3.2574693015674785 ],\n    }\n   },\n   {\n    \"start\": -141350400 ,\n    \"stop\": -138412800 ,\n    \"interp\": -138585600 ,\n    \"sat\":{\n      \"e\": 0.7065233873861583,\n      \"a\": 463820917060.6768,\n      \"per\": 172170351.15454364,\n      \"t0\": -220948247.84036434,\n      \"rot\":[ -0.2357063367482374,0.9713828252642439,-0.9718243271377428,-0.23559925485456182,0.03013963990545639,3.254697208863454 ],\n    }\n   },\n   {\n    \"start\": -138412800 ,\n    \"stop\": -135475200 ,\n    \"interp\": -135648000 ,\n    \"sat\":{\n      \"e\": 0.7151993591012078,\n      \"a\": 461315820015.1194,\n      \"per\": 170777397.98228386,\n      \"t0\": -220650184.42603403,\n      \"rot\":[ -0.23233614672400987,0.9721535452039812,-0.9726355509261624,-0.23222100868275294,0.03147836834551011,3.247245005577065 ],\n    }\n   },\n   {\n    \"start\": -135475200 ,\n    \"stop\": -132537600 ,\n    \"interp\": -132710400 ,\n    \"sat\":{\n      \"e\": 0.7277050543015046,\n      \"a\": 457975968427.6781,\n      \"per\": 168926157.87298593,\n      \"t0\": -219719616.15842497,\n      \"rot\":[ -0.22467803613246146,0.9738680269802366,-0.9744330557199198,-0.22454775571263658,0.03404954375669803,3.239383167875893 ],\n    }\n   },\n   {\n    \"start\": -132537600 ,\n    \"stop\": -131155200 ,\n    \"interp\": -131328000 ,\n    \"sat\":{\n      \"e\": 0.7475758737643846,\n      \"a\": 452762296371.1138,\n      \"per\": 166049759.46104914,\n      \"t0\": -218221490.36517155,\n      \"rot\":[ -0.21128544229377116,0.9766993056634844,-0.9774244021277172,-0.21112870144832308,0.038511527380933615,3.226910738637177 ],\n    }\n   },\n   {\n    \"start\": -131155200 ,\n    \"stop\": -130464000 ,\n    \"interp\": -130636800 ,\n    \"sat\":{\n      \"e\": 0.7652358588930066,\n      \"a\": 448217855922.8249,\n      \"per\": 163556045.13985565,\n      \"t0\": -216887631.1079113,\n      \"rot\":[ -0.19947553455889808,0.9789997255913298,-0.9799028069724272,-0.1992916973048737,0.04292268255181299,3.216667571269664 ],\n    }\n   },\n   {\n    \"start\": -130464000 ,\n    \"stop\": -129600000 ,\n    \"interp\": -129772800 ,\n    \"sat\":{\n      \"e\": 0.7845424424079777,\n      \"a\": 443339620140.6718,\n      \"per\": 160893199.14492285,\n      \"t0\": -215430269.03030086,\n      \"rot\":[ -0.18717886059117825,0.9811779926079522,-0.9823258492719146,-0.18696014039498093,0.04832859117870254,3.206636134779436 ],\n    }\n   }\n ]},\n \"Parker\": {\n \"color\": 16776960 ,\n \"horizonsID\": -96 ,\n \"orbits\":[\n   {\n    \"start\": 587520000 ,\n    \"stop\": 592012800 ,\n    \"interp\": 591840000 ,\n    \"sat\":{\n      \"e\": 0.6586338429604024,\n      \"a\": 90937943981.01115,\n      \"per\": 14946880.638486454,\n      \"t0\": 579870487.522996,\n      \"rot\":[ -0.7609501991793417,-0.6457108817644256,0.648810291509714,-0.7573150896660081,0.09762843917206673,6.280321338422034 ],\n    }\n   },\n   {\n    \"start\": 592012800 ,\n    \"stop\": 594000000 ,\n    \"interp\": 593827200 ,\n    \"sat\":{\n      \"e\": 0.6905466836480197,\n      \"a\": 82855952845.20934,\n      \"per\": 12999254.425681015,\n      \"t0\": 581815013.4192257,\n      \"rot\":[ -0.005466214109873138,-0.9982563471107943,0.9999850601400528,-0.005456764453144134,0.05877490259214877,0.9871792378389533 ],\n    }\n   },\n   {\n    \"start\": 594000000 ,\n    \"stop\": 594518400 ,\n    \"interp\": 594345600 ,\n    \"sat\":{\n      \"e\": 0.7013105260214434,\n      \"a\": 87932868835.96011,\n      \"per\": 14212148.39344003,\n      \"t0\": 580589999.7582237,\n      \"rot\":[ -0.008285964432909892,-0.9982427946854425,0.9999656708074616,-0.008271688252550789,0.058676247596877416,0.9461660017603097 ],\n    }\n   },\n   {\n    \"start\": 594518400 ,\n    \"stop\": 594864000 ,\n    \"interp\": 594691200 ,\n    \"sat\":{\n      \"e\": 0.7570519550026227,\n      \"a\": 105813203519.7308,\n      \"per\": 18760424.637976665,\n      \"t0\": 576034926.7106806,\n      \"rot\":[ -0.009170963234578,-0.9982513395721894,0.9999579458323985,-0.009155311353082873,0.0583990009876665,0.9666486415754081 ],\n    }\n   },\n   {\n    \"start\": 594864000 ,\n    \"stop\": 595209600 ,\n    \"interp\": 595036800 ,\n    \"sat\":{\n      \"e\": 0.6942588173116377,\n      \"a\": 83198098200.62222,\n      \"per\": 13079856.170024518,\n      \"t0\": 594814027.8374175,\n      \"rot\":[ -0.004401431146782541,-0.9982960860947224,0.9999903136550174,-0.004393974048596895,0.05818605915525601,1.0461225950793211 ],\n    }\n   },\n   {\n    \"start\": 595209600 ,\n    \"stop\": 595900800 ,\n    \"interp\": 595728000 ,\n    \"sat\":{\n      \"e\": 0.6787135756411379,\n      \"a\": 76265093911.7189,\n      \"per\": 11479463.300254194,\n      \"t0\": 594800197.9486885,\n      \"rot\":[ 0.00024026330233279785,-0.9982967882238146,0.9999999711367724,0.00023985408996984262,0.05833922430090987,0.9720567000964696 ],\n    }\n   },\n   {\n    \"start\": 595900800 ,\n    \"stop\": 596592000 ,\n    \"interp\": 596419200 ,\n    \"sat\":{\n      \"e\": 0.6969106933754063,\n      \"a\": 79363556133.36542,\n      \"per\": 12186094.710541518,\n      \"t0\": 594817244.3094531,\n      \"rot\":[ 0.0008966402946548244,-0.9982872095291385,0.9999995980180102,0.0008951048975183969,0.05849654757118733,0.9729890667281823 ],\n    }\n   },\n   {\n    \"start\": 596592000 ,\n    \"stop\": 598147200 ,\n    \"interp\": 597974400 ,\n    \"sat\":{\n      \"e\": 0.7033274937119515,\n      \"a\": 80973430892.57365,\n      \"per\": 12558757.694580548,\n      \"t0\": 594835608.4227209,\n      \"rot\":[ 0.0005029173210600848,-0.9982808747680604,0.9999998735370761,0.0005020528066949369,0.05860924001636176,0.9840903139307392 ],\n    }\n   },\n   {\n    \"start\": 598147200 ,\n    \"stop\": 601084800 ,\n    \"interp\": 600912000 ,\n    \"sat\":{\n      \"e\": 0.7037109207733061,\n      \"a\": 81847852451.1254,\n      \"per\": 12762736.503914835,\n      \"t0\": 594859753.593613,\n      \"rot\":[ -0.00037262736729545853,-0.9982767444913195,0.9999999305744202,-0.00037198526095737395,0.058680516653982794,0.9960194557233938 ],\n    }\n   },\n   {\n    \"start\": 601084800 ,\n    \"stop\": 604022400 ,\n    \"interp\": 603849600 ,\n    \"sat\":{\n      \"e\": 0.699739344315932,\n      \"a\": 82116186162.94029,\n      \"per\": 12825550.818369979,\n      \"t0\": 594884161.7920535,\n      \"rot\":[ -0.0022476786720562556,-0.9982697131354997,0.9999974739671031,-0.002243795211074896,0.05875836297428421,1.0009381301277935 ],\n    }\n   },\n   {\n    \"start\": 604022400 ,\n    \"stop\": 606960000 ,\n    \"interp\": 606787200 ,\n    \"sat\":{\n      \"e\": 0.6918801978028405,\n      \"a\": 82342833676.31973,\n      \"per\": 12878686.823987056,\n      \"t0\": 594870862.7537162,\n      \"rot\":[ -0.005424205231922112,-0.998255394842906,0.9999852888905926,-0.005414821793537191,0.05879495192597712,0.9939759859584838 ],\n    }\n   },\n   {\n    \"start\": 606960000 ,\n    \"stop\": 607478400 ,\n    \"interp\": 607305600 ,\n    \"sat\":{\n      \"e\": 0.699261995387422,\n      \"a\": 87663436202.39749,\n      \"per\": 14146877.888693517,\n      \"t0\": 593596677.0746294,\n      \"rot\":[ -0.010656279134577333,-0.9982227483851632,0.9999432202455327,-0.010637944265140665,0.05863598509603943,0.9417040552834052 ],\n    }\n   },\n   {\n    \"start\": 607478400 ,\n    \"stop\": 607824000 ,\n    \"interp\": 607651200 ,\n    \"sat\":{\n      \"e\": 0.7633543768496674,\n      \"a\": 109265133205.7808,\n      \"per\": 19685899.751838103,\n      \"t0\": 588050293.0085118,\n      \"rot\":[ -0.011713713597639345,-0.9982355322544881,0.9999313921033545,-0.011693847418091196,0.05821577172176994,0.959703887995562 ],\n    }\n   },\n   {\n    \"start\": 607824000 ,\n    \"stop\": 608169600 ,\n    \"interp\": 607996800 ,\n    \"sat\":{\n      \"e\": 0.6999231990781182,\n      \"a\": 85417859360.35373,\n      \"per\": 13606796.670474345,\n      \"t0\": 607757096.8603505,\n      \"rot\":[ -0.004477166755050861,-0.9983106691327913,0.9999899774386979,-0.004469648136376359,0.05792952736882615,1.0505097604760427 ],\n    }\n   },\n   {\n    \"start\": 608169600 ,\n    \"stop\": 608860800 ,\n    \"interp\": 608688000 ,\n    \"sat\":{\n      \"e\": 0.6778566729998077,\n      \"a\": 76673063263.81769,\n      \"per\": 11571698.027445618,\n      \"t0\": 607742142.3567727,\n      \"rot\":[ 0.0019081891163173208,-0.9983056040199693,0.9999981794054909,0.001904959356508039,0.0581574768381004,0.9783465767841659 ],\n    }\n   },\n   {\n    \"start\": 608860800 ,\n    \"stop\": 609552000 ,\n    \"interp\": 609379200 ,\n    \"sat\":{\n      \"e\": 0.695289623994498,\n      \"a\": 79306048007.63715,\n      \"per\": 12172851.746146891,\n      \"t0\": 607758825.9415833,\n      \"rot\":[ 0.0027872759668629804,-0.9982905615819033,0.9999961155387977,0.0027825220988425244,0.058379895745517656,0.9750618011517487 ],\n    }\n   },\n   {\n    \"start\": 609552000 ,\n    \"stop\": 611107200 ,\n    \"interp\": 610934400 ,\n    \"sat\":{\n      \"e\": 0.7024581320075037,\n      \"a\": 80852471016.21309,\n      \"per\": 12530627.387486303,\n      \"t0\": 607779030.5423338,\n      \"rot\":[ 0.002209840497787532,-0.9982826489773726,0.9999975582995062,0.0022060508124641712,0.05853961129468369,0.9844376389930612 ],\n    }\n   },\n   {\n    \"start\": 611107200 ,\n    \"stop\": 614044800 ,\n    \"interp\": 613872000 ,\n    \"sat\":{\n      \"e\": 0.7037896363221277,\n      \"a\": 81733218138.90582,\n      \"per\": 12735933.080007568,\n      \"t0\": 607808668.7226954,\n      \"rot\":[ 0.00043413352795156296,-0.9982756778474747,0.9999999057640355,0.00043338498273261396,0.05869823843712383,0.9954591955004932 ],\n    }\n   },\n   {\n    \"start\": 614044800 ,\n    \"stop\": 616982400 ,\n    \"interp\": 616809600 ,\n    \"sat\":{\n      \"e\": 0.700285838494475,\n      \"a\": 81983868831.03731,\n      \"per\": 12794563.769458598,\n      \"t0\": 607844844.9834886,\n      \"rot\":[ -0.0021660180196581033,-0.9982670932700812,0.9999976541802178,-0.002162269584749479,0.05880591028413528,1.0007398685712414 ],\n    }\n   },\n   {\n    \"start\": 616982400 ,\n    \"stop\": 619920000 ,\n    \"interp\": 619747200 ,\n    \"sat\":{\n      \"e\": 0.6919649882258285,\n      \"a\": 82076835721.91016,\n      \"per\": 12816332.83156332,\n      \"t0\": 607869659.8848598,\n      \"rot\":[ -0.0064993679660764,-0.998245434986021,0.9999788788849701,-0.006488101438366953,0.05885538267053601,0.9946113399030048 ],\n    }\n   },\n   {\n    \"start\": 619920000 ,\n    \"stop\": 620265600 ,\n    \"interp\": 620092800 ,\n    \"sat\":{\n      \"e\": 0.6968540206683326,\n      \"a\": 87165745496.96869,\n      \"per\": 14026575.16027711,\n      \"t0\": 606657843.1622016,\n      \"rot\":[ -0.013571302168641268,-0.9981875775394083,0.999907905638038,-0.013547952925851944,0.05863457186273774,0.9376480525749549 ],\n    }\n   },\n   {\n    \"start\": 620265600 ,\n    \"stop\": 620611200 ,\n    \"interp\": 620438400 ,\n    \"sat\":{\n      \"e\": 0.7371822821457837,\n      \"a\": 100264105967.0237,\n      \"per\": 17304182.96178263,\n      \"t0\": 603367224.8089795,\n      \"rot\":[ -0.015478343581564183,-0.9981777461109579,0.9998802032643566,-0.01545198920764302,0.05833029400212855,0.9186856187763373 ],\n    }\n   },\n   {\n    \"start\": 620611200 ,\n    \"stop\": 620956800 ,\n    \"interp\": 620784000 ,\n    \"sat\":{\n      \"e\": 0.7595535553813747,\n      \"a\": 107175841512.8345,\n      \"per\": 19123977.457693625,\n      \"t0\": 620695219.1021446,\n      \"rot\":[ -0.010524414051585522,-0.9982734007293965,0.9999446168207872,-0.010506824507305172,0.057791210706632,1.0272461303858405 ],\n    }\n   },\n   {\n    \"start\": 620956800 ,\n    \"stop\": 621302400 ,\n    \"interp\": 621129600 ,\n    \"sat\":{\n      \"e\": 0.6762986047330076,\n      \"a\": 79128874413.90315,\n      \"per\": 12132082.417437876,\n      \"t0\": 620689120.4997455,\n      \"rot\":[ -0.0004007899952503139,-0.9983286453992105,0.9999999196836866,-0.00040012016518397843,0.05779061930132601,1.0259110299736225 ],\n    }\n   },\n   {\n    \"start\": 621302400 ,\n    \"stop\": 622339200 ,\n    \"interp\": 622166400 ,\n    \"sat\":{\n      \"e\": 0.6873093255804189,\n      \"a\": 78382385909.51495,\n      \"per\": 11960809.911493089,\n      \"t0\": 620690651.4666358,\n      \"rot\":[ 0.004209495305039814,-0.9982968451894924,0.9999911400353889,0.004202363115649714,0.05818718956051188,0.9768779992248111 ],\n    }\n   },\n   {\n    \"start\": 622339200 ,\n    \"stop\": 623548800 ,\n    \"interp\": 623376000 ,\n    \"sat\":{\n      \"e\": 0.6998966401616619,\n      \"a\": 80451642207.73387,\n      \"per\": 12437561.468953721,\n      \"t0\": 620714401.0236776,\n      \"rot\":[ 0.003891979369945218,-0.9982823821226877,0.9999924262196109,0.0038853238631909497,0.05845673444463239,0.9822221498343342 ],\n    }\n   },\n   {\n    \"start\": 623548800 ,\n    \"stop\": 625968000 ,\n    \"interp\": 625795200 ,\n    \"sat\":{\n      \"e\": 0.7037633002009025,\n      \"a\": 81492488618.02258,\n      \"per\": 12679707.658218043,\n      \"t0\": 620745559.098621,\n      \"rot\":[ 0.0019813035842471843,-0.9982756176482174,0.9999980372161272,0.001977890941485427,0.058667530683450826,0.9923948143870696 ],\n    }\n   },\n   {\n    \"start\": 625968000 ,\n    \"stop\": 630720000 ,\n    \"interp\": 630547200 ,\n    \"sat\":{\n      \"e\": 0.7011488815990801,\n      \"a\": 81856919516.57318,\n      \"per\": 12764857.337299878,\n      \"t0\": 620800268.1368771,\n      \"rot\":[ -0.0018393923577738047,-0.9982653873142256,0.9999983083164462,-0.0018362048307334075,0.05884594159497015,1.0000735136423284 ],\n    }\n   },\n   {\n    \"start\": 630720000 ,\n    \"stop\": 633052800 ,\n    \"interp\": 632880000 ,\n    \"sat\":{\n      \"e\": 0.733200800813541,\n      \"a\": 74483236596.91281,\n      \"per\": 11079513.225189079,\n      \"t0\": 622534245.2382814,\n      \"rot\":[ 0.21946325447117257,-0.9738934180164238,0.9756207664543234,0.21907469210880623,0.05948016158114536,1.3484977074565652 ],\n    }\n   },\n   {\n    \"start\": 633052800 ,\n    \"stop\": 633225600 ,\n    \"interp\": 633052800 ,\n    \"sat\":{\n      \"e\": 0.7307699282974793,\n      \"a\": 77416216288.2189,\n      \"per\": 11740342.911866106,\n      \"t0\": 621878795.6460907,\n      \"rot\":[ 0.2092072861871628,-0.9761714358772868,0.9778713163838085,0.208843611149708,0.058937881360171085,1.2978055446598264 ],\n    }\n   },\n   {\n    \"start\": 633225600 ,\n    \"stop\": 633571200 ,\n    \"interp\": 633398400 ,\n    \"sat\":{\n      \"e\": 0.7711722065122764,\n      \"a\": 92135617255.88937,\n      \"per\": 15243131.437420757,\n      \"t0\": 618361968.3747233,\n      \"rot\":[ 0.2064735843444528,-0.9767931094964089,0.978452175105127,0.20612348729156632,0.05820935686897994,1.2534981439470494 ],\n    }\n   },\n   {\n    \"start\": 633571200 ,\n    \"stop\": 633744000 ,\n    \"interp\": 633571200 ,\n    \"sat\":{\n      \"e\": 0.832115416065025,\n      \"a\": 123181341687.51889,\n      \"per\": 23564067.87539874,\n      \"t0\": 610041119.7432369,\n      \"rot\":[ 0.21149900055162088,-0.9757622056909677,0.9773782137768703,0.21114930573518848,0.05748120242866909,1.288893180999238 ],\n    }\n   },\n   {\n    \"start\": 633744000 ,\n    \"stop\": 634089600 ,\n    \"interp\": 633916800 ,\n    \"sat\":{\n      \"e\": 0.7205285649072954,\n      \"a\": 72768649189.05197,\n      \"per\": 10699151.559885293,\n      \"t0\": 633620537.3903235,\n      \"rot\":[ 0.24443396918167323,-0.968067866251113,0.969665939749403,0.24403112585984632,0.05738829099731997,1.422329788074701 ],\n    }\n   },\n   {\n    \"start\": 634089600 ,\n    \"stop\": 635299200 ,\n    \"interp\": 635126400 ,\n    \"sat\":{\n      \"e\": 0.731289046326666,\n      \"a\": 70798774480.23167,\n      \"per\": 10267660.022975644,\n      \"t0\": 633624044.7022183,\n      \"rot\":[ 0.24900120590317526,-0.9668337728260553,0.9685031747282837,0.24857200432940804,0.058689133462645156,1.3485255344592035 ],\n    }\n   },\n   {\n    \"start\": 635299200 ,\n    \"stop\": 636508800 ,\n    \"interp\": 636336000 ,\n    \"sat\":{\n      \"e\": 0.7442835760768616,\n      \"a\": 73374247273.91219,\n      \"per\": 10832990.401379345,\n      \"t0\": 633650477.6964914,\n      \"rot\":[ 0.2430821107703181,-0.9683025875157376,0.9700057151498885,0.24265530930538373,0.05923259133480325,1.3540011911663503 ],\n    }\n   },\n   {\n    \"start\": 636508800 ,\n    \"stop\": 639100800 ,\n    \"interp\": 638928000 ,\n    \"sat\":{\n      \"e\": 0.745987044120938,\n      \"a\": 74190548087.1921,\n      \"per\": 11014270.52408823,\n      \"t0\": 633679689.8213844,\n      \"rot\":[ 0.2366618215446045,-0.9698713621037137,0.9715920863321138,0.23624268502013318,0.05948894641498431,1.359054510576636 ],\n    }\n   },\n   {\n    \"start\": 639100800 ,\n    \"stop\": 641692800 ,\n    \"interp\": 641520000 ,\n    \"sat\":{\n      \"e\": 0.7431137122605432,\n      \"a\": 74396918271.33719,\n      \"per\": 11060258.800877737,\n      \"t0\": 633725146.9393884,\n      \"rot\":[ 0.22931077308194678,-0.9716227465608251,0.9733532603061233,0.22890308405377374,0.059603829375885146,1.359940251787852 ],\n    }\n   },\n   {\n    \"start\": 641692800 ,\n    \"stop\": 642902400 ,\n    \"interp\": 642729600 ,\n    \"sat\":{\n      \"e\": 0.7379613505645015,\n      \"a\": 74309934097.91846,\n      \"per\": 11040867.146752734,\n      \"t0\": 633781097.9031703,\n      \"rot\":[ 0.2226361056518037,-0.9731696538437704,0.9749016178364865,0.2222405809020108,0.05958144877336253,1.3555970615779396 ],\n    }\n   },\n   {\n    \"start\": 642902400 ,\n    \"stop\": 644284800 ,\n    \"interp\": 644112000 ,\n    \"sat\":{\n      \"e\": 0.7297200270226035,\n      \"a\": 74282771930.27818,\n      \"per\": 11034814.124066124,\n      \"t0\": 633808085.2789422,\n      \"rot\":[ 0.21450070387451667,-0.9750004123055579,0.9767238340684316,0.21412221901696055,0.05937904788092213,1.3390347925980228 ],\n    }\n   },\n   {\n    \"start\": 644284800 ,\n    \"stop\": 644457600 ,\n    \"interp\": 644284800 ,\n    \"sat\":{\n      \"e\": 0.7282471596487228,\n      \"a\": 76560114339.72293,\n      \"per\": 11546137.628766133,\n      \"t0\": 633298711.398087,\n      \"rot\":[ 0.20719018210242646,-0.9766016875454194,0.9783006840641395,0.2068303587844639,0.058909647499615296,1.2983368115448197 ],\n    }\n   },\n   {\n    \"start\": 644457600 ,\n    \"stop\": 644803200 ,\n    \"interp\": 644630400 ,\n    \"sat\":{\n      \"e\": 0.7679081794013441,\n      \"a\": 91102293384.09149,\n      \"per\": 14987418.510199154,\n      \"t0\": 629843384.2392579,\n      \"rot\":[ 0.20431586166020166,-0.9772509712869445,0.978905015143987,0.20397063164232737,0.0581078354970615,1.2479700938527265 ],\n    }\n   },\n   {\n    \"start\": 644803200 ,\n    \"stop\": 644976000 ,\n    \"interp\": 644803200 ,\n    \"sat\":{\n      \"e\": 0.8348695823706554,\n      \"a\": 125851226041.1461,\n      \"per\": 24334310.546471383,\n      \"t0\": 620495922.3036008,\n      \"rot\":[ 0.21012473284534852,-0.9760673753591131,0.9776745862743241,0.20977930629041291,0.05731597867859526,1.280317792725038 ],\n    }\n   },\n   {\n    \"start\": 644976000 ,\n    \"stop\": 645321600 ,\n    \"interp\": 645148800 ,\n    \"sat\":{\n      \"e\": 0.727686101073071,\n      \"a\": 75376280125.60468,\n      \"per\": 11279372.027324656,\n      \"t0\": 644848024.184516,\n      \"rot\":[ 0.24574992610400442,-0.9677428544943902,0.9693332625159813,0.24534671838495148,0.05726041698053325,1.4315361670977773 ],\n    }\n   },\n   {\n    \"start\": 645321600 ,\n    \"stop\": 646531200 ,\n    \"interp\": 646358400 ,\n    \"sat\":{\n      \"e\": 0.729663416223299,\n      \"a\": 70978249781.5652,\n      \"per\": 10306727.622002948,\n      \"t0\": 644848929.9975872,\n      \"rot\":[ 0.2504421721972773,-0.9664650634530509,0.9681315604736318,0.25001107259177496,0.058649336792503504,1.3523372184219558 ],\n    }\n   },\n   {\n    \"start\": 646531200 ,\n    \"stop\": 647827200 ,\n    \"interp\": 647654400 ,\n    \"sat\":{\n      \"e\": 0.7432541134948644,\n      \"a\": 73336909494.83008,\n      \"per\": 10824722.61622862,\n      \"t0\": 644876334.6748282,\n      \"rot\":[ 0.24407882384257776,-0.9680527280149551,0.9697553958352714,0.24365027746813922,0.059232238455946815,1.3539957906113513 ],\n    }\n   },\n   {\n    \"start\": 647827200 ,\n    \"stop\": 651024000 ,\n    \"interp\": 650851200 ,\n    \"sat\":{\n      \"e\": 0.7952284982730508,\n      \"a\": 67356019580.90066,\n      \"per\": 9527906.610079719,\n      \"t0\": 644894131.784099,\n      \"rot\":[ 0.23914271109045857,-0.9692700841964368,0.9709844302213633,0.23872048665164383,0.05939724854431018,1.2404321237012208 ],\n    }\n   },\n   {\n    \"start\": 651024000 ,\n    \"stop\": 652579200 ,\n    \"interp\": 652406400 ,\n    \"sat\":{\n      \"e\": 0.7919892119022635,\n      \"a\": 67252323329.68004,\n      \"per\": 9505912.410298679,\n      \"t0\": 644971171.7776138,\n      \"rot\":[ 0.2296729129599024,-0.9715420175931024,0.9732678732253074,0.22926564349041587,0.05952623594726356,1.237579861004803 ],\n    }\n   },\n   {\n    \"start\": 652579200 ,\n    \"stop\": 654134400 ,\n    \"interp\": 653961600 ,\n    \"sat\":{\n      \"e\": 0.7841835315396456,\n      \"a\": 66643641574.48873,\n      \"per\": 9377151.871279288,\n      \"t0\": 645128425.0974404,\n      \"rot\":[ 0.2183999990506762,-0.9741327539924555,0.9758593343380308,0.21801358562758752,0.05945968450031329,1.2271696342226004 ],\n    }\n   },\n   {\n    \"start\": 654134400 ,\n    \"stop\": 654480000 ,\n    \"interp\": 654307200 ,\n    \"sat\":{\n      \"e\": 0.7809988688188833,\n      \"a\": 71602214272.12743,\n      \"per\": 10442934.384857103,\n      \"t0\": 644073268.0348977,\n      \"rot\":[ 0.19758496053420246,-0.978614440524361,0.9802857661777497,0.19724809058805176,0.05836923467512427,1.1357407260287273 ],\n    }\n   },\n   {\n    \"start\": 654480000 ,\n    \"stop\": 654652800 ,\n    \"interp\": 654480000 ,\n    \"sat\":{\n      \"e\": 0.8684676042859971,\n      \"a\": 120289629905.8533,\n      \"per\": 22739198.505264338,\n      \"t0\": 631766379.9458942,\n      \"rot\":[ 0.19650725040005335,-0.9789020316893395,0.9805023715117729,0.1961865185106167,0.057110964876867155,1.0881206587834211 ],\n    }\n   },\n   {\n    \"start\": 654652800 ,\n    \"stop\": 654998400 ,\n    \"interp\": 654825600 ,\n    \"sat\":{\n      \"e\": 0.7666102448060196,\n      \"a\": 65666483130.598175,\n      \"per\": 9171671.816556295,\n      \"t0\": 654518363.6017649,\n      \"rot\":[ 0.2577212076548819,-0.9646673593128615,0.9662193224754456,0.2573072500665857,0.05665566996799328,1.3098061826488907 ],\n    }\n   },\n   {\n    \"start\": 654998400 ,\n    \"stop\": 656035200 ,\n    \"interp\": 655862400 ,\n    \"sat\":{\n      \"e\": 0.7832953874588333,\n      \"a\": 64942384761.0891,\n      \"per\": 9020387.99835495,\n      \"t0\": 654529464.4704237,\n      \"rot\":[ 0.2582065874043971,-0.9644419540377309,0.9660897257610058,0.25776618782023514,0.05838073062669511,1.2403354409392569 ],\n    }\n   },\n   {\n    \"start\": 656035200 ,\n    \"stop\": 657072000 ,\n    \"interp\": 656899200 ,\n    \"sat\":{\n      \"e\": 0.7927082169816582,\n      \"a\": 66626565323.59182,\n      \"per\": 9373548.008935526,\n      \"t0\": 654551210.8467053,\n      \"rot\":[ 0.25110375706860344,-0.9662759449933949,0.9679601764463411,0.2506668415261061,0.05896552116659154,1.2392357818706856 ],\n    }\n   },\n   {\n    \"start\": 657072000 ,\n    \"stop\": 659318400 ,\n    \"interp\": 659145600 ,\n    \"sat\":{\n      \"e\": 0.7952653559824546,\n      \"a\": 67212521001.036194,\n      \"per\": 9497474.750954084,\n      \"t0\": 654579619.3207942,\n      \"rot\":[ 0.24378513108268998,-0.9681231398417622,0.9698292684091337,0.2433562630437589,0.059290094790819495,1.2396505352796652 ],\n    }\n   },\n   {\n    \"start\": 659318400 ,\n    \"stop\": 661564800 ,\n    \"interp\": 661392000 ,\n    \"sat\":{\n      \"e\": 0.7944219889524814,\n      \"a\": 67311553704.31137,\n      \"per\": 9518473.226272365,\n      \"t0\": 654637386.3945811,\n      \"rot\":[ 0.23464274204693833,-0.9703594038992315,0.9720816753774828,0.2342270172036023,0.05950068635092641,1.2384831094566333 ],\n    }\n   },\n   {\n    \"start\": 661564800 ,\n    \"stop\": 662601600 ,\n    \"interp\": 662428800 ,\n    \"sat\":{\n      \"e\": 0.7905897891135928,\n      \"a\": 66988588690.4926,\n      \"per\": 9450050.127055543,\n      \"t0\": 654741022.0125312,\n      \"rot\":[ 0.2255337280261089,-0.9725062899143229,0.9742353604353751,0.22513345132042797,0.059552037527118816,1.234633121843305 ],\n    }\n   },\n   {\n    \"start\": 662601600 ,\n    \"stop\": 663811200 ,\n    \"interp\": 663638400 ,\n    \"sat\":{\n      \"e\": 0.783431126968661,\n      \"a\": 66270515806.97897,\n      \"per\": 9298510.722045762,\n      \"t0\": 654912520.9764904,\n      \"rot\":[ 0.21591456945686804,-0.974685469127228,0.9764122585753701,0.21553272357469708,0.05944645776418302,1.2253460230564448 ],\n    }\n   },\n   {\n    \"start\": 663811200 ,\n    \"stop\": 664156800 ,\n    \"interp\": 663984000 ,\n    \"sat\":{\n      \"e\": 0.772971878937888,\n      \"a\": 68337542392.130646,\n      \"per\": 9736926.78319224,\n      \"t0\": 654486099.073059,\n      \"rot\":[ 0.19692739526506614,-0.9787405731079784,0.9804180745957902,0.19659045125402855,0.058472942700052204,1.1494876862550487 ],\n    }\n   },\n   {\n    \"start\": 664156800 ,\n    \"stop\": 664329600 ,\n    \"interp\": 664156800 ,\n    \"sat\":{\n      \"e\": 0.832838342362125,\n      \"a\": 94932424745.308,\n      \"per\": 15942437.768890964,\n      \"t0\": 648270111.6099393,\n      \"rot\":[ 0.1936888218708851,-0.9794478442101339,0.9810630154491956,0.19336994264550694,0.05735839740957605,1.0838378183533082 ],\n    }\n   },\n   {\n    \"start\": 664329600 ,\n    \"stop\": 664502400 ,\n    \"interp\": 664329600 ,\n    \"sat\":{\n      \"e\": 0.9470540276155285,\n      \"a\": 292784091544.4913,\n      \"per\": 86348357.96513838,\n      \"t0\": 664227807.6806804,\n      \"rot\":[ 0.22284969488251105,-0.9733430656066427,0.9748528163219162,0.22250456843817584,0.05563266719836373,1.2708944910061746 ],\n    }\n   },\n   {\n    \"start\": 664502400 ,\n    \"stop\": 664675200 ,\n    \"interp\": 664502400 ,\n    \"sat\":{\n      \"e\": 0.7819303104062636,\n      \"a\": 71479249744.2668,\n      \"per\": 10416045.013319766,\n      \"t0\": 664226798.4023592,\n      \"rot\":[ 0.2562769688439905,-0.9650648553282899,0.9666033908693556,0.2558690546687997,0.05639904141988331,1.332938413334809 ],\n    }\n   },\n   {\n    \"start\": 664675200 ,\n    \"stop\": 665884800 ,\n    \"interp\": 665712000 ,\n    \"sat\":{\n      \"e\": 0.7813399723165337,\n      \"a\": 65042856029.583206,\n      \"per\": 9041329.027790565,\n      \"t0\": 664232607.7413846,\n      \"rot\":[ 0.2590985757568041,-0.9642066320424493,0.9658508829217871,0.2586574900068646,0.058325582626371004,1.2430863655091609 ],\n    }\n   },\n   {\n    \"start\": 665884800 ,\n    \"stop\": 667180800 ,\n    \"interp\": 667008000 ,\n    \"sat\":{\n      \"e\": 0.7923353225394483,\n      \"a\": 66743399006.30484,\n      \"per\": 9398214.433421457,\n      \"t0\": 664258077.537232,\n      \"rot\":[ 0.25074878434851694,-0.9663655418726114,0.9680521923676124,0.2503119013327283,0.05900501277390584,1.2388883300265183 ],\n    }\n   },\n   {\n    \"start\": 667180800 ,\n    \"stop\": 670032000 ,\n    \"interp\": 669859200 ,\n    \"sat\":{\n      \"e\": 0.8292006006547326,\n      \"a\": 63263492310.44989,\n      \"per\": 8672865.543699682,\n      \"t0\": 664239590.8424472,\n      \"rot\":[ 0.23436627718547903,-0.97041752677337,0.9721483673381441,0.23394900480896058,0.0596463484209426,1.1566405727500604 ],\n    }\n   },\n   {\n    \"start\": 670032000 ,\n    \"stop\": 671414400 ,\n    \"interp\": 671241600 ,\n    \"sat\":{\n      \"e\": 0.8273435015165445,\n      \"a\": 62976969853.914764,\n      \"per\": 8614012.762405083,\n      \"t0\": 664345027.6998442,\n      \"rot\":[ 0.22261265409723469,-0.9731590576295532,0.9749069731188638,0.22221353077886485,0.059854785041385514,1.1524051445680297 ],\n    }\n   },\n   {\n    \"start\": 671414400 ,\n    \"stop\": 672105600 ,\n    \"interp\": 671932800 ,\n    \"sat\":{\n      \"e\": 0.8229408121074077,\n      \"a\": 62246652223.89688,\n      \"per\": 8464608.347493198,\n      \"t0\": 664513868.4126139,\n      \"rot\":[ 0.21267254104877772,-0.9753702994779159,0.9771235286717109,0.21229094783487554,0.05987764494142063,1.1468859806407152 ],\n    }\n   },\n   {\n    \"start\": 672105600 ,\n    \"stop\": 672796800 ,\n    \"interp\": 672624000 ,\n    \"sat\":{\n      \"e\": 0.8120797365346951,\n      \"a\": 60516245027.48365,\n      \"per\": 8114108.8392916415,\n      \"t0\": 664879923.8361117,\n      \"rot\":[ 0.19918252788499713,-0.9782154695044603,0.9799624077409002,0.1988274534747499,0.05968365745255917,1.131988338859058 ],\n    }\n   },\n   {\n    \"start\": 672796800 ,\n    \"stop\": 672969600 ,\n    \"interp\": 672796800 ,\n    \"sat\":{\n      \"e\": 0.7974182174886235,\n      \"a\": 59404720314.169716,\n      \"per\": 7891586.171748234,\n      \"t0\": 665110342.8334498,\n      \"rot\":[ 0.18413324181374915,-0.9811866873972263,0.9829012917171079,0.1838120339218599,0.059040838916523716,1.0844793836261517 ],\n    }\n   },\n   {\n    \"start\": 672969600 ,\n    \"stop\": 673142400 ,\n    \"interp\": 672969600 ,\n    \"sat\":{\n      \"e\": 0.8472273149909024,\n      \"a\": 83231953650.5815,\n      \"per\": 13087840.77793735,\n      \"t0\": 659906484.6828936,\n      \"rot\":[ 0.17405058490462963,-0.9831034970757141,0.9847367129818794,0.17376191669515176,0.057570047280929265,0.9759868985156276 ],\n    }\n   },\n   {\n    \"start\": 673142400 ,\n    \"stop\": 673488000 ,\n    \"interp\": 673315200 ,\n    \"sat\":{\n      \"e\": 0.8011007760826837,\n      \"a\": 62172887670.42192,\n      \"per\": 8449566.501492186,\n      \"t0\": 673000425.3370535,\n      \"rot\":[ 0.25923157070668396,-0.9642681694873845,0.9658151959608761,0.2588163379537461,0.05657738524941765,1.231457964463942 ],\n    }\n   },\n   {\n    \"start\": 673488000 ,\n    \"stop\": 674352000 ,\n    \"interp\": 674179200 ,\n    \"sat\":{\n      \"e\": 0.8143591544020621,\n      \"a\": 61132353845.44726,\n      \"per\": 8238336.883270135,\n      \"t0\": 673009482.2874799,\n      \"rot\":[ 0.2575333879802553,-0.9646278800279234,0.9662694003617269,0.25709588443016396,0.058264562831159286,1.1686533993531456 ],\n    }\n   },\n   {\n    \"start\": 674352000 ,\n    \"stop\": 675388800 ,\n    \"interp\": 675216000 ,\n    \"sat\":{\n      \"e\": 0.8250068872663533,\n      \"a\": 62712444873.83252,\n      \"per\": 8559797.059434647,\n      \"t0\": 673030791.9282875,\n      \"rot\":[ 0.2486009085054556,-0.9669153804282072,0.9686060026090392,0.2481669960488301,0.05905750725754698,1.160128940369932 ],\n    }\n   },\n   {\n    \"start\": 675388800 ,\n    \"stop\": 677462400 ,\n    \"interp\": 677289600 ,\n    \"sat\":{\n      \"e\": 0.8285466898346501,\n      \"a\": 63201556934.136734,\n      \"per\": 8660132.472540112,\n      \"t0\": 673061104.7136174,\n      \"rot\":[ 0.2397911146417242,-0.9691055680736085,0.9708245059426959,0.23936654148240938,0.059481566451117455,1.1569942386148653 ],\n    }\n   },\n   {\n    \"start\": 677462400 ,\n    \"stop\": 679363200 ,\n    \"interp\": 679190400 ,\n    \"sat\":{\n      \"e\": 0.8291848820127906,\n      \"a\": 63214933821.34584,\n      \"per\": 8662882.050648151,\n      \"t0\": 673118275.9774944,\n      \"rot\":[ 0.2303043449751998,-0.9713800804762602,0.9731186508774479,0.22989288403251026,0.05974948640071488,1.1540985132545645 ],\n    }\n   },\n   {\n    \"start\": 679363200 ,\n    \"stop\": 680400000 ,\n    \"interp\": 680227200 ,\n    \"sat\":{\n      \"e\": 0.8272662613205498,\n      \"a\": 62795642665.645195,\n      \"per\": 8576836.556763647,\n      \"t0\": 673234750.1509349,\n      \"rot\":[ 0.22016641227316563,-0.9737119105343837,0.9754623267490972,0.21977133514162472,0.05988051046499272,1.1505594693114736 ],\n    }\n   },\n   {\n    \"start\": 680400000 ,\n    \"stop\": 681436800 ,\n    \"interp\": 681264000 ,\n    \"sat\":{\n      \"e\": 0.820861607714899,\n      \"a\": 61560143515.10621,\n      \"per\": 8324962.872537852,\n      \"t0\": 673506927.3748446,\n      \"rot\":[ 0.20773586244260803,-0.9764314600829597,0.9781849576921666,0.20736347444453548,0.059849755442691964,1.1438269671826686 ],\n    }\n   },\n   {\n    \"start\": 681436800 ,\n    \"stop\": 681782400 ,\n    \"interp\": 681609600 ,\n    \"sat\":{\n      \"e\": 0.7974266181465707,\n      \"a\": 58134517121.27021,\n      \"per\": 7639834.91208168,\n      \"t0\": 674210037.3659917,\n      \"rot\":[ 0.18572460271811017,-0.9808796640521489,0.982601837951263,0.18539908932003699,0.05917991490568834,1.1016459290463927 ],\n    }\n   },\n   {\n    \"start\": 681782400 ,\n    \"stop\": 681955200 ,\n    \"interp\": 681782400 ,\n    \"sat\":{\n      \"e\": 0.8080363485848521,\n      \"a\": 65095890369.56478,\n      \"per\": 9052389.396526968,\n      \"t0\": 672794927.6549847,\n      \"rot\":[ 0.17456754125529161,-0.9829839814769331,0.9846452018570354,0.17427302384263302,0.05806380387557657,1.0127336173604122 ],\n    }\n   },\n   {\n    \"start\": 681955200 ,\n    \"stop\": 682128000 ,\n    \"interp\": 681955200 ,\n    \"sat\":{\n      \"e\": 1.04327665645897,\n      \"a\": -288935597195.4004,\n      \"per\": 84651458.65217517,\n      \"t0\": 681853278.2966664,\n      \"rot\":[ 0.20866302469032136,-0.9765078077074559,0.9779875981458489,0.20834729722162104,0.054990046615945476,1.16569599777822 ],\n    }\n   },\n   {\n    \"start\": 682128000 ,\n    \"stop\": 682300800 ,\n    \"interp\": 682128000 ,\n    \"sat\":{\n      \"e\": 0.8143059202970746,\n      \"a\": 68082262587.91083,\n      \"per\": 9682418.282309894,\n      \"t0\": 681851247.0948051,\n      \"rot\":[ 0.2573082006227573,-0.9647980455367483,0.9663293899557639,0.2569004437221743,0.0562751574304364,1.2581953035696132 ],\n    }\n   },\n   {\n    \"start\": 682300800 ,\n    \"stop\": 683510400 ,\n    \"interp\": 683337600 ,\n    \"sat\":{\n      \"e\": 0.8160290919387867,\n      \"a\": 61737033492.0189,\n      \"per\": 8360870.679823633,\n      \"t0\": 681859712.5520518,\n      \"rot\":[ 0.25622641951594644,-0.9649649739185926,0.9666167916718797,0.25578856311590853,0.058436376422469884,1.1677390470083626 ],\n    }\n   },\n   {\n    \"start\": 683510400 ,\n    \"stop\": 684892800 ,\n    \"interp\": 684720000 ,\n    \"sat\":{\n      \"e\": 0.8260237440509042,\n      \"a\": 62996657556.10429,\n      \"per\": 8618052.414642284,\n      \"t0\": 681886596.0118153,\n      \"rot\":[ 0.2456925361463877,-0.967646286883873,0.9693478104797865,0.24526126509684976,0.059224786390042396,1.1581964615897422 ],\n    }\n   },\n   {\n    \"start\": 684892800 ,\n    \"stop\": 687744000 ,\n    \"interp\": 687571200 ,\n    \"sat\":{\n      \"e\": 0.8291581860801993,\n      \"a\": 63265084497.18828,\n      \"per\": 8673192.95784996,\n      \"t0\": 681933962.1297368,\n      \"rot\":[ 0.23502899488968024,-0.97025837712163,0.971988359786858,0.2346106811486862,0.05963648142077267,1.1542438365260965 ],\n    }\n   },\n   {\n    \"start\": 687744000 ,\n    \"stop\": 689040000 ,\n    \"interp\": 688867200 ,\n    \"sat\":{\n      \"e\": 0.8518410119994497,\n      \"a\": 60483676661.299934,\n      \"per\": 8107559.497632747,\n      \"t0\": 682639491.0200819,\n      \"rot\":[ 0.23112211187206697,-0.9711873561289776,0.9729247501239733,0.23070938707580074,0.05973523257102906,1.209075695095112 ],\n    }\n   },\n   {\n    \"start\": 689040000 ,\n    \"stop\": 690249600 ,\n    \"interp\": 690076800 ,\n    \"sat\":{\n      \"e\": 0.8486794825338791,\n      \"a\": 59666734546.5134,\n      \"per\": 7943854.397222836,\n      \"t0\": 682825044.499777,\n      \"rot\":[ 0.21886036460482758,-0.974011486404424,0.9757561892220012,0.21846903088950012,0.0597737977248157,1.2035372321713873 ],\n    }\n   },\n   {\n    \"start\": 690249600 ,\n    \"stop\": 690422400 ,\n    \"interp\": 690249600 ,\n    \"sat\":{\n      \"e\": 0.8396004085680523,\n      \"a\": 57589081855.52498,\n      \"per\": 7532568.708715769,\n      \"t0\": 683251559.7605633,\n      \"rot\":[ 0.2042443985630354,-0.9771800933503406,0.9789199281124192,0.20388139491546942,0.05959397592997202,1.1936294991704803 ],\n    }\n   },\n   {\n    \"start\": 690422400 ,\n    \"stop\": 690768000 ,\n    \"interp\": 690595200 ,\n    \"sat\":{\n      \"e\": 0.8199420230735293,\n      \"a\": 54019858124.144806,\n      \"per\": 6843259.811244304,\n      \"t0\": 683951594.8951967,\n      \"rot\":[ 0.18733230574688897,-0.9805860587517287,0.9822965983976296,0.18700609130568985,0.05898900911457323,1.1629416329332956 ],\n    }\n   },\n   {\n    \"start\": 690768000 ,\n    \"stop\": 690940800 ,\n    \"interp\": 690768000 ,\n    \"sat\":{\n      \"e\": 0.8273676123077882,\n      \"a\": 61263832835.60416,\n      \"per\": 8264928.786009114,\n      \"t0\": 682528954.0877024,\n      \"rot\":[ 0.17267183999198868,-0.9833522132232588,0.9849794087562344,0.17238658443820973,0.05745685559310101,1.049222839552726 ],\n    }\n   },\n   {\n    \"start\": 690940800 ,\n    \"stop\": 691286400 ,\n    \"interp\": 691113600 ,\n    \"sat\":{\n      \"e\": 0.823852267504658,\n      \"a\": 59278291210.68053,\n      \"per\": 7866406.477756692,\n      \"t0\": 690794777.0159148,\n      \"rot\":[ 0.2754027367463721,-0.9597873734871566,0.961328940889958,0.2749611065576279,0.05660907679189061,1.2928995741605014 ],\n    }\n   },\n   {\n    \"start\": 691286400 ,\n    \"stop\": 692150400 ,\n    \"interp\": 691977600 ,\n    \"sat\":{\n      \"e\": 0.8384509858905768,\n      \"a\": 59021099958.656746,\n      \"per\": 7815266.975940241,\n      \"t0\": 690805077.3721184,\n      \"rot\":[ 0.2677989453190748,-0.9618367533471,0.9634748179822819,0.26734364335011945,0.058287531007875155,1.2325575013358627 ],\n    }\n   },\n   {\n    \"start\": 692150400 ,\n    \"stop\": 693014400 ,\n    \"interp\": 692841600 ,\n    \"sat\":{\n      \"e\": 0.846976486806983,\n      \"a\": 60206661736.80957,\n      \"per\": 8051924.451043447,\n      \"t0\": 690822021.3899479,\n      \"rot\":[ 0.25812633021707376,-0.9644303788878648,0.9661111725100099,0.25767725447726075,0.058961655364062504,1.2213419375910524 ],\n    }\n   },\n   {\n    \"start\": 693014400 ,\n    \"stop\": 694915200 ,\n    \"interp\": 694742400 ,\n    \"sat\":{\n      \"e\": 0.8508680358565933,\n      \"a\": 60653480687.74648,\n      \"per\": 8141725.6260397695,\n      \"t0\": 690848435.998125,\n      \"rot\":[ 0.24845170925122032,-0.9669357611203536,0.9686442836099055,0.24801348302100776,0.05936788783838186,1.2154511071665686 ],\n    }\n   },\n   {\n    \"start\": 694915200 ,\n    \"stop\": 696643200 ,\n    \"interp\": 696470400 ,\n    \"sat\":{\n      \"e\": 0.8524142733927907,\n      \"a\": 60661353446.45898,\n      \"per\": 8143310.858755443,\n      \"t0\": 690905530.7082129,\n      \"rot\":[ 0.23735662759709966,-0.9696932561508088,0.971422581236267,0.23693408566917673,0.05964250182339135,1.2104753293955322 ],\n    }\n   },\n   {\n    \"start\": 696643200 ,\n    \"stop\": 697507200 ,\n    \"interp\": 697334400 ,\n    \"sat\":{\n      \"e\": 0.8519659491021926,\n      \"a\": 60360513293.16056,\n      \"per\": 8082807.881743461,\n      \"t0\": 690988714.3105655,\n      \"rot\":[ 0.22880025730071768,-0.9717343611149283,0.9734733906271529,0.22839152460840012,0.059746488730408207,1.2071953219278588 ],\n    }\n   },\n   {\n    \"start\": 697507200 ,\n    \"stop\": 698544000 ,\n    \"interp\": 698371200 ,\n    \"sat\":{\n      \"e\": 0.8486900536792809,\n      \"a\": 59377039772.53123,\n      \"per\": 7886071.005704342,\n      \"t0\": 691203890.414043,\n      \"rot\":[ 0.21702868467479677,-0.9744210286907418,0.9761652268075972,0.2166409009136897,0.05975264761147724,1.202715645952235 ],\n    }\n   },\n   {\n    \"start\": 698544000 ,\n    \"stop\": 698716800 ,\n    \"interp\": 698544000 ,\n    \"sat\":{\n      \"e\": 0.8414903616817094,\n      \"a\": 57554664592.94186,\n      \"per\": 7525817.125377265,\n      \"t0\": 691575792.814191,\n      \"rot\":[ 0.20560880215729943,-0.9768943370165698,0.9786342628763007,0.20524324774598102,0.059604224343902695,1.196609454755529 ],\n    }\n   },\n   {\n    \"start\": 698716800 ,\n    \"stop\": 699062400 ,\n    \"interp\": 698889600 ,\n    \"sat\":{\n      \"e\": 0.8225751219463731,\n      \"a\": 53654139579.83268,\n      \"per\": 6773883.480972539,\n      \"t0\": 692338779.0586246,\n      \"rot\":[ 0.18984094494133052,-0.980099635496581,0.9818148581192804,0.18950929434469793,0.05908410832401441,1.175085614196961 ],\n    }\n   },\n   {\n    \"start\": 699062400 ,\n    \"stop\": 699235200 ,\n    \"interp\": 699062400 ,\n    \"sat\":{\n      \"e\": 0.8078770730610265,\n      \"a\": 53470843434.50983,\n      \"per\": 6739201.188753748,\n      \"t0\": 692376369.5068622,\n      \"rot\":[ 0.17538592135995604,-0.9828489970944653,0.9844997605833733,0.17509184239006584,0.057885193606450565,1.0928378399272303 ],\n    }\n   },\n   {\n    \"start\": 699235200 ,\n    \"stop\": 699408000 ,\n    \"interp\": 699235200 ,\n    \"sat\":{\n      \"e\": 1.0873205378463837,\n      \"a\": -122646892399.615,\n      \"per\": 23410877.51812863,\n      \"t0\": 699121891.7210723,\n      \"rot\":[ 0.23133735615185513,-0.9714453013989482,0.9728735928416753,0.23099772604101032,0.054167120597176835,1.2912796666240718 ],\n    }\n   },\n   {\n    \"start\": 699408000 ,\n    \"stop\": 699580800 ,\n    \"interp\": 699408000 ,\n    \"sat\":{\n      \"e\": 0.830230159974539,\n      \"a\": 62738886551.96049,\n      \"per\": 8565211.277979024,\n      \"t0\": 699114494.8553101,\n      \"rot\":[ 0.27410880614558214,-0.9601649344000115,0.9616986858644675,0.27367164761659013,0.05645465471901006,1.3113842795437431 ],\n    }\n   },\n   {\n    \"start\": 699580800 ,\n    \"stop\": 700444800 ,\n    \"interp\": 700272000 ,\n    \"sat\":{\n      \"e\": 0.8372123349168645,\n      \"a\": 59237942880.5892,\n      \"per\": 7858376.328534853,\n      \"t0\": 699122155.6924936,\n      \"rot\":[ 0.2675062991212747,-0.9619190148156572,0.9635561114592337,0.26705180180739874,0.058267864964293675,1.2345384799897967 ],\n    }\n   },\n   {\n    \"start\": 700444800 ,\n    \"stop\": 701308800 ,\n    \"interp\": 701136000 ,\n    \"sat\":{\n      \"e\": 0.8461177621662374,\n      \"a\": 60276687108.65612,\n      \"per\": 8065976.12498652,\n      \"t0\": 699138639.8205717,\n      \"rot\":[ 0.25794264900283514,-0.9644799803072722,0.9661602298922266,0.2574940608540791,0.05895062519905632,1.2209270870821731 ],\n    }\n   },\n   {\n    \"start\": 701308800 ,\n    \"stop\": 703209600 ,\n    \"interp\": 703036800 ,\n    \"sat\":{\n      \"e\": 0.8504651963213795,\n      \"a\": 60685610807.52421,\n      \"per\": 8148195.887696569,\n      \"t0\": 699164701.384158,\n      \"rot\":[ 0.24845913477974746,-0.9669346693771271,0.9686423789740459,0.24802110309941267,0.05935383369165065,1.2143384464948759 ],\n    }\n   },\n   {\n    \"start\": 703209600 ,\n    \"stop\": 704937600 ,\n    \"interp\": 704764800 ,\n    \"sat\":{\n      \"e\": 0.8525334723379363,\n      \"a\": 60680271237.41692,\n      \"per\": 8147120.503295853,\n      \"t0\": 699221359.4182292,\n      \"rot\":[ 0.2376535065959445,-0.9696218430223057,0.9713499939788188,0.23723069181518747,0.05962449492377032,1.209388882343 ],\n    }\n   },\n   {\n    \"start\": 704937600 ,\n    \"stop\": 705801600 ,\n    \"interp\": 705628800 ,\n    \"sat\":{\n      \"e\": 0.8524953868914591,\n      \"a\": 60376365921.49116,\n      \"per\": 8085992.302026118,\n      \"t0\": 699304167.9875486,\n      \"rot\":[ 0.22936919828973557,-0.9716018084792724,0.9733394941519243,0.22895970954299258,0.05972752435683078,1.2065502168424131 ],\n    }\n   },\n   {\n    \"start\": 705801600 ,\n    \"stop\": 706838400 ,\n    \"interp\": 706665600 ,\n    \"sat\":{\n      \"e\": 0.8498378886102682,\n      \"a\": 59393311028.59204,\n      \"per\": 7889312.790865447,\n      \"t0\": 699518590.593505,\n      \"rot\":[ 0.21806859578696272,-0.9741905041126985,0.9759334442120028,0.21767914248740605,0.05973820069766082,1.203287591820843 ],\n    }\n   },\n   {\n    \"start\": 706838400 ,\n    \"stop\": 707011200 ,\n    \"interp\": 706838400 ,\n    \"sat\":{\n      \"e\": 0.8434046368971228,\n      \"a\": 57575973367.17542,\n      \"per\": 7529996.99806577,\n      \"t0\": 699889202.9587655,\n      \"rot\":[ 0.2072683556982986,-0.976544668855285,0.9782841247439946,0.2068998184270259,0.059606835725321765,1.1993675545573574 ],\n    }\n   },\n   {\n    \"start\": 707011200 ,\n    \"stop\": 707356800 ,\n    \"interp\": 707184000 ,\n    \"sat\":{\n      \"e\": 0.8258341334950432,\n      \"a\": 53554547733.608696,\n      \"per\": 6755031.8952146005,\n      \"t0\": 700675222.4783672,\n      \"rot\":[ 0.19270501809113527,-0.9795379812600221,0.9812567329718025,0.192367479434244,0.05916161023126568,1.1852914004657922 ],\n    }\n   },\n   {\n    \"start\": 707356800 ,\n    \"stop\": 707529600 ,\n    \"interp\": 707356800 ,\n    \"sat\":{\n      \"e\": 0.8021809558081356,\n      \"a\": 50303674802.36307,\n      \"per\": 6149395.681993939,\n      \"t0\": 701286307.5660828,\n      \"rot\":[ 0.1791230113208988,-0.9821580396093033,0.983826685354353,0.1788192049136011,0.05821749895759579,1.1299262083262152 ],\n    }\n   },\n   {\n    \"start\": 707529600 ,\n    \"stop\": 707702400 ,\n    \"interp\": 707529600 ,\n    \"sat\":{\n      \"e\": 1.110433408593964,\n      \"a\": -95243270527.4522,\n      \"per\": 16020804.470476678,\n      \"t0\": 707434442.5560733,\n      \"rot\":[ 0.2106523096918214,-0.9761131933336745,0.9775610489486071,0.21034031472259276,0.054405751555669686,1.1571530170647488 ],\n    }\n   },\n   {\n    \"start\": 707702400 ,\n    \"stop\": 707875200 ,\n    \"interp\": 707702400 ,\n    \"sat\":{\n      \"e\": 0.842077494002847,\n      \"a\": 68622689725.0473,\n      \"per\": 9797933.212724851,\n      \"t0\": 707434949.0968767,\n      \"rot\":[ 0.27201504557544737,-0.9607663798740878,0.9622929985095949,0.2715835104418062,0.056305951370574384,1.3313320883456052 ],\n    }\n   },\n   {\n    \"start\": 707875200 ,\n    \"stop\": 708739200 ,\n    \"interp\": 708566400 ,\n    \"sat\":{\n      \"e\": 0.8361448910533078,\n      \"a\": 59512935205.452965,\n      \"per\": 7913159.607357683,\n      \"t0\": 707439172.1871672,\n      \"rot\":[ 0.26687325074315527,-0.9620947987571405,0.9637316369393406,0.2664199831426316,0.05825796758158583,1.236577755292344 ],\n    }\n   },\n   {\n    \"start\": 708739200 ,\n    \"stop\": 709603200 ,\n    \"interp\": 709430400 ,\n    \"sat\":{\n      \"e\": 0.8452791998771423,\n      \"a\": 60365481445.292854,\n      \"per\": 8083805.82170403,\n      \"t0\": 707454963.8284197,\n      \"rot\":[ 0.25753858223878257,-0.9645880931720163,0.9662680159554272,0.2570908338659023,0.05894161223540173,1.2204797418994229 ],\n    }\n   },\n   {\n    \"start\": 709603200 ,\n    \"stop\": 711504000 ,\n    \"interp\": 711331200 ,\n    \"sat\":{\n      \"e\": 0.8500383523640473,\n      \"a\": 60728822405.39297,\n      \"per\": 8156900.403399258,\n      \"t0\": 707480380.4208049,\n      \"rot\":[ 0.2483573330616936,-0.9669617035382883,0.9686684856618817,0.24791973045295035,0.05933692899424494,1.2132207780637352 ],\n    }\n   },\n   {\n    \"start\": 711504000 ,\n    \"stop\": 713232000 ,\n    \"interp\": 713059200 ,\n    \"sat\":{\n      \"e\": 0.8526079177497945,\n      \"a\": 60709673541.9337,\n      \"per\": 8153042.686771717,\n      \"t0\": 707535970.5084933,\n      \"rot\":[ 0.23797186672235618,-0.9695454466782564,0.9712720477027418,0.2375488313123973,0.059600164157279936,1.2083441209553287 ],\n    }\n   },\n   {\n    \"start\": 713232000 ,\n    \"stop\": 714096000 ,\n    \"interp\": 713923200 ,\n    \"sat\":{\n      \"e\": 0.8529753105056168,\n      \"a\": 60406205377.84948,\n      \"per\": 8091987.48126729,\n      \"t0\": 707617435.1370757,\n      \"rot\":[ 0.23006317331904366,-0.9714398654084762,0.9731756965123881,0.22965281492893688,0.059700690870184564,1.2059725855429195 ],\n    }\n   },\n   {\n    \"start\": 714096000 ,\n    \"stop\": 715132800 ,\n    \"interp\": 714960000 ,\n    \"sat\":{\n      \"e\": 0.8509469159591694,\n      \"a\": 59436437915.328835,\n      \"per\": 7897907.275247904,\n      \"t0\": 707828345.0002061,\n      \"rot\":[ 0.21935863293628827,-0.9739032202518981,0.9756442948925201,0.21896717904781046,0.05971509091366168,1.203891865704334 ],\n    }\n   },\n   {\n    \"start\": 715132800 ,\n    \"stop\": 715305600 ,\n    \"interp\": 715132800 ,\n    \"sat\":{\n      \"e\": 0.8453240691922026,\n      \"a\": 57652942829.459946,\n      \"per\": 7545101.566254449,\n      \"t0\": 708191945.9404061,\n      \"rot\":[ 0.2092705933732814,-0.9761194568246375,0.9778577702044376,0.20889857825662142,0.059600251767394787,1.201949797736696 ],\n    }\n   },\n   {\n    \"start\": 715305600 ,\n    \"stop\": 715651200 ,\n    \"interp\": 715478400 ,\n    \"sat\":{\n      \"e\": 0.8294587111478334,\n      \"a\": 53656388766.18911,\n      \"per\": 6774309.428143468,\n      \"t0\": 708973519.5737941,\n      \"rot\":[ 0.1959702150057508,-0.9788887276932369,0.9806098484262739,0.19562625721188873,0.05922183958966549,1.193928881608304 ],\n    }\n   },\n   {\n    \"start\": 715651200 ,\n    \"stop\": 715824000 ,\n    \"interp\": 715651200 ,\n    \"sat\":{\n      \"e\": 0.8037161460160069,\n      \"a\": 49120623656.36798,\n      \"per\": 5933742.258405266,\n      \"t0\": 709820925.0787454,\n      \"rot\":[ 0.1835818280348869,-0.9813223160781366,0.9830044315339423,0.18326768313336222,0.05847621983311834,1.1591874760099694 ],\n    }\n   },\n   {\n    \"start\": 715824000 ,\n    \"stop\": 715996800 ,\n    \"interp\": 715824000 ,\n    \"sat\":{\n      \"e\": 1.025794863234321,\n      \"a\": -404873964118.0123,\n      \"per\": 140414722.06966037,\n      \"t0\": 715747420.0663425,\n      \"rot\":[ 0.1934135897567088,-0.9796259465656602,0.9811173137282939,0.19311958752829622,0.05511651048674124,1.0348946675665012 ],\n    }\n   },\n   {\n    \"start\": 715996800 ,\n    \"stop\": 716169600 ,\n    \"interp\": 715996800 ,\n    \"sat\":{\n      \"e\": 0.8618446905539299,\n      \"a\": 79432492635.25232,\n      \"per\": 12201975.724060602,\n      \"t0\": 715756213.4746501,\n      \"rot\":[ 0.26899238392644104,-0.9616219712360027,0.9631423038105896,0.26856777597185205,0.05616523965690432,1.3507748440610081 ],\n    }\n   },\n   {\n    \"start\": 716169600 ,\n    \"stop\": 717033600 ,\n    \"interp\": 716860800 ,\n    \"sat\":{\n      \"e\": 0.8353217224187146,\n      \"a\": 59850564633.853195,\n      \"per\": 7980594.559236369,\n      \"t0\": 715756252.7859405,\n      \"rot\":[ 0.2659188785298952,-0.9623581178435588,0.9639954097615833,0.26546723028939706,0.0582580695104038,1.2386865371619113 ],\n    }\n   },\n   {\n    \"start\": 717033600 ,\n    \"stop\": 717897600 ,\n    \"interp\": 717724800 ,\n    \"sat\":{\n      \"e\": 0.8444925080855975,\n      \"a\": 60472496242.241135,\n      \"per\": 8105311.575665443,\n      \"t0\": 715771092.6704347,\n      \"rot\":[ 0.256932198365811,-0.9647496693247248,0.9664294311758679,0.2564856216254689,0.0589338734280285,1.220045919647612 ],\n    }\n   },\n   {\n    \"start\": 717897600 ,\n    \"stop\": 719798400 ,\n    \"interp\": 719625600 ,\n    \"sat\":{\n      \"e\": 0.8495972182844962,\n      \"a\": 60782525439.50888,\n      \"per\": 8167722.62368837,\n      \"t0\": 715795535.6429178,\n      \"rot\":[ 0.2481610368171523,-0.9670131061890211,0.9687187929455255,0.24772408339262714,0.05931636339108923,1.2121577500430156 ],\n    }\n   },\n   {\n    \"start\": 719798400 ,\n    \"stop\": 721526400 ,\n    \"interp\": 721353600 ,\n    \"sat\":{\n      \"e\": 0.8526244858686493,\n      \"a\": 60749451179.17675,\n      \"per\": 8161056.942301896,\n      \"t0\": 715849367.635517,\n      \"rot\":[ 0.23830521851364062,-0.9694656609895703,0.9711903123637333,0.23788203325597523,0.05956903907281493,1.2073811367641947 ],\n    }\n   },\n   {\n    \"start\": 721526400 ,\n    \"stop\": 722390400 ,\n    \"interp\": 722217600 ,\n    \"sat\":{\n      \"e\": 0.8533776040643969,\n      \"a\": 60450208054.050835,\n      \"per\": 8100830.958667583,\n      \"t0\": 715928482.9487643,\n      \"rot\":[ 0.230846393777915,-0.9712567356153702,0.9729902067748327,0.23043511978656994,0.059665811741095975,1.2054644466663875 ],\n    }\n   },\n   {\n    \"start\": 722390400 ,\n    \"stop\": 723427200 ,\n    \"interp\": 723254400 ,\n    \"sat\":{\n      \"e\": 0.8519696451059664,\n      \"a\": 59505941499.7317,\n      \"per\": 7911764.767307405,\n      \"t0\": 716133271.5861793,\n      \"rot\":[ 0.22084842931147236,-0.9735695350578126,0.9753081417022292,0.2204547398402251,0.05968306367214594,1.20450447152142 ],\n    }\n   },\n   {\n    \"start\": 723427200 ,\n    \"stop\": 723772800 ,\n    \"interp\": 723600000 ,\n    \"sat\":{\n      \"e\": 0.8426801233688475,\n      \"a\": 56424360612.13359,\n      \"per\": 7305212.264373532,\n      \"t0\": 716754522.1721069,\n      \"rot\":[ 0.20662123086237974,-0.9766885965153943,0.9784210070092093,0.20625538345515254,0.0594819487958936,1.2038474607053782 ],\n    }\n   },\n   {\n    \"start\": 723772800 ,\n    \"stop\": 723945600 ,\n    \"interp\": 723772800 ,\n    \"sat\":{\n      \"e\": 0.8331701001419272,\n      \"a\": 53912567006.966,\n      \"per\": 6822882.407595195,\n      \"t0\": 717242618.5978416,\n      \"rot\":[ 0.19958637111654068,-0.9781578474372932,0.9798802378171174,0.19923554697264226,0.05926569259996214,1.2011646171934887 ],\n    }\n   },\n   {\n    \"start\": 723945600 ,\n    \"stop\": 724118400 ,\n    \"interp\": 723945600 ,\n    \"sat\":{\n      \"e\": 0.8086765027195457,\n      \"a\": 48948675710.694695,\n      \"per\": 5902612.725565505,\n      \"t0\": 718170280.2653543,\n      \"rot\":[ 0.18854912565831972,-0.9803716514822668,0.9820637592404493,0.18822425322990252,0.05867755504431245,1.1813552406026389 ],\n    }\n   },\n   {\n    \"start\": 724118400 ,\n    \"stop\": 724291200 ,\n    \"interp\": 724118400 ,\n    \"sat\":{\n      \"e\": 0.8989237952433037,\n      \"a\": 102832542194.9341,\n      \"per\": 17973337.460406274,\n      \"t0\": 706092598.8174466,\n      \"rot\":[ 0.18494252280265752,-0.9812048286926721,0.982749338976826,0.18465186310224657,0.05604260524862348,0.9984229342421437 ],\n    }\n   },\n   {\n    \"start\": 724291200 ,\n    \"stop\": 724636800 ,\n    \"interp\": 724464000 ,\n    \"sat\":{\n      \"e\": 0.8320299292625877,\n      \"a\": 62791091841.68696,\n      \"per\": 8575904.223775329,\n      \"t0\": 724070189.3096175,\n      \"rot\":[ 0.269224384395893,-0.961490612230232,0.9630774791503809,0.26878078221544105,0.05738199808989971,1.285482204718267 ],\n    }\n   },\n   {\n    \"start\": 724636800 ,\n    \"stop\": 726364800 ,\n    \"interp\": 726192000 ,\n    \"sat\":{\n      \"e\": 0.8426057845635113,\n      \"a\": 60529141608.03885,\n      \"per\": 8116702.766753667,\n      \"t0\": 724084438.1198995,\n      \"rot\":[ 0.25739532461748477,-0.9646313762074709,0.9663061869123366,0.2569492046910159,0.05885077947432024,1.2216032263769714 ],\n    }\n   },\n   {\n    \"start\": 726364800 ,\n    \"stop\": 728092800 ,\n    \"interp\": 727920000 ,\n    \"sat\":{\n      \"e\": 0.8495677318646431,\n      \"a\": 60856349906.0321,\n      \"per\": 8182607.514039565,\n      \"t0\": 724113680.4066522,\n      \"rot\":[ 0.24692722789203211,-0.9673273910020992,0.9690340262991576,0.24649234664793923,0.05932319665243905,1.2104790540425616 ],\n    }\n   },\n   {\n    \"start\": 728092800 ,\n    \"stop\": 729820800 ,\n    \"interp\": 729648000 ,\n    \"sat\":{\n      \"e\": 0.8525833693645863,\n      \"a\": 60799195521.42391,\n      \"per\": 8171082.946559652,\n      \"t0\": 724161819.3444015,\n      \"rot\":[ 0.23859321632742717,-0.969397173793766,0.9711195998035121,0.23817003553524205,0.05953279443970944,1.2064620643469797 ],\n    }\n   },\n   {\n    \"start\": 729820800 ,\n    \"stop\": 730684800 ,\n    \"interp\": 730512000 ,\n    \"sat\":{\n      \"e\": 0.8537000915481158,\n      \"a\": 60507375297.39759,\n      \"per\": 8112325.004602025,\n      \"t0\": 724237734.2267145,\n      \"rot\":[ 0.2316814190034653,-0.9710610139511292,0.9727917146483829,0.2312692329338554,0.059624232342151424,1.205021481361785 ],\n    }\n   },\n   {\n    \"start\": 730684800 ,\n    \"stop\": 731721600 ,\n    \"interp\": 731548800 ,\n    \"sat\":{\n      \"e\": 0.8528942245922309,\n      \"a\": 59599356255.43161,\n      \"per\": 7930402.373969509,\n      \"t0\": 724434104.907814,\n      \"rot\":[ 0.22249961087123432,-0.973197153265689,0.9749327787915172,0.22210350560888625,0.05964338749436151,1.2051292731778316 ],\n    }\n   },\n   {\n    \"start\": 731721600 ,\n    \"stop\": 732240000 ,\n    \"interp\": 732067200 ,\n    \"sat\":{\n      \"e\": 0.8450523787120341,\n      \"a\": 56668199724.87962,\n      \"per\": 7352617.841105938,\n      \"t0\": 725025545.9207971,\n      \"rot\":[ 0.20967486277206573,-0.9760404100649847,0.9777711654173054,0.2093037167372622,0.05947328879542911,1.2072383733358973 ],\n    }\n   },\n   {\n    \"start\": 732240000 ,\n    \"stop\": 732412800 ,\n    \"interp\": 732240000 ,\n    \"sat\":{\n      \"e\": 0.8150280559974519,\n      \"a\": 49335835725.189964,\n      \"per\": 5972781.176557533,\n      \"t0\": 726418201.8174309,\n      \"rot\":[ 0.19382901819644915,-0.979336003494596,0.9810353264307053,0.19349327279826545,0.05883320185956724,1.1979622522649789 ],\n    }\n   },\n   {\n    \"start\": 732412800 ,\n    \"stop\": 732585600 ,\n    \"interp\": 732412800 ,\n    \"sat\":{\n      \"e\": 0.8116676696902041,\n      \"a\": 54062648025.722694,\n      \"per\": 6851392.387028013,\n      \"t0\": 725538263.7625096,\n      \"rot\":[ 0.18429056623876222,-0.9812796770548639,0.9828718060842911,0.18399203863979965,0.05689573899926678,1.044493003818371 ],\n    }\n   },\n   {\n    \"start\": 732585600 ,\n    \"stop\": 732931200 ,\n    \"interp\": 732758400 ,\n    \"sat\":{\n      \"e\": 0.8365137120412185,\n      \"a\": 65213461138.34225,\n      \"per\": 9076924.9729864,\n      \"t0\": 732389771.4496641,\n      \"rot\":[ 0.2670083160820532,-0.9621057813998927,0.963694224919412,0.26656821006255954,0.05739211427491637,1.2946684717340666 ],\n    }\n   },\n   {\n    \"start\": 732931200 ,\n    \"stop\": 734659200 ,\n    \"interp\": 734486400 ,\n    \"sat\":{\n      \"e\": 0.8419555462910366,\n      \"a\": 60687292897.01226,\n      \"per\": 8148534.6687381305,\n      \"t0\": 732400916.3912414,\n      \"rot\":[ 0.25619667561623566,-0.9649491003454292,0.9666246755608866,0.2557525768767781,0.058854508437625096,1.2212463810483587 ],\n    }\n   },\n   {\n    \"start\": 734659200 ,\n    \"stop\": 736387200 ,\n    \"interp\": 736214400 ,\n    \"sat\":{\n      \"e\": 0.8491567162379122,\n      \"a\": 60923903553.86323,\n      \"per\": 8196235.960984321,\n      \"t0\": 732428246.5806631,\n      \"rot\":[ 0.24649996819935313,-0.9674374077792338,0.9691427994252023,0.24606620447872496,0.059298271836797554,1.2094290742547313 ],\n    }\n   },\n   {\n    \"start\": 736387200 ,\n    \"stop\": 738115200 ,\n    \"interp\": 737942400 ,\n    \"sat\":{\n      \"e\": 0.8525027950733319,\n      \"a\": 60855865953.56042,\n      \"per\": 8182509.907497328,\n      \"t0\": 732473733.7652377,\n      \"rot\":[ 0.23884899170582086,-0.9693367206749094,0.9710567229369831,0.23842592599161058,0.05949285474958913,1.205617190249985 ],\n    }\n   },\n   {\n    \"start\": 738115200 ,\n    \"stop\": 740016000 ,\n    \"interp\": 739843200 ,\n    \"sat\":{\n      \"e\": 0.8541907291814057,\n      \"a\": 60289230855.490005,\n      \"per\": 8068494.084192251,\n      \"t0\": 732609260.2976726,\n      \"rot\":[ 0.22899561509988828,-0.9716970985996319,0.9734274540329257,0.2285885546608726,0.05959883598788075,1.2048102177487663 ],\n    }\n   },\n   {\n    \"start\": 740016000 ,\n    \"stop\": 740534400 ,\n    \"interp\": 740361600 ,\n    \"sat\":{\n      \"e\": 0.847267342001561,\n      \"a\": 56960018220.32104,\n      \"per\": 7409485.4441914745,\n      \"t0\": 733287558.2148625,\n      \"rot\":[ 0.21285361081313697,-0.9753555742632832,0.977084100967675,0.21247705863093247,0.05945589381287792,1.2101386529513725 ],\n    }\n   },\n   {\n    \"start\": 740534400 ,\n    \"stop\": 740707200 ,\n    \"interp\": 740534400 ,\n    \"sat\":{\n      \"e\": 0.821628714873364,\n      \"a\": 50038047995.23059,\n      \"per\": 6100752.532884738,\n      \"t0\": 734608360.7448207,\n      \"rot\":[ 0.19919074398122744,-0.9782565018791015,0.9799607377401429,0.19884433417519462,0.058950379962194,1.210150768545207 ],\n    }\n   },\n   {\n    \"start\": 740707200 ,\n    \"stop\": 740880000 ,\n    \"interp\": 740707200 ,\n    \"sat\":{\n      \"e\": 0.778717768215377,\n      \"a\": 44342672346.55544,\n      \"per\": 5089389.2001772,\n      \"t0\": 735624152.4400257,\n      \"rot\":[ 0.18815324498110841,-0.9805111707358927,0.9821396827351387,0.18784126306801077,0.05756304327555673,1.1151318016325908 ],\n    }\n   },\n   {\n    \"start\": 740880000 ,\n    \"stop\": 741052800 ,\n    \"interp\": 740880000 ,\n    \"sat\":{\n      \"e\": 0.9923035255351202,\n      \"a\": 1400448115907.307,\n      \"per\": 903302901.6796814,\n      \"t0\": 740720944.9751974,\n      \"rot\":[ 0.2513698991571902,-0.9663793115685385,0.9678910960421653,0.2509772753256074,0.0558697900698754,1.3464812457337398 ],\n    }\n   },\n   {\n    \"start\": 741052800 ,\n    \"stop\": 741225600 ,\n    \"interp\": 741052800 ,\n    \"sat\":{\n      \"e\": 0.8431011578703931,\n      \"a\": 68506375499.74738,\n      \"per\": 9773032.790670758,\n      \"t0\": 740710017.4349142,\n      \"rot\":[ 0.2644027508429255,-0.9628211538584386,0.964412352340374,0.2639665087575355,0.057420448770997994,1.3037718252689336 ],\n    }\n   },\n   {\n    \"start\": 741225600 ,\n    \"stop\": 743472000 ,\n    \"interp\": 743299200 ,\n    \"sat\":{\n      \"e\": 0.8425958458897254,\n      \"a\": 60876521137.37014,\n      \"per\": 8186676.118522268,\n      \"t0\": 740719912.5053024,\n      \"rot\":[ 0.2536265884230063,-0.965621058467676,0.9673022038871342,0.25318579217994314,0.058931537244326614,1.2183660035736952 ],\n    }\n   },\n   {\n    \"start\": 743472000 ,\n    \"stop\": 745977600 ,\n    \"interp\": 745804800 ,\n    \"sat\":{\n      \"e\": 0.8507912197795174,\n      \"a\": 60984432518.56492,\n      \"per\": 8208453.650213957,\n      \"t0\": 740760246.7757652,\n      \"rot\":[ 0.24254353644279178,-0.9684291533913585,0.9701405222594427,0.2421156793974469,0.059371480119747126,1.2062090954286682 ],\n    }\n   },\n   {\n    \"start\": 745977600 ,\n    \"stop\": 747273600 ,\n    \"interp\": 747100800 ,\n    \"sat\":{\n      \"e\": 0.8702743413995077,\n      \"a\": 58962753909.527855,\n      \"per\": 7803681.020094842,\n      \"t0\": 741318422.1386555,\n      \"rot\":[ 0.2276797996159416,-0.972003948552617,0.9737360570744233,0.2272747965164951,0.059619551042482156,1.237541227901833 ],\n    }\n   },\n   {\n    \"start\": 747273600 ,\n    \"stop\": 748483200 ,\n    \"interp\": 748310400 ,\n    \"sat\":{\n      \"e\": 0.8712479348746544,\n      \"a\": 58307727413.62558,\n      \"per\": 7674004.368501132,\n      \"t0\": 741461513.5150027,\n      \"rot\":[ 0.21936290712944104,-0.9739052997234582,0.9756433338960094,0.2189721288444517,0.05966300327581499,1.2376549577352522 ],\n    }\n   },\n   {\n    \"start\": 748483200 ,\n    \"stop\": 749001600 ,\n    \"interp\": 748828800 ,\n    \"sat\":{\n      \"e\": 0.8665748702013768,\n      \"a\": 55502047332.85765,\n      \"per\": 7126829.599753192,\n      \"t0\": 742021660.369809,\n      \"rot\":[ 0.20652320564166368,-0.9767060935634865,0.9784417026739463,0.2061568643908222,0.05953615758930244,1.2430172867378082 ],\n    }\n   },\n   {\n    \"start\": 749001600 ,\n    \"stop\": 749174400 ,\n    \"interp\": 749001600 ,\n    \"sat\":{\n      \"e\": 0.8437248926609384,\n      \"a\": 48145840947.27329,\n      \"per\": 5757991.7071459675,\n      \"t0\": 743401463.9961252,\n      \"rot\":[ 0.1925432211252722,-0.9795750673369193,0.9812884937665908,0.19220702168338963,0.05906901275178695,1.2494031719568328 ],\n    }\n   },\n   {\n    \"start\": 749174400 ,\n    \"stop\": 749347200 ,\n    \"interp\": 749174400 ,\n    \"sat\":{\n      \"e\": 0.7811576992933642,\n      \"a\": 38296037713.26825,\n      \"per\": 4084732.615641802,\n      \"t0\": 745081500.9405825,\n      \"rot\":[ 0.17945473748444152,-0.9821349310937775,0.9837662309687145,0.1791571622256049,0.057564644954079154,1.1604440209478595 ],\n    }\n   },\n   {\n    \"start\": 749347200 ,\n    \"stop\": 749692800 ,\n    \"interp\": 749520000 ,\n    \"sat\":{\n      \"e\": 0.8547415773544704,\n      \"a\": 63883482253.46028,\n      \"per\": 8800670.107071709,\n      \"t0\": 749160778.0844074,\n      \"rot\":[ 0.25795356603053,-0.964540513129258,0.9661573152298403,0.2575218973355498,0.057827942424453424,1.3244577706030904 ],\n    }\n   },\n   {\n    \"start\": 749692800 ,\n    \"stop\": 751420800 ,\n    \"interp\": 751248000 ,\n    \"sat\":{\n      \"e\": 0.859236712510183,\n      \"a\": 59111907142.86171,\n      \"per\": 7833310.233937207,\n      \"t0\": 749170228.2515697,\n      \"rot\":[ 0.24649129529202043,-0.9674547235657996,0.9691450053244158,0.24606139085274584,0.059035157167864366,1.253279641479 ],\n    }\n   },\n   {\n    \"start\": 751420800 ,\n    \"stop\": 753148800 ,\n    \"interp\": 752976000 ,\n    \"sat\":{\n      \"e\": 0.8659374048487812,\n      \"a\": 59228986590.255005,\n      \"per\": 7856594.212980876,\n      \"t0\": 749194227.4153244,\n      \"rot\":[ 0.23765131845055085,-0.9696361405845502,0.9713505293346552,0.2372318748671121,0.05938680341063362,1.24130572503826 ],\n    }\n   },\n   {\n    \"start\": 753148800 ,\n    \"stop\": 754876800 ,\n    \"interp\": 754704000 ,\n    \"sat\":{\n      \"e\": 0.8694534820239961,\n      \"a\": 59124016402.784515,\n      \"per\": 7835717.374527764,\n      \"t0\": 749237964.9804399,\n      \"rot\":[ 0.23064494887157544,-0.9713118073247223,0.9730379784777305,0.23023578431054564,0.05953869812558373,1.2376694794167027 ],\n    }\n   },\n   {\n    \"start\": 754876800 ,\n    \"stop\": 756604800 ,\n    \"interp\": 756432000 ,\n    \"sat\":{\n      \"e\": 0.8716689976402051,\n      \"a\": 58400970326.55915,\n      \"per\": 7692419.573748333,\n      \"t0\": 749398043.38706,\n      \"rot\":[ 0.22094923542438002,-0.9735510934019701,0.9752853097249963,0.22055635165302376,0.059608424583579206,1.2382775555252825 ],\n    }\n   },\n   {\n    \"start\": 756604800 ,\n    \"stop\": 756777600 ,\n    \"interp\": 756604800 ,\n    \"sat\":{\n      \"e\": 0.867898389155438,\n      \"a\": 55691566168.30046,\n      \"per\": 7163363.949293775,\n      \"t0\": 749938769.221322,\n      \"rot\":[ 0.20967770536204053,-0.9760383525179191,0.9777705558432966,0.2093062435540375,0.05949815815135824,1.2458379461775764 ],\n    }\n   },\n   {\n    \"start\": 756777600 ,\n    \"stop\": 756950400 ,\n    \"interp\": 756777600 ,\n    \"sat\":{\n      \"e\": 0.8627414632101552,\n      \"a\": 53529469706.52363,\n      \"per\": 6750287.67515728,\n      \"t0\": 750355915.8095065,\n      \"rot\":[ 0.2049699987170027,-0.9770408855788228,0.9787682563436311,0.20460825917227207,0.05938491547389744,1.2505062325390035 ],\n    }\n   },\n   {\n    \"start\": 756950400 ,\n    \"stop\": 757123200 ,\n    \"interp\": 756950400 ,\n    \"sat\":{\n      \"e\": 0.8467637742230096,\n      \"a\": 48407571568.839325,\n      \"per\": 5805007.888031788,\n      \"t0\": 751307411.2048813,\n      \"rot\":[ 0.19747762758314477,-0.9785940926019793,0.9803073939352558,0.19713249228709004,0.059096382369729,1.257175374118995 ],\n    }\n   },\n   {\n    \"start\": 757123200 ,\n    \"stop\": 757296000 ,\n    \"interp\": 757123200 ,\n    \"sat\":{\n      \"e\": 0.7770888014593815,\n      \"a\": 36613707769.38215,\n      \"per\": 3818549.6011349694,\n      \"t0\": 753301928.2883526,\n      \"rot\":[ 0.18568500389123635,-0.9809646723598197,0.9826093218211964,0.18537421227258016,0.057833493810352,1.1940625793840665 ],\n    }\n   },\n   {\n    \"start\": 757296000 ,\n    \"stop\": 757641600 ,\n    \"interp\": 757468800 ,\n    \"sat\":{\n      \"e\": 0.8578490234527624,\n      \"a\": 65343012503.781334,\n      \"per\": 9103986.376279965,\n      \"t0\": 757114019.237406,\n      \"rot\":[ 0.2546606157317849,-0.9654038735682984,0.9670304911403301,0.2542322575401365,0.05797689302964159,1.3244609441828965 ],\n    }\n   },\n   {\n    \"start\": 757641600 ,\n    \"stop\": 759369600 ,\n    \"interp\": 759196800 ,\n    \"sat\":{\n      \"e\": 0.8590429718206081,\n      \"a\": 59266338501.82267,\n      \"per\": 7864027.357392924,\n      \"t0\": 757121077.6939429,\n      \"rot\":[ 0.24466034187512545,-0.9679168217946768,0.9696088474810586,0.24423339488101836,0.05905145986158554,1.2522023130038886 ],\n    }\n   },\n   {\n    \"start\": 759369600 ,\n    \"stop\": 761097600 ,\n    \"interp\": 760924800 ,\n    \"sat\":{\n      \"e\": 0.8656828219157774,\n      \"a\": 59300382339.31788,\n      \"per\": 7870804.22564769,\n      \"t0\": 757142760.9811907,\n      \"rot\":[ 0.23697291581901977,-0.969803188614766,0.9715162567699173,0.23655506305238405,0.05935888726143021,1.2404021791929574 ],\n    }\n   },\n   {\n    \"start\": 761097600 ,\n    \"stop\": 762825600 ,\n    \"interp\": 762652800 ,\n    \"sat\":{\n      \"e\": 0.8693665781582128,\n      \"a\": 59188624800.86645,\n      \"per\": 7848564.728016268,\n      \"t0\": 757183072.8329706,\n      \"rot\":[ 0.23091593042685288,-0.9712504356989805,0.9729737062609147,0.23050694648142286,0.05949066127007703,1.237270314753929 ],\n    }\n   },\n   {\n    \"start\": 762825600 ,\n    \"stop\": 764553600 ,\n    \"interp\": 764380800 ,\n    \"sat\":{\n      \"e\": 0.872007235398079,\n      \"a\": 58503878284.05983,\n      \"per\": 7712760.669186988,\n      \"t0\": 757332996.1226957,\n      \"rot\":[ 0.2225871940561,-0.9731825813200186,0.9749127863774442,0.22219216232171785,0.059550872521775676,1.2389911963718443 ],\n    }\n   },\n   {\n    \"start\": 764553600 ,\n    \"stop\": 764726400 ,\n    \"interp\": 764553600 ,\n    \"sat\":{\n      \"e\": 0.8691081519223004,\n      \"a\": 55915338574.19451,\n      \"per\": 7206581.596651106,\n      \"t0\": 757849496.3450874,\n      \"rot\":[ 0.21296451947514672,-0.9753313579785906,0.9770599333944259,0.2125877511519068,0.05945746550109096,1.2485528055558333 ],\n    }\n   },\n   {\n    \"start\": 764726400 ,\n    \"stop\": 764899200 ,\n    \"interp\": 764726400 ,\n    \"sat\":{\n      \"e\": 0.8645140944022706,\n      \"a\": 53823283079.784225,\n      \"per\": 6805940.491574081,\n      \"t0\": 758253852.9805523,\n      \"rot\":[ 0.20896343617194968,-0.976198904244433,0.977923454235152,0.20859493300296414,0.05936205250374303,1.2544435917315648 ],\n    }\n   },\n   {\n    \"start\": 764899200 ,\n    \"stop\": 765072000 ,\n    \"interp\": 764899200 ,\n    \"sat\":{\n      \"e\": 0.8498192678130546,\n      \"a\": 48788238613.394226,\n      \"per\": 5873616.385122181,\n      \"t0\": 759191981.3976022,\n      \"rot\":[ 0.20261491709568313,-0.9775455929232996,0.9792584926209777,0.20226050706722437,0.059121071008094564,1.2641758352936228 ],\n    }\n   },\n   {\n    \"start\": 765072000 ,\n    \"stop\": 765244800 ,\n    \"interp\": 765072000 ,\n    \"sat\":{\n      \"e\": 0.7772796682868033,\n      \"a\": 35704144553.5546,\n      \"per\": 3677145.5287956456,\n      \"t0\": 761397344.655983,\n      \"rot\":[ 0.1923510844051456,-0.9796691155509576,0.9813261742805827,0.19202628205917732,0.058088992366314776,1.2247799115321871 ],\n    }\n   },\n   {\n    \"start\": 765244800 ,\n    \"stop\": 765590400 ,\n    \"interp\": 765417600 ,\n    \"sat\":{\n      \"e\": 0.8610372262234881,\n      \"a\": 66779768177.88022,\n      \"per\": 9405897.256833306,\n      \"t0\": 765067475.1556863,\n      \"rot\":[ 0.25125162260698936,-0.9662846290358398,0.9679218057970153,0.2508266468338678,0.05813784419074631,1.3235321885540607 ],\n    }\n   },\n   {\n    \"start\": 765590400 ,\n    \"stop\": 767318400 ,\n    \"interp\": 767145600 ,\n    \"sat\":{\n      \"e\": 0.8589514958310692,\n      \"a\": 59418195589.67948,\n      \"per\": 7894271.49694606,\n      \"t0\": 765072175.7071455,\n      \"rot\":[ 0.24275474652558346,-0.9683937890869355,0.9700876934789451,0.24233086388684366,0.059069634040713366,1.2510957889002456 ],\n    }\n   },\n   {\n    \"start\": 767318400 ,\n    \"stop\": 769046400 ,\n    \"interp\": 768873600 ,\n    \"sat\":{\n      \"e\": 0.8654549319452797,\n      \"a\": 59372481037.220116,\n      \"per\": 7885162.830916901,\n      \"t0\": 765091431.8860388,\n      \"rot\":[ 0.23625351308612305,-0.9699796871622627,0.9716914518274127,0.23583732087309306,0.059330974844516896,1.239599313485848 ],\n    }\n   },\n   {\n    \"start\": 769046400 ,\n    \"stop\": 770774400 ,\n    \"interp\": 770601600 ,\n    \"sat\":{\n      \"e\": 0.8692551474852668,\n      \"a\": 59255432620.822426,\n      \"per\": 7861856.811604485,\n      \"t0\": 765128073.4555857,\n      \"rot\":[ 0.2311701637244462,-0.9711929947931416,0.9729133339633149,0.23076140060675876,0.05944192842376378,1.2369878401446581 ],\n    }\n   },\n   {\n    \"start\": 770774400 ,\n    \"stop\": 772502400 ,\n    \"interp\": 772329600 ,\n    \"sat\":{\n      \"e\": 0.8722646139951928,\n      \"a\": 58614321781.10102,\n      \"per\": 7734611.173207003,\n      \"t0\": 765266763.110277,\n      \"rot\":[ 0.2242384226547788,-0.9728081869207483,0.9745343143293091,0.22384124414427842,0.059492258991465985,1.239753484079992 ],\n    }\n   },\n   {\n    \"start\": 772502400 ,\n    \"stop\": 772675200 ,\n    \"interp\": 772502400 ,\n    \"sat\":{\n      \"e\": 0.8702041572671937,\n      \"a\": 56168789362.28439,\n      \"per\": 7255635.632387641,\n      \"t0\": 765754670.6140839,\n      \"rot\":[ 0.21629299956911785,-0.9746036499307029,0.9763284991934803,0.21591088143863318,0.05941562772658775,1.251091422346133 ],\n    }\n   },\n   {\n    \"start\": 772675200 ,\n    \"stop\": 772848000 ,\n    \"interp\": 772675200 ,\n    \"sat\":{\n      \"e\": 0.8661785544671358,\n      \"a\": 54166566130.82345,\n      \"per\": 6871156.284212322,\n      \"t0\": 766142489.3043392,\n      \"rot\":[ 0.2130066368928015,-0.9753291470208794,0.9770507523356288,0.21263131006635475,0.05933785428366601,1.2580360148076741 ],\n    }\n   },\n   {\n    \"start\": 772848000 ,\n    \"stop\": 773020800 ,\n    \"interp\": 772848000 ,\n    \"sat\":{\n      \"e\": 0.852843548048675,\n      \"a\": 49273373277.680855,\n      \"per\": 5961441.860540355,\n      \"t0\": 767057546.9468718,\n      \"rot\":[ 0.2078099528760471,-0.9764569441921166,0.9781692202710404,0.20744618349555755,0.05914319142658129,1.2703608375786648 ],\n    }\n   },\n   {\n    \"start\": 773020800 ,\n    \"stop\": 773193600 ,\n    \"interp\": 773020800 ,\n    \"sat\":{\n      \"e\": 0.7806873873163872,\n      \"a\": 35366947474.74703,\n      \"per\": 3625177.167607543,\n      \"t0\": 769403124.1706672,\n      \"rot\":[ 0.19922380392696656,-0.9782856545059158,0.9799540172624783,0.19888462722189934,0.05832737987204731,1.25190207823723 ],\n    }\n   },\n   {\n    \"start\": 773193600 ,\n    \"stop\": 773366400 ,\n    \"interp\": 773193600 ,\n    \"sat\":{\n      \"e\": 0.9934540530443737,\n      \"a\": 1408561745824.211,\n      \"per\": 911164318.1925802,\n      \"t0\": 773031318.2814809,\n      \"rot\":[ 0.24312030765020493,-0.9684027068458273,0.9699961422645297,0.24272092821730198,0.05729527361838972,1.3696045088804811 ],\n    }\n   },\n   {\n    \"start\": 773366400 ,\n    \"stop\": 773712000 ,\n    \"interp\": 773539200 ,\n    \"sat\":{\n      \"e\": 0.8548291834909573,\n      \"a\": 61840836411.24056,\n      \"per\": 8381966.141679587,\n      \"t0\": 773018927.1950656,\n      \"rot\":[ 0.2462291712689874,-0.967543977263369,0.9692116359269464,0.24580550094202164,0.05863708526199969,1.2871410593413795 ],\n    }\n   },\n   {\n    \"start\": 773712000 ,\n    \"stop\": 776995200 ,\n    \"interp\": 776822400 ,\n    \"sat\":{\n      \"e\": 0.8626953020894159,\n      \"a\": 59474728444.1927,\n      \"per\": 7905540.566150284,\n      \"t0\": 773030933.926298,\n      \"rot\":[ 0.23780481886834431,-0.9696078903023048,0.9713129609569687,0.23738736946275768,0.05922647957683996,1.2422396854860025 ],\n    }\n   },\n   {\n    \"start\": 776995200 ,\n    \"stop\": 778723200 ,\n    \"interp\": 778550400 ,\n    \"sat\":{\n      \"e\": 0.8691237133158691,\n      \"a\": 59323987117.60673,\n      \"per\": 7875504.205697645,\n      \"t0\": 773073079.1726946,\n      \"rot\":[ 0.23151612495222373,-0.9711138607660329,0.9728310664689458,0.23110746118336686,0.05939032592492413,1.2369443233498922 ],\n    }\n   },\n   {\n    \"start\": 778723200 ,\n    \"stop\": 780451200 ,\n    \"interp\": 780278400 ,\n    \"sat\":{\n      \"e\": 0.8724410307597491,\n      \"a\": 58730906555.54264,\n      \"per\": 7757699.032513283,\n      \"t0\": 773199690.1185646,\n      \"rot\":[ 0.2260526610990479,-0.9723933125612539,0.974115082734088,0.22565310796998875,0.05942996339925014,1.240738868456479 ],\n    }\n   },\n   {\n    \"start\": 780451200 ,\n    \"stop\": 780624000 ,\n    \"interp\": 780451200 ,\n    \"sat\":{\n      \"e\": 0.8711729212848172,\n      \"a\": 56448005769.55524,\n      \"per\": 7309804.7219712725,\n      \"t0\": 773655113.7491713,\n      \"rot\":[ 0.21981089205087923,-0.9738216880432713,0.9755425012452286,0.21942315549968608,0.059370015387519424,1.2536299352150173 ],\n    }\n   },\n   {\n    \"start\": 780624000 ,\n    \"stop\": 780796800 ,\n    \"interp\": 780624000 ,\n    \"sat\":{\n      \"e\": 0.8677116633349493,\n      \"a\": 54554237550.25076,\n      \"per\": 6945053.659367495,\n      \"t0\": 774022814.3353786,\n      \"rot\":[ 0.21724564222923365,-0.974398639779994,0.9761169658050247,0.21686320974015266,0.05930968770863621,1.2614578027279517 ],\n    }\n   },\n   {\n    \"start\": 780796800 ,\n    \"stop\": 780969600 ,\n    \"interp\": 780796800 ,\n    \"sat\":{\n      \"e\": 0.8557834280804482,\n      \"a\": 49856662473.94943,\n      \"per\": 6067610.210679971,\n      \"t0\": 774905102.4328092,\n      \"rot\":[ 0.21320635460912526,-0.975295964886735,0.977007190533564,0.21283292421310657,0.05916018294892672,1.2759086269870676 ],\n    }\n   },\n   {\n    \"start\": 780969600 ,\n    \"stop\": 781142400 ,\n    \"interp\": 780969600 ,\n    \"sat\":{\n      \"e\": 0.7865379946657168,\n      \"a\": 35509525369.842476,\n      \"per\": 3647120.9912933824,\n      \"t0\": 777334956.3812405,\n      \"rot\":[ 0.20641757916572723,-0.9767855470727702,0.9784639916784678,0.2060634930928432,0.05854768863178677,1.2752612640500707 ],\n    }\n   },\n   {\n    \"start\": 781142400 ,\n    \"stop\": 781315200 ,\n    \"interp\": 781142400 ,\n    \"sat\":{\n      \"e\": 1.000710131526232,\n      \"a\": -12748652560535.66,\n      \"per\": 24810144747.412746,\n      \"t0\": 780984984.4758292,\n      \"rot\":[ 0.24013059215042643,-0.9691262058263762,0.9707405929049663,0.23973124372719654,0.05764831273839427,1.3512530707917392 ],\n    }\n   },\n   {\n    \"start\": 781315200 ,\n    \"stop\": 781660800 ,\n    \"interp\": 781488000 ,\n    \"sat\":{\n      \"e\": 0.8563286600308494,\n      \"a\": 62389598895.341934,\n      \"per\": 8493782.976572996,\n      \"t0\": 780972342.4011469,\n      \"rot\":[ 0.24321867752274298,-0.9682961088811625,0.969971481490094,0.2427985807280659,0.058749423163438994,1.2855405905475423 ],\n    }\n   },\n   {\n    \"start\": 781660800 ,\n    \"stop\": 784339200 ,\n    \"interp\": 784166400 ,\n    \"sat\":{\n      \"e\": 0.8613581920271522,\n      \"a\": 59595162964.937035,\n      \"per\": 7929565.438018031,\n      \"t0\": 780978797.5539756,\n      \"rot\":[ 0.23748284556020288,-0.9696892047331476,0.9713917325490417,0.23706661682691632,0.05917994094484951,1.2436979478159083 ],\n    }\n   },\n   {\n    \"start\": 784339200 ,\n    \"stop\": 786153600 ,\n    \"interp\": 785980800 ,\n    \"sat\":{\n      \"e\": 0.8838847951802363,\n      \"a\": 57864064961.30624,\n      \"per\": 7586584.150011375,\n      \"t0\": 780737178.1151491,\n      \"rot\":[ 0.23198330282962096,-0.9710054275384863,0.9727197680772507,0.23157445087306683,0.05934419427070252,1.1855510936112126 ],\n    }\n   },\n   {\n    \"start\": 786153600 ,\n    \"stop\": 787881600 ,\n    \"interp\": 787708800 ,\n    \"sat\":{\n      \"e\": 0.887679851530491,\n      \"a\": 57358949501.117424,\n      \"per\": 7487462.377140095,\n      \"t0\": 780841288.9917781,\n      \"rot\":[ 0.2274017922803235,-0.9720816848661236,0.973801019134657,0.22700029373338124,0.0593975133553335,1.1892851487737943 ],\n    }\n   },\n   {\n    \"start\": 787881600 ,\n    \"stop\": 788054400 ,\n    \"interp\": 787881600 ,\n    \"sat\":{\n      \"e\": 0.8877646035984662,\n      \"a\": 55123790785.063934,\n      \"per\": 7054097.912743261,\n      \"t0\": 781279882.8588083,\n      \"rot\":[ 0.22193269360994902,-0.9733419826226303,0.9750619875202974,0.22154120535089758,0.05937069307258123,1.2038423518755301 ],\n    }\n   },\n   {\n    \"start\": 788054400 ,\n    \"stop\": 788227200 ,\n    \"interp\": 788054400 ,\n    \"sat\":{\n      \"e\": 0.884685314538086,\n      \"a\": 52943068645.35618,\n      \"per\": 6639670.609501915,\n      \"t0\": 781696700.2119429,\n      \"rot\":[ 0.21947143588686474,-0.9739005856202048,0.9756189260309365,0.2190848847169116,0.05932505893127994,1.2139744487742845 ],\n    }\n   },\n   {\n    \"start\": 788227200 ,\n    \"stop\": 788400000 ,\n    \"interp\": 788227200 ,\n    \"sat\":{\n      \"e\": 0.8699170223104292,\n      \"a\": 46376993555.3619,\n      \"per\": 5443606.916474523,\n      \"t0\": 782897366.5740418,\n      \"rot\":[ 0.2151440856439643,-0.9748705935837767,0.9765823172740855,0.21476698765466778,0.059181642249559296,1.2364653896649809 ],\n    }\n   },\n   {\n    \"start\": 788400000 ,\n    \"stop\": 788572800 ,\n    \"interp\": 788400000 ,\n    \"sat\":{\n      \"e\": 0.7405542643579788,\n      \"a\": 26443538420.44909,\n      \"per\": 2343755.0542112486,\n      \"t0\": 786004138.0045499,\n      \"rot\":[ 0.20905294905087476,-0.9762495311155401,0.9779043227704499,0.20869919350703628,0.058150663162172704,1.129104153567788 ],\n    }\n   },\n   {\n    \"start\": 788572800 ,\n    \"stop\": 788918400 ,\n    \"interp\": 788745600 ,\n    \"sat\":{\n      \"e\": 0.8755940420213469,\n      \"a\": 63348445807.489494,\n      \"per\": 8690340.967322715,\n      \"t0\": 788339886.41617,\n      \"rot\":[ 0.24127608377008003,-0.9687812616458678,0.9704565170065959,0.24085957973752628,0.058732699005774394,1.2442136455515733 ],\n    }\n   },\n   {\n    \"start\": 788918400 ,\n    \"stop\": 792201600 ,\n    \"interp\": 792028800 ,\n    \"sat\":{\n      \"e\": 0.8778091260065496,\n      \"a\": 58102137496.23432,\n      \"per\": 7633452.975327346,\n      \"t0\": 788344645.2427045,\n      \"rot\":[ 0.23571673750727407,-0.9701180078361856,0.9718218044780261,0.2353034792494948,0.05918888007922729,1.1901743226182637 ],\n    }\n   },\n   {\n    \"start\": 792201600 ,\n    \"stop\": 793756800 ,\n    \"interp\": 793584000 ,\n    \"sat\":{\n      \"e\": 0.8836367294253217,\n      \"a\": 57931747419.90876,\n      \"per\": 7599898.858982133,\n      \"t0\": 788370326.2816749,\n      \"rot\":[ 0.23217635552151947,-0.9709622632813857,0.9726737068188618,0.23176783545931728,0.05929547815805128,1.1856496485369628 ],\n    }\n   },\n   {\n    \"start\": 793756800 ,\n    \"stop\": 795484800 ,\n    \"interp\": 795312000 ,\n    \"sat\":{\n      \"e\": 0.8875604947833572,\n      \"a\": 57499527893.63822,\n      \"per\": 7515005.247906354,\n      \"t0\": 788457770.0522689,\n      \"rot\":[ 0.2291059338569721,-0.9716866402410871,0.9734014953098874,0.2287023147194837,0.059332321873819,1.1900551118409601 ],\n    }\n   },\n   {\n    \"start\": 795484800 ,\n    \"stop\": 795657600 ,\n    \"interp\": 795484800 ,\n    \"sat\":{\n      \"e\": 0.8885356809323658,\n      \"a\": 55686630520.38854,\n      \"per\": 7162411.694004791,\n      \"t0\": 788814092.0083535,\n      \"rot\":[ 0.2256552168466918,-0.9724917647620946,0.9742072280115112,0.22525786480452953,0.05931830926123077,1.204580560033729 ],\n    }\n   },\n   {\n    \"start\": 795657600 ,\n    \"stop\": 795830400 ,\n    \"interp\": 795657600 ,\n    \"sat\":{\n      \"e\": 0.8866704339087814,\n      \"a\": 54008107698.174,\n      \"per\": 6841027.108836171,\n      \"t0\": 789137274.291231,\n      \"rot\":[ 0.22418536062977942,-0.972831885235645,0.9745465222755124,0.22379092433110556,0.05929372020619195,1.214017101518159 ],\n    }\n   },\n   {\n    \"start\": 795830400 ,\n    \"stop\": 796003200 ,\n    \"interp\": 795830400 ,\n    \"sat\":{\n      \"e\": 0.8777311588962898,\n      \"a\": 49240622135.18544,\n      \"per\": 5955499.150366816,\n      \"t0\": 790026199.7683203,\n      \"rot\":[ 0.2217304629741341,-0.9733964621115524,0.9751079949365999,0.22134127637361004,0.05922302695754733,1.2340756987160026 ],\n    }\n   },\n   {\n    \"start\": 796003200 ,\n    \"stop\": 796176000 ,\n    \"interp\": 796003200 ,\n    \"sat\":{\n      \"e\": 0.7893960252637359,\n      \"a\": 29697180313.18727,\n      \"per\": 2789367.2255174033,\n      \"t0\": 793201691.5645838,\n      \"rot\":[ 0.21682518010993876,-0.9745194613518726,0.9762104492732562,0.21644959638115294,0.058833593064610244,1.2646354257772363 ],\n    }\n   },\n   {\n    \"start\": 796176000 ,\n    \"stop\": 796348800 ,\n    \"interp\": 796176000 ,\n    \"sat\":{\n      \"e\": 0.9546121095891261,\n      \"a\": 174625486986.3547,\n      \"per\": 39773546.28854957,\n      \"t0\": 795990493.2313122,\n      \"rot\":[ 0.23766459164219725,-0.9696832527686765,0.9713472818099341,0.23725744500167303,0.05850892317618909,1.3008884577310564 ],\n    }\n   },\n   {\n    \"start\": 796348800 ,\n    \"stop\": 796694400 ,\n    \"interp\": 796521600 ,\n    \"sat\":{\n      \"e\": 0.8733833599271653,\n      \"a\": 60746802125.71651,\n      \"per\": 8160523.13894987,\n      \"t0\": 795980240.9339244,\n      \"rot\":[ 0.23739440208173593,-0.9697225768729302,0.9714133506701743,0.23698121007199535,0.058974824931803546,1.2231855763816273 ],\n    }\n   },\n   {\n    \"start\": 796694400 ,\n    \"stop\": 799286400 ,\n    \"interp\": 799113600 ,\n    \"sat\":{\n      \"e\": 0.8772122656558228,\n      \"a\": 58207080425.194,\n      \"per\": 7654143.398124269,\n      \"t0\": 795982898.4435722,\n      \"rot\":[ 0.2346313366251018,-0.9703809112477488,0.9720844283669594,0.2342201598929371,0.05917604063905848,1.190578824639403 ],\n    }\n   },\n   {\n    \"start\": 799286400 ,\n    \"stop\": 1000000000000 ,\n    \"sat\":{\n      \"e\": 0.8837636456366011,\n      \"a\": 57978999717.67802,\n      \"per\": 7609199.093773761,\n      \"t0\": 796007287.8576818,\n      \"rot\":[ 0.23216284466650589,-0.970967952559531,0.9726769317488494,0.23175493793291585,0.05925271171906588,1.1859719727527707 ],\n    }\n   }\n ]},\n \n  \"Spitzer\": {\n \"color\": 16776960 ,\n \"horizonsID\": -79 ,\n \"orbits\":[\n   {\n    \"start\": 115171200 ,\n    \"stop\": 119923200 ,\n    \"interp\": 119750400 ,\n    \"sat\":{\n      \"e\": 0.011011529148985672,\n      \"a\": 150678102527.31992,\n      \"per\": 31879249.13254649,\n      \"t0\": 99552782.53093502,\n      \"rot\":[ 0.8004813399865546,0.599226050790381,-0.5993576764615015,0.8003055453021231,0.020956483789870983,3.361018354795152 ],\n    }\n   },\n   {\n    \"start\": 119923200 ,\n    \"stop\": 124416000 ,\n    \"interp\": 124243200 ,\n    \"sat\":{\n      \"e\": 0.014835398973628991,\n      \"a\": 150178391751.54178,\n      \"per\": 31720793.569430824,\n      \"t0\": 99651102.54148299,\n      \"rot\":[ 0.7434784400529872,0.6686304785846336,-0.6687599039837666,0.7433345543426187,0.019672911018560457,3.4564342813255577 ],\n    }\n   },\n   {\n    \"start\": 124416000 ,\n    \"stop\": 128908800 ,\n    \"interp\": 128736000 ,\n    \"sat\":{\n      \"e\": 0.01088199530847618,\n      \"a\": 149386413394.3491,\n      \"per\": 31470201.27514709,\n      \"t0\": 101734197.27746752,\n      \"rot\":[ 0.7318569689137615,0.6813246686081043,-0.6814582724219889,0.7317134841455492,0.019800834973254966,3.842250463575368 ],\n    }\n   },\n   {\n    \"start\": 128908800 ,\n    \"stop\": 133401600 ,\n    \"interp\": 133228800 ,\n    \"sat\":{\n      \"e\": 0.005793406341532533,\n      \"a\": 149186365635.8526,\n      \"per\": 31407008.428750377,\n      \"t0\": 129307125.46771671,\n      \"rot\":[ 0.731000451179056,0.6822420888818741,-0.6823769781990133,0.7308559501849746,0.01988246054478796,3.0491039396176336 ],\n    }\n   },\n   {\n    \"start\": 133401600 ,\n    \"stop\": 142387200 ,\n    \"interp\": 142214400 ,\n    \"sat\":{\n      \"e\": 0.01659248008255988,\n      \"a\": 150473192114.4578,\n      \"per\": 31814241.32513795,\n      \"t0\": 129792256.70191883,\n      \"rot\":[ 0.7308733244840926,0.6823780846403508,-0.6825131380109619,0.7307287017648156,0.019892561918302076,3.1395876965498672 ],\n    }\n   },\n   {\n    \"start\": 142387200 ,\n    \"stop\": 146880000 ,\n    \"interp\": 146707200 ,\n    \"sat\":{\n      \"e\": 0.011584064018199123,\n      \"a\": 152188915785.94418,\n      \"per\": 32359917.40803906,\n      \"t0\": 132615967.70592634,\n      \"rot\":[ 0.7305210213156668,0.6827552633841292,-0.6828902089032433,0.7303766635006623,0.019879128122444092,3.7291691691651336 ],\n    }\n   },\n   {\n    \"start\": 146880000 ,\n    \"stop\": 151545600 ,\n    \"interp\": 151372800 ,\n    \"sat\":{\n      \"e\": 0.008289094895433446,\n      \"a\": 152593209126.115,\n      \"per\": 32488950.30055676,\n      \"t0\": 129982850.10723305,\n      \"rot\":[ 0.7293737153954115,0.6839820312033388,-0.6841154751138825,0.7292314433896306,0.0197505180395556,3.243544546534151 ],\n    }\n   },\n   {\n    \"start\": 151545600 ,\n    \"stop\": 160531200 ,\n    \"interp\": 160358400 ,\n    \"sat\":{\n      \"e\": 0.01477729442846388,\n      \"a\": 151638673707.8657,\n      \"per\": 32184579.23605376,\n      \"t0\": 131191257.54357265,\n      \"rot\":[ 0.7218363463329729,0.6919296486328167,-0.6920637897713364,0.721696434448038,0.01968801279600929,3.4599930995738113 ],\n    }\n   },\n   {\n    \"start\": 160531200 ,\n    \"stop\": 165024000 ,\n    \"interp\": 164851200 ,\n    \"sat\":{\n      \"e\": 0.006447289032800879,\n      \"a\": 150154290017.3192,\n      \"per\": 31713157.696000505,\n      \"t0\": 133491800.82769157,\n      \"rot\":[ 0.7184830811880534,0.6954071744383243,-0.6955444357095534,0.7183412931210124,0.019865757899905863,3.828587519719621 ],\n    }\n   },\n   {\n    \"start\": 165024000 ,\n    \"stop\": 169516800 ,\n    \"interp\": 169344000 ,\n    \"sat\":{\n      \"e\": 0.009168943264380952,\n      \"a\": 149960961865.3382,\n      \"per\": 31651929.952157866,\n      \"t0\": 160159399.6385076,\n      \"rot\":[ 0.7213813416422226,0.6923998162453916,-0.6925380566658175,0.7212373436929458,0.019979702852931845,2.806473415585541 ],\n    }\n   },\n   {\n    \"start\": 169516800 ,\n    \"stop\": 178502400 ,\n    \"interp\": 178329600 ,\n    \"sat\":{\n      \"e\": 0.01585730162569424,\n      \"a\": 151159488243.7203,\n      \"per\": 32032142.606219992,\n      \"t0\": 163272904.81052724,\n      \"rot\":[ 0.7284800460198995,0.6849307633727594,-0.6850670204810951,0.7283351542332809,0.019943733190959805,3.4142964046719038 ],\n    }\n   },\n   {\n    \"start\": 178502400 ,\n    \"stop\": 182995200 ,\n    \"interp\": 182822400 ,\n    \"sat\":{\n      \"e\": 0.008002446452518762,\n      \"a\": 152619327224.2438,\n      \"per\": 32497291.94864502,\n      \"t0\": 163917247.91737506,\n      \"rot\":[ 0.729227115792243,0.6841386793621403,-0.6842717395840096,0.7290853137621324,0.01971985438585474,3.581187415318735 ],\n    }\n   },\n   {\n    \"start\": 182995200 ,\n    \"stop\": 187660800 ,\n    \"interp\": 187488000 ,\n    \"sat\":{\n      \"e\": 0.010937423585966572,\n      \"a\": 152854447326.3141,\n      \"per\": 32572417.184350066,\n      \"t0\": 161163712.7988806,\n      \"rot\":[ 0.7244659659176932,0.6891778057103336,-0.6893105716779222,0.7243264287788445,0.019625918800791037,3.076829066517083 ],\n    }\n   },\n   {\n    \"start\": 187660800 ,\n    \"stop\": 196646400 ,\n    \"interp\": 196473600 ,\n    \"sat\":{\n      \"e\": 0.01358833525453746,\n      \"a\": 151653481362.2463,\n      \"per\": 32189293.6312846,\n      \"t0\": 164518378.00980103,\n      \"rot\":[ 0.7167165501229374,0.6972286017092146,-0.6973646010372729,0.7165767767976496,0.019748415453007612,3.6898208412705142 ],\n    }\n   },\n   {\n    \"start\": 196646400 ,\n    \"stop\": 201139200 ,\n    \"interp\": 200966400 ,\n    \"sat\":{\n      \"e\": 0.005812294654439922,\n      \"a\": 150147012366.3183,\n      \"per\": 31710852.12254098,\n      \"t0\": 193325387.66015399,\n      \"rot\":[ 0.7192126499080745,0.6946512338860408,-0.6947900144735857,0.7190689910297879,0.01998623025995403,3.006999714164804 ],\n    }\n   },\n   {\n    \"start\": 201139200 ,\n    \"stop\": 205632000 ,\n    \"interp\": 205459200 ,\n    \"sat\":{\n      \"e\": 0.014064333640638239,\n      \"a\": 150084713070.75708,\n      \"per\": 31691117.87564484,\n      \"t0\": 193139690.7370501,\n      \"rot\":[ 0.7250652453202012,0.6885422237921046,-0.688680179785041,0.7249200006931625,0.02001496066567271,2.943475811369958 ],\n    }\n   },\n   {\n    \"start\": 205632000 ,\n    \"stop\": 214617600 ,\n    \"interp\": 214444800 ,\n    \"sat\":{\n      \"e\": 0.01442243831469306,\n      \"a\": 151416426109.3558,\n      \"per\": 32113848.692327205,\n      \"t0\": 196717961.73667604,\n      \"rot\":[ 0.7301307680926057,0.6831731825702274,-0.6833074428721684,0.7299873076658197,0.019822544328987522,3.655613244532233 ],\n    }\n   },\n   {\n    \"start\": 214617600 ,\n    \"stop\": 219110400 ,\n    \"interp\": 218937600 ,\n    \"sat\":{\n      \"e\": 0.008057426344777616,\n      \"a\": 152867871248.7653,\n      \"per\": 32576708.121347588,\n      \"t0\": 193847461.8362651,\n      \"rot\":[ 0.7251867442505265,0.6884195466718434,-0.6885522390954236,0.7250469919105017,0.019631283240443626,3.162283240880322 ],\n    }\n   },\n   {\n    \"start\": 219110400 ,\n    \"stop\": 223776000 ,\n    \"interp\": 223603200 ,\n    \"sat\":{\n      \"e\": 0.014133722967461309,\n      \"a\": 152963232342.38092,\n      \"per\": 32607195.576766495,\n      \"t0\": 193887411.22024497,\n      \"rot\":[ 0.7194755118419212,0.6943836252438379,-0.6945178096059205,0.7193365055252289,0.019656368229597584,3.195513003521969 ],\n    }\n   },\n   {\n    \"start\": 223776000 ,\n    \"stop\": 232761600 ,\n    \"interp\": 232588800 ,\n    \"sat\":{\n      \"e\": 0.010042774450517258,\n      \"a\": 151447752443.6675,\n      \"per\": 32123815.19216993,\n      \"t0\": 197626138.00854313,\n      \"rot\":[ 0.7170422427778623,0.6968919222586284,-0.697029713909022,0.7169004949698956,0.019882882150040488,3.849188105016007 ],\n    }\n   },\n   {\n    \"start\": 232761600 ,\n    \"stop\": 237254400 ,\n    \"interp\": 237081600 ,\n    \"sat\":{\n      \"e\": 0.01109789219140552,\n      \"a\": 150033290645.0039,\n      \"per\": 31674832.12747689,\n      \"t0\": 224603298.75168562,\n      \"rot\":[ 0.723696986429167,0.689979936684765,-0.6901178680727966,0.7235523437029452,0.01999232088735117,2.797178376211201 ],\n    }\n   },\n   {\n    \"start\": 237254400 ,\n    \"stop\": 241920000 ,\n    \"interp\": 241747200 ,\n    \"sat\":{\n      \"e\": 0.017238182363925682,\n      \"a\": 150172808222.3674,\n      \"per\": 31719024.54998658,\n      \"t0\": 226869874.43718514,\n      \"rot\":[ 0.7278139955682177,0.6856386075889033,-0.6857745896831017,0.727669677489372,0.01991331830869716,3.2256728514708577 ],\n    }\n   },\n   {\n    \"start\": 241920000 ,\n    \"stop\": 250905600 ,\n    \"interp\": 250732800 ,\n    \"sat\":{\n      \"e\": 0.01044701364845671,\n      \"a\": 151751918617.5433,\n      \"per\": 32220639.497673687,\n      \"t0\": 229698565.69793817,\n      \"rot\":[ 0.7271201824178495,0.686376742959493,-0.6865101895242585,0.7269788419221133,0.019716240054863086,3.814174738312546 ],\n    }\n   },\n   {\n    \"start\": 250905600 ,\n    \"stop\": 255398400 ,\n    \"interp\": 255225600 ,\n    \"sat\":{\n      \"e\": 0.01199771001355761,\n      \"a\": 153102630282.8097,\n      \"per\": 32651778.95064884,\n      \"t0\": 225350867.08475375,\n      \"rot\":[ 0.720921770765153,0.6928821160724298,-0.69301645033638,0.7207820273356941,0.01968863369659598,3.0490063105904794 ],\n    }\n   },\n   {\n    \"start\": 255398400 ,\n    \"stop\": 260064000 ,\n    \"interp\": 259891200 ,\n    \"sat\":{\n      \"e\": 0.015427402887067572,\n      \"a\": 152898132703.6044,\n      \"per\": 32586381.841793425,\n      \"t0\": 227501402.52646232,\n      \"rot\":[ 0.7185430599855561,0.6953463725787045,-0.6954824735006581,0.7184024462725531,0.019782500631846892,3.469017943638187 ],\n    }\n   },\n   {\n    \"start\": 260064000 ,\n    \"stop\": 269049600 ,\n    \"interp\": 268876800 ,\n    \"sat\":{\n      \"e\": 0.005943418378391035,\n      \"a\": 151080345774.5051,\n      \"per\": 32006989.329024978,\n      \"t0\": 260108901.548297,\n      \"rot\":[ 0.7211132114903475,0.6926797885250484,-0.6928172458982798,0.7209701400982297,0.01991902747709461,3.470310266586468 ],\n    }\n   },\n   {\n    \"start\": 269049600 ,\n    \"stop\": 273542400 ,\n    \"interp\": 273369600 ,\n    \"sat\":{\n      \"e\": 0.016232792852531784,\n      \"a\": 149975117897.0011,\n      \"per\": 31656411.88156464,\n      \"t0\": 258234813.97685844,\n      \"rot\":[ 0.7254683576894311,0.688119425883667,-0.6882555208579149,0.7253249042851863,0.019885646713595755,3.0545753943881597 ],\n    }\n   },\n   {\n    \"start\": 273542400 ,\n    \"stop\": 278035200 ,\n    \"interp\": 277862400 ,\n    \"sat\":{\n      \"e\": 0.01712366010591783,\n      \"a\": 150373379715.158,\n      \"per\": 31782591.87581938,\n      \"t0\": 260886338.70279253,\n      \"rot\":[ 0.7260301811653336,0.6875278805061031,-0.6876628360156108,0.7258876959707216,0.019810763869747734,3.572452036358136 ],\n    }\n   },\n   {\n    \"start\": 278035200 ,\n    \"stop\": 287020800 ,\n    \"interp\": 286848000 ,\n    \"sat\":{\n      \"e\": 0.007094964900776479,\n      \"a\": 152079437366.0618,\n      \"per\": 32325006.106413987,\n      \"t0\": 260415489.01878157,\n      \"rot\":[ 0.7235748671072215,0.6901112861896721,-0.6902459066816454,0.7234337463795988,0.01974910815239192,3.535854570737204 ],\n    }\n   },\n   {\n    \"start\": 287020800 ,\n    \"stop\": 291513600 ,\n    \"interp\": 291340800 ,\n    \"sat\":{\n      \"e\": 0.01514674498667112,\n      \"a\": 153181118179.7493,\n      \"per\": 32676890.516778924,\n      \"t0\": 258619506.8958292,\n      \"rot\":[ 0.7213808364854022,0.6924029636376281,-0.6925385828613605,0.7212395691084204,0.01978938852338671,3.261218559344876 ],\n    }\n   },\n   {\n    \"start\": 291513600 ,\n    \"stop\": 296179200 ,\n    \"interp\": 296006400 ,\n    \"sat\":{\n      \"e\": 0.01332048102530515,\n      \"a\": 152665305281.0494,\n      \"per\": 32511978.242538843,\n      \"t0\": 293612497.8437622,\n      \"rot\":[ 0.7215537284474813,0.6922223325391506,-0.6923584454338217,0.7214118759615509,0.019827948852405783,3.7209513577704167 ],\n    }\n   },\n   {\n    \"start\": 296179200 ,\n    \"stop\": 300672000 ,\n    \"interp\": 300499200 ,\n    \"sat\":{\n      \"e\": 0.006459044485031185,\n      \"a\": 151397903017.1605,\n      \"per\": 32107956.039831672,\n      \"t0\": 291865726.42014825,\n      \"rot\":[ 0.7224637964212716,0.6912726112649498,-0.6914087523748622,0.7223215404507208,0.019843616500911477,3.374830598670045 ],\n    }\n   },\n   {\n    \"start\": 300672000 ,\n    \"stop\": 305164800 ,\n    \"interp\": 304992000 ,\n    \"sat\":{\n      \"e\": 0.01336291825816145,\n      \"a\": 150343210151.5488,\n      \"per\": 31773027.49514715,\n      \"t0\": 289778647.30880207,\n      \"rot\":[ 0.7230938106427943,0.6906139294206181,-0.6907498396743084,0.7229515364682644,0.019836239774450353,2.933201485298777 ],\n    }\n   },\n   {\n    \"start\": 305164800 ,\n    \"stop\": 309657600 ,\n    \"interp\": 309484800 ,\n    \"sat\":{\n      \"e\": 0.01797771253270282,\n      \"a\": 150056438982.9369,\n      \"per\": 31682162.98047555,\n      \"t0\": 292211263.04206246,\n      \"rot\":[ 0.7232085046874288,0.6904939902189646,-0.6906297551856373,0.7230663353444502,0.01982735895270535,3.389452865153905 ],\n    }\n   },\n   {\n    \"start\": 309657600 ,\n    \"stop\": 314323200 ,\n    \"interp\": 314150400 ,\n    \"sat\":{\n      \"e\": 0.01382790267651033,\n      \"a\": 150635501208.4707,\n      \"per\": 31865730.22665695,\n      \"t0\": 294481822.28313786,\n      \"rot\":[ 0.7231963087698421,0.6905067776273794,-0.690642526189689,0.7230541616308226,0.019825977882595474,3.841392180643342 ],\n    }\n   },\n   {\n    \"start\": 314323200 ,\n    \"stop\": 323308800 ,\n    \"interp\": 323136000 ,\n    \"sat\":{\n      \"e\": 0.009328672388666545,\n      \"a\": 152393049836.44022,\n      \"per\": 32425046.746747546,\n      \"t0\": 290278051.01839906,\n      \"rot\":[ 0.7236988500329113,0.6899802985837495,-0.6901159137862579,0.7235566354220877,0.019823796380809687,3.0925791615650833 ],\n    }\n   },\n   {\n    \"start\": 323308800 ,\n    \"stop\": 332467200 ,\n    \"interp\": 332294400 ,\n    \"sat\":{\n      \"e\": 0.01258931517506094,\n      \"a\": 152759055886.65802,\n      \"per\": 32541930.87851012,\n      \"t0\": 325908777.1739955,\n      \"rot\":[ 0.7234605792795152,0.6902306107039924,-0.6903656931138368,0.7233190212625812,0.01978124179457159,3.730743295314894 ],\n    }\n   },\n   {\n    \"start\": 332467200 ,\n    \"stop\": 336960000 ,\n    \"interp\": 336787200 ,\n    \"sat\":{\n      \"e\": 0.010066924896157122,\n      \"a\": 151108495661.7168,\n      \"per\": 32015935.24885488,\n      \"t0\": 322165546.45552605,\n      \"rot\":[ 0.7216314279135775,0.6921419431322902,-0.6922774604502238,0.7214901643866907,0.01978568296328997,2.9843171351546913 ],\n    }\n   },\n   {\n    \"start\": 336960000 ,\n    \"stop\": 341452800 ,\n    \"interp\": 341280000 ,\n    \"sat\":{\n      \"e\": 0.016668929080134287,\n      \"a\": 150325531908.9964,\n      \"per\": 31767423.569562033,\n      \"t0\": 323616573.07174903,\n      \"rot\":[ 0.721087062137698,0.6927083265197416,-0.692844462211847,0.7209453771107889,0.01982265352573697,3.237774038579939 ],\n    }\n   },\n   {\n    \"start\": 341452800 ,\n    \"stop\": 345945600 ,\n    \"interp\": 345772800 ,\n    \"sat\":{\n      \"e\": 0.01600568404196968,\n      \"a\": 150275112891.4063,\n      \"per\": 31751442.771497164,\n      \"t0\": 326086901.9169972,\n      \"rot\":[ 0.7217814445015918,0.6919845025283609,-0.6921210489308901,0.721639046492152,0.01986290105887466,3.7076648091239552 ],\n    }\n   },\n   {\n    \"start\": 345945600 ,\n    \"stop\": 350438400 ,\n    \"interp\": 350265600 ,\n    \"sat\":{\n      \"e\": 0.00895973604985344,\n      \"a\": 150962407886.6013,\n      \"per\": 31969518.20811445,\n      \"t0\": 326819963.8414559,\n      \"rot\":[ 0.723437168291334,0.6902538542844333,-0.6903902255497366,0.7232942693359949,0.01987502430674507,3.8635369483754816 ],\n    }\n   },\n   {\n    \"start\": 350438400 ,\n    \"stop\": 359424000 ,\n    \"interp\": 359251200 ,\n    \"sat\":{\n      \"e\": 0.01252003417215329,\n      \"a\": 152483246918.31882,\n      \"per\": 32453838.19074848,\n      \"t0\": 322891733.030452,\n      \"rot\":[ 0.7252016784905883,0.6884013068490671,-0.6885365099356995,0.7250592757218925,0.01981634219883588,3.172322263681437 ],\n    }\n   },\n   {\n    \"start\": 359424000 ,\n    \"stop\": 368582400 ,\n    \"interp\": 368409600 ,\n    \"sat\":{\n      \"e\": 0.009200695647826197,\n      \"a\": 152438235569.9493,\n      \"per\": 32439469.236401126,\n      \"t0\": 357784717.13323396,\n      \"rot\":[ 0.7225968896188986,0.6911348772523234,-0.6912696544135966,0.7224560045722227,0.01974595915513388,3.663687209916538 ],\n    }\n   },\n   {\n    \"start\": 368582400 ,\n    \"stop\": 373075200 ,\n    \"interp\": 372902400 ,\n    \"sat\":{\n      \"e\": 0.01359755985936086,\n      \"a\": 151059184817.2611,\n      \"per\": 32000265.011453997,\n      \"t0\": 355234258.3227758,\n      \"rot\":[ 0.7206161830859527,0.6931981271670415,-0.6933342027295587,0.7204747530914618,0.019811275827249644,3.1393551686493426 ],\n    }\n   },\n   {\n    \"start\": 373075200 ,\n    \"stop\": 377568000 ,\n    \"interp\": 377395200 ,\n    \"sat\":{\n      \"e\": 0.01634345992169158,\n      \"a\": 150489069730.38818,\n      \"per\": 31819276.916089974,\n      \"t0\": 357324756.3797029,\n      \"rot\":[ 0.7212022566265304,0.6925879930388821,-0.6927245520672702,0.721060083696262,0.01985516553225014,3.520422935722323 ],\n    }\n   },\n   {\n    \"start\": 377568000 ,\n    \"stop\": 386726400 ,\n    \"interp\": 386553600 ,\n    \"sat\":{\n      \"e\": 0.008767543278420286,\n      \"a\": 150784744921.3351,\n      \"per\": 31913098.917447507,\n      \"t0\": 358999964.2647337,\n      \"rot\":[ 0.7236741531599088,0.6900056181840611,-0.6901418115491111,0.723531342484669,0.019865631547074717,3.8404461012961795 ],\n    }\n   },\n   {\n    \"start\": 386726400 ,\n    \"stop\": 395712000 ,\n    \"interp\": 395539200 ,\n    \"sat\":{\n      \"e\": 0.01340187879298599,\n      \"a\": 152381133368.49048,\n      \"per\": 32421243.57648715,\n      \"t0\": 388520120.3807305,\n      \"rot\":[ 0.7241882633820597,0.6894673064624105,-0.6896023195869316,0.7240464788819156,0.0197871104047126,3.358918251427372 ],\n    }\n   },\n   {\n    \"start\": 395712000 ,\n    \"stop\": 404870400 ,\n    \"interp\": 404697600 ,\n    \"sat\":{\n      \"e\": 0.008978524330048523,\n      \"a\": 152210597533.8061,\n      \"per\": 32366832.936891053,\n      \"t0\": 388588445.4915277,\n      \"rot\":[ 0.7221173479699732,0.6916351479201859,-0.6917705802943723,0.7219759744139668,0.019786726116912515,3.384013022134223 ],\n    }\n   },\n   {\n    \"start\": 404870400 ,\n    \"stop\": 413856000 ,\n    \"interp\": 413683200 ,\n    \"sat\":{\n      \"e\": 0.015057092459448458,\n      \"a\": 150886886476.85052,\n      \"per\": 31945531.298385352,\n      \"t0\": 389616994.02810687,\n      \"rot\":[ 0.7221844014254577,0.6915647126432103,-0.6917005785292891,0.7220425478161682,0.01981936855327162,3.539243252525902 ],\n    }\n   },\n   {\n    \"start\": 413856000 ,\n    \"stop\": 422841600 ,\n    \"interp\": 422668800 ,\n    \"sat\":{\n      \"e\": 0.007170912009069231,\n      \"a\": 150907251260.2782,\n      \"per\": 31951998.91587287,\n      \"t0\": 389502822.2243042,\n      \"rot\":[ 0.7223116637955762,0.6914317890160016,-0.6915676831264359,0.7221697284457865,0.019823331068979887,3.4985516398488814 ],\n    }\n   },\n   {\n    \"start\": 422841600 ,\n    \"stop\": 431827200 ,\n    \"interp\": 431654400 ,\n    \"sat\":{\n      \"e\": 0.01295980005629266,\n      \"a\": 152150213510.5694,\n      \"per\": 32347574.300112996,\n      \"t0\": 421156171.01134366,\n      \"rot\":[ 0.7231051316101457,0.6906019225104284,-0.6907379884146186,0.7229626898229451,0.019847764329323114,3.4375028613847878 ],\n    }\n   },\n   {\n    \"start\": 431827200 ,\n    \"stop\": 440985600 ,\n    \"interp\": 440812800 ,\n    \"sat\":{\n      \"e\": 0.00995055742007149,\n      \"a\": 152225647344.33902,\n      \"per\": 32371633.457536172,\n      \"t0\": 420473862.5948719,\n      \"rot\":[ 0.7246129394211667,0.6890210539823656,-0.6891560694236224,0.724470977476555,0.019793684932194654,3.3128109146412648 ],\n    }\n   },\n   {\n    \"start\": 440985600 ,\n    \"stop\": 449971200 ,\n    \"interp\": 449798400 ,\n    \"sat\":{\n      \"e\": 0.013373977681517511,\n      \"a\": 151084878370.4998,\n      \"per\": 32008429.713334985,\n      \"t0\": 422455656.35576665,\n      \"rot\":[ 0.72134332671081,0.6924427377806962,-0.692577652693026,0.7212028082125529,0.019737383846441543,3.659076753158773 ],\n    }\n   },\n   {\n    \"start\": 449971200 ,\n    \"stop\": 458956800 ,\n    \"interp\": 458784000 ,\n    \"sat\":{\n      \"e\": 0.007608901149358542,\n      \"a\": 150783630977.2809,\n      \"per\": 31912745.274167947,\n      \"t0\": 452038434.058348,\n      \"rot\":[ 0.7195252135385694,0.6943290988871292,-0.6944663181769697,0.7193830428727792,0.019878130336832674,3.1688876053733575 ],\n    }\n   },\n   {\n    \"start\": 458956800 ,\n    \"stop\": 467942400 ,\n    \"interp\": 467769600 ,\n    \"sat\":{\n      \"e\": 0.01307764902061911,\n      \"a\": 152002425741.1791,\n      \"per\": 32300455.587534055,\n      \"t0\": 453760382.2660639,\n      \"rot\":[ 0.7259815989465132,0.6875778049879684,-0.687714125193793,0.7258376932779108,0.01990992478460701,3.502038863830248 ],\n    }\n   },\n   {\n    \"start\": 467942400 ,\n    \"stop\": 477100800 ,\n    \"interp\": 476928000 ,\n    \"sat\":{\n      \"e\": 0.01024599189172793,\n      \"a\": 152444496689.0614,\n      \"per\": 32441467.843892355,\n      \"t0\": 452346648.58654624,\n      \"rot\":[ 0.7260886473700806,0.687467802293245,-0.687601102500779,0.7259478858631102,0.019689789764657073,3.249116819535811 ],\n    }\n   },\n   {\n    \"start\": 477100800 ,\n    \"stop\": 486086400 ,\n    \"interp\": 485913600 ,\n    \"sat\":{\n      \"e\": 0.011770634338032491,\n      \"a\": 151105557094.2893,\n      \"per\": 32015001.345105655,\n      \"t0\": 455323408.3716511,\n      \"rot\":[ 0.7168884091730203,0.697052181940097,-0.6971879293227732,0.7167488259686602,0.019732615769257517,3.784104269093788 ],\n    }\n   },\n   {\n    \"start\": 486086400 ,\n    \"stop\": 490579200 ,\n    \"interp\": 490406400 ,\n    \"sat\":{\n      \"e\": 0.007001581186958274,\n      \"a\": 150410633783.131,\n      \"per\": 31794403.515998483,\n      \"t0\": 483633204.8040817,\n      \"rot\":[ 0.7182059570902289,0.6956919091565745,-0.6958305851283832,0.7180628218053091,0.01996375403267865,3.0372263322713624 ],\n    }\n   },\n   {\n    \"start\": 490579200 ,\n    \"stop\": 495072000 ,\n    \"interp\": 494899200 ,\n    \"sat\":{\n      \"e\": 0.01347872237726928,\n      \"a\": 150776033769.5239,\n      \"per\": 31910333.427134994,\n      \"t0\": 483978252.4380815,\n      \"rot\":[ 0.7240245724832064,0.6896360182448149,-0.6897741793083517,0.7238795511009022,0.02001394107600005,3.088853972698792 ],\n    }\n   },\n   {\n    \"start\": 495072000 ,\n    \"stop\": 504057600 ,\n    \"interp\": 503884800 ,\n    \"sat\":{\n      \"e\": 0.012313938639068782,\n      \"a\": 152088179756.5563,\n      \"per\": 32327793.484105915,\n      \"t0\": 486872624.9778873,\n      \"rot\":[ 0.7302247001504028,0.6830726550889776,-0.6832070603340209,0.7300810452682176,0.019834697117970777,3.6669507277458973 ],\n    }\n   },\n   {\n    \"start\": 504057600 ,\n    \"stop\": 513216000 ,\n    \"interp\": 513043200 ,\n    \"sat\":{\n      \"e\": 0.012121941381449801,\n      \"a\": 152765218366.2324,\n      \"per\": 32543900.067888126,\n      \"t0\": 484000796.0940709,\n      \"rot\":[ 0.7223096700215649,0.6914372160570961,-0.69156976552864,0.7221712287972305,0.019577858634460838,3.1601826341265657 ],\n    }\n   },\n   {\n    \"start\": 513216000 ,\n    \"stop\": 517708800 ,\n    \"interp\": 517536000 ,\n    \"sat\":{\n      \"e\": 0.01217917127197729,\n      \"a\": 151399323948.6268,\n      \"per\": 32108408.060413107,\n      \"t0\": 487612267.5960121,\n      \"rot\":[ 0.7141934902954216,0.699811547768788,-0.6999483255352809,0.7140539288636949,0.019768264561533813,3.811608874756369 ],\n    }\n   },\n   {\n    \"start\": 517708800 ,\n    \"stop\": 522201600 ,\n    \"interp\": 522028800 ,\n    \"sat\":{\n      \"e\": 0.004972659280319663,\n      \"a\": 150358852725.067,\n      \"per\": 31777986.39730602,\n      \"t0\": 518148880.66807985,\n      \"rot\":[ 0.7160462802250893,0.6979135675840303,-0.6980528093030017,0.7159034493194718,0.019972567051175654,3.493230098448533 ],\n    }\n   },\n   {\n    \"start\": 522201600 ,\n    \"stop\": 526694400 ,\n    \"interp\": 526521600 ,\n    \"sat\":{\n      \"e\": 0.011780816488596368,\n      \"a\": 150049117967.6705,\n      \"per\": 31679844.425157275,\n      \"t0\": 514966373.3298494,\n      \"rot\":[ 0.7227333234431081,0.6909879195870432,-0.6911270094453548,0.7225878727890591,0.020061432724313464,2.832910606950911 ],\n    }\n   },\n   {\n    \"start\": 526694400 ,\n    \"stop\": 531360000 ,\n    \"interp\": 531187200 ,\n    \"sat\":{\n      \"e\": 0.01663245954250698,\n      \"a\": 150681441014.6343,\n      \"per\": 31880308.633461572,\n      \"t0\": 517442101.3576857,\n      \"rot\":[ 0.7293532089988863,0.6840008841087771,-0.6841373374718169,0.7292077371867798,0.019971644032161767,3.3101130760307003 ],\n    }\n   },\n   {\n    \"start\": 531360000 ,\n    \"stop\": 540345600 ,\n    \"interp\": 540172800 ,\n    \"sat\":{\n      \"e\": 0.008376194074112676,\n      \"a\": 152505769550.8175,\n      \"per\": 32461028.877686776,\n      \"t0\": 519553685.4137019,\n      \"rot\":[ 0.7297890197564862,0.6835402879687612,-0.6836724264169697,0.7296479680117266,0.01966004831991191,3.7667870758507087 ],\n    }\n   },\n   {\n    \"start\": 540345600 ,\n    \"stop\": 544838400 ,\n    \"interp\": 544665600 ,\n    \"sat\":{\n      \"e\": 0.013305761077414142,\n      \"a\": 153240962358.46548,\n      \"per\": 32696041.49975191,\n      \"t0\": 515673757.52218735,\n      \"rot\":[ 0.7194411272744565,0.6944203908895937,-0.6945534280284413,0.7193033230605841,0.019571667040517167,3.08130664913152 ],\n    }\n   },\n   {\n    \"start\": 544838400 ,\n    \"stop\": 549504000 ,\n    \"interp\": 549331200 ,\n    \"sat\":{\n      \"e\": 0.015234051614194959,\n      \"a\": 152415467214.5509,\n      \"per\": 32432201.71147441,\n      \"t0\": 518538432.2177568,\n      \"rot\":[ 0.7141630187426937,0.6998432087807821,-0.6999794158832978,0.7140240516912354,0.019726548858088163,3.610388534376675 ],\n    }\n   },\n   {\n    \"start\": 549504000 ,\n    \"stop\": 553996800 ,\n    \"interp\": 553824000 ,\n    \"sat\":{\n      \"e\": 0.007002705812037929,\n      \"a\": 150873792690.5212,\n      \"per\": 31941373.095217396,\n      \"t0\": 520892047.87507975,\n      \"rot\":[ 0.7152589628388671,0.6987204483832821,-0.6988595109738924,0.7151166370026042,0.019948195235429875,3.9794248621763666 ],\n    }\n   },\n   {\n    \"start\": 553996800 ,\n    \"stop\": 558489600 ,\n    \"interp\": 558316800 ,\n    \"sat\":{\n      \"e\": 0.008916041451585798,\n      \"a\": 149781766290.0553,\n      \"per\": 31595213.280838046,\n      \"t0\": 546222867.4577339,\n      \"rot\":[ 0.7216257413755977,0.6921441478057051,-0.6922833880602068,0.7214805994386148,0.020055505279376856,2.6377776898326735 ],\n    }\n   },\n   {\n    \"start\": 558489600 ,\n    \"stop\": 562982400 ,\n    \"interp\": 562809600 ,\n    \"sat\":{\n      \"e\": 0.01754505889432861,\n      \"a\": 149813685826.4449,\n      \"per\": 31605313.558524985,\n      \"t0\": 548666674.211328,\n      \"rot\":[ 0.7282763269012311,0.6851467601830938,-0.6852835848575765,0.7281309182360252,0.01998206494266462,3.09286714326513 ],\n    }\n   },\n   {\n    \"start\": 562982400 ,\n    \"stop\": 567475200 ,\n    \"interp\": 567302400 ,\n    \"sat\":{\n      \"e\": 0.016256040753916814,\n      \"a\": 150921034085.40912,\n      \"per\": 31956376.427874386,\n      \"t0\": 551632699.4963555,\n      \"rot\":[ 0.7305780744825091,0.6826954397554924,-0.6828291712320362,0.7304349914263842,0.01979039759562494,3.687949593342048 ],\n    }\n   },\n   {\n    \"start\": 567475200 ,\n    \"stop\": 571968000 ,\n    \"interp\": 571795200 ,\n    \"sat\":{\n      \"e\": 0.006979600267393162,\n      \"a\": 152466444130.50018,\n      \"per\": 32448473.99554889,\n      \"t0\": 552187264.4779276,\n      \"rot\":[ 0.7271040044013832,0.6863949556511597,-0.686527324134643,0.7269638123784093,0.01963619996056427,3.846025172813379 ],\n    }\n   },\n   {\n    \"start\": 571968000 ,\n    \"stop\": 576460800 ,\n    \"interp\": 576288000 ,\n    \"sat\":{\n      \"e\": 0.01066219325185984,\n      \"a\": 153569378031.48712,\n      \"per\": 32801205.714041855,\n      \"t0\": 546689516.6384674,\n      \"rot\":[ 0.7214024847698826,0.6923830478268269,-0.6925160322821698,0.7212639532239716,0.01959655229274494,2.855401419808075 ],\n    }\n   },\n   {\n    \"start\": 576460800 ,\n    \"stop\": 580953600 ,\n    \"interp\": 580780800 ,\n    \"sat\":{\n      \"e\": 0.017066510492039586,\n      \"a\": 153432475652.2547,\n      \"per\": 32757353.59118044,\n      \"t0\": 549201881.0280397,\n      \"rot\":[ 0.716082651918347,0.697880125183857,-0.6980154981242089,0.7159437750389859,0.019693700929232665,3.3564265125811916 ],\n    }\n   },\n   {\n    \"start\": 580953600 ,\n    \"stop\": 585619200 ,\n    \"interp\": 585446400 ,\n    \"sat\":{\n      \"e\": 0.012031021679070162,\n      \"a\": 151989517408.3283,\n      \"per\": 32296341.151420366,\n      \"t0\": 552744719.3560597,\n      \"rot\":[ 0.7161288316549593,0.6978303199204666,-0.6979681199542733,0.7159874461469529,0.019870117253386717,3.9698898900808555 ],\n    }\n   },\n   {\n    \"start\": 585619200 ,\n    \"stop\": 590112000 ,\n    \"interp\": 589939200 ,\n    \"sat\":{\n      \"e\": 0.004664535361495518,\n      \"a\": 150149542385.57928,\n      \"per\": 31711653.631042767,\n      \"t0\": 578757651.1220001,\n      \"rot\":[ 0.7206958949727201,0.6931129150708996,-0.6932513447296513,0.7205519851374731,0.019983084756029112,2.7094308382060595 ],\n    }\n   },\n   {\n    \"start\": 590112000 ,\n    \"stop\": 594604800 ,\n    \"interp\": 594432000 ,\n    \"sat\":{\n      \"e\": 0.016581441206187545,\n      \"a\": 149295154497.84418,\n      \"per\": 31441368.36001529,\n      \"t0\": 579696625.2936066,\n      \"rot\":[ 0.7259782965774544,0.6875808772259433,-0.6877176113045947,0.7258339553945738,0.019940071952477822,2.847609891577757 ],\n    }\n   },\n   {\n    \"start\": 594604800 ,\n    \"stop\": 599097600 ,\n    \"interp\": 598924800 ,\n    \"sat\":{\n      \"e\": 0.01956984047749716,\n      \"a\": 149845382813.53848,\n      \"per\": 31615344.479906652,\n      \"t0\": 583056908.8452117,\n      \"rot\":[ 0.7279750723431684,0.6854691589648931,-0.685603598332855,0.727832324392522,0.01980251694459129,3.50423946573787 ],\n    }\n   },\n   {\n    \"start\": 599097600 ,\n    \"stop\": 603763200 ,\n    \"interp\": 603590400 ,\n    \"sat\":{\n      \"e\": 0.011194078126462823,\n      \"a\": 151449777652.6314,\n      \"per\": 32124459.5495961,\n      \"t0\": 585637752.8017215,\n      \"rot\":[ 0.7264234094967863,0.6871140238739255,-0.6872474300679955,0.7262823985913912,0.019702682358453957,4.048769043786246 ],\n    }\n   },\n   {\n    \"start\": 603763200 ,\n    \"stop\": 608256000 ,\n    \"interp\": 608083200 ,\n    \"sat\":{\n      \"e\": 0.007044574321361692,\n      \"a\": 153290383025.7087,\n      \"per\": 32711859.6312279,\n      \"t0\": 578631960.0769942,\n      \"rot\":[ 0.7226921312946005,0.6910364604662049,-0.6911700828051428,0.7225524148697754,0.019662605936018863,2.7779835683559453 ],\n    }\n   },\n   {\n    \"start\": 608256000 ,\n    \"stop\": 612748800 ,\n    \"interp\": 612576000 ,\n    \"sat\":{\n      \"e\": 0.017284107163075046,\n      \"a\": 154062319410.9318,\n      \"per\": 32959264.95850163,\n      \"t0\": 580038080.6942376,\n      \"rot\":[ 0.7197072745417759,0.6941427532479062,-0.6942776382483082,0.7195674490444995,0.019711022018347422,3.113686876330286 ],\n    }\n   },\n   {\n    \"start\": 612748800 ,\n    \"stop\": 617241600 ,\n    \"interp\": 617068800 ,\n    \"sat\":{\n      \"e\": 0.016110727910195015,\n      \"a\": 153151891827.5994,\n      \"per\": 32667539.030458402,\n      \"t0\": 583773488.3727151,\n      \"rot\":[ 0.7193336737268251,0.694528527759819,-0.6946647146952762,0.7191926505158808,0.019800393221363365,3.7976577916800944 ],\n    }\n   },\n   {\n    \"start\": 617241600 ,\n    \"stop\": 621907200 ,\n    \"interp\": 621734400 ,\n    \"sat\":{\n      \"e\": 0.003986223242399215,\n      \"a\": 151125860291.4187,\n      \"per\": 32021454.073216945,\n      \"t0\": 617063496.8452673,\n      \"rot\":[ 0.7212454687961818,0.692542974857196,-0.6926795606490609,0.7211032502450928,0.019857755711772198,3.9188944937864516 ],\n    }\n   },\n   {\n    \"start\": 621907200 ,\n    \"stop\": 626400000 ,\n    \"interp\": 626227200 ,\n    \"sat\":{\n      \"e\": 0.014002051766946383,\n      \"a\": 149370853477.3458,\n      \"per\": 31465284.55322832,\n      \"t0\": 610830457.6445404,\n      \"rot\":[ 0.7232690524560832,0.690430264297779,-0.6905663456607769,0.7231265267753997,0.01985135802524519,2.63783276301115 ],\n    }\n   },\n   {\n    \"start\": 626400000 ,\n    \"stop\": 630892800 ,\n    \"interp\": 630720000 ,\n    \"sat\":{\n      \"e\": 0.021279661738346143,\n      \"a\": 149079062670.21008,\n      \"per\": 31373130.073891643,\n      \"t0\": 614370316.0281153,\n      \"rot\":[ 0.7241213054543142,0.6895372242015387,-0.6896726288516457,0.7239791374344475,0.019814767223219672,3.3081026722698508 ],\n    }\n   },\n   {\n    \"start\": 630892800 ,\n    \"stop\": 635385600 ,\n    \"interp\": 635212800 ,\n    \"sat\":{\n      \"e\": 0.01581281327165225,\n      \"a\": 150286548146.9315,\n      \"per\": 31755067.05194131,\n      \"t0\": 617686287.6016285,\n      \"rot\":[ 0.7238630220123649,0.689808613760222,-0.6899437117353318,0.7237212822923452,0.019788429430462037,3.980804699581578 ],\n    }\n   },\n   {\n    \"start\": 635385600 ,\n    \"stop\": 639878400 ,\n    \"interp\": 639705600 ,\n    \"sat\":{\n      \"e\": 0.0036107054087464166,\n      \"a\": 152349081150.0264,\n      \"per\": 32411014.76949932,\n      \"t0\": 614740185.509563,\n      \"rot\":[ 0.7235232419483565,0.6901649265888906,-0.6903000205421843,0.7233816461028603,0.019783027778060954,3.4754028965628656 ],\n    }\n   },\n   {\n    \"start\": 639878400 ,\n    \"stop\": 644371200 ,\n    \"interp\": 644198400 ,\n    \"sat\":{\n      \"e\": 0.01517696674030799,\n      \"a\": 154050499835.47772,\n      \"per\": 32955472.106537357,\n      \"t0\": 610986386.9229679,\n      \"rot\":[ 0.7236720875401936,0.6900089628354088,-0.6901439775258627,0.723530513656959,0.019779459398596353,2.855212403715401 ],\n    }\n   },\n   {\n    \"start\": 644371200 ,\n    \"stop\": 648864000 ,\n    \"interp\": 648691200 ,\n    \"sat\":{\n      \"e\": 0.01921393268225739,\n      \"a\": 154143440323.69,\n      \"per\": 32985300.24335881,\n      \"t0\": 614479643.881712,\n      \"rot\":[ 0.7237981786403028,0.6898770528227907,-0.6900117365646619,0.7236569001056156,0.019757097916235797,3.551790425876865 ],\n    }\n   },\n   {\n    \"start\": 648864000 ,\n    \"stop\": 653356800 ,\n    \"interp\": 653184000 ,\n    \"sat\":{\n      \"e\": 0.009328620471602227,\n      \"a\": 152457156792.2599,\n      \"per\": 32445509.192056015,\n      \"t0\": 650626254.7338225,\n      \"rot\":[ 0.7228897452631639,0.6908289457473821,-0.6909633971444203,0.7227490814645359,0.019726453298303546,4.178360799767045 ],\n    }\n   },\n   {\n    \"start\": 653356800 ,\n    \"stop\": 658022400 ,\n    \"interp\": 657849600 ,\n    \"sat\":{\n      \"e\": 0.008585078988623571,\n      \"a\": 150218786779.5424,\n      \"per\": 31733592.83260316,\n      \"t0\": 642012373.5924911,\n      \"rot\":[ 0.7208866843280115,0.6929180827620444,-0.693052947730955,0.7207464030398526,0.01972696343807407,2.4597988522213687 ],\n    }\n   },\n   {\n    \"start\": 658022400 ,\n    \"stop\": 662515200 ,\n    \"interp\": 662342400 ,\n    \"sat\":{\n      \"e\": 0.020826083937755327,\n      \"a\": 148871202470.3892,\n      \"per\": 31307537.850749224,\n      \"t0\": 645409687.2693143,\n      \"rot\":[ 0.7192247535893077,0.6946414660680903,-0.6947774851162059,0.7190839484128878,0.019786580141735316,3.075657364048507 ],\n    }\n   },\n   {\n    \"start\": 662515200 ,\n    \"stop\": 667008000 ,\n    \"interp\": 666835200 ,\n    \"sat\":{\n      \"e\": 0.02005637145750022,\n      \"a\": 149225145658.4222,\n      \"per\": 31419255.294986174,\n      \"t0\": 649116183.28926,\n      \"rot\":[ 0.719877704654897,0.6939638266683162,-0.6941009223022232,0.7197355177090451,0.019874401222676565,3.7976318727779077 ],\n    }\n   },\n   {\n    \"start\": 667008000 ,\n    \"stop\": 671500800 ,\n    \"interp\": 671328000 ,\n    \"sat\":{\n      \"e\": 0.007418195207599212,\n      \"a\": 151020902247.9282,\n      \"per\": 31988101.15581043,\n      \"t0\": 651489283.225469,\n      \"rot\":[ 0.723128910009299,0.6905759638525888,-0.6907130949307123,0.7229853432407237,0.019925652013441573,4.303989450121148 ],\n    }\n   },\n   {\n    \"start\": 671500800 ,\n    \"stop\": 676166400 ,\n    \"interp\": 675993600 ,\n    \"sat\":{\n      \"e\": 0.01078829141811219,\n      \"a\": 153279325388.3487,\n      \"per\": 32708320.178678688,\n      \"t0\": 642399629.4342972,\n      \"rot\":[ 0.7271371380571009,0.686356537154238,-0.6864922304426531,0.7269934108231771,0.01988176363722625,2.6423851730697456 ],\n    }\n   },\n   {\n    \"start\": 676166400 ,\n    \"stop\": 680659200 ,\n    \"interp\": 680486400 ,\n    \"sat\":{\n      \"e\": 0.020141859172836354,\n      \"a\": 154502788505.7902,\n      \"per\": 33100713.327374402,\n      \"t0\": 645464080.7410991,\n      \"rot\":[ 0.7287262314715163,0.6846717014290965,-0.6848051398502513,0.7285842347601555,0.01974016517521942,3.3225781643478327 ],\n    }\n   },\n   {\n    \"start\": 680659200 ,\n    \"stop\": 685152000 ,\n    \"interp\": 684979200 ,\n    \"sat\":{\n      \"e\": 0.014319642435462842,\n      \"a\": 153640041315.6055,\n      \"per\": 32823847.99690199,\n      \"t0\": 682183194.1526344,\n      \"rot\":[ 0.7256423113504119,0.6879398415042707,-0.688072115390554,0.7255028150295656,0.01960713786494253,4.041941960368655 ],\n    }\n   },\n   {\n    \"start\": 685152000 ,\n    \"stop\": 689644800 ,\n    \"interp\": 689472000 ,\n    \"sat\":{\n      \"e\": 0.0036706734827462195,\n      \"a\": 151424833081.4059,\n      \"per\": 32116523.276413865,\n      \"t0\": 675654974.1484365,\n      \"rot\":[ 0.719559499001918,0.6942975195047267,-0.694430793813256,0.7194214020230261,0.0195908325705451,2.770041593779322 ],\n    }\n   },\n   {\n    \"start\": 689644800 ,\n    \"stop\": 1000000000000 ,\n    \"sat\":{\n      \"e\": 0.017931496241303486,\n      \"a\": 149400079512.6688,\n      \"per\": 31474519.793681543,\n      \"t0\": 676392678.2934926,\n      \"rot\":[ 0.7149139052404095,0.6990764909750667,-0.6992124913743365,0.7147748508359821,0.019722382675194123,2.853542460360836 ],\n    }\n   }\n ]},\n  \"Ulysses\": {\n \"color\": 16776960 ,\n \"horizonsID\": -55 ,\n \"orbits\":[\n   {\n    \"start\": -291340800 ,\n    \"stop\": -270691200 ,\n    \"interp\": -270864000 ,\n    \"sat\":{\n      \"e\": 0.8881243134606798,\n      \"a\": 1331825365465.51,\n      \"per\": 837729468.9434906,\n      \"t0\": -290946724.80176234,\n      \"rot\":[ 0.9727212938640519,-0.23183631444529867,0.23197690502169555,0.972131772043485,0.03481007164621193,0.13663921020745984 ],\n    }\n   },\n   {\n    \"start\": -270691200 ,\n    \"stop\": -260496000 ,\n    \"interp\": -260668800 ,\n    \"sat\":{\n      \"e\": 0.889328173402822,\n      \"a\": 1344010383251.752,\n      \"per\": 849252444.724573,\n      \"t0\": -290924615.4421663,\n      \"rot\":[ 0.9731496356512632,-0.23003355886746243,0.23017338384751113,0.9725584698695607,0.034850889224646124,0.138194796576452 ],\n    }\n   },\n   {\n    \"start\": -260496000 ,\n    \"stop\": -255312000 ,\n    \"interp\": -255484800 ,\n    \"sat\":{\n      \"e\": 0.8906601594183214,\n      \"a\": 1356829356281.097,\n      \"per\": 861431437.2744696,\n      \"t0\": -290872944.94687796,\n      \"rot\":[ 0.9738068894675851,-0.22723767466564582,0.2273766523314707,0.9732116770432896,0.03495813037245752,0.14105200275142665 ],\n    }\n   },\n   {\n    \"start\": -255312000 ,\n    \"stop\": -250128000 ,\n    \"interp\": -250300800 ,\n    \"sat\":{\n      \"e\": 0.8941186197092293,\n      \"a\": 1387819936826.437,\n      \"per\": 891112535.44499,\n      \"t0\": -290689536.0937815,\n      \"rot\":[ 0.9759069403942506,-0.21805054350622202,0.21818717581547417,0.9752958118144754,0.03538417631914784,0.14959228540813435 ],\n    }\n   },\n   {\n    \"start\": -250128000 ,\n    \"stop\": -248400000 ,\n    \"interp\": -248572800 ,\n    \"planet\":\"Jupiter\",\n    \"sat\":{\n      \"e\": 1.665597029458728,\n      \"a\": -676645400.1420789,\n      \"per\": 310678.6338371997,\n      \"t0\": -249134241.4494409,\n      \"rot\":[ 0.7386180135769407,-0.5326662881154042,-0.6741241948036388,-0.5836267540312862,0.6129000224214892,2.2281869995916215 ],\n    },\n    \"planetOrb\":{\n      \"e\": 0.04737318751277001,\n      \"a\": 778780274780.3809,\n      \"per\": 375125630.63524246,\n      \"t0\": -393932834.1314434,\n      \"rot\":[ -0.18194672801923334,-0.9830534833017404,0.9833083891450816,-0.18189956144904956,0.02276836649736539,4.8052651768885 ],\n    }\n   },\n   {\n    \"start\": -248400000 ,\n    \"stop\": -244252800 ,\n    \"interp\": -244425600 ,\n    \"sat\":{\n      \"e\": 0.5937598928926665,\n      \"a\": 507068546343.6967,\n      \"per\": 196803527.19666114,\n      \"t0\": -347719867.25660837,\n      \"rot\":[ 0.9287593099723334,0.0608281313693291,-0.3706833475349481,0.15240688229772237,0.9864441599312167,6.26282898889498 ],\n    }\n   },\n   {\n    \"start\": -244252800 ,\n    \"stop\": -239932800 ,\n    \"interp\": -240105600 ,\n    \"sat\":{\n      \"e\": 0.599754249036687,\n      \"a\": 505159387394.5172,\n      \"per\": 195693099.42899638,\n      \"t0\": -347117737.5042901,\n      \"rot\":[ 0.9286234502799723,0.06639309669661062,-0.37102356743220477,0.16617323518254437,0.9838589393912124,6.2636907658549 ],\n    }\n   },\n   {\n    \"start\": -239932800 ,\n    \"stop\": -231292800 ,\n    \"interp\": -231465600 ,\n    \"sat\":{\n      \"e\": 0.6017111440492507,\n      \"a\": 504522031913.67163,\n      \"per\": 195322859.690253,\n      \"t0\": -346890484.80079216,\n      \"rot\":[ 0.928478403141564,0.06827674360451287,-0.37138639568472526,0.17069414122384724,0.9829556431673898,6.26441882354927 ],\n    }\n   },\n   {\n    \"start\": -231292800 ,\n    \"stop\": -214012800 ,\n    \"interp\": -214185600 ,\n    \"sat\":{\n      \"e\": 0.6031189779374118,\n      \"a\": 504015279978.25183,\n      \"per\": 195028654.36621466,\n      \"t0\": -346732231.0023539,\n      \"rot\":[ 0.9283231152876029,0.06912933046903869,-0.3717743853773682,0.17261639839340803,0.9825602855166652,6.264833185261165 ],\n    }\n   },\n   {\n    \"start\": -214012800 ,\n    \"stop\": -179625600 ,\n    \"interp\": -179798400 ,\n    \"sat\":{\n      \"e\": 0.6035149585680485,\n      \"a\": 503616240793.03345,\n      \"per\": 194797087.9653642,\n      \"t0\": -346497130.60459536,\n      \"rot\":[ 0.9282620923072805,0.06935078797435666,-0.3719267239461422,0.17308707173609014,0.9824618739702633,6.266153532053156 ],\n    }\n   },\n   {\n    \"start\": -179625600 ,\n    \"stop\": -162518400 ,\n    \"interp\": -162691200 ,\n    \"sat\":{\n      \"e\": 0.603195583495464,\n      \"a\": 502485582825.518,\n      \"per\": 194141454.18185356,\n      \"t0\": -345819416.28737676,\n      \"rot\":[ 0.9287014160914593,0.06884847449667023,-0.37082836966677496,0.17242390548018297,0.9826138022531753,6.26842249208907 ],\n    }\n   },\n   {\n    \"start\": -162518400 ,\n    \"stop\": -153878400 ,\n    \"interp\": -154051200 ,\n    \"sat\":{\n      \"e\": 0.5994418035842095,\n      \"a\": 497717540601.54407,\n      \"per\": 191384732.53957012,\n      \"t0\": -343025437.0787706,\n      \"rot\":[ 0.929656769366726,0.0685343248640398,-0.3684267785742805,0.17293368112488414,0.9825461761403518,6.2709158985574405 ],\n    }\n   },\n   {\n    \"start\": -153878400 ,\n    \"stop\": -145238400 ,\n    \"interp\": -145411200 ,\n    \"sat\":{\n      \"e\": 0.5972545692908588,\n      \"a\": 495647845013.5376,\n      \"per\": 190192200.55003464,\n      \"t0\": -151705565.72778648,\n      \"rot\":[ 0.9300881572654079,0.06952044489532724,-0.36733638495885174,0.1760243339145654,0.9819278698618801,6.258693439124584 ],\n    }\n   },\n   {\n    \"start\": -145238400 ,\n    \"stop\": -110678400 ,\n    \"interp\": -110851200 ,\n    \"sat\":{\n      \"e\": 0.6043851543914038,\n      \"a\": 505871029866.2852,\n      \"per\": 196106768.53948104,\n      \"t0\": -151670940.94033983,\n      \"rot\":[ 0.9286866977439981,0.07081829989054414,-0.3708652281265362,0.1773366928936084,0.981598933248285,6.264696068971971 ],\n    }\n   },\n   {\n    \"start\": -110678400 ,\n    \"stop\": -41904000 ,\n    \"interp\": -42076800 ,\n    \"sat\":{\n      \"e\": 0.6026736445559617,\n      \"a\": 505685149929.8318,\n      \"per\": 195998690.7011806,\n      \"t0\": -151794666.25421646,\n      \"rot\":[ 0.9282971661358856,0.0706117170075441,-0.3718391740310372,0.17628227839334912,0.9818037195619582,6.26518051225172 ],\n    }\n   },\n   {\n    \"start\": -41904000 ,\n    \"stop\": -7516800 ,\n    \"interp\": -7689600 ,\n    \"sat\":{\n      \"e\": 0.6027346296281579,\n      \"a\": 505707103144.3936,\n      \"per\": 196011454.12129557,\n      \"t0\": -151994641.0011288,\n      \"rot\":[ 0.928277402269996,0.07069210005639301,-0.3718885107594319,0.17645578473869222,0.9817667661017403,6.263367373877708 ],\n    }\n   },\n   {\n    \"start\": -7516800 ,\n    \"stop\": 27043200 ,\n    \"interp\": 26870400 ,\n    \"sat\":{\n      \"e\": 0.6034866582652211,\n      \"a\": 505872316731.3553,\n      \"per\": 196107516.8421987,\n      \"t0\": -152155864.77989838,\n      \"rot\":[ 0.9280750203218883,0.07109534974359376,-0.3723932822360343,0.1771831590567099,0.9816066316969954,6.263113269145019 ],\n    }\n   },\n   {\n    \"start\": 27043200 ,\n    \"stop\": 44150400 ,\n    \"interp\": 43977600 ,\n    \"sat\":{\n      \"e\": 0.603042841748776,\n      \"a\": 504034856618.831,\n      \"per\": 195040017.24476632,\n      \"t0\": -151081650.86442563,\n      \"rot\":[ 0.9269811492016088,0.07179454874429844,-0.37510791650519015,0.17742145759400374,0.9815126943426772,6.267411063427417 ],\n    }\n   },\n   {\n    \"start\": 44150400 ,\n    \"stop\": 61430400 ,\n    \"interp\": 61257600 ,\n    \"sat\":{\n      \"e\": 0.6005684568939923,\n      \"a\": 500465181179.96625,\n      \"per\": 192971721.6241399,\n      \"t0\": 43930184.917522795,\n      \"rot\":[ 0.9269547307656439,0.06987686575489384,-0.3751731961523806,0.1726474384280548,0.9825019519759254,6.261057702109573 ],\n    }\n   },\n   {\n    \"start\": 61430400 ,\n    \"stop\": 95817600 ,\n    \"interp\": 95644800 ,\n    \"sat\":{\n      \"e\": 0.6029019242125645,\n      \"a\": 502694041390.3506,\n      \"per\": 194262277.48707864,\n      \"t0\": 43972761.08085205,\n      \"rot\":[ 0.9279090929979535,0.0695388814117811,-0.3728065384776871,0.17308108554743065,0.9824496332116579,6.261278195007291 ],\n    }\n   },\n   {\n    \"start\": 95817600 ,\n    \"stop\": 112924800 ,\n    \"interp\": 112752000 ,\n    \"sat\":{\n      \"e\": 0.6029957343353796,\n      \"a\": 503505870300.9493,\n      \"per\": 194733055.06476688,\n      \"t0\": 44015992.97783115,\n      \"rot\":[ 0.927863094083821,0.06944922490366984,-0.3729210085758088,0.17279630597090045,0.9825061026798207,6.2635707421945215 ],\n    }\n   },\n   {\n    \"start\": 112924800 ,\n    \"stop\": 130204800 ,\n    \"interp\": 130032000 ,\n    \"sat\":{\n      \"e\": 0.6002272605355559,\n      \"a\": 504747938149.2091,\n      \"per\": 195454061.8622069,\n      \"t0\": 43905912.12777817,\n      \"rot\":[ 0.9276293654153325,0.06883406731877788,-0.3735020219746442,0.17095624234722062,0.9828712196309709,6.267044578750205 ],\n    }\n   },\n   {\n    \"start\": 130204800 ,\n    \"stop\": 147484800 ,\n    \"interp\": 147312000 ,\n    \"sat\":{\n      \"e\": 0.5912742423398689,\n      \"a\": 507790617443.58215,\n      \"per\": 197224052.34618706,\n      \"t0\": 43311972.341625676,\n      \"rot\":[ 0.9278675389355916,0.07105659194264989,-0.37290994916951253,0.17680167889810589,0.9816782197239108,6.271322825740266 ],\n    }\n   },\n   {\n    \"start\": 147484800 ,\n    \"stop\": 164764800 ,\n    \"interp\": 164592000 ,\n    \"sat\":{\n      \"e\": 0.5909983393975058,\n      \"a\": 507855336275.4898,\n      \"per\": 197261758.39041188,\n      \"t0\": 43343923.74562633,\n      \"rot\":[ 0.9278370468252403,0.07249578613584111,-0.3729858101035706,0.18034004054169,0.9809290651061207,6.271864198249787 ],\n    }\n   },\n   {\n    \"start\": 164764800 ,\n    \"stop\": 199152000 ,\n    \"interp\": 198979200 ,\n    \"sat\":{\n      \"e\": 0.5909487481359903,\n      \"a\": 507629855084.242,\n      \"per\": 197130400.47491074,\n      \"t0\": 43534140.00550327,\n      \"rot\":[ 0.927749798283029,0.07290439974796177,-0.37320277569412463,0.18123402762564625,0.980733998456246,6.273079254645677 ],\n    }\n   },\n   {\n    \"start\": 199152000 ,\n    \"stop\": 233539200 ,\n    \"interp\": 233366400 ,\n    \"sat\":{\n      \"e\": 0.5899496488172842,\n      \"a\": 506775647717.2114,\n      \"per\": 196633032.0291483,\n      \"t0\": 44101125.8762179,\n      \"rot\":[ 0.9279378620927321,0.07267036355775568,-0.37273492470490305,0.1809156516542501,0.9808101474020859,6.274529048477555 ],\n    }\n   },\n   {\n    \"start\": 233539200 ,\n    \"stop\": 250646400 ,\n    \"interp\": 250473600 ,\n    \"sat\":{\n      \"e\": 0.5877294603420042,\n      \"a\": 505123022420.23346,\n      \"per\": 195671968.7325298,\n      \"t0\": 240726736.3089439,\n      \"rot\":[ 0.9290123312312166,0.07294511716998575,-0.3700487649220575,0.18312968391691917,0.9803787680022178,6.268833455206351 ],\n    }\n   },\n   {\n    \"start\": 250646400 ,\n    \"stop\": 267926400 ,\n    \"interp\": 267753600 ,\n    \"sat\":{\n      \"e\": 0.5908456275661589,\n      \"a\": 509099875002.8586,\n      \"per\": 197987310.20489964,\n      \"t0\": 240739195.1376313,\n      \"rot\":[ 0.9280994574634733,0.07401984618014193,-0.3723323744398363,0.18450659624931454,0.9800399881188321,6.2701787816279415 ],\n    }\n   },\n   {\n    \"start\": 267926400 ,\n    \"stop\": 1000000000000 ,\n    \"sat\":{\n      \"e\": 0.59059180231595,\n      \"a\": 509488715412.0196,\n      \"per\": 198214181.69499257,\n      \"t0\": 240733507.2156008,\n      \"rot\":[ 0.9277285236622856,0.07399492580857257,-0.37325565820680584,0.18391470234820326,0.9801531172295254,6.27170199928535 ],\n    }\n   }\n ]},\n  \"Starman\": {\n \"color\": 16776960 ,\n \"horizonsID\": -143205 ,\n \"orbits\":[\n   {\n    \"start\": 571363200 ,\n    \"stop\": 577324800 ,\n    \"interp\": 577152000 ,\n    \"sat\":{\n      \"e\": 0.25041055336382334,\n      \"a\": 197331130527.79,\n      \"per\": 47777814.05415546,\n      \"t0\": 571097568.5929823,\n      \"rot\":[ 0.7267932232742823,0.6867333513793086,-0.6868563245705606,0.7266630998716882,0.018922034462816505,3.119223396749155 ],\n    }\n   },\n   {\n    \"start\": 577324800 ,\n    \"stop\": 583200000 ,\n    \"interp\": 583027200 ,\n    \"sat\":{\n      \"e\": 0.2526243863340656,\n      \"a\": 195859335140.9337,\n      \"per\": 47244285.33237857,\n      \"t0\": 570968358.2616419,\n      \"rot\":[ 0.7311684977014482,0.6820741952401719,-0.6821969128990597,0.7310369707411324,0.018966802500701315,3.073771345625687 ],\n    }\n   },\n   {\n    \"start\": 583200000 ,\n    \"stop\": 594777600 ,\n    \"interp\": 594604800 ,\n    \"sat\":{\n      \"e\": 0.2604888209119595,\n      \"a\": 196471446581.97,\n      \"per\": 47465934.33218126,\n      \"t0\": 571190649.7305503,\n      \"rot\":[ 0.7352546746152109,0.6776698991471214,-0.6777909437698917,0.7351233677195568,0.018898201570198562,3.0841385093498115 ],\n    }\n   },\n   {\n    \"start\": 594777600 ,\n    \"stop\": 606355200 ,\n    \"interp\": 606182400 ,\n    \"sat\":{\n      \"e\": 0.25627320625925454,\n      \"a\": 197347864316.11172,\n      \"per\": 47783891.560330495,\n      \"t0\": 571382189.6956521,\n      \"rot\":[ 0.7356888633286609,0.6772001801220902,-0.6773196412139418,0.7355591074652124,0.018780720635504847,3.11076432714393 ],\n    }\n   },\n   {\n    \"start\": 606355200 ,\n    \"stop\": 612057600 ,\n    \"interp\": 611884800 ,\n    \"sat\":{\n      \"e\": 0.25071777244093607,\n      \"a\": 198800560803.4172,\n      \"per\": 48312474.01207765,\n      \"t0\": 570871268.2228864,\n      \"rot\":[ 0.7333623154097937,0.679718876140094,-0.6798380059519961,0.7332338063915776,0.01871989805970911,3.0918745807744705 ],\n    }\n   },\n   {\n    \"start\": 612057600 ,\n    \"stop\": 617932800 ,\n    \"interp\": 617760000 ,\n    \"sat\":{\n      \"e\": 0.2594644918111552,\n      \"a\": 201437205307.4036,\n      \"per\": 49276789.08915621,\n      \"t0\": 569769837.5397972,\n      \"rot\":[ 0.7306361460691562,0.6826472513718828,-0.6827670335167119,0.7305079659427446,0.01873077383898944,3.072139126602775 ],\n    }\n   },\n   {\n    \"start\": 617932800 ,\n    \"stop\": 623635200 ,\n    \"interp\": 623462400 ,\n    \"sat\":{\n      \"e\": 0.2606170656300381,\n      \"a\": 201049711923.8577,\n      \"per\": 49134671.02283434,\n      \"t0\": 619269870.0447583,\n      \"rot\":[ 0.729628492018303,0.683722845106181,-0.6838437421188389,0.7294995007011319,0.018802913516486563,3.12699592361786 ],\n    }\n   },\n   {\n    \"start\": 623635200 ,\n    \"stop\": 629510400 ,\n    \"interp\": 629337600 ,\n    \"sat\":{\n      \"e\": 0.2489854555343161,\n      \"a\": 197125456174.1549,\n      \"per\": 47703136.7083967,\n      \"t0\": 619130665.8213264,\n      \"rot\":[ 0.7310031094171444,0.6822530291131206,-0.682374130534318,0.7308733777765548,0.018839053146611495,3.0955945661370925 ],\n    }\n   },\n   {\n    \"start\": 629510400 ,\n    \"stop\": 635212800 ,\n    \"interp\": 635040000 ,\n    \"sat\":{\n      \"e\": 0.2550454909862019,\n      \"a\": 196207913041.3884,\n      \"per\": 47370464.9621495,\n      \"t0\": 619120971.6191882,\n      \"rot\":[ 0.7317515945916023,0.6814505033320989,-0.6815714223855394,0.731621772965775,0.018835945180561205,3.0718236086550266 ],\n    }\n   },\n   {\n    \"start\": 635212800 ,\n    \"stop\": 641088000 ,\n    \"interp\": 640915200 ,\n    \"sat\":{\n      \"e\": 0.2605661302744348,\n      \"a\": 196196970894.52188,\n      \"per\": 47366502.374580964,\n      \"t0\": 619320312.5427964,\n      \"rot\":[ 0.7318728112590018,0.6813203990784036,-0.6814412580258444,0.7317430078803722,0.018833061828349942,3.083309247884348 ],\n    }\n   },\n   {\n    \"start\": 641088000 ,\n    \"stop\": 646790400 ,\n    \"interp\": 646617600 ,\n    \"sat\":{\n      \"e\": 0.26159703798267475,\n      \"a\": 196297245778.56763,\n      \"per\": 47402820.04050112,\n      \"t0\": 619558737.4130521,\n      \"rot\":[ 0.7318392081487286,0.6813564112895236,-0.6814773462238065,0.7317093360010578,0.018838481986417507,3.103582236045221 ],\n    }\n   },\n   {\n    \"start\": 646790400 ,\n    \"stop\": 652665600 ,\n    \"interp\": 652492800 ,\n    \"sat\":{\n      \"e\": 0.2583777745037503,\n      \"a\": 196448698033.0706,\n      \"per\": 47457690.768874936,\n      \"t0\": 619756582.581787,\n      \"rot\":[ 0.731980961141313,0.681203996330621,-0.6813250857899183,0.7318508687953108,0.01885261856453779,3.120495580256924 ],\n    }\n   },\n   {\n    \"start\": 652665600 ,\n    \"stop\": 664416000 ,\n    \"interp\": 664243200 ,\n    \"sat\":{\n      \"e\": 0.24955091455633363,\n      \"a\": 197690274984.5412,\n      \"per\": 47908307.46976974,\n      \"t0\": 619400644.4819216,\n      \"rot\":[ 0.7318100973618838,0.681387492627097,-0.6815086069883418,0.7316800436669111,0.018852018219411494,3.1024432562817346 ],\n    }\n   },\n   {\n    \"start\": 664416000 ,\n    \"stop\": 670118400 ,\n    \"interp\": 669945600 ,\n    \"sat\":{\n      \"e\": 0.26681660509164,\n      \"a\": 202963901373.8125,\n      \"per\": 49838053.65839747,\n      \"t0\": 617407359.3545806,\n      \"rot\":[ 0.7352264099574137,0.6777022261980218,-0.6778216034482326,0.7350969226311665,0.018767177316639388,3.087731409898375 ],\n    }\n   },\n   {\n    \"start\": 670118400 ,\n    \"stop\": 675993600 ,\n    \"interp\": 675820800 ,\n    \"sat\":{\n      \"e\": 0.2534961158123803,\n      \"a\": 200078726645.46548,\n      \"per\": 48779151.546987936,\n      \"t0\": 667370110.4442484,\n      \"rot\":[ 0.7328017043327715,0.6803238339897808,-0.680442254807111,0.732674171134833,0.018655826364180318,3.1252533728838343 ],\n    }\n   },\n   {\n    \"start\": 675993600 ,\n    \"stop\": 687571200 ,\n    \"interp\": 687398400 ,\n    \"sat\":{\n      \"e\": 0.25389823485343566,\n      \"a\": 197024984460.9925,\n      \"per\": 47666671.059536025,\n      \"t0\": 667211061.030587,\n      \"rot\":[ 0.7275640638887166,0.6859200881762496,-0.686039745887755,0.7274371635868313,0.018676339818913645,3.082322438789439 ],\n    }\n   },\n   {\n    \"start\": 687571200 ,\n    \"stop\": 693273600 ,\n    \"interp\": 693100800 ,\n    \"sat\":{\n      \"e\": 0.2614598185618345,\n      \"a\": 196372819357.1504,\n      \"per\": 47430197.491808616,\n      \"t0\": 667524805.163963,\n      \"rot\":[ 0.7255248534338081,0.6880745993694195,-0.6881959655867297,0.7253969041120613,0.018779702001091882,3.097715742278654 ],\n    }\n   },\n   {\n    \"start\": 693273600 ,\n    \"stop\": 699148800 ,\n    \"interp\": 698976000 ,\n    \"sat\":{\n      \"e\": 0.2618137154807598,\n      \"a\": 196078797539.79208,\n      \"per\": 47323714.13341692,\n      \"t0\": 667859393.6191722,\n      \"rot\":[ 0.7258889356604686,0.6876895534025488,-0.6878119314796102,0.7257597827800946,0.018863081402385094,3.1195498145924385 ],\n    }\n   },\n   {\n    \"start\": 699148800 ,\n    \"stop\": 705024000 ,\n    \"interp\": 704851200 ,\n    \"sat\":{\n      \"e\": 0.2568700123047972,\n      \"a\": 195818011755.8692,\n      \"per\": 47229334.366571836,\n      \"t0\": 668184609.3225102,\n      \"rot\":[ 0.7281317428231495,0.6853141541580302,-0.6854372072577639,0.7280010249878465,0.0189477631214967,3.1346440553978354 ],\n    }\n   },\n   {\n    \"start\": 705024000 ,\n    \"stop\": 710899200 ,\n    \"interp\": 710726400 ,\n    \"sat\":{\n      \"e\": 0.24849669966231033,\n      \"a\": 196339180590.6759,\n      \"per\": 47418010.78735538,\n      \"t0\": 668043194.4205476,\n      \"rot\":[ 0.7334268452098502,0.679645753903473,-0.679768389030798,0.7332945297094575,0.01899425963719377,3.1106582878529836 ],\n    }\n   },\n   {\n    \"start\": 710899200 ,\n    \"stop\": 716601600 ,\n    \"interp\": 716428800 ,\n    \"sat\":{\n      \"e\": 0.2580342839656586,\n      \"a\": 200340320926.32993,\n      \"per\": 48874847.75574649,\n      \"t0\": 666387374.0591173,\n      \"rot\":[ 0.7404211526673206,0.6720236189184293,-0.6721432263162341,0.7402893952622276,0.018864434209988547,3.0545856423267077 ],\n    }\n   },\n   {\n    \"start\": 716601600 ,\n    \"stop\": 722476800 ,\n    \"interp\": 722304000 ,\n    \"sat\":{\n      \"e\": 0.2624547658024203,\n      \"a\": 202371994202.9261,\n      \"per\": 49620197.306596145,\n      \"t0\": 715518994.0567251,\n      \"rot\":[ 0.7384886443747387,0.6741495868454711,-0.6742659135159961,0.7383612377781742,0.018574636006205698,3.1183492005307243 ],\n    }\n   },\n   {\n    \"start\": 722476800 ,\n    \"stop\": 734054400 ,\n    \"interp\": 733881600 ,\n    \"sat\":{\n      \"e\": 0.250582379423234,\n      \"a\": 198709719656.9698,\n      \"per\": 48279363.49834778,\n      \"t0\": 715325970.3924769,\n      \"rot\":[ 0.7275423892525739,0.6859447994580022,-0.6860627317094672,0.7274173267647939,0.01854089584896772,3.102082992078269 ],\n    }\n   },\n   {\n    \"start\": 734054400 ,\n    \"stop\": 745632000 ,\n    \"interp\": 745459200 ,\n    \"sat\":{\n      \"e\": 0.2599334877654831,\n      \"a\": 196992208390.039,\n      \"per\": 47654777.17800557,\n      \"t0\": 715548813.9757032,\n      \"rot\":[ 0.7226346367743236,0.6911084627394198,-0.6912301944606017,0.7225073744544407,0.01876663499155927,3.0992732309125635 ],\n    }\n   },\n   {\n    \"start\": 745632000 ,\n    \"stop\": 751507200 ,\n    \"interp\": 751334400 ,\n    \"sat\":{\n      \"e\": 0.2608269807341244,\n      \"a\": 195969940369.3047,\n      \"per\": 47284310.50623617,\n      \"t0\": 716153262.0125146,\n      \"rot\":[ 0.7251961450264155,0.6884186381711082,-0.6885423380147557,0.7250658601553178,0.0189546051361113,3.1279329619187894 ],\n    }\n   },\n   {\n    \"start\": 751507200 ,\n    \"stop\": 1000000000000 ,\n    \"sat\":{\n      \"e\": 0.2532109449905217,\n      \"a\": 195205437872.1062,\n      \"per\": 47007887.79272695,\n      \"t0\": 716613096.4561961,\n      \"rot\":[ 0.7308412166779218,0.6824237581264688,-0.6825475192283208,0.7307086988506544,0.01904236772385452,3.134463158428387 ],\n    }\n   }\n ]},\n \n  \"STEREO-A\": {\n \"color\": 16776960 ,\n \"horizonsID\": -234 ,\n \"orbits\":[\n   {\n    \"start\": 215308800 ,\n    \"stop\": 215740800 ,\n    \"interp\": 215568000 ,\n    \"planet\":\"Earth\",\n    \"sat\":{\n      \"e\": 0.9688307395460094,\n      \"a\": 212013045.7685502,\n      \"per\": 971526.97071166,\n      \"t0\": 215140276.97246355,\n      \"rot\":[ -0.8627384339344203,0.34752419211558044,-0.5056504668369088,-0.592944132209858,0.7263912113815196,3.173064431342524 ],\n    },\n    \"planetOrb\":{\n      \"e\": 0.01770873214273817,\n      \"a\": 150894810104.69373,\n      \"per\": 31948191.4393288,\n      \"t0\": 188046583.38022488,\n      \"rot\":[ -0.7124462393232628,-0.7017266912688814,0.7017266961389884,-0.7124462343787603,0.00011781490779313558,5.470529216695304 ],\n    }\n   },\n   {\n    \"start\": 215740800 ,\n    \"stop\": 215913600 ,\n    \"interp\": 215740800 ,\n    \"sat\":{\n      \"e\": 0.012193748044599242,\n      \"a\": 148685753713.0789,\n      \"per\": 31249056.404352814,\n      \"t0\": 192329017.54416072,\n      \"rot\":[ 0.7799977555700011,-0.625776323746596,0.6257823114356629,0.7799902922973136,0.004374535420692227,1.6121568895945753 ],\n    }\n   },\n   {\n    \"start\": 215913600 ,\n    \"stop\": 216777600 ,\n    \"interp\": 216604800 ,\n    \"planet\":\"Earth\",\n    \"sat\":{\n      \"e\": 0.9670809378250675,\n      \"a\": 209520908.190314,\n      \"per\": 954447.4803487696,\n      \"t0\": 216119381.59269318,\n      \"rot\":[ -0.8637636476892792,0.33500106988092043,-0.5038971729733268,-0.5742476076869595,0.7470033254574189,3.1854452717028185 ],\n    },\n    \"planetOrb\":{\n      \"e\": 0.017882010068331147,\n      \"a\": 150781895859.667,\n      \"per\": 31912338.00961611,\n      \"t0\": 188380235.1879537,\n      \"rot\":[ -0.8200899589384706,-0.5722346146110754,0.572234619057863,-0.8200899525656198,0.0001246668903248515,5.363132577439943 ],\n    }\n   },\n   {\n    \"start\": 216777600 ,\n    \"stop\": 216950400 ,\n    \"interp\": 216777600 ,\n    \"sat\":{\n      \"e\": 0.006375319116139958,\n      \"a\": 148245758729.9988,\n      \"per\": 31110449.469020583,\n      \"t0\": 193947395.75655285,\n      \"rot\":[ 0.6461152781739539,-0.7632334176661635,0.7632398360346465,0.6461098447495675,0.004101057829086813,1.714449583390259 ],\n    }\n   },\n   {\n    \"start\": 216950400 ,\n    \"stop\": 218851200 ,\n    \"interp\": 218678400 ,\n    \"planet\":\"Earth\",\n    \"sat\":{\n      \"e\": 0.9510226142168517,\n      \"a\": 224976371.9312216,\n      \"per\": 1061980.0229050766,\n      \"t0\": 217083204.26506737,\n      \"rot\":[ -0.8342530482514922,0.3728803066788873,-0.5513817656425478,-0.5641763146035537,0.7366582402521613,3.1779512775963195 ],\n    },\n    \"planetOrb\":{\n      \"e\": 0.020950424697309695,\n      \"a\": 151042947874.6527,\n      \"per\": 31995249.670217887,\n      \"t0\": 188593163.85781902,\n      \"rot\":[ -0.9566567580897506,-0.2912178668076198,0.29121786895932117,-0.9566567510213669,0.00012156176132169076,5.111632491270223 ],\n    }\n   },\n   {\n    \"start\": 218851200 ,\n    \"stop\": 219024000 ,\n    \"interp\": 218851200 ,\n    \"sat\":{\n      \"e\": 0.00616337639104939,\n      \"a\": 147799916802.1522,\n      \"per\": 30970210.2906056,\n      \"t0\": 195050383.37282324,\n      \"rot\":[ 0.2757901153151616,-0.9612065863038716,0.9612178797205396,0.275786875037644,0.004847473881182252,1.4960018531408272 ],\n    }\n   },\n   {\n    \"start\": 219024000 ,\n    \"stop\": 219888000 ,\n    \"interp\": 219715200 ,\n    \"planet\":\"Earth\",\n    \"sat\":{\n      \"e\": 0.9428032264308992,\n      \"a\": 228154615.95075038,\n      \"per\": 1084563.222598732,\n      \"t0\": 219227501.51875386,\n      \"rot\":[ -0.8408077762148713,0.40340393072532066,-0.541333800401012,-0.6265730343426396,0.6668369375717111,3.1965177443261408 ],\n    },\n    \"planetOrb\":{\n      \"e\": 0.02078389082632492,\n      \"a\": 150858730410.2571,\n      \"per\": 31936733.668728914,\n      \"t0\": 189180396.1701143,\n      \"rot\":[ -0.9013888702708388,-0.43301050971168137,0.4330105132117013,-0.9013888629849209,0.00012714551234542949,5.372476354677769 ],\n    }\n   },\n   {\n    \"start\": 219888000 ,\n    \"stop\": 221961600 ,\n    \"interp\": 221788800 ,\n    \"sat\":{\n      \"e\": 0.01973530465193264,\n      \"a\": 147185189281.32748,\n      \"per\": 30777194.98291132,\n      \"t0\": 196573632.83668336,\n      \"rot\":[ -0.29336334468784325,0.9559957951128025,-0.9560010188245417,-0.29336174171303747,0.003305786704186144,4.965691953440912 ],\n    }\n   },\n   {\n    \"start\": 221961600 ,\n    \"stop\": 224035200 ,\n    \"interp\": 223862400 ,\n    \"sat\":{\n      \"e\": 0.011295488531942108,\n      \"a\": 145502767485.8131,\n      \"per\": 30251001.038774133,\n      \"t0\": 200608156.1487091,\n      \"rot\":[ -0.6698052183687586,0.7425350271181635,-0.7425368471974839,-0.6698035765665622,0.0022141186213433047,6.135428513686137 ],\n    }\n   },\n   {\n    \"start\": 224035200 ,\n    \"stop\": 228182400 ,\n    \"interp\": 228009600 ,\n    \"sat\":{\n      \"e\": 0.01119656262026918,\n      \"a\": 143926334212.21487,\n      \"per\": 29760708.498573508,\n      \"t0\": 206041107.0353352,\n      \"rot\":[ -0.8033247496994718,0.5955397345577285,-0.5955412215122317,-0.8033227439485497,0.002234640437071935,1.1093810061096085 ],\n    }\n   },\n   {\n    \"start\": 228182400 ,\n    \"stop\": 232329600 ,\n    \"interp\": 232156800 ,\n    \"sat\":{\n      \"e\": 0.01092817987295465,\n      \"a\": 142606940851.77078,\n      \"per\": 29352416.777742546,\n      \"t0\": 210900260.98244095,\n      \"rot\":[ -0.8005918652916824,0.5992085871859073,-0.5992100343191732,-0.8005899318075044,0.002197755929257908,2.06835297469032 ],\n    }\n   },\n   {\n    \"start\": 232329600 ,\n    \"stop\": 236649600 ,\n    \"interp\": 236476800 ,\n    \"sat\":{\n      \"e\": 0.00468839653574832,\n      \"a\": 142214667883.7675,\n      \"per\": 29231389.31025063,\n      \"t0\": 215611191.8466827,\n      \"rot\":[ -0.8184263716877948,0.5746101614407401,-0.5746114114129233,-0.8184245913364506,0.0020858247314944,3.0739111244241752 ],\n    }\n   },\n   {\n    \"start\": 236649600 ,\n    \"stop\": 245116800 ,\n    \"interp\": 244944000 ,\n    \"sat\":{\n      \"e\": 0.008122750013141613,\n      \"a\": 143494117017.1013,\n      \"per\": 29626750.094694022,\n      \"t0\": 234893758.08591402,\n      \"rot\":[ -0.8369274050277378,0.5473126883412494,-0.5473139124063421,-0.836925533243377,0.0021149434894548154,0.9557248702152495 ],\n    }\n   },\n   {\n    \"start\": 245116800 ,\n    \"stop\": 249264000 ,\n    \"interp\": 249091200 ,\n    \"sat\":{\n      \"e\": 0.007697545660992605,\n      \"a\": 145130387611.0648,\n      \"per\": 30134944.963100553,\n      \"t0\": 240858139.15705433,\n      \"rot\":[ -0.8435824239802263,0.5369984027376249,-0.5369997150387007,-0.8435803624630754,0.0022107745036458056,2.2507727071994013 ],\n    }\n   },\n   {\n    \"start\": 249264000 ,\n    \"stop\": 253584000 ,\n    \"interp\": 253411200 ,\n    \"sat\":{\n      \"e\": 0.0012256439351127357,\n      \"a\": 145198500515.3157,\n      \"per\": 30156161.94735162,\n      \"t0\": 237755907.59522694,\n      \"rot\":[ -0.8331013704494113,0.5531189375840735,-0.5531203364145207,-0.8330992635524381,0.0022489896066756336,1.6005548080855097 ],\n    }\n   },\n   {\n    \"start\": 253584000 ,\n    \"stop\": 262051200 ,\n    \"interp\": 261878400 ,\n    \"sat\":{\n      \"e\": 0.010584566793591812,\n      \"a\": 143689656655.136,\n      \"per\": 29687329.342790954,\n      \"t0\": 237436932.69799048,\n      \"rot\":[ -0.8149081902810701,0.5795886299300306,-0.5795900632454212,-0.8149061750283507,0.002223950649889524,1.4556465042343742 ],\n    }\n   },\n   {\n    \"start\": 262051200 ,\n    \"stop\": 266198400 ,\n    \"interp\": 266025600 ,\n    \"sat\":{\n      \"e\": 0.006420344295822543,\n      \"a\": 142171459719.3644,\n      \"per\": 29218068.545725424,\n      \"t0\": 244437818.2851766,\n      \"rot\":[ -0.8166534412136509,0.5771270274974406,-0.5771283712952449,-0.8166515397006501,0.0021579704646096545,2.8669426846424915 ],\n    }\n   },\n   {\n    \"start\": 266198400 ,\n    \"stop\": 270518400 ,\n    \"interp\": 270345600 ,\n    \"sat\":{\n      \"e\": 0.002948181533412599,\n      \"a\": 142294385487.0868,\n      \"per\": 29255970.981620196,\n      \"t0\": 259463885.3882032,\n      \"rot\":[ -0.8261644798613041,0.5634277156666209,-0.5634290125787815,-0.8261625781793944,0.0021456082283041133,6.0971844347998525 ],\n    }\n   },\n   {\n    \"start\": 270518400 ,\n    \"stop\": 278985600 ,\n    \"interp\": 278812800 ,\n    \"sat\":{\n      \"e\": 0.01035961022330803,\n      \"a\": 144023491323.2763,\n      \"per\": 29790848.421098042,\n      \"t0\": 267489942.30221125,\n      \"rot\":[ -0.8347438899370404,0.5506370844896631,-0.5506383915173171,-0.8347419085398748,0.0021788326991365927,1.5546775774305153 ],\n    }\n   },\n   {\n    \"start\": 278985600 ,\n    \"stop\": 283132800 ,\n    \"interp\": 282960000 ,\n    \"sat\":{\n      \"e\": 0.002684076189139968,\n      \"a\": 145271106810.091,\n      \"per\": 30178784.090870794,\n      \"t0\": 271993915.36759615,\n      \"rot\":[ -0.8301120768882735,0.55759521433351,-0.5575965744193889,-0.8301100520843822,0.0022087056914234016,2.525536827863218 ],\n    }\n   },\n   {\n    \"start\": 283132800 ,\n    \"stop\": 287452800 ,\n    \"interp\": 287280000 ,\n    \"sat\":{\n      \"e\": 0.006040364056023323,\n      \"a\": 144917256745.0592,\n      \"per\": 30068587.44376856,\n      \"t0\": 263962965.72590882,\n      \"rot\":[ -0.8257264746430659,0.5640693567967189,-0.5640707305591508,-0.8257244636328354,0.002207007295414865,0.844766251489154 ],\n    }\n   },\n   {\n    \"start\": 287452800 ,\n    \"stop\": 291600000 ,\n    \"interp\": 291427200 ,\n    \"sat\":{\n      \"e\": 0.010582869281159177,\n      \"a\": 143756541220.1676,\n      \"per\": 29708060.011982013,\n      \"t0\": 268006271.15815532,\n      \"rot\":[ -0.82374667221584,0.5669566741083399,-0.5669580407872611,-0.8237446865358914,0.0021956975875022,1.642542095020049 ],\n    }\n   },\n   {\n    \"start\": 291600000 ,\n    \"stop\": 295747200 ,\n    \"interp\": 295574400 ,\n    \"sat\":{\n      \"e\": 0.007905532504546066,\n      \"a\": 142578075998.31052,\n      \"per\": 29343505.46182397,\n      \"t0\": 272583365.608946,\n      \"rot\":[ -0.8243637037240334,0.5660591401087157,-0.5660604949847623,-0.8243617305945786,0.0021879283564379456,2.5534720224988394 ],\n    }\n   },\n   {\n    \"start\": 295747200 ,\n    \"stop\": 299894400 ,\n    \"interp\": 299721600 ,\n    \"sat\":{\n      \"e\": 0.0016055646085825377,\n      \"a\": 142103200977.61398,\n      \"per\": 29197028.993949745,\n      \"t0\": 284017634.3392135,\n      \"rot\":[ -0.8256068593127271,0.5642444439754218,-0.5642457920585451,-0.825604886791728,0.0021859433855878204,4.9733567191965635 ],\n    }\n   },\n   {\n    \"start\": 299894400 ,\n    \"stop\": 304214400 ,\n    \"interp\": 304041600 ,\n    \"sat\":{\n      \"e\": 0.008236581335101974,\n      \"a\": 142646187201.14868,\n      \"per\": 29364534.57282861,\n      \"t0\": 293594271.0382602,\n      \"rot\":[ -0.8268007698134133,0.5624935315485848,-0.5624948773419604,-0.8267987916567336,0.002187482792183392,0.7431462234572511 ],\n    }\n   },\n   {\n    \"start\": 304214400 ,\n    \"stop\": 312681600 ,\n    \"interp\": 312508800 ,\n    \"sat\":{\n      \"e\": 0.00861765318099372,\n      \"a\": 144463658025.8039,\n      \"per\": 29927523.556032736,\n      \"t0\": 299684238.8560446,\n      \"rot\":[ -0.8274487732028296,0.5615398710929553,-0.5615412075040729,-0.8274468039586763,0.002181694634681741,2.063249834321467 ],\n    }\n   },\n   {\n    \"start\": 312681600 ,\n    \"stop\": 321148800 ,\n    \"interp\": 320976000 ,\n    \"sat\":{\n      \"e\": 0.007005438638596686,\n      \"a\": 144941127209.5535,\n      \"per\": 30076017.00103,\n      \"t0\": 294331345.7392257,\n      \"rot\":[ -0.83190736504815,0.5549132061962927,-0.5549145303365592,-0.8319053799459769,0.0021845836881868633,0.9863532098254267 ],\n    }\n   },\n   {\n    \"start\": 321148800 ,\n    \"stop\": 325296000 ,\n    \"interp\": 325123200 ,\n    \"sat\":{\n      \"e\": 0.008801389552090793,\n      \"a\": 143276863025.1336,\n      \"per\": 29559492.011482846,\n      \"t0\": 300578358.3571726,\n      \"rot\":[ -0.8314059323116718,0.5556641713813547,-0.5556655250390831,-0.8314039069222695,0.0022073054747277095,2.2235288976571965 ],\n    }\n   },\n   {\n    \"start\": 325296000 ,\n    \"stop\": 329616000 ,\n    \"interp\": 329443200 ,\n    \"sat\":{\n      \"e\": 0.002192406805964423,\n      \"a\": 142368457573.4844,\n      \"per\": 29278817.97725942,\n      \"t0\": 306548441.9410786,\n      \"rot\":[ -0.8269240374330837,0.5623122706465055,-0.5623136458555563,-0.8269220150858955,0.002211616298853837,3.433916336013151 ],\n    }\n   },\n   {\n    \"start\": 329616000 ,\n    \"stop\": 333763200 ,\n    \"interp\": 333590400 ,\n    \"sat\":{\n      \"e\": 0.006769653060302809,\n      \"a\": 142336145956.8723,\n      \"per\": 29268850.963385776,\n      \"t0\": 322310621.19637,\n      \"rot\":[ -0.8234080076516501,0.5674484022176168,-0.5674497800996491,-0.8234060082516349,0.0022037231637122255,0.5077550643136017 ],\n    }\n   },\n   {\n    \"start\": 333763200 ,\n    \"stop\": 338083200 ,\n    \"interp\": 337910400 ,\n    \"sat\":{\n      \"e\": 0.010613866831292184,\n      \"a\": 143157002529.7006,\n      \"per\": 29522407.088754453,\n      \"t0\": 326363720.14978456,\n      \"rot\":[ -0.8226556184670868,0.5685386424294322,-0.5685400015869904,-0.822653651818129,0.0021865989104080923,1.3768759091298612 ],\n    }\n   },\n   {\n    \"start\": 338083200 ,\n    \"stop\": 346550400 ,\n    \"interp\": 346377600 ,\n    \"sat\":{\n      \"e\": 0.00422653647616559,\n      \"a\": 144731236882.4984,\n      \"per\": 30010710.70122248,\n      \"t0\": 330563135.9963466,\n      \"rot\":[ -0.8281723921826032,0.5604721334288891,-0.5604734505991739,-0.8281704458922581,0.002167994531349801,2.3108168847461643 ],\n    }\n   },\n   {\n    \"start\": 346550400 ,\n    \"stop\": 355017600 ,\n    \"interp\": 354844800 ,\n    \"sat\":{\n      \"e\": 0.009258109916134277,\n      \"a\": 144510257285.12778,\n      \"per\": 29942005.186644178,\n      \"t0\": 326662481.0898028,\n      \"rot\":[ -0.8341278745575404,0.5515697783970636,-0.5515711095462852,-0.8341258614922226,0.0021969863157668434,1.5131850123870743 ],\n    }\n   },\n   {\n    \"start\": 355017600 ,\n    \"stop\": 359164800 ,\n    \"interp\": 358992000 ,\n    \"sat\":{\n      \"e\": 0.0037531330457877266,\n      \"a\": 142951414536.66962,\n      \"per\": 29458834.16490594,\n      \"t0\": 332773012.5897684,\n      \"rot\":[ -0.8294986784762967,0.55850731020409,-0.5585086771090289,-0.8294966483451869,0.002212426878757898,2.711401536187833 ],\n    }\n   },\n   {\n    \"start\": 359164800 ,\n    \"stop\": 363312000 ,\n    \"interp\": 363139200 ,\n    \"sat\":{\n      \"e\": 0.004382066695878737,\n      \"a\": 142433854339.83218,\n      \"per\": 29298994.074381024,\n      \"t0\": 351385678.45133686,\n      \"rot\":[ -0.826539478335203,0.5628773809487297,-0.5628787531550382,-0.8265374633671836,0.002208091221021322,0.36975964636255665 ],\n    }\n   },\n   {\n    \"start\": 363312000 ,\n    \"stop\": 371779200 ,\n    \"interp\": 371606400 ,\n    \"sat\":{\n      \"e\": 0.01054887557503797,\n      \"a\": 143075489449.846,\n      \"per\": 29497195.750568878,\n      \"t0\": 356713197.1609694,\n      \"rot\":[ -0.8263316663038961,0.5631824334828999,-0.5631837863996322,-0.8263296812362063,0.002191922523469491,1.5029694981266148 ],\n    }\n   },\n   {\n    \"start\": 371779200 ,\n    \"stop\": 380246400 ,\n    \"interp\": 380073600 ,\n    \"sat\":{\n      \"e\": 0.003096061342294005,\n      \"a\": 144713491611.59088,\n      \"per\": 30005191.520854827,\n      \"t0\": 355935231.1258472,\n      \"rot\":[ -0.8278310386286468,0.5609761736328878,-0.5609775142401127,-0.8278290603028794,0.002186214595046379,1.3971698551442402 ],\n    }\n   },\n   {\n    \"start\": 380246400 ,\n    \"stop\": 388713600 ,\n    \"interp\": 388540800 ,\n    \"sat\":{\n      \"e\": 0.008067547606208503,\n      \"a\": 144167525776.7818,\n      \"per\": 29835549.266381077,\n      \"t0\": 358457915.5781466,\n      \"rot\":[ -0.8301275065475033,0.5575722704951408,-0.5575736030993799,-0.8301255225378084,0.0021863225343524625,1.9166959280969302 ],\n    }\n   },\n   {\n    \"start\": 388713600 ,\n    \"stop\": 392860800 ,\n    \"interp\": 392688000 ,\n    \"sat\":{\n      \"e\": 0.002057105083852578,\n      \"a\": 142941150922.7034,\n      \"per\": 29455661.597405493,\n      \"t0\": 383138492.5153069,\n      \"rot\":[ -0.8334754117471003,0.5525552228555983,-0.5525565473442529,-0.8334734138905334,0.0021895279535520556,0.8186151144111872 ],\n    }\n   },\n   {\n    \"start\": 392860800 ,\n    \"stop\": 397180800 ,\n    \"interp\": 397008000 ,\n    \"sat\":{\n      \"e\": 0.008246236789348195,\n      \"a\": 142676964408.7853,\n      \"per\": 29374038.582107034,\n      \"t0\": 383934987.611787,\n      \"rot\":[ -0.8342976259388176,0.5513129719875169,-0.5513143126682389,-0.8342955971020583,0.002205351312441035,0.9722436492446203 ],\n    }\n   },\n   {\n    \"start\": 397180800 ,\n    \"stop\": 405648000 ,\n    \"interp\": 405475200 ,\n    \"sat\":{\n      \"e\": 0.009115166034553073,\n      \"a\": 143346606846.28778,\n      \"per\": 29581077.940404348,\n      \"t0\": 388269833.41124815,\n      \"rot\":[ -0.8278947759363464,0.5608820547049351,-0.5608834459825917,-0.8278927223341017,0.002227333877142871,1.887223619426674 ],\n    }\n   },\n   {\n    \"start\": 405648000 ,\n    \"stop\": 414115200 ,\n    \"interp\": 413942400 ,\n    \"sat\":{\n      \"e\": 0.005521845341641146,\n      \"a\": 144564133828.4057,\n      \"per\": 29958751.28600986,\n      \"t0\": 385091380.1470222,\n      \"rot\":[ -0.8178110472964775,0.5754854574400711,-0.5754868294929422,-0.8178090975038185,0.0021836471743833623,1.250745778847836 ],\n    }\n   },\n   {\n    \"start\": 414115200 ,\n    \"stop\": 422582400 ,\n    \"interp\": 422409600 ,\n    \"sat\":{\n      \"e\": 0.005470764236499124,\n      \"a\": 144006207311.373,\n      \"per\": 29785485.859142516,\n      \"t0\": 388911964.41275185,\n      \"rot\":[ -0.8367107179593545,0.5476438586921853,-0.5476451172538122,-0.8367087950863676,0.0021438894217496516,2.0638608639633693 ],\n    }\n   },\n   {\n    \"start\": 422582400 ,\n    \"stop\": 430876800 ,\n    \"interp\": 430704000 ,\n    \"sat\":{\n      \"e\": 0.008451954161145631,\n      \"a\": 142904125143.5292,\n      \"per\": 29444217.57110786,\n      \"t0\": 414446723.4189631,\n      \"rot\":[ -0.8434360912152903,0.5372281617009295,-0.537229522676735,-0.8434339545193993,0.0022509196360165824,1.1492904467052871 ],\n    }\n   },\n   {\n    \"start\": 430876800 ,\n    \"stop\": 439344000 ,\n    \"interp\": 439171200 ,\n    \"sat\":{\n      \"e\": 0.007392213887976186,\n      \"a\": 143351608287.8467,\n      \"per\": 29582626.103904497,\n      \"t0\": 419084892.85322416,\n      \"rot\":[ -0.8092352288838487,0.5874832727303427,-0.5874847609370859,-0.8092331789424638,0.0022508577742567752,2.07243593474244 ],\n    }\n   },\n   {\n    \"start\": 439344000 ,\n    \"stop\": 447811200 ,\n    \"interp\": 447638400 ,\n    \"sat\":{\n      \"e\": 0.006733424918828343,\n      \"a\": 144466669060.36838,\n      \"per\": 29928459.223299917,\n      \"t0\": 415347703.39370954,\n      \"rot\":[ -0.8147296246506084,0.5798397563053275,-0.5798410460778702,-0.8147278124023953,0.002109195530481443,1.3464985765775128 ],\n    }\n   },\n   {\n    \"start\": 447811200 ,\n    \"stop\": 456278400 ,\n    \"interp\": 456105600 ,\n    \"sat\":{\n      \"e\": 0.004143890238452392,\n      \"a\": 144082685111.99332,\n      \"per\": 29809216.407650404,\n      \"t0\": 447638790.69664687,\n      \"rot\":[ -0.8601993809689286,0.5099566609332492,-0.5099578658876359,-0.8601973484460734,0.002173866637023333,1.9343266376735466 ],\n    }\n   },\n   {\n    \"start\": 456278400 ,\n    \"stop\": 464745600 ,\n    \"interp\": 464572800 ,\n    \"sat\":{\n      \"e\": 0.01008247676066371,\n      \"a\": 142913719577.5996,\n      \"per\": 29447182.902013496,\n      \"t0\": 445658576.8521214,\n      \"rot\":[ -0.8343138594318518,0.5512882520722158,-0.5512897459230748,-0.8343115986597537,0.002327975293529715,1.4319403344760526 ],\n    }\n   },\n   {\n    \"start\": 464745600 ,\n    \"stop\": 473212800 ,\n    \"interp\": 473040000 ,\n    \"sat\":{\n      \"e\": 0.004789617721575549,\n      \"a\": 143249662759.4235,\n      \"per\": 29551074.868698355,\n      \"t0\": 449957980.75143385,\n      \"rot\":[ -0.7930629393279236,0.6091382387216615,-0.6091397001218638,-0.7930610366735082,0.002190487939367874,2.2698677683362574 ],\n    }\n   },\n   {\n    \"start\": 473212800 ,\n    \"stop\": 481680000 ,\n    \"interp\": 481507200 ,\n    \"sat\":{\n      \"e\": 0.008404606271142968,\n      \"a\": 144624219188.311,\n      \"per\": 29977430.91285041,\n      \"t0\": 475740114.9079291,\n      \"rot\":[ -0.8456208579052008,0.5337828739289653,-0.533784005638678,-0.8456190650501733,0.002059204653515403,1.552187721410394 ],\n    }\n   },\n   {\n    \"start\": 481680000 ,\n    \"stop\": 490147200 ,\n    \"interp\": 489974400 ,\n    \"sat\":{\n      \"e\": 0.003415701753818114,\n      \"a\": 144149668819.37,\n      \"per\": 29830006.17720306,\n      \"t0\": 475005965.18781084,\n      \"rot\":[ -0.8649864374844546,0.5017939213525892,-0.5017952400810034,-0.8649841642819569,0.00229260442209149,1.4406884367138393 ],\n    }\n   },\n   {\n    \"start\": 490147200 ,\n    \"stop\": 490492800 ,\n    \"interp\": 490320000 ,\n    \"planet\":\"Earth\",\n    \"sat\":{\n      \"e\": 2820836.678273214,\n      \"a\": -105128.31565396879,\n      \"per\": 10.727302891583966,\n      \"t0\": 490253932.9323688,\n      \"rot\":[ -0.45648650064713175,-0.8895323535079298,0.8897303382075583,-0.45638492229374306,0.0210948990416496,6.23613466903848 ],\n    },\n    \"planetOrb\":{\n      \"e\": 0.015436971263618222,\n      \"a\": 149910443704.40488,\n      \"per\": 31636079.500642404,\n      \"t0\": 474549331.3717092,\n      \"rot\":[ 0.8439503854355729,-0.536421236320306,0.5364212401864304,0.8439503793530077,0.00012006043890890225,1.4178029242120576 ],\n    }\n   },\n   {\n    \"start\": 490492800 ,\n    \"stop\": 496713600 ,\n    \"interp\": 496540800 ,\n    \"sat\":{\n      \"e\": 0.011370829311810382,\n      \"a\": 142706225503.43298,\n      \"per\": 29383075.365942087,\n      \"t0\": 476813497.36186224,\n      \"rot\":[ -0.8070857116466569,0.5904326783453361,-0.5904342927505223,-0.8070835048585779,0.0023384882182144527,1.6648419638378862 ],\n    }\n   },\n   {\n    \"start\": 496713600 ,\n    \"stop\": 499824000 ,\n    \"interp\": 499651200 ,\n    \"sat\":{\n      \"e\": 0.007863334801370962,\n      \"a\": 142565499095.7333,\n      \"per\": 29339622.933585804,\n      \"t0\": 480380230.0712538,\n      \"rot\":[ -0.7857129519853594,0.6185897622966102,-0.6185912681912445,-0.785711039250765,0.002206531510331447,2.3709860505975278 ],\n    }\n   },\n   {\n    \"start\": 499824000 ,\n    \"stop\": 503107200 ,\n    \"interp\": 502934400 ,\n    \"sat\":{\n      \"e\": 0.0023137418931130286,\n      \"a\": 142978926671.8786,\n      \"per\": 29467338.954022147,\n      \"t0\": 480952844.996987,\n      \"rot\":[ -0.7932286431981128,0.608922549212848,-0.6089239029715299,-0.7932268796934168,0.002108646953009892,2.513355029761232 ],\n    }\n   },\n   {\n    \"start\": 503107200 ,\n    \"stop\": 509328000 ,\n    \"interp\": 509155200 ,\n    \"sat\":{\n      \"e\": 0.007349432848802597,\n      \"a\": 144132433037.01868,\n      \"per\": 29824656.236453444,\n      \"t0\": 503567334.50558305,\n      \"rot\":[ -0.8359441256235739,0.5488134193230528,-0.5488145577838097,-0.8359423915413261,0.0020368591280267947,1.1209418568449667 ],\n    }\n   },\n   {\n    \"start\": 509328000 ,\n    \"stop\": 515721600 ,\n    \"interp\": 515548800 ,\n    \"sat\":{\n      \"e\": 0.008046276152484285,\n      \"a\": 145085776355.3842,\n      \"per\": 30121051.37635584,\n      \"t0\": 508239499.2485246,\n      \"rot\":[ -0.8708914395115136,0.4914742651841224,-0.491475432331631,-0.8708893713333159,0.0021793486156921026,2.186172483399366 ],\n    }\n   },\n   {\n    \"start\": 515721600 ,\n    \"stop\": 521942400 ,\n    \"interp\": 521769600 ,\n    \"sat\":{\n      \"e\": 0.005052322653105879,\n      \"a\": 144200052726.20978,\n      \"per\": 29845647.04117542,\n      \"t0\": 502602747.09116733,\n      \"rot\":[ -0.8461993910388859,0.5328649079136504,-0.5328663909512579,-0.8461970359541185,0.002359291554941742,0.9509081058723206 ],\n    }\n   },\n   {\n    \"start\": 521942400 ,\n    \"stop\": 528336000 ,\n    \"interp\": 528163200 ,\n    \"sat\":{\n      \"e\": 0.012245126576697398,\n      \"a\": 142577864177.83542,\n      \"per\": 29343440.070778582,\n      \"t0\": 507088716.3146718,\n      \"rot\":[ -0.7982905264703524,0.6022709542188749,-0.6022725590193261,-0.7982883993653103,0.0023084936769954545,1.7495838819484997 ],\n    }\n   },\n   {\n    \"start\": 528336000 ,\n    \"stop\": 534729600 ,\n    \"interp\": 534556800 ,\n    \"sat\":{\n      \"e\": 0.003966550515754235,\n      \"a\": 142316531535.71982,\n      \"per\": 29262801.146027286,\n      \"t0\": 513364494.58527356,\n      \"rot\":[ -0.7966285466243194,0.6044678097980236,-0.6044691544679717,-0.7966267744868025,0.00210928630896904,3.055417656518764 ],\n    }\n   },\n   {\n    \"start\": 534729600 ,\n    \"stop\": 541123200 ,\n    \"interp\": 540950400 ,\n    \"sat\":{\n      \"e\": 0.009262490992965342,\n      \"a\": 144076957011.4017,\n      \"per\": 29807438.798221588,\n      \"t0\": 533417137.91032475,\n      \"rot\":[ -0.8497490594170176,0.5271862568978211,-0.5271873822654463,-0.8497472454887767,0.0020662338447612325,1.1623724443680947 ],\n    }\n   },\n   {\n    \"start\": 541123200 ,\n    \"stop\": 547344000 ,\n    \"interp\": 547171200 ,\n    \"sat\":{\n      \"e\": 0.007652507609320975,\n      \"a\": 145447362729.1538,\n      \"per\": 30233724.153069954,\n      \"t0\": 539254740.6784167,\n      \"rot\":[ -0.866000858458188,0.5000412487783005,-0.5000425113424672,-0.865998671880792,0.0022471806652392574,2.444563655384129 ],\n    }\n   },\n   {\n    \"start\": 547344000 ,\n    \"stop\": 553737600 ,\n    \"interp\": 553564800 ,\n    \"sat\":{\n      \"e\": 0.0063478000624669195,\n      \"a\": 144463777854.586,\n      \"per\": 29927560.792173915,\n      \"t0\": 531687686.725034,\n      \"rot\":[ -0.8325417675495557,0.5539607501119381,-0.5539622778542431,-0.8325394715280938,0.002348549156629617,0.7943153651232547 ],\n    }\n   },\n   {\n    \"start\": 553737600 ,\n    \"stop\": 559958400 ,\n    \"interp\": 559785600 ,\n    \"sat\":{\n      \"e\": 0.012830069222020853,\n      \"a\": 142336185400.9375,\n      \"per\": 29268863.12982324,\n      \"t0\": 537997336.5578825,\n      \"rot\":[ -0.7988127939572691,0.6015781590767442,-0.6015796873317628,-0.7988107646506168,0.0022540630275542685,1.9787900872532247 ],\n    }\n   },\n   {\n    \"start\": 559958400 ,\n    \"stop\": 563068800 ,\n    \"interp\": 562896000 ,\n    \"sat\":{\n      \"e\": 0.006073063226368755,\n      \"a\": 141776244214.9057,\n      \"per\": 29096320.429434557,\n      \"t0\": 543694847.4684299,\n      \"rot\":[ -0.8050977823247526,0.5931407633945577,-0.5931421085168084,-0.8050959565313628,0.002129689313316264,3.168439376639663 ],\n    }\n   },\n   {\n    \"start\": 563068800 ,\n    \"stop\": 566352000 ,\n    \"interp\": 566179200 ,\n    \"sat\":{\n      \"e\": 0.0029482771829259006,\n      \"a\": 142292477125.87152,\n      \"per\": 29255382.44005948,\n      \"t0\": 556101761.4406961,\n      \"rot\":[ -0.824255523600807,0.5662167724092844,-0.5662180073201128,-0.8242537259150069,0.0020885300192176456,5.872122275701822 ],\n    }\n   },\n   {\n    \"start\": 566352000 ,\n    \"stop\": 572572800 ,\n    \"interp\": 572400000 ,\n    \"sat\":{\n      \"e\": 0.011315749634489922,\n      \"a\": 144085782833.64032,\n      \"per\": 29810177.742642116,\n      \"t0\": 563824447.20546,\n      \"rot\":[ -0.852200799596626,0.5232136807890841,-0.5232148671118505,-0.8521988673403511,0.002129492653423173,1.300937768898676 ],\n    }\n   },\n   {\n    \"start\": 572572800 ,\n    \"stop\": 578966400 ,\n    \"interp\": 578793600 ,\n    \"sat\":{\n      \"e\": 0.007052989628133146,\n      \"a\": 145782766267.0323,\n      \"per\": 30338363.470409364,\n      \"t0\": 570355057.6837565,\n      \"rot\":[ -0.8524774996284508,0.5227625814717779,-0.5227639167226682,-0.8524753222185265,0.0022601817144320864,2.703497515090595 ],\n    }\n   },\n   {\n    \"start\": 578966400 ,\n    \"stop\": 585360000 ,\n    \"interp\": 585187200 ,\n    \"sat\":{\n      \"e\": 0.008455494475084025,\n      \"a\": 144662335816.863,\n      \"per\": 29989282.806221705,\n      \"t0\": 561485152.1616914,\n      \"rot\":[ -0.8264714754757974,0.5629771177199344,-0.5629785965956952,-0.826469304436544,0.002292105566997583,0.8013575369770687 ],\n    }\n   },\n   {\n    \"start\": 585360000 ,\n    \"stop\": 588470400 ,\n    \"interp\": 588297600 ,\n    \"sat\":{\n      \"e\": 0.013653260035102928,\n      \"a\": 142657435487.7316,\n      \"per\": 29368007.927617095,\n      \"t0\": 567107099.8604102,\n      \"rot\":[ -0.8140495552793325,0.5807939720624626,-0.5807954214260999,-0.8140475238345574,0.0022340444787428784,1.878185797438364 ],\n    }\n   },\n   {\n    \"start\": 588470400 ,\n    \"stop\": 591753600 ,\n    \"interp\": 591580800 ,\n    \"sat\":{\n      \"e\": 0.01082697296138272,\n      \"a\": 141678585735.3761,\n      \"per\": 29066262.364515156,\n      \"t0\": 571030676.0243974,\n      \"rot\":[ -0.8153940713342638,0.5789049175453567,-0.5789063036735164,-0.815392118961874,0.0021883273678609027,2.66639934539802 ],\n    }\n   },\n   {\n    \"start\": 591753600 ,\n    \"stop\": 594864000 ,\n    \"interp\": 594691200 ,\n    \"sat\":{\n      \"e\": 0.004594425519108681,\n      \"a\": 141438982369.3774,\n      \"per\": 28992559.3175305,\n      \"t0\": 577315276.3660921,\n      \"rot\":[ -0.8237163560008849,0.5670007648691163,-0.5670020854076496,-0.8237144375790367,0.002158231148037799,4.009719436074028 ],\n    }\n   },\n   {\n    \"start\": 594864000 ,\n    \"stop\": 597974400 ,\n    \"interp\": 597801600 ,\n    \"sat\":{\n      \"e\": 0.0065617408514631,\n      \"a\": 142104033916.2638,\n      \"per\": 29197285.702131327,\n      \"t0\": 588052303.7689061,\n      \"rot\":[ -0.8329008760517657,0.5534209146440765,-0.5534221992947168,-0.83289894265147,0.0021546611281108266,0.06102037173768731 ],\n    }\n   },\n   {\n    \"start\": 597974400 ,\n    \"stop\": 604368000 ,\n    \"interp\": 604195200 ,\n    \"sat\":{\n      \"e\": 0.01296589525852761,\n      \"a\": 144144354602.3166,\n      \"per\": 29828356.624334224,\n      \"t0\": 594532364.767787,\n      \"rot\":[ -0.8411391640821355,0.5408174452190597,-0.5408187373299914,-0.8411371544529678,0.002185942701331556,1.4786109107583192 ],\n    }\n   },\n   {\n    \"start\": 604368000 ,\n    \"stop\": 607478400 ,\n    \"interp\": 607305600 ,\n    \"sat\":{\n      \"e\": 0.008530385268013177,\n      \"a\": 145902183464.3461,\n      \"per\": 30375648.37300209,\n      \"t0\": 600154773.7997497,\n      \"rot\":[ -0.8395911704076057,0.54321746289344,-0.5432188017489701,-0.8395891010917463,0.002220210703442823,2.687363002992462 ],\n    }\n   },\n   {\n    \"start\": 607478400 ,\n    \"stop\": 610588800 ,\n    \"interp\": 610416000 ,\n    \"sat\":{\n      \"e\": 0.0017666022799927672,\n      \"a\": 146087259151.5296,\n      \"per\": 30433463.577876706,\n      \"t0\": 607985143.9865961,\n      \"rot\":[ -0.8362251007826963,0.5483849848803681,-0.5483863426645209,-0.8362230303205027,0.0022252908470516176,4.318602777087662 ],\n    }\n   },\n   {\n    \"start\": 610588800 ,\n    \"stop\": 616982400 ,\n    \"interp\": 616809600 ,\n    \"sat\":{\n      \"e\": 0.010742486281477,\n      \"a\": 144796084790.9281,\n      \"per\": 30030882.74396693,\n      \"t0\": 591852920.5779744,\n      \"rot\":[ -0.834095720921765,0.5516183674054929,-0.5516197316449087,-0.8340936580763049,0.0022240273799821234,0.9508192120471397 ],\n    }\n   },\n   {\n    \"start\": 616982400 ,\n    \"stop\": 620092800 ,\n    \"interp\": 619920000 ,\n    \"sat\":{\n      \"e\": 0.013737284300721358,\n      \"a\": 142488955481.5867,\n      \"per\": 29315997.37909035,\n      \"t0\": 598109825.3062556,\n      \"rot\":[ -0.833586124169889,0.5523881457876249,-0.5523895125646597,-0.833584061628249,0.0022245432477190183,2.164605227433948 ],\n    }\n   },\n   {\n    \"start\": 620092800 ,\n    \"stop\": 623203200 ,\n    \"interp\": 623030400 ,\n    \"sat\":{\n      \"e\": 0.009494309582107278,\n      \"a\": 141390163575.719,\n      \"per\": 28977550.092976887,\n      \"t0\": 602703941.5483114,\n      \"rot\":[ -0.8325475199144918,0.5539522542315625,-0.5539536326121789,-0.8325454483198743,0.0022308100837987177,3.0869299333591975 ],\n    }\n   },\n   {\n    \"start\": 623203200 ,\n    \"stop\": 626313600 ,\n    \"interp\": 626140800 ,\n    \"sat\":{\n      \"e\": 0.00498402134348173,\n      \"a\": 141144362955.4808,\n      \"per\": 28902018.63715257,\n      \"t0\": 610904962.8686955,\n      \"rot\":[ -0.8291097714620608,0.5590844525940274,-0.5590858492808859,-0.8291077002117805,0.0022352443197728384,4.82863978157943 ],\n    }\n   },\n   {\n    \"start\": 626313600 ,\n    \"stop\": 629596800 ,\n    \"interp\": 629424000 ,\n    \"sat\":{\n      \"e\": 0.009451198534648497,\n      \"a\": 141880800909.52377,\n      \"per\": 29128513.15602666,\n      \"t0\": 619010672.6209253,\n      \"rot\":[ -0.8246533637047879,0.5656370216535113,-0.5656384266741243,-0.8246513153026285,0.0022288796714875552,0.2905406565592374 ],\n    }\n   },\n   {\n    \"start\": 629596800 ,\n    \"stop\": 635990400 ,\n    \"interp\": 635817600 ,\n    \"sat\":{\n      \"e\": 0.013884412640106888,\n      \"a\": 144231016667.4589,\n      \"per\": 29855260.6486479,\n      \"t0\": 625413921.5196403,\n      \"rot\":[ -0.8207861814796586,0.5712341672763157,-0.5712355418669612,-0.8207842063837055,0.002193783764340582,1.678136861900871 ],\n    }\n   },\n   {\n    \"start\": 635990400 ,\n    \"stop\": 639100800 ,\n    \"interp\": 638928000 ,\n    \"sat\":{\n      \"e\": 0.006845360069699897,\n      \"a\": 146146558854.8862,\n      \"per\": 30451995.773984164,\n      \"t0\": 631791807.4909527,\n      \"rot\":[ -0.8285493923072961,0.5599146837431882,-0.5599159798641314,-0.8285474743405681,0.002151672054769134,3.0648474383341986 ],\n    }\n   },\n   {\n    \"start\": 639100800 ,\n    \"stop\": 642384000 ,\n    \"interp\": 642211200 ,\n    \"sat\":{\n      \"e\": 0.0033693249658442183,\n      \"a\": 146327870685.58447,\n      \"per\": 30508682.218547538,\n      \"t0\": 613589694.4697634,\n      \"rot\":[ -0.8391284299605879,0.5439320866777897,-0.5439333396951126,-0.8391264969250813,0.0021464483657659293,5.641317974621304 ],\n    }\n   },\n   {\n    \"start\": 642384000 ,\n    \"stop\": 648604800 ,\n    \"interp\": 648432000 ,\n    \"sat\":{\n      \"e\": 0.01293827912710923,\n      \"a\": 144783034093.03888,\n      \"per\": 30026822.739713833,\n      \"t0\": 622755836.80586,\n      \"rot\":[ -0.8528965820850167,0.5220786392938565,-0.522079898356273,-0.8528945252158764,0.0021961898506844503,1.2275825603133892 ],\n    }\n   },\n   {\n    \"start\": 648604800 ,\n    \"stop\": 651715200 ,\n    \"interp\": 651542400 ,\n    \"sat\":{\n      \"e\": 0.01294479061838548,\n      \"a\": 142322316324.6525,\n      \"per\": 29264585.346849475,\n      \"t0\": 629293690.2907466,\n      \"rot\":[ -0.8496082143218512,0.5274129642871409,-0.5274143363209189,-0.8496060041218473,0.0022809782898208036,2.4846716944246343 ],\n    }\n   },\n   {\n    \"start\": 651715200 ,\n    \"stop\": 654998400 ,\n    \"interp\": 654825600 ,\n    \"sat\":{\n      \"e\": 0.007801920310280268,\n      \"a\": 141158602914.9819,\n      \"per\": 28906392.605195187,\n      \"t0\": 634904161.4326631,\n      \"rot\":[ -0.8372799429990802,0.5467729797325422,-0.5467744480601274,-0.8372776945376877,0.0023175124705963053,3.602808141899712 ],\n    }\n   },\n   {\n    \"start\": 654998400 ,\n    \"stop\": 658108800 ,\n    \"interp\": 657936000 ,\n    \"sat\":{\n      \"e\": 0.007116646784651589,\n      \"a\": 140973442829.84982,\n      \"per\": 28849535.767113287,\n      \"t0\": 644743953.1335461,\n      \"rot\":[ -0.8187217090902869,0.574188991332,-0.5741905285393339,-0.8187195172306982,0.002313944397067861,5.677483142761807 ],\n    }\n   },\n   {\n    \"start\": 658108800 ,\n    \"stop\": 661392000 ,\n    \"interp\": 661219200 ,\n    \"sat\":{\n      \"e\": 0.012533629877242361,\n      \"a\": 141870165292.9386,\n      \"per\": 29125237.936020236,\n      \"t0\": 650475864.4430912,\n      \"rot\":[ -0.8042402926441221,0.5943027377543595,-0.5943042585138498,-0.8042382346813193,0.002262249842151949,0.6113304744190677 ],\n    }\n   },\n   {\n    \"start\": 661392000 ,\n    \"stop\": 667785600 ,\n    \"interp\": 667612800 ,\n    \"sat\":{\n      \"e\": 0.013717691109534969,\n      \"a\": 144418657680.6875,\n      \"per\": 29913541.035893235,\n      \"t0\": 656592886.1700536,\n      \"rot\":[ -0.8033224698531123,0.5955429364375099,-0.5955442967816043,-0.803320634901483,0.0021373817783009604,1.9495689091092532 ],\n    }\n   },\n   {\n    \"start\": 667785600 ,\n    \"stop\": 670896000 ,\n    \"interp\": 670723200 ,\n    \"sat\":{\n      \"e\": 0.00454188011015209,\n      \"a\": 146355351852.1669,\n      \"per\": 30517277.165680055,\n      \"t0\": 664653456.0433933,\n      \"rot\":[ -0.8344863092017127,0.55102749675132,-0.5510286741676003,-0.8344845261043674,0.0020672484957711852,3.726130239515446 ],\n    }\n   },\n   {\n    \"start\": 670896000 ,\n    \"stop\": 674006400 ,\n    \"interp\": 673833600 ,\n    \"sat\":{\n      \"e\": 0.006421843458324457,\n      \"a\": 146455677016.1676,\n      \"per\": 30548661.48563238,\n      \"t0\": 646339830.5906101,\n      \"rot\":[ -0.8574831711453655,0.5145108814912119,-0.5145120126901682,-0.8574812858947896,0.002096942382245048,0.025347098208901443 ],\n    }\n   },\n   {\n    \"start\": 674006400 ,\n    \"stop\": 680400000 ,\n    \"interp\": 680227200 ,\n    \"sat\":{\n      \"e\": 0.014123497003791032,\n      \"a\": 144800723534.411,\n      \"per\": 30032325.877020422,\n      \"t0\": 653583980.2650396,\n      \"rot\":[ -0.8751126517850538,0.48391825387145543,-0.48391925637003863,-0.8751108388809753,0.0020354957719075665,1.4985562552022287 ],\n    }\n   },\n   {\n    \"start\": 680400000 ,\n    \"stop\": 683510400 ,\n    \"interp\": 683337600 ,\n    \"sat\":{\n      \"e\": 0.011050649390593711,\n      \"a\": 142108193956.908,\n      \"per\": 29198567.820388004,\n      \"t0\": 660928745.5926385,\n      \"rot\":[ -0.8509718749572073,0.525209783922885,-0.5252112603817775,-0.8509694827293804,0.002371146340345624,2.8708831777760766 ],\n    }\n   },\n   {\n    \"start\": 683510400 ,\n    \"stop\": 686793600 ,\n    \"interp\": 686620800 ,\n    \"sat\":{\n      \"e\": 0.006271500594962448,\n      \"a\": 140987008210.91528,\n      \"per\": 28853700.002088126,\n      \"t0\": 668395247.4404738,\n      \"rot\":[ -0.8249329114686502,0.5652290355600437,-0.5652306534290723,-0.824930550249562,0.002392618819986558,4.370298247488342 ],\n    }\n   },\n   {\n    \"start\": 686793600 ,\n    \"stop\": 689904000 ,\n    \"interp\": 689731200 ,\n    \"sat\":{\n      \"e\": 0.010032504630744581,\n      \"a\": 140930690782.17258,\n      \"per\": 28836413.26130997,\n      \"t0\": 677243844.7559903,\n      \"rot\":[ -0.7971878718859464,0.6037296616387912,-0.6037313118581443,-0.7971856928787814,0.002338103267163197,6.220706489536148 ],\n    }\n   },\n   {\n    \"start\": 689904000 ,\n    \"stop\": 1000000000000 ,\n    \"sat\":{\n      \"e\": 0.014697358242384918,\n      \"a\": 141955341192.357,\n      \"per\": 29151471.154030275,\n      \"t0\": 681851573.5480742,\n      \"rot\":[ -0.7827681668675217,0.6223118741783066,-0.6223134233960085,-0.7827662182058747,0.0022313431731627773,0.9149240134187582 ],\n    }\n   }\n ]},\n \n  \"STEREO-B\": {\n \"color\": 16776960 ,\n \"horizonsID\": -235 ,\n \"orbits\":[\n   {\n    \"start\": 215308800 ,\n    \"stop\": 215740800 ,\n    \"interp\": 215568000 ,\n    \"planet\":\"Earth\",\n    \"sat\":{\n      \"e\": 0.968721524811653,\n      \"a\": 211298005.6336129,\n      \"per\": 966616.2253380335,\n      \"t0\": 215140276.85004267,\n      \"rot\":[ -0.8627076417162,0.3475665694619835,-0.5057030007074041,-0.592933668695843,0.7263794768021166,3.173106119299422 ],\n    },\n    \"planetOrb\":{\n      \"e\": 0.01770873214273817,\n      \"a\": 150894810104.69373,\n      \"per\": 31948191.4393288,\n      \"t0\": 188046583.38022488,\n      \"rot\":[ -0.7124462393232628,-0.7017266912688814,0.7017266961389884,-0.7124462343787603,0.00011781490779313558,5.470529216695304 ],\n    }\n   },\n   {\n    \"start\": 215740800 ,\n    \"stop\": 215913600 ,\n    \"interp\": 215740800 ,\n    \"sat\":{\n      \"e\": 0.01199597509020723,\n      \"a\": 148677107197.4626,\n      \"per\": 31246330.606629316,\n      \"t0\": 192363309.76587626,\n      \"rot\":[ 0.7801980129679972,-0.6255266166667475,0.6255326215001012,0.78019052341607,0.004381667857202254,1.6185591408188333 ],\n    }\n   },\n   {\n    \"start\": 215913600 ,\n    \"stop\": 216777600 ,\n    \"interp\": 216604800 ,\n    \"planet\":\"Earth\",\n    \"sat\":{\n      \"e\": 0.966970728811266,\n      \"a\": 208906783.62599182,\n      \"per\": 950254.2001380668,\n      \"t0\": 216114319.19294494,\n      \"rot\":[ -0.8636269608187147,0.3351053856709964,-0.5041314040476256,-0.5740686722894286,0.747094063682844,3.1850250603690182 ],\n    },\n    \"planetOrb\":{\n      \"e\": 0.017882010068331147,\n      \"a\": 150781895859.667,\n      \"per\": 31912338.00961611,\n      \"t0\": 188380235.1879537,\n      \"rot\":[ -0.8200899589384706,-0.5722346146110754,0.572234619057863,-0.8200899525656198,0.0001246668903248515,5.363132577439943 ],\n    }\n   },\n   {\n    \"start\": 216777600 ,\n    \"stop\": 216950400 ,\n    \"interp\": 216777600 ,\n    \"sat\":{\n      \"e\": 0.005860086459469795,\n      \"a\": 148192258750.1043,\n      \"per\": 31093609.94935627,\n      \"t0\": 194341435.52711317,\n      \"rot\":[ 0.647117080263306,-0.7623842987376914,0.7623906376861497,0.647111699764628,0.004077875178613589,1.7917188609182455 ],\n    }\n   },\n   {\n    \"start\": 216950400 ,\n    \"stop\": 218851200 ,\n    \"interp\": 218678400 ,\n    \"planet\":\"Earth\",\n    \"sat\":{\n      \"e\": 0.9520346048417269,\n      \"a\": 225915400.28883812,\n      \"per\": 1068635.849973063,\n      \"t0\": 217074296.53881928,\n      \"rot\":[ -0.8411670343120659,0.3951683786653431,-0.5407753881110381,-0.6146777764737723,0.6826515828827053,3.1887223441411563 ],\n    },\n    \"planetOrb\":{\n      \"e\": 0.020950424697309695,\n      \"a\": 151042947874.6527,\n      \"per\": 31995249.670217887,\n      \"t0\": 188593163.85781902,\n      \"rot\":[ -0.9566567580897506,-0.2912178668076198,0.29121786895932117,-0.9566567510213669,0.00012156176132169076,5.111632491270223 ],\n    }\n   },\n   {\n    \"start\": 218851200 ,\n    \"stop\": 219024000 ,\n    \"interp\": 218851200 ,\n    \"sat\":{\n      \"e\": 0.006452502914491604,\n      \"a\": 147748912590.2413,\n      \"per\": 30954180.428227287,\n      \"t0\": 195337539.11910093,\n      \"rot\":[ 0.2783783025127162,-0.9604622700518326,0.9604715095671181,0.27837562457739423,0.00438627951984295,1.5551254607913616 ],\n    }\n   },\n   {\n    \"start\": 219024000 ,\n    \"stop\": 219888000 ,\n    \"interp\": 219715200 ,\n    \"planet\":\"Earth\",\n    \"sat\":{\n      \"e\": 0.9430810417952169,\n      \"a\": 229205163.92997822,\n      \"per\": 1092062.7177121383,\n      \"t0\": 219232563.0537854,\n      \"rot\":[ -0.8486897072244671,0.4188685340031809,-0.5288910860009349,-0.6721410568225628,0.6105534791936531,3.2092248176542317 ],\n    },\n    \"planetOrb\":{\n      \"e\": 0.02078389082632492,\n      \"a\": 150858730410.2571,\n      \"per\": 31936733.668728914,\n      \"t0\": 189180396.1701143,\n      \"rot\":[ -0.9013888702708388,-0.43301050971168137,0.4330105132117013,-0.9013888629849209,0.00012714551234542949,5.372476354677769 ],\n    }\n   },\n   {\n    \"start\": 219888000 ,\n    \"stop\": 221270400 ,\n    \"interp\": 221097600 ,\n    \"sat\":{\n      \"e\": 0.013080345172835099,\n      \"a\": 147064336789.1441,\n      \"per\": 30739296.43023866,\n      \"t0\": 197180310.83877873,\n      \"rot\":[ -0.29237758640794953,0.956299744457143,-0.9563029577316291,-0.29237660398974086,0.0025923330474823232,5.069481734838662 ],\n    }\n   },\n   {\n    \"start\": 221270400 ,\n    \"stop\": 222652800 ,\n    \"interp\": 222480000 ,\n    \"sat\":{\n      \"e\": 0.019368030354834184,\n      \"a\": 144202425818.061,\n      \"per\": 29846383.796313632,\n      \"t0\": 208572606.7677487,\n      \"rot\":[ -0.7026445213214774,-0.7115387499267672,0.7115410576044872,-0.702642242497101,0.002546843398900658,3.0597715397996113 ],\n    }\n   },\n   {\n    \"start\": 222652800 ,\n    \"stop\": 223171200 ,\n    \"interp\": 222998400 ,\n    \"planet\":\"Earth\",\n    \"sat\":{\n      \"e\": 0.9876607527591388,\n      \"a\": 27150471355.89777,\n      \"per\": 1407916972.8341317,\n      \"t0\": -1185122770.025907,\n      \"rot\":[ 0.8827115042407307,0.3815947064790564,-0.46991531181806184,0.7168058347859121,0.5835879327094029,0.4241114053699695 ],\n    },\n    \"planetOrb\":{\n      \"e\": 0.01806272053607276,\n      \"a\": 150296867729.9902,\n      \"per\": 31758480.738001145,\n      \"t0\": 222419167.2478221,\n      \"rot\":[ -0.7271481552293397,0.6864805559178176,-0.6864805607929245,-0.727148150065428,0.000119177136232365,4.43526531067052 ],\n    }\n   },\n   {\n    \"start\": 223171200 ,\n    \"stop\": 225417600 ,\n    \"interp\": 225244800 ,\n    \"sat\":{\n      \"e\": 0.04669330090211089,\n      \"a\": 154770925363.08368,\n      \"per\": 33186919.2565302,\n      \"t0\": 221244524.25186253,\n      \"rot\":[ 0.960034596043676,0.2798792185257517,-0.2798813577201164,0.9600272582895129,0.003909779857679531,2.0854812720594533 ],\n    }\n   },\n   {\n    \"start\": 225417600 ,\n    \"stop\": 227836800 ,\n    \"interp\": 227664000 ,\n    \"sat\":{\n      \"e\": 0.03954316686459413,\n      \"a\": 154792298737.9977,\n      \"per\": 33193794.006621715,\n      \"t0\": 222428986.44147113,\n      \"rot\":[ 0.9234032675046873,0.38382546411325547,-0.38383122014977755,0.9233894199001846,0.0054765239563538464,2.4455046046718123 ],\n    }\n   },\n   {\n    \"start\": 227836800 ,\n    \"stop\": 232502400 ,\n    \"interp\": 232329600 ,\n    \"sat\":{\n      \"e\": 0.03897871374959042,\n      \"a\": 154410214581.52573,\n      \"per\": 33070968.1955251,\n      \"t0\": 222213632.50717482,\n      \"rot\":[ 0.9159812266011881,0.40121559590715683,-0.40122112670469245,0.9159685998814728,0.005250679197900458,2.4190837452424843 ],\n    }\n   },\n   {\n    \"start\": 232502400 ,\n    \"stop\": 237168000 ,\n    \"interp\": 236995200 ,\n    \"sat\":{\n      \"e\": 0.046080583593454676,\n      \"a\": 154249919896.9036,\n      \"per\": 33019484.641673088,\n      \"t0\": 222498012.34807804,\n      \"rot\":[ 0.9174987731551255,0.39773313873782407,-0.39773860921318593,0.9174861539265246,0.005244778629501218,2.4512760379637024 ],\n    }\n   },\n   {\n    \"start\": 237168000 ,\n    \"stop\": 242006400 ,\n    \"interp\": 241833600 ,\n    \"sat\":{\n      \"e\": 0.04652626203707529,\n      \"a\": 154755553071.3373,\n      \"per\": 33181975.049445227,\n      \"t0\": 223412371.3095445,\n      \"rot\":[ 0.9228632832433168,0.38512250855792285,-0.38512771964812625,0.9228507961550885,0.005202060935053851,2.6084208424182846 ],\n    }\n   },\n   {\n    \"start\": 242006400 ,\n    \"stop\": 251337600 ,\n    \"interp\": 251164800 ,\n    \"sat\":{\n      \"e\": 0.03742150059359505,\n      \"a\": 156328402375.57318,\n      \"per\": 33689122.9001448,\n      \"t0\": 222933055.32737225,\n      \"rot\":[ 0.9229177916703887,0.384992104597078,-0.38499707767495195,0.922905870171979,0.005082735485431513,2.567137716379509 ],\n    }\n   },\n   {\n    \"start\": 251337600 ,\n    \"stop\": 256003200 ,\n    \"interp\": 255830400 ,\n    \"sat\":{\n      \"e\": 0.045215323148586166,\n      \"a\": 157501225398.2892,\n      \"per\": 34068952.08535898,\n      \"t0\": 222138969.4109202,\n      \"rot\":[ 0.9143313133996022,0.4049618092631627,-0.40496697314343855,0.9143196544304814,0.005050005983277059,2.5127973015036593 ],\n    }\n   },\n   {\n    \"start\": 256003200 ,\n    \"stop\": 260841600 ,\n    \"interp\": 260668800 ,\n    \"sat\":{\n      \"e\": 0.042488905864450394,\n      \"a\": 156857134752.4415,\n      \"per\": 33860181.86271456,\n      \"t0\": 256958470.90475607,\n      \"rot\":[ 0.9102337464691882,0.4140894174749429,-0.41409482825636157,0.9102218528750016,0.005112033260986864,2.6752779520759216 ],\n    }\n   },\n   {\n    \"start\": 260841600 ,\n    \"stop\": 265507200 ,\n    \"interp\": 265334400 ,\n    \"sat\":{\n      \"e\": 0.03656377650457934,\n      \"a\": 155498559732.4697,\n      \"per\": 33421229.76613561,\n      \"t0\": 256343044.2925881,\n      \"rot\":[ 0.9116982070323624,0.41085502379832023,-0.41086053508943354,0.9116859774950928,0.005179561612598885,2.548535151627094 ],\n    }\n   },\n   {\n    \"start\": 265507200 ,\n    \"stop\": 270172800 ,\n    \"interp\": 270000000 ,\n    \"sat\":{\n      \"e\": 0.04288259180580135,\n      \"a\": 154542613208.52737,\n      \"per\": 33113512.23240752,\n      \"t0\": 255865123.93455264,\n      \"rot\":[ 0.9159884606971795,0.4011991779779099,-0.40120461097750554,0.9159760566399967,0.005204157193140886,2.4207497916064455 ],\n    }\n   },\n   {\n    \"start\": 270172800 ,\n    \"stop\": 274838400 ,\n    \"interp\": 274665600 ,\n    \"sat\":{\n      \"e\": 0.04785659810721324,\n      \"a\": 154361171256.2063,\n      \"per\": 33055213.588912986,\n      \"t0\": 256691184.5613044,\n      \"rot\":[ 0.9196435112349812,0.39274886080913207,-0.392754137143576,0.9196311565675811,0.005183454765127679,2.547079449747755 ],\n    }\n   },\n   {\n    \"start\": 274838400 ,\n    \"stop\": 279676800 ,\n    \"interp\": 279504000 ,\n    \"sat\":{\n      \"e\": 0.04302248217234576,\n      \"a\": 154910051414.9844,\n      \"per\": 33231677.687373932,\n      \"t0\": 257404603.22563285,\n      \"rot\":[ 0.9208474167834404,0.3899179662331991,-0.3899231142203098,0.9208352592311957,0.005138576182410309,2.681745908726606 ],\n    }\n   },\n   {\n    \"start\": 279676800 ,\n    \"stop\": 289180800 ,\n    \"interp\": 289008000 ,\n    \"sat\":{\n      \"e\": 0.03879855473175077,\n      \"a\": 156671315104.2886,\n      \"per\": 33800031.36354317,\n      \"t0\": 255914285.22906905,\n      \"rot\":[ 0.9176066680996344,0.39748447181820523,-0.3974896258508987,0.9175947699909555,0.005092420706111599,2.482721697075758 ],\n    }\n   },\n   {\n    \"start\": 289180800 ,\n    \"stop\": 293846400 ,\n    \"interp\": 293673600 ,\n    \"sat\":{\n      \"e\": 0.045370980160485935,\n      \"a\": 157468114389.2875,\n      \"per\": 34058209.32998785,\n      \"t0\": 290342098.772539,\n      \"rot\":[ 0.9143402295444525,0.4049415411589131,-0.4049468417417252,0.9143282612177352,0.005116540080670893,2.621083990368344 ],\n    }\n   },\n   {\n    \"start\": 293846400 ,\n    \"stop\": 298684800 ,\n    \"interp\": 298512000 ,\n    \"sat\":{\n      \"e\": 0.03809987151517105,\n      \"a\": 156450030678.2937,\n      \"per\": 33728447.30643969,\n      \"t0\": 290377962.864279,\n      \"rot\":[ 0.9146678350295284,0.40420097471269645,-0.40420632301139886,0.9146557325053553,0.005144223595260538,2.6307405784032856 ],\n    }\n   },\n   {\n    \"start\": 298684800 ,\n    \"stop\": 303350400 ,\n    \"interp\": 303177600 ,\n    \"sat\":{\n      \"e\": 0.03985048244595142,\n      \"a\": 155235237934.09402,\n      \"per\": 33336372.27703678,\n      \"t0\": 289523369.3361036,\n      \"rot\":[ 0.915900201761516,0.40140072339924,-0.4014060542807175,0.91588803812978,0.005153723445169571,2.446364252654255 ],\n    }\n   },\n   {\n    \"start\": 303350400 ,\n    \"stop\": 308016000 ,\n    \"interp\": 307843200 ,\n    \"sat\":{\n      \"e\": 0.0468550130738131,\n      \"a\": 154515428722.11133,\n      \"per\": 33104775.474779617,\n      \"t0\": 289974199.447828,\n      \"rot\":[ 0.9169928311929129,0.39889839326278276,-0.39890368203465604,0.9169806734563162,0.005149403846171741,2.49873860789755 ],\n    }\n   },\n   {\n    \"start\": 308016000 ,\n    \"stop\": 312681600 ,\n    \"interp\": 312508800 ,\n    \"sat\":{\n      \"e\": 0.04599492754090918,\n      \"a\": 154456713557.5239,\n      \"per\": 33085907.769877303,\n      \"t0\": 290929976.1378091,\n      \"rot\":[ 0.9172479303648412,0.3983114856228318,-0.39831675114337756,0.9172358048697196,0.005141856272808971,2.6612312252368886 ],\n    }\n   },\n   {\n    \"start\": 312681600 ,\n    \"stop\": 317520000 ,\n    \"interp\": 317347200 ,\n    \"sat\":{\n      \"e\": 0.038253761861000435,\n      \"a\": 155142801668.7658,\n      \"per\": 33306601.030930683,\n      \"t0\": 290903572.7686325,\n      \"rot\":[ 0.917164704107107,0.3985030937028848,-0.39850835065293516,0.9171526052664439,0.0051364347756160745,2.670078912867978 ],\n    }\n   },\n   {\n    \"start\": 317520000 ,\n    \"stop\": 322185600 ,\n    \"interp\": 322012800 ,\n    \"sat\":{\n      \"e\": 0.03916368474742517,\n      \"a\": 156374945345.4425,\n      \"per\": 33704169.19221597,\n      \"t0\": 289598805.793463,\n      \"rot\":[ 0.9172073414021802,0.3984049518097314,-0.3984102067943849,0.9171952435431874,0.005136107012005741,2.4826065807713382 ],\n    }\n   },\n   {\n    \"start\": 322185600 ,\n    \"stop\": 327024000 ,\n    \"interp\": 326851200 ,\n    \"sat\":{\n      \"e\": 0.045471411129755286,\n      \"a\": 157353105612.6212,\n      \"per\": 34020903.894732825,\n      \"t0\": 323637992.26465684,\n      \"rot\":[ 0.9174384461139545,0.397872501875839,-0.39787774201632903,0.9174263632406472,0.005132278451189261,2.5510480997156777 ],\n    }\n   },\n   {\n    \"start\": 327024000 ,\n    \"stop\": 336528000 ,\n    \"interp\": 336355200 ,\n    \"sat\":{\n      \"e\": 0.03822332927601745,\n      \"a\": 156651195725.37292,\n      \"per\": 33793520.78623723,\n      \"t0\": 323893985.48126554,\n      \"rot\":[ 0.9171005454117008,0.39865075364994057,-0.39865597901644584,0.9170885245548113,0.005120033614519037,2.6095401844886594 ],\n    }\n   },\n   {\n    \"start\": 336528000 ,\n    \"stop\": 341193600 ,\n    \"interp\": 341020800 ,\n    \"sat\":{\n      \"e\": 0.0441058741512665,\n      \"a\": 155138064998.9927,\n      \"per\": 33305075.71524265,\n      \"t0\": 323334755.09918666,\n      \"rot\":[ 0.9155940859866585,0.4020985344958691,-0.4021038046403634,0.915582085818852,0.0051198324069071256,2.4740842831088914 ],\n    }\n   },\n   {\n    \"start\": 341193600 ,\n    \"stop\": 345859200 ,\n    \"interp\": 345686400 ,\n    \"sat\":{\n      \"e\": 0.04682584027592121,\n      \"a\": 154582953487.3746,\n      \"per\": 33126478.515205808,\n      \"t0\": 324208035.75327533,\n      \"rot\":[ 0.9150776370361783,0.40327240670325903,-0.4032777184475784,0.9150655841549553,0.005132512728827414,2.6105183519948194 ],\n    }\n   },\n   {\n    \"start\": 345859200 ,\n    \"stop\": 350524800 ,\n    \"interp\": 350352000 ,\n    \"sat\":{\n      \"e\": 0.04120753621426327,\n      \"a\": 154623055345.423,\n      \"per\": 33139369.841132753,\n      \"t0\": 324800255.5309958,\n      \"rot\":[ 0.9154384743896257,0.40245261870637383,-0.40245794762582915,0.9154263531284477,0.005146036759742444,2.7083724424677142 ],\n    }\n   },\n   {\n    \"start\": 350524800 ,\n    \"stop\": 355363200 ,\n    \"interp\": 355190400 ,\n    \"sat\":{\n      \"e\": 0.03687547706820162,\n      \"a\": 155437255702.4855,\n      \"per\": 33401467.646224868,\n      \"t0\": 323869491.7134818,\n      \"rot\":[ 0.9167422687210277,0.39947387446962657,-0.3994791768543425,0.9167301005769147,0.005152311371127497,2.557236442813099 ],\n    }\n   },\n   {\n    \"start\": 355363200 ,\n    \"stop\": 364867200 ,\n    \"interp\": 364694400 ,\n    \"sat\":{\n      \"e\": 0.04453024448947309,\n      \"a\": 156995822801.229,\n      \"per\": 33905098.9181837,\n      \"t0\": 357293382.59717494,\n      \"rot\":[ 0.9182470505204203,0.39600280483735745,-0.3960080229118452,0.9182349510647765,0.005133537183378762,2.5587044825387775 ],\n    }\n   },\n   {\n    \"start\": 364867200 ,\n    \"stop\": 374371200 ,\n    \"interp\": 374198400 ,\n    \"sat\":{\n      \"e\": 0.03885532906658228,\n      \"a\": 156363476066.3376,\n      \"per\": 33700461.22511382,\n      \"t0\": 357081502.3750775,\n      \"rot\":[ 0.9164898235920637,0.40005277332271894,-0.4000579998602553,0.9164778501570457,0.005111626778329469,2.5291616434955717 ],\n    }\n   },\n   {\n    \"start\": 374371200 ,\n    \"stop\": 379036800 ,\n    \"interp\": 378864000 ,\n    \"sat\":{\n      \"e\": 0.04553364352265166,\n      \"a\": 155194625169.4947,\n      \"per\": 33323290.900960986,\n      \"t0\": 357400896.57840055,\n      \"rot\":[ 0.9155031659371082,0.4023054859713794,-0.40231076689436446,0.9154911486059559,0.00512374682042259,2.5535384188357346 ],\n    }\n   },\n   {\n    \"start\": 379036800 ,\n    \"stop\": 383702400 ,\n    \"interp\": 383529600 ,\n    \"sat\":{\n      \"e\": 0.04357761927339501,\n      \"a\": 154736093782.28848,\n      \"per\": 33175716.68908969,\n      \"t0\": 358206465.3798993,\n      \"rot\":[ 0.9157378622919765,0.4017709738938547,-0.4017762655569902,0.9157258014095823,0.005132364870296985,2.676340043960838 ],\n    }\n   },\n   {\n    \"start\": 383702400 ,\n    \"stop\": 393206400 ,\n    \"interp\": 393033600 ,\n    \"sat\":{\n      \"e\": 0.03696986075132434,\n      \"a\": 155172826116.16888,\n      \"per\": 33316270.129281312,\n      \"t0\": 357539792.113548,\n      \"rot\":[ 0.9159979595018296,0.4011776370195758,-0.4011829236003005,0.9159858889552741,0.005133691674196,2.553949624967209 ],\n    }\n   },\n   {\n    \"start\": 393206400 ,\n    \"stop\": 402710400 ,\n    \"interp\": 402537600 ,\n    \"sat\":{\n      \"e\": 0.04279257415549306,\n      \"a\": 156739100796.8153,\n      \"per\": 33821969.709482856,\n      \"t0\": 391093026.74883825,\n      \"rot\":[ 0.9162501942483815,0.4006012309985175,-0.4006065170960192,0.9162381041109123,0.005137148792221014,2.6028465360963007 ],\n    }\n   },\n   {\n    \"start\": 402710400 ,\n    \"stop\": 412214400 ,\n    \"interp\": 412041600 ,\n    \"sat\":{\n      \"e\": 0.04085935191968639,\n      \"a\": 156284558921.9377,\n      \"per\": 33674951.34934157,\n      \"t0\": 390631882.05387294,\n      \"rot\":[ 0.9179770086990805,0.39662837417326224,-0.39663359855146946,0.9179649172900408,0.005132584666930164,2.5127271185423368 ],\n    }\n   },\n   {\n    \"start\": 412214400 ,\n    \"stop\": 421545600 ,\n    \"interp\": 421372800 ,\n    \"sat\":{\n      \"e\": 0.04256131231199597,\n      \"a\": 155085707265.972,\n      \"per\": 33288216.882497683,\n      \"t0\": 391671486.51596856,\n      \"rot\":[ 0.9170392098345461,0.39879188720231257,-0.3987970506736869,0.9170273363623096,0.005088719472055506,2.6571988579075687 ],\n    }\n   },\n   {\n    \"start\": 421545600 ,\n    \"stop\": 431049600 ,\n    \"interp\": 430876800 ,\n    \"sat\":{\n      \"e\": 0.038813778461803505,\n      \"a\": 155235325931.32608,\n      \"per\": 33336400.62281324,\n      \"t0\": 424185020.03424066,\n      \"rot\":[ 0.9119924826252055,0.41020153450259755,-0.41020691319761327,0.9119805244419987,0.005120950127760241,2.5046029222293518 ],\n    }\n   },\n   {\n    \"start\": 431049600 ,\n    \"stop\": 440553600 ,\n    \"interp\": 440380800 ,\n    \"sat\":{\n      \"e\": 0.04186012138694323,\n      \"a\": 156474654655.0109,\n      \"per\": 33736410.49931685,\n      \"t0\": 424702321.46044713,\n      \"rot\":[ 0.9168522509627886,0.3992213059454752,-0.3992266898698881,0.9168398864006433,0.005193417376324428,2.6005965096370938 ],\n    }\n   },\n   {\n    \"start\": 440553600 ,\n    \"stop\": 450057600 ,\n    \"interp\": 449884800 ,\n    \"sat\":{\n      \"e\": 0.04157033396744696,\n      \"a\": 156416832486.6728,\n      \"per\": 33717712.27446775,\n      \"t0\": 424274554.06674653,\n      \"rot\":[ 0.9225045220711608,0.3859812110248828,-0.3859862779403682,0.9224924121783605,0.005123886134036359,2.512831208503231 ],\n    }\n   },\n   {\n    \"start\": 450057600 ,\n    \"stop\": 459388800 ,\n    \"interp\": 459216000 ,\n    \"sat\":{\n      \"e\": 0.039980053980421405,\n      \"a\": 155196964604.1854,\n      \"per\": 33324044.38668685,\n      \"t0\": 425274587.55289537,\n      \"rot\":[ 0.912852338488889,0.40828469212706375,-0.4082898579629021,0.9128407887400198,0.005030366508245035,2.6651188274921886 ],\n    }\n   },\n   {\n    \"start\": 459388800 ,\n    \"stop\": 468892800 ,\n    \"interp\": 468720000 ,\n    \"sat\":{\n      \"e\": 0.04127347460637457,\n      \"a\": 155080645519.99878,\n      \"per\": 33286587.185675275,\n      \"t0\": 457681938.8571897,\n      \"rot\":[ 0.9085089609894088,0.4178597177856589,-0.41786537042682165,0.9084966712053945,0.005201409501939715,2.4838281459904623 ],\n    }\n   },\n   {\n    \"start\": 468892800 ,\n    \"stop\": 478396800 ,\n    \"interp\": 478224000 ,\n    \"sat\":{\n      \"e\": 0.04116424916110446,\n      \"a\": 156393500782.6637,\n      \"per\": 33710168.370787755,\n      \"t0\": 458395178.0944844,\n      \"rot\":[ 0.9230997206445664,0.3845554264375566,-0.38456066588501153,0.9230871438708319,0.0052200400208352255,2.599962458160974 ],\n    }\n   },\n   {\n    \"start\": 478396800 ,\n    \"stop\": 487900800 ,\n    \"interp\": 487728000 ,\n    \"sat\":{\n      \"e\": 0.04240455936756369,\n      \"a\": 156722081006.56598,\n      \"per\": 33816460.93215542,\n      \"t0\": 457747819.9992984,\n      \"rot\":[ 0.9230932249317985,0.38457142627961605,-0.38457625782803095,0.9230816278310493,0.005012629054886959,2.5019051072728327 ],\n    }\n   },\n   {\n    \"start\": 487900800 ,\n    \"stop\": 492566400 ,\n    \"interp\": 492393600 ,\n    \"sat\":{\n      \"e\": 0.04032535072164643,\n      \"a\": 155538119950.9905,\n      \"per\": 33433984.565053817,\n      \"t0\": 458795934.92498523,\n      \"rot\":[ 0.9077466518507453,0.41951353460980206,-0.4195187910615707,0.9077352780420024,0.0050059242102807105,2.67842032343729 ],\n    }\n   },\n   {\n    \"start\": 492566400 ,\n    \"stop\": 497232000 ,\n    \"interp\": 497059200 ,\n    \"sat\":{\n      \"e\": 0.03597835930140382,\n      \"a\": 154685061351.53122,\n      \"per\": 33159305.86511687,\n      \"t0\": 491594683.95637697,\n      \"rot\":[ 0.9028412548834521,0.42996836123312,-0.42997403233273696,0.9028293469487636,0.0051360127116599945,2.5601469787413773 ],\n    }\n   },\n   {\n    \"start\": 497232000 ,\n    \"stop\": 501897600 ,\n    \"interp\": 501724800 ,\n    \"sat\":{\n      \"e\": 0.04193223883507119,\n      \"a\": 154609035664.9868,\n      \"per\": 33134862.820729844,\n      \"t0\": 491172001.7466112,\n      \"rot\":[ 0.9084372843098485,0.4180153893490086,-0.41802117228167707,0.9084247169281056,0.005260032460753715,2.4515988347686233 ],\n    }\n   },\n   {\n    \"start\": 501897600 ,\n    \"stop\": 506736000 ,\n    \"interp\": 506563200 ,\n    \"sat\":{\n      \"e\": 0.04562580114228725,\n      \"a\": 155257551060.6395,\n      \"per\": 33343560.066019088,\n      \"t0\": 491847706.071672,\n      \"rot\":[ 0.9191073417791266,0.3940017205365843,-0.3940072261871702,0.9190944986545885,0.00528646924535605,2.5532235182710834 ],\n    }\n   },\n   {\n    \"start\": 506736000 ,\n    \"stop\": 516240000 ,\n    \"interp\": 516067200 ,\n    \"sat\":{\n      \"e\": 0.03868259586620838,\n      \"a\": 156585654183.7725,\n      \"per\": 33772314.61781036,\n      \"t0\": 491955596.99813503,\n      \"rot\":[ 0.92864632659777,0.3709614037433527,-0.370966305877593,0.9286340550009089,0.005140897327341528,2.5838093036058383 ],\n    }\n   },\n   {\n    \"start\": 516240000 ,\n    \"stop\": 525744000 ,\n    \"interp\": 525571200 ,\n    \"sat\":{\n      \"e\": 0.04489843579300199,\n      \"a\": 157039747476.21832,\n      \"per\": 33919328.99055402,\n      \"t0\": 491394135.00629735,\n      \"rot\":[ 0.91445895668934,0.4046737060227469,-0.40467865835826317,0.9144477658160981,0.004947246482850136,2.552855055209779 ],\n    }\n   },\n   {\n    \"start\": 525744000 ,\n    \"stop\": 526089600 ,\n    \"interp\": 525916800 ,\n    \"planet\":\"Earth\",\n    \"sat\":{\n      \"e\": 4106430.1346344585,\n      \"a\": -67312.5529200876,\n      \"per\": 5.496105708143127,\n      \"t0\": 524621926.6496861,\n      \"rot\":[ 0.7978506436856335,0.5277993710936854,-0.6028551653344444,0.6985178068937239,0.4832190986762552,2.814905801568344 ],\n    },\n    \"planetOrb\":{\n      \"e\": 0.01204040820042958,\n      \"a\": 150247889093.2539,\n      \"per\": 31742957.85602712,\n      \"t0\": 505346069.67096686,\n      \"rot\":[ -0.028018203648953136,-0.9996073999127174,0.9996074130698941,-0.0280182032801679,0.0001622488452891785,0.24835746868069677 ],\n    }\n   },\n   {\n    \"start\": 526089600 ,\n    \"stop\": 531273600 ,\n    \"interp\": 531100800 ,\n    \"sat\":{\n      \"e\": 0.03549814645883365,\n      \"a\": 154955835375.90488,\n      \"per\": 33246411.304386284,\n      \"t0\": 525487742.4446867,\n      \"rot\":[ 0.901381854836258,0.4330194027827999,-0.43302511679110145,0.9013699605991763,0.005137211604221423,2.619915832335979 ],\n    }\n   },\n   {\n    \"start\": 531273600 ,\n    \"stop\": 536457600 ,\n    \"interp\": 536284800 ,\n    \"sat\":{\n      \"e\": 0.0414695217141788,\n      \"a\": 154197274614.26028,\n      \"per\": 33002581.827984132,\n      \"t0\": 524629816.7747586,\n      \"rot\":[ 0.9091146101742217,0.41654026956090034,-0.4165460665613983,0.9091019581813908,0.0052757430655048995,2.413339467320221 ],\n    }\n   },\n   {\n    \"start\": 536457600 ,\n    \"stop\": 541641600 ,\n    \"interp\": 541468800 ,\n    \"sat\":{\n      \"e\": 0.047372568259273155,\n      \"a\": 154648167276.9866,\n      \"per\": 33147443.28826527,\n      \"t0\": 525509299.4310417,\n      \"rot\":[ 0.9210231574160266,0.38950239373334394,-0.3895078221337962,0.9210103215184139,0.005279482222980806,2.541189389428189 ],\n    }\n   },\n   {\n    \"start\": 541641600 ,\n    \"stop\": 546825600 ,\n    \"interp\": 546652800 ,\n    \"sat\":{\n      \"e\": 0.04118270712310206,\n      \"a\": 155812622182.5224,\n      \"per\": 33522532.80821449,\n      \"t0\": 526060051.51662904,\n      \"rot\":[ 0.9280330930648184,0.3724927852257445,-0.3724977559349131,0.9280207091442956,0.0051660772435269085,2.6500870972229205 ],\n    }\n   },\n   {\n    \"start\": 546825600 ,\n    \"stop\": 552009600 ,\n    \"interp\": 551836800 ,\n    \"sat\":{\n      \"e\": 0.03711757093840342,\n      \"a\": 157146126470.47733,\n      \"per\": 33953800.34408868,\n      \"t0\": 524815135.9932515,\n      \"rot\":[ 0.9258844087046997,0.3778021499619993,-0.37780691062704064,0.9258727418309266,0.005020101450493879,2.478976605216083 ],\n    }\n   },\n   {\n    \"start\": 552009600 ,\n    \"stop\": 557193600 ,\n    \"interp\": 557020800 ,\n    \"sat\":{\n      \"e\": 0.045388278083380536,\n      \"a\": 157761769858.2706,\n      \"per\": 34153524.252716586,\n      \"t0\": 524462481.34486914,\n      \"rot\":[ 0.9147607436935717,0.4039910502328497,-0.4039960170560886,0.9147494974071531,0.004958661625873489,2.4882493340581866 ],\n    }\n   },\n   {\n    \"start\": 557193600 ,\n    \"stop\": 562377600 ,\n    \"interp\": 562204800 ,\n    \"sat\":{\n      \"e\": 0.042381854493831916,\n      \"a\": 156655693555.086,\n      \"per\": 33794976.235641055,\n      \"t0\": 559607434.6450263,\n      \"rot\":[ 0.9041301145717333,0.42725177339855325,-0.42725722454337084,0.9041185792625439,0.005051411690846127,2.715707184963834 ],\n    }\n   },\n   {\n    \"start\": 562377600 ,\n    \"stop\": 567734400 ,\n    \"interp\": 567561600 ,\n    \"sat\":{\n      \"e\": 0.03477322587650958,\n      \"a\": 154742812490.3826,\n      \"per\": 33177877.468488622,\n      \"t0\": 558645594.7794889,\n      \"rot\":[ 0.9054241440335952,0.42450235359960603,-0.42450809109018345,0.9054119066637923,0.005199140297327208,2.5177748633095876 ],\n    }\n   },\n   {\n    \"start\": 567734400 ,\n    \"stop\": 572918400 ,\n    \"interp\": 572745600 ,\n    \"sat\":{\n      \"e\": 0.04560896186873628,\n      \"a\": 153868434240.23138,\n      \"per\": 32897066.410020337,\n      \"t0\": 558380534.362654,\n      \"rot\":[ 0.9152921512405555,0.4027850373877897,-0.40279061294602686,0.9152794814698875,0.005261602106843804,2.4076232857091315 ],\n    }\n   },\n   {\n    \"start\": 572918400 ,\n    \"stop\": 578102400 ,\n    \"interp\": 577929600 ,\n    \"sat\":{\n      \"e\": 0.04791449085836984,\n      \"a\": 154388841904.82352,\n      \"per\": 33064102.16025935,\n      \"t0\": 559621121.7732112,\n      \"rot\":[ 0.9234316083292848,0.3837578298846793,-0.38376303201114903,0.9234190906878968,0.005206818158823637,2.6138394627646875 ],\n    }\n   },\n   {\n    \"start\": 578102400 ,\n    \"stop\": 583286400 ,\n    \"interp\": 583113600 ,\n    \"sat\":{\n      \"e\": 0.03788869367076833,\n      \"a\": 155841040362.4938,\n      \"per\": 33531704.33225532,\n      \"t0\": 559723837.9984155,\n      \"rot\":[ 0.9251812764360797,0.37952057315448307,-0.37952550076655756,0.9251692642407999,0.0050957881264448515,2.665688283361236 ],\n    }\n   },\n   {\n    \"start\": 583286400 ,\n    \"stop\": 588643200 ,\n    \"interp\": 588470400 ,\n    \"sat\":{\n      \"e\": 0.03897935022100963,\n      \"a\": 157595836176.0228,\n      \"per\": 34099654.45659397,\n      \"t0\": 557818118.2679527,\n      \"rot\":[ 0.9196109795635532,0.3928253667178962,-0.392830302123146,0.9195994258396378,0.005012709682263742,2.4093347695003557 ],\n    }\n   },\n   {\n    \"start\": 588643200 ,\n    \"stop\": 593827200 ,\n    \"interp\": 593654400 ,\n    \"sat\":{\n      \"e\": 0.04817214183730879,\n      \"a\": 158171843393.8752,\n      \"per\": 34286774.72608305,\n      \"t0\": 558311288.0787615,\n      \"rot\":[ 0.9108294463688229,0.41277767239266316,-0.41278289648126604,0.9108179191137683,0.005031043168211096,2.5748781236289995 ],\n    }\n   },\n   {\n    \"start\": 593827200 ,\n    \"stop\": 599011200 ,\n    \"interp\": 598838400 ,\n    \"sat\":{\n      \"e\": 0.03811154133708735,\n      \"a\": 156490987602.01077,\n      \"per\": 33741692.78657728,\n      \"t0\": 593306727.9794073,\n      \"rot\":[ 0.9080902074038233,0.4187691133893154,-0.4187746114764853,0.908078285097691,0.005124237032327396,2.725985138710723 ],\n    }\n   },\n   {\n    \"start\": 599011200 ,\n    \"stop\": 604195200 ,\n    \"interp\": 604022400 ,\n    \"sat\":{\n      \"e\": 0.03751850865114582,\n      \"a\": 154391369558.7477,\n      \"per\": 33064914.151740897,\n      \"t0\": 591722231.661525,\n      \"rot\":[ 0.9122688746841514,0.4095863545742832,-0.40959187038137373,0.9122565895303403,0.005189701823969323,2.3863794033430192 ],\n    }\n   },\n   {\n    \"start\": 604195200 ,\n    \"stop\": 609552000 ,\n    \"interp\": 609379200 ,\n    \"sat\":{\n      \"e\": 0.04941604474251744,\n      \"a\": 153575843456.76462,\n      \"per\": 32803277.18147296,\n      \"t0\": 592428183.5197629,\n      \"rot\":[ 0.9174802535113789,0.3977759778266303,-0.3977813273856579,0.9174679147854636,0.005186212807185816,2.465357455048707 ],\n    }\n   },\n   {\n    \"start\": 609552000 ,\n    \"stop\": 614736000 ,\n    \"interp\": 614563200 ,\n    \"sat\":{\n      \"e\": 0.04576355703411454,\n      \"a\": 154245157607.2354,\n      \"per\": 33017955.495302014,\n      \"t0\": 593802749.8352762,\n      \"rot\":[ 0.9199367362027134,0.39206165470580284,-0.3920668328036678,0.9199245864311667,0.0051394735911892385,2.715378931088047 ],\n    }\n   },\n   {\n    \"start\": 614736000 ,\n    \"stop\": 619920000 ,\n    \"interp\": 619747200 ,\n    \"sat\":{\n      \"e\": 0.03448684293922512,\n      \"a\": 156089115969.75513,\n      \"per\": 33611802.36768307,\n      \"t0\": 592839261.0966145,\n      \"rot\":[ 0.9188735029859241,0.3945471326818453,-0.3945522595428607,0.9188615630296152,0.005097850459457055,2.5968779655890484 ],\n    }\n   },\n   {\n    \"start\": 619920000 ,\n    \"stop\": 625104000 ,\n    \"interp\": 624931200 ,\n    \"sat\":{\n      \"e\": 0.044307963841360265,\n      \"a\": 158185332582.3951,\n      \"per\": 34291160.879320115,\n      \"t0\": 591089575.4903566,\n      \"rot\":[ 0.9163661726858177,0.40033596947070277,-0.4003411514660293,0.9163543112890893,0.005087998609600025,2.394775785606711 ],\n    }\n   },\n   {\n    \"start\": 625104000 ,\n    \"stop\": 630460800 ,\n    \"interp\": 630288000 ,\n    \"sat\":{\n      \"e\": 0.047772139868437605,\n      \"a\": 158380274044.7659,\n      \"per\": 34354569.047720015,\n      \"t0\": 626729147.2204949,\n      \"rot\":[ 0.9150981892202467,0.4032258333329999,-0.403231080257742,0.9150862817766849,0.005101395596248374,2.6712004062320176 ],\n    }\n   },\n   {\n    \"start\": 630460800 ,\n    \"stop\": 635644800 ,\n    \"interp\": 635472000 ,\n    \"sat\":{\n      \"e\": 0.034146716390521796,\n      \"a\": 156166589972.13348,\n      \"per\": 33636830.0315832,\n      \"t0\": 626436315.397597,\n      \"rot\":[ 0.9151032756050249,0.40321427733828286,-0.40321953694848883,0.9150913389648404,0.005107631750813283,2.617937333321038 ],\n    }\n   },\n   {\n    \"start\": 635644800 ,\n    \"stop\": 640828800 ,\n    \"interp\": 640656000 ,\n    \"sat\":{\n      \"e\": 0.04293153524676929,\n      \"a\": 154069976646.50012,\n      \"per\": 32961722.210795432,\n      \"t0\": 625276058.2428068,\n      \"rot\":[ 0.9144534879766798,0.4046857405114615,-0.4046910158717194,0.9144415675944648,0.005105965341429321,2.352349415905851 ],\n    }\n   },\n   {\n    \"start\": 640828800 ,\n    \"stop\": 646012800 ,\n    \"interp\": 645840000 ,\n    \"sat\":{\n      \"e\": 0.051326484268444994,\n      \"a\": 153334484455.527,\n      \"per\": 32725977.381242592,\n      \"t0\": 626730864.079055,\n      \"rot\":[ 0.9131271568060005,0.40766952426996705,-0.4076748649394387,0.9131151945518869,0.005118638487746092,2.585662501072459 ],\n    }\n   },\n   {\n    \"start\": 646012800 ,\n    \"stop\": 651369600 ,\n    \"interp\": 651196800 ,\n    \"sat\":{\n      \"e\": 0.04139093670213418,\n      \"a\": 154158088972.62158,\n      \"per\": 32990002.372379057,\n      \"t0\": 627812108.4421648,\n      \"rot\":[ 0.9130459545342431,0.4078512819555885,-0.40785669653525713,0.9130338332178495,0.005152786304813786,2.7935182710559703 ],\n    }\n   },\n   {\n    \"start\": 651369600 ,\n    \"stop\": 656553600 ,\n    \"interp\": 656380800 ,\n    \"sat\":{\n      \"e\": 0.03498695690932396,\n      \"a\": 156513881749.3019,\n      \"per\": 33749097.51526596,\n      \"t0\": 625500357.2995784,\n      \"rot\":[ 0.9161594276623837,0.40080866588082753,-0.4008140505338274,0.9161471197090971,0.005183474081777655,2.4460722906969856 ],\n    }\n   },\n   {\n    \"start\": 656553600 ,\n    \"stop\": 661737600 ,\n    \"interp\": 661564800 ,\n    \"sat\":{\n      \"e\": 0.04942147767211972,\n      \"a\": 158699450018.6587,\n      \"per\": 34458470.96002152,\n      \"t0\": 624932805.7397226,\n      \"rot\":[ 0.9210850271550903,0.3893563089861344,-0.3893614936671403,0.9210727621208669,0.005160574748130245,2.467033083972651 ],\n    }\n   },\n   {\n    \"start\": 661737600 ,\n    \"stop\": 666921600 ,\n    \"interp\": 666748800 ,\n    \"sat\":{\n      \"e\": 0.04319164889161971,\n      \"a\": 158270520147.42618,\n      \"per\": 34318864.84245304,\n      \"t0\": 660762917.6756923,\n      \"rot\":[ 0.92240209404922,0.3862260075411895,-0.386230989038443,0.9223901971698175,0.0050789038008365334,2.742229827215948 ],\n    }\n   },\n   {\n    \"start\": 666921600 ,\n    \"stop\": 672278400 ,\n    \"interp\": 672105600 ,\n    \"sat\":{\n      \"e\": 0.0341801531260486,\n      \"a\": 155896531258.9569,\n      \"per\": 33549615.563688446,\n      \"t0\": 659304946.865296,\n      \"rot\":[ 0.9172013189724061,0.3984190626865458,-0.3984240711544404,0.9171897891134153,0.005014103515387235,2.4690309873991265 ],\n    }\n   },\n   {\n    \"start\": 672278400 ,\n    \"stop\": 677462400 ,\n    \"interp\": 677289600 ,\n    \"sat\":{\n      \"e\": 0.04818311591109239,\n      \"a\": 153818103197.0397,\n      \"per\": 32880926.56687227,\n      \"t0\": 659298234.9517801,\n      \"rot\":[ 0.9090009447265779,0.4167887679205329,-0.4167940528440742,0.9089894186492284,0.00503584342706618,2.4242990009809122 ],\n    }\n   },\n   {\n    \"start\": 677462400 ,\n    \"stop\": 682646400 ,\n    \"interp\": 682473600 ,\n    \"sat\":{\n      \"e\": 0.05001533700699614,\n      \"a\": 153168376221.0519,\n      \"per\": 32672813.39289237,\n      \"t0\": 661096621.8452005,\n      \"rot\":[ 0.9052856578389801,0.4247977361802946,-0.4248033400422425,0.9052737156168462,0.00513645299466398,2.7264004419532233 ],\n    }\n   },\n   {\n    \"start\": 682646400 ,\n    \"stop\": 687830400 ,\n    \"interp\": 687657600 ,\n    \"sat\":{\n      \"e\": 0.03532445501537676,\n      \"a\": 154271818751.2026,\n      \"per\": 33026516.55339758,\n      \"t0\": 661321025.8414899,\n      \"rot\":[ 0.9101671467295682,0.4142354889003651,-0.4142411918365395,0.9101546162877673,0.005247302692119666,2.7734132962942954 ],\n    }\n   },\n   {\n    \"start\": 687830400 ,\n    \"stop\": 1000000000000 ,\n    \"sat\":{\n      \"e\": 0.039807403537290176,\n      \"a\": 156955915948.8805,\n      \"per\": 33892172.206831604,\n      \"t0\": 658534704.1716912,\n      \"rot\":[ 0.921302552768098,0.3888411180889118,-0.38884650733031667,0.9212897839203131,0.005264876772324237,2.351849156211533 ],\n    }\n   }\n ]},\n  \"Hayabusa 2\": {\n \"color\": 16776960 ,\n \"horizonsID\": -37 ,\n \"orbits\":[\n   {\n    \"start\": 470966400 ,\n    \"stop\": 478828800 ,\n    \"interp\": 478656000 ,\n    \"sat\":{\n      \"e\": 0.08748641394736105,\n      \"a\": 149103928433.27158,\n      \"per\": 31380979.761172548,\n      \"t0\": 464172957.7799921,\n      \"rot\":[ -0.33612704113357605,0.935153091673693,-0.9418166553097196,-0.33374886708477847,0.11874505822458616,1.6247341284807093 ],\n    }\n   },\n   {\n    \"start\": 478828800 ,\n    \"stop\": 486777600 ,\n    \"interp\": 486604800 ,\n    \"sat\":{\n      \"e\": 0.09300992171655978,\n      \"a\": 148499457503.4865,\n      \"per\": 31190344.422600463,\n      \"t0\": 464676503.3312251,\n      \"rot\":[ -0.32396002808992846,0.939362492357294,-0.9460707691288072,-0.32166293404342744,0.11887415536972903,1.6782380933199352 ],\n    }\n   },\n   {\n    \"start\": 486777600 ,\n    \"stop\": 494553600 ,\n    \"interp\": 494380800 ,\n    \"sat\":{\n      \"e\": 0.08592747928297975,\n      \"a\": 149481349411.2433,\n      \"per\": 31500205.310758088,\n      \"t0\": 464328592.2333653,\n      \"rot\":[ -0.3219352530674012,0.940143453730923,-0.9467616874548888,-0.31968479999455685,0.11803353362215348,1.6369934545771785 ],\n    }\n   },\n   {\n    \"start\": 494553600 ,\n    \"stop\": 502588800 ,\n    \"interp\": 502416000 ,\n    \"sat\":{\n      \"e\": 0.09223661357337808,\n      \"a\": 150833503330.756,\n      \"per\": 31928579.505967095,\n      \"t0\": 495931099.6575908,\n      \"rot\":[ -0.32895158806840363,0.9377666516049805,-0.9443467862534797,-0.3266594790954752,0.11784435436055411,1.6706364824469941 ],\n    }\n   },\n   {\n    \"start\": 502588800 ,\n    \"stop\": 507513600 ,\n    \"interp\": 507340800 ,\n    \"sat\":{\n      \"e\": 0.15926806834709692,\n      \"a\": 168043415136.01462,\n      \"per\": 37546124.72651586,\n      \"t0\": 468537373.9544461,\n      \"rot\":[ -0.33935987702692755,0.9355557824637903,-0.9406566184662013,-0.33751965282127083,0.10399933585352239,3.971399763350307 ],\n    }\n   },\n   {\n    \"start\": 507513600 ,\n    \"stop\": 512524800 ,\n    \"interp\": 512352000 ,\n    \"sat\":{\n      \"e\": 0.15355151872499578,\n      \"a\": 166493088342.1313,\n      \"per\": 37027738.14401865,\n      \"t0\": 505914442.17276967,\n      \"rot\":[ -0.33643485787195276,0.9365867093274246,-0.94170674119318,-0.3346056714408641,0.10413635556727789,3.928326229164525 ],\n    }\n   },\n   {\n    \"start\": 512524800 ,\n    \"stop\": 517363200 ,\n    \"interp\": 517190400 ,\n    \"sat\":{\n      \"e\": 0.1600356953415616,\n      \"a\": 165638194318.9632,\n      \"per\": 36742914.40497762,\n      \"t0\": 505746654.47767854,\n      \"rot\":[ -0.32917927350375,0.9392032439200001,-0.9442674440514951,-0.3274138523503842,0.10342840953640192,3.8666634690944535 ],\n    }\n   },\n   {\n    \"start\": 517363200 ,\n    \"stop\": 522374400 ,\n    \"interp\": 522201600 ,\n    \"sat\":{\n      \"e\": 0.1642219142354966,\n      \"a\": 165723125937.80573,\n      \"per\": 36771178.13252074,\n      \"t0\": 505869773.8235509,\n      \"rot\":[ -0.32856013273804374,0.9394638789115479,-0.9444830539375278,-0.32681409737415196,0.10295710746707464,3.8780650201737026 ],\n    }\n   },\n   {\n    \"start\": 522374400 ,\n    \"stop\": 524793600 ,\n    \"interp\": 524620800 ,\n    \"sat\":{\n      \"e\": 0.1624832047436553,\n      \"a\": 166186973423.1012,\n      \"per\": 36925666.056054026,\n      \"t0\": 505958114.8562215,\n      \"rot\":[ -0.32924086309853734,0.9392451440423981,-0.9442459711675397,-0.32749716845840837,0.10278211928394819,3.89941128947641 ],\n    }\n   },\n   {\n    \"start\": 524793600 ,\n    \"stop\": 526003200 ,\n    \"interp\": 525830400 ,\n    \"sat\":{\n      \"e\": 0.1610111532541328,\n      \"a\": 166400597720.375,\n      \"per\": 36996887.82867206,\n      \"t0\": 505958352.7660485,\n      \"rot\":[ -0.329761327884636,0.9390703620294155,-0.9440643339475131,-0.3280169353131632,0.10272168858475055,3.9044193702840055 ],\n    }\n   },\n   {\n    \"start\": 526003200 ,\n    \"stop\": 526176000 ,\n    \"interp\": 526003200 ,\n    \"sat\":{\n      \"e\": 0.16036752780127714,\n      \"a\": 166488575203.0205,\n      \"per\": 37026232.584216826,\n      \"t0\": 505949567.848288,\n      \"rot\":[ -0.3299987734693675,0.93898980862111,-0.9439813607845831,-0.3282538173080664,0.1027013667307979,3.9053464887259803 ],\n    }\n   },\n   {\n    \"start\": 526176000 ,\n    \"stop\": 526521600 ,\n    \"interp\": 526348800 ,\n    \"sat\":{\n      \"e\": 0.1587978280155293,\n      \"a\": 166517160279.6083,\n      \"per\": 37035768.76219511,\n      \"t0\": 505933555.8681273,\n      \"rot\":[ -0.3263938200047969,0.9402733587070832,-0.9452338727863471,-0.3246809305431171,0.10231473133110593,3.9017374153369064 ],\n    }\n   },\n   {\n    \"start\": 526521600 ,\n    \"stop\": 527212800 ,\n    \"interp\": 527040000 ,\n    \"sat\":{\n      \"e\": 0.1583059876189694,\n      \"a\": 166585821760.9418,\n      \"per\": 37058678.04848571,\n      \"t0\": 505920973.6430732,\n      \"rot\":[ -0.32658886548166777,0.9402076014156092,-0.9451665001169884,-0.3248753884374417,0.1023017508546568,3.9017229070980104 ],\n    }\n   },\n   {\n    \"start\": 527212800 ,\n    \"stop\": 532224000 ,\n    \"interp\": 532051200 ,\n    \"sat\":{\n      \"e\": 0.1559651771466522,\n      \"a\": 166984477925.18338,\n      \"per\": 37191785.165350385,\n      \"t0\": 505794366.46413034,\n      \"rot\":[ -0.32773507018974785,0.9398170532458832,-0.9447696670446829,-0.32601703743786065,0.1022584848727248,3.8948268971006357 ],\n    }\n   },\n   {\n    \"start\": 532224000 ,\n    \"stop\": 534643200 ,\n    \"interp\": 534470400 ,\n    \"sat\":{\n      \"e\": 0.1552722881990402,\n      \"a\": 167731835611.6854,\n      \"per\": 37441748.3138222,\n      \"t0\": 505426341.60777575,\n      \"rot\":[ -0.3291490885037241,0.9393271692517128,-0.9442779662457277,-0.3274233780919628,0.10226632184845551,3.867129203490719 ],\n    }\n   },\n   {\n    \"start\": 534643200 ,\n    \"stop\": 535161600 ,\n    \"interp\": 534988800 ,\n    \"sat\":{\n      \"e\": 0.1562005444091592,\n      \"a\": 168526655797.7008,\n      \"per\": 37708197.59224139,\n      \"t0\": 505030779.0791098,\n      \"rot\":[ -0.327923677946588,0.93975827208029,-0.9447042190241253,-0.3262068515790435,0.10219334635657841,3.836567241228478 ],\n    }\n   },\n   {\n    \"start\": 535161600 ,\n    \"stop\": 535334400 ,\n    \"interp\": 535161600 ,\n    \"sat\":{\n      \"e\": 0.15668230970432268,\n      \"a\": 168738811222.2612,\n      \"per\": 37779425.33841238,\n      \"t0\": 504926610.74344385,\n      \"rot\":[ -0.327698196733178,0.9398378743360358,-0.9447824574248949,-0.3259831659881821,0.10217507257566691,3.829185228638156 ],\n    }\n   },\n   {\n    \"start\": 535334400 ,\n    \"stop\": 535507200 ,\n    \"interp\": 535334400 ,\n    \"sat\":{\n      \"e\": 0.158132576073146,\n      \"a\": 168719503383.4519,\n      \"per\": 37772941.19126224,\n      \"t0\": 504957468.38256043,\n      \"rot\":[ -0.3304653097330244,0.9388482141545585,-0.9438181387656502,-0.3287251570399408,0.10248805739139726,3.834398238914592 ],\n    }\n   },\n   {\n    \"start\": 535507200 ,\n    \"stop\": 535852800 ,\n    \"interp\": 535680000 ,\n    \"sat\":{\n      \"e\": 0.1587349531694038,\n      \"a\": 168933298861.1474,\n      \"per\": 37844760.76407636,\n      \"t0\": 504854522.9099886,\n      \"rot\":[ -0.33013288980479344,0.9389670716400603,-0.9439344654525208,-0.32839558691552995,0.10245573127011723,3.8274099979238816 ],\n    }\n   },\n   {\n    \"start\": 535852800 ,\n    \"stop\": 537062400 ,\n    \"interp\": 536889600 ,\n    \"sat\":{\n      \"e\": 0.1602264708686864,\n      \"a\": 169362203472.4013,\n      \"per\": 37988978.252978206,\n      \"t0\": 504653029.85718864,\n      \"rot\":[ -0.32967707033332866,0.9391306808302242,-0.9440937608608763,-0.3279439652624475,0.10240273419837047,3.8150475004936992 ],\n    }\n   },\n   {\n    \"start\": 537062400 ,\n    \"stop\": 542073600 ,\n    \"interp\": 541900800 ,\n    \"sat\":{\n      \"e\": 0.16927176471625607,\n      \"a\": 171095334026.7496,\n      \"per\": 38573595.223000556,\n      \"t0\": 503953343.09276205,\n      \"rot\":[ -0.3293538431781124,0.9392455375000575,-0.9442065695512859,-0.32762335853111574,0.10237555973483106,3.7941354943584407 ],\n    }\n   },\n   {\n    \"start\": 542073600 ,\n    \"stop\": 546912000 ,\n    \"interp\": 546739200 ,\n    \"sat\":{\n      \"e\": 0.1741785237804783,\n      \"a\": 171883302756.0832,\n      \"per\": 38840374.169558965,\n      \"t0\": 542659818.6452209,\n      \"rot\":[ -0.3260494948793597,0.9403366090267788,-0.9453526997311186,-0.32431945926314554,0.10287832651865922,3.8231881785487016 ],\n    }\n   },\n   {\n    \"start\": 546912000 ,\n    \"stop\": 551923200 ,\n    \"interp\": 551750400 ,\n    \"sat\":{\n      \"e\": 0.1740633092711462,\n      \"a\": 170854859895.28452,\n      \"per\": 38492301.14419147,\n      \"t0\": 542506268.3537498,\n      \"rot\":[ -0.3217644419827437,0.9417888564489301,-0.9468197525799372,-0.32005475702754943,0.10294999938150942,3.7794273046513616 ],\n    }\n   },\n   {\n    \"start\": 551923200 ,\n    \"stop\": 556761600 ,\n    \"interp\": 556588800 ,\n    \"sat\":{\n      \"e\": 0.1815794071026423,\n      \"a\": 170673926733.694,\n      \"per\": 38431173.03595621,\n      \"t0\": 542561395.8933328,\n      \"rot\":[ -0.32083349349102636,0.9421149810122385,-0.9471356130218859,-0.3191328004909514,0.1028281002601539,3.76961065144143 ],\n    }\n   },\n   {\n    \"start\": 556761600 ,\n    \"stop\": 561772800 ,\n    \"interp\": 561600000 ,\n    \"sat\":{\n      \"e\": 0.18471748845145117,\n      \"a\": 170992926560.95032,\n      \"per\": 38538968.62428397,\n      \"t0\": 542781618.7824817,\n      \"rot\":[ -0.32083608798242685,0.9421240053386909,-0.947134734157782,-0.3191387342963248,0.10272695282311424,3.798093796918917 ],\n    }\n   },\n   {\n    \"start\": 561772800 ,\n    \"stop\": 571622400 ,\n    \"interp\": 571449600 ,\n    \"sat\":{\n      \"e\": 0.1795035248726752,\n      \"a\": 171746588208.6679,\n      \"per\": 38794043.42021047,\n      \"t0\": 542935892.3788935,\n      \"rot\":[ -0.32145200213384084,0.9419237888596338,-0.9469258737219852,-0.31975394926775313,0.10264983150491275,3.830095941895986 ],\n    }\n   },\n   {\n    \"start\": 571622400 ,\n    \"stop\": 576460800 ,\n    \"interp\": 576288000 ,\n    \"sat\":{\n      \"e\": 0.1724555389036193,\n      \"a\": 175003045032.9127,\n      \"per\": 39902607.65941896,\n      \"t0\": 541556121.3598081,\n      \"rot\":[ -0.31672744108642903,0.9435125735624513,-0.9485165934567737,-0.31505650519853035,0.102583731954186,3.731395713865347 ],\n    }\n   },\n   {\n    \"start\": 576460800 ,\n    \"stop\": 581472000 ,\n    \"interp\": 581299200 ,\n    \"sat\":{\n      \"e\": 0.19064467425820417,\n      \"a\": 179477046597.8792,\n      \"per\": 41442528.17442698,\n      \"t0\": 539707177.8360195,\n      \"rot\":[ -0.3157600416047643,0.9438465838060979,-0.9488390780979447,-0.31409861108225123,0.10244846877215613,3.6699122760131138 ],\n    }\n   },\n   {\n    \"start\": 581472000 ,\n    \"stop\": 586310400 ,\n    \"interp\": 586137600 ,\n    \"sat\":{\n      \"e\": 0.19150003249069414,\n      \"a\": 179584001606.4069,\n      \"per\": 41479578.702594675,\n      \"t0\": 581373569.6604503,\n      \"rot\":[ -0.31592938685081906,0.9437923414163998,-0.948782705641321,-0.31426767579688925,0.10242970386060463,3.7231031747845837 ],\n    }\n   },\n   {\n    \"start\": 586310400 ,\n    \"stop\": 591321600 ,\n    \"interp\": 591148800 ,\n    \"sat\":{\n      \"e\": 0.1841191965720848,\n      \"a\": 177169406857.7395,\n      \"per\": 40645827.21944442,\n      \"t0\": 581185630.7697817,\n      \"rot\":[ -0.31666031137423745,0.9435494262538042,-0.9485390066836319,-0.3149945895837755,0.10243480243094066,3.6824527600622394 ],\n    }\n   },\n   {\n    \"start\": 591321600 ,\n    \"stop\": 596160000 ,\n    \"interp\": 595987200 ,\n    \"sat\":{\n      \"e\": 0.1902724044624991,\n      \"a\": 176247780456.3787,\n      \"per\": 40329083.692403786,\n      \"t0\": 581158750.9643058,\n      \"rot\":[ -0.31725035342524227,0.9433459188426275,-0.948341823000314,-0.31557906537143665,0.10251015024010673,3.6559865797446793 ],\n    }\n   },\n   {\n    \"start\": 596160000 ,\n    \"stop\": 601171200 ,\n    \"interp\": 600998400 ,\n    \"sat\":{\n      \"e\": 0.19571326893580124,\n      \"a\": 176074783149.928,\n      \"per\": 40269720.302003555,\n      \"t0\": 581383022.9190742,\n      \"rot\":[ -0.31731491452829547,0.9433140426251901,-0.9483202228244954,-0.31563980984970447,0.10261640913695651,3.6735459070679592 ],\n    }\n   },\n   {\n    \"start\": 601171200 ,\n    \"stop\": 606009600 ,\n    \"interp\": 605836800 ,\n    \"sat\":{\n      \"e\": 0.1960389128813418,\n      \"a\": 176127108820.786,\n      \"per\": 40287672.58881507,\n      \"t0\": 581673079.7462219,\n      \"rot\":[ -0.3167618790033538,0.9434868449056879,-0.9485050932969546,-0.31508598943675387,0.10272970724465359,3.704653126093555 ],\n    }\n   },\n   {\n    \"start\": 606009600 ,\n    \"stop\": 611020800 ,\n    \"interp\": 610848000 ,\n    \"sat\":{\n      \"e\": 0.19113463904550507,\n      \"a\": 176389465550.3141,\n      \"per\": 40377724.11966896,\n      \"t0\": 581833908.7568413,\n      \"rot\":[ -0.31552586838402774,0.943888588332383,-0.9489169754939075,-0.31385387150054345,0.10281089514259467,3.72326454553271 ],\n    }\n   },\n   {\n    \"start\": 611020800 ,\n    \"stop\": 615859200 ,\n    \"interp\": 615686400 ,\n    \"sat\":{\n      \"e\": 0.18440231298242346,\n      \"a\": 177307071845.1446,\n      \"per\": 40693210.63240893,\n      \"t0\": 581538243.4871995,\n      \"rot\":[ -0.3134526705532298,0.9445731445877197,-0.9496038244041819,-0.31179210434378163,0.10279717015824463,3.70016327037656 ],\n    }\n   },\n   {\n    \"start\": 615859200 ,\n    \"stop\": 620870400 ,\n    \"interp\": 620697600 ,\n    \"sat\":{\n      \"e\": 0.18967723030880643,\n      \"a\": 179682940268.814,\n      \"per\": 41513862.09526686,\n      \"t0\": 580489206.240653,\n      \"rot\":[ -0.31140065642076203,0.9452679131214964,-0.9502787123684917,-0.30975864744550263,0.10255804578707603,3.6461156107215147 ],\n    }\n   },\n   {\n    \"start\": 620870400 ,\n    \"stop\": 625708800 ,\n    \"interp\": 625536000 ,\n    \"sat\":{\n      \"e\": 0.19944426479464142,\n      \"a\": 181539382341.6733,\n      \"per\": 42158888.28113435,\n      \"t0\": 622217355.9837966,\n      \"rot\":[ -0.31242678380149086,0.9449770394491934,-0.9499418428322107,-0.3107939074682006,0.10210554340722675,3.6988711218153663 ],\n    }\n   },\n   {\n    \"start\": 625708800 ,\n    \"stop\": 630720000 ,\n    \"interp\": 630547200 ,\n    \"sat\":{\n      \"e\": 0.18664360387342782,\n      \"a\": 179215548345.039,\n      \"per\": 41351988.46038461,\n      \"t0\": 622260834.465223,\n      \"rot\":[ -0.31662761602174866,0.9436050901390804,-0.9485499210755247,-0.31497702284130574,0.10197504079746889,3.7192794707587002 ],\n    }\n   },\n   {\n    \"start\": 630720000 ,\n    \"stop\": 640569600 ,\n    \"interp\": 640396800 ,\n    \"sat\":{\n      \"e\": 0.1892134118589043,\n      \"a\": 175433713874.9502,\n      \"per\": 40049994.05019662,\n      \"t0\": 621918089.5232298,\n      \"rot\":[ -0.30948155623580786,0.9460024821077243,-0.9509054455359179,-0.30788583842911316,0.10141801783128475,3.6116511423978466 ],\n    }\n   },\n   {\n    \"start\": 640569600 ,\n    \"stop\": 645408000 ,\n    \"interp\": 645235200 ,\n    \"sat\":{\n      \"e\": 0.19699749300227326,\n      \"a\": 174685821264.6307,\n      \"per\": 39794161.10988609,\n      \"t0\": 622329390.9793499,\n      \"rot\":[ -0.3081290485078642,0.9463827377757128,-0.9513445692627032,-0.3065219710468265,0.1019999750280105,3.638270543937237 ],\n    }\n   },\n   {\n    \"start\": 645408000 ,\n    \"stop\": 650419200 ,\n    \"interp\": 650246400 ,\n    \"sat\":{\n      \"e\": 0.1915899026484395,\n      \"a\": 175053940168.6362,\n      \"per\": 39920015.89605883,\n      \"t0\": 622519619.1263504,\n      \"rot\":[ -0.2955642359287893,0.9502197419889574,-0.9553228681654339,-0.2939853963139741,0.10322319840304767,3.6507929443352656 ],\n    }\n   },\n   {\n    \"start\": 650419200 ,\n    \"stop\": 655430400 ,\n    \"interp\": 655257600 ,\n    \"sat\":{\n      \"e\": 0.1810083009773288,\n      \"a\": 175905857555.6607,\n      \"per\": 40211782.239079446,\n      \"t0\": 622375304.9402496,\n      \"rot\":[ -0.27324551241887873,0.9567600658379432,-0.9619443278812679,-0.27177289462023535,0.10368061616094483,3.618573710454248 ],\n    }\n   },\n   {\n    \"start\": 655430400 ,\n    \"stop\": 660441600 ,\n    \"interp\": 660268800 ,\n    \"sat\":{\n      \"e\": 0.17744594319243248,\n      \"a\": 177669002049.4772,\n      \"per\": 40817872.45759581,\n      \"t0\": 621554205.1597192,\n      \"rot\":[ -0.26851023524689555,0.9581144337553307,-0.9632768312212522,-0.26707123400334315,0.10339094640070609,3.551119905997363 ],\n    }\n   },\n   {\n    \"start\": 660441600 ,\n    \"stop\": 660787200 ,\n    \"interp\": 660614400 ,\n    \"planet\":\"Earth\",\n    \"sat\":{\n      \"e\": 1.31894394301981,\n      \"a\": -21021943.0924472,\n      \"per\": 30333.342445489947,\n      \"t0\": 660504790.4396844,\n      \"rot\":[ -0.2781995967704969,0.49710416178014366,-0.9605232867331915,-0.14397795375739428,0.8556622003879185,4.4623147119202695 ],\n    },\n    \"planetOrb\":{\n      \"e\": 0.01789813055616623,\n      \"a\": 150718724129.6501,\n      \"per\": 31892285.07398857,\n      \"t0\": 628650584.8043176,\n      \"rot\":[ 0.8512287667555991,0.5247948035269046,-0.5247948043261689,0.8512287654591748,0.00005519063973255786,1.8556465673336102 ],\n    }\n   },\n   {\n    \"start\": 660787200 ,\n    \"stop\": 663724800 ,\n    \"interp\": 663552000 ,\n    \"sat\":{\n      \"e\": 0.1330535493402711,\n      \"a\": 142113428607.8048,\n      \"per\": 29200181.158568833,\n      \"t0\": 639496925.0714545,\n      \"rot\":[ 0.275826724957924,-0.9585991576316877,0.9612073750231974,0.2750782745404882,0.07361791808823827,2.0170109432443257 ],\n    }\n   },\n   {\n    \"start\": 663724800 ,\n    \"stop\": 666662400 ,\n    \"interp\": 666489600 ,\n    \"sat\":{\n      \"e\": 0.14318728758314483,\n      \"a\": 142619520699.85883,\n      \"per\": 29356300.779652968,\n      \"t0\": 639338134.7093766,\n      \"rot\":[ 0.2735419366378491,-0.9592439995277241,0.9618600776102598,0.272797954137951,0.07370363348033886,2.029031185466803 ],\n    }\n   },\n   {\n    \"start\": 666662400 ,\n    \"stop\": 669600000 ,\n    \"interp\": 669427200 ,\n    \"sat\":{\n      \"e\": 0.1478945051008047,\n      \"a\": 142104549220.0494,\n      \"per\": 29197444.516963076,\n      \"t0\": 639821534.3150958,\n      \"rot\":[ 0.27769109743269627,-0.958058281324903,0.9606704192420129,0.2769360336456587,0.07369370972738085,2.13339432783668 ],\n    }\n   },\n   {\n    \"start\": 669600000 ,\n    \"stop\": 672710400 ,\n    \"interp\": 672537600 ,\n    \"sat\":{\n      \"e\": 0.1314656765548385,\n      \"a\": 139303976867.5956,\n      \"per\": 28338583.75551336,\n      \"t0\": 669141980.8573353,\n      \"rot\":[ 0.2825224851449302,-0.9566308489187084,0.9592606764522001,0.28174794551404225,0.07399671678991913,2.175707828391756 ],\n    }\n   },\n   {\n    \"start\": 672710400 ,\n    \"stop\": 675648000 ,\n    \"interp\": 675475200 ,\n    \"sat\":{\n      \"e\": 0.12783733170274617,\n      \"a\": 137221859566.9732,\n      \"per\": 27705616.628990535,\n      \"t0\": 668776907.7736255,\n      \"rot\":[ 0.28266755377849234,-0.9565587483245359,0.9592179387609904,0.2818839290928712,0.07440975421920268,2.064697322777683 ],\n    }\n   },\n   {\n    \"start\": 675648000 ,\n    \"stop\": 678758400 ,\n    \"interp\": 678585600 ,\n    \"sat\":{\n      \"e\": 0.1404508768559281,\n      \"a\": 136391172365.52411,\n      \"per\": 27454419.38347732,\n      \"t0\": 668743312.7985858,\n      \"rot\":[ 0.27643260631748534,-0.9583338177820929,0.9610333054397866,0.27565612291705144,0.0748999038286279,2.0122394178418976 ],\n    }\n   },\n   {\n    \"start\": 678758400 ,\n    \"stop\": 684806400 ,\n    \"interp\": 684633600 ,\n    \"sat\":{\n      \"e\": 0.15275072932704892,\n      \"a\": 136027680846.3254,\n      \"per\": 27344740.767463293,\n      \"t0\": 669167625.0443854,\n      \"rot\":[ 0.2530352660582152,-0.9647247849011353,0.9674570554452783,0.25232064952801475,0.07510245814365218,2.0436430055328123 ],\n    }\n   },\n   {\n    \"start\": 684806400 ,\n    \"stop\": 690854400 ,\n    \"interp\": 690681600 ,\n    \"sat\":{\n      \"e\": 0.1426537938592586,\n      \"a\": 137116267422.1394,\n      \"per\": 27673643.596825242,\n      \"t0\": 669272480.2839956,\n      \"rot\":[ 0.24736596980999856,-0.9662070935908641,0.9689221212150948,0.2466728228308724,0.0748088950014913,2.0810282419209885 ],\n    }\n   },\n   {\n    \"start\": 690854400 ,\n    \"stop\": 691545600 ,\n    \"interp\": 691372800 ,\n    \"sat\":{\n      \"e\": 0.14255366733485617,\n      \"a\": 138618410954.60193,\n      \"per\": 28129644.51914026,\n      \"t0\": 668594719.0794095,\n      \"rot\":[ 0.24749287072706827,-0.9661827330458345,0.9688897145389018,0.2468014002628131,0.07469936540825754,2.009551596088719 ],\n    }\n   },\n   {\n    \"start\": 691545600 ,\n    \"stop\": 691718400 ,\n    \"interp\": 691545600 ,\n    \"sat\":{\n      \"e\": 0.1436327279021888,\n      \"a\": 138805459483.1747,\n      \"per\": 28186599.975003704,\n      \"t0\": 668510789.3683352,\n      \"rot\":[ 0.24756743187925906,-0.9661644726653039,0.9688706656064618,0.24687594099157398,0.07468923295161031,2.002906603078278 ],\n    }\n   },\n   {\n    \"start\": 691718400 ,\n    \"stop\": 691891200 ,\n    \"interp\": 691718400 ,\n    \"sat\":{\n      \"e\": 0.14425045031707706,\n      \"a\": 138899920018.8784,\n      \"per\": 28215377.38336035,\n      \"t0\": 668469694.1298162,\n      \"rot\":[ 0.2476090083911507,-0.9661542356833464,0.9688600409571814,0.2469174928652426,0.07468429947634102,2.000002123448226 ],\n    }\n   },\n   {\n    \"start\": 691891200 ,\n    \"stop\": 692236800 ,\n    \"interp\": 692064000 ,\n    \"sat\":{\n      \"e\": 0.14944920192820244,\n      \"a\": 138359758903.8796,\n      \"per\": 28050949.397311307,\n      \"t0\": 668639900.1825315,\n      \"rot\":[ 0.24039068604933636,-0.9680187489357631,0.9706762169027988,0.23973255665806703,0.07394594638671365,2.0122914700878685 ],\n    }\n   },\n   {\n    \"start\": 692236800 ,\n    \"stop\": 693792000 ,\n    \"interp\": 693619200 ,\n    \"sat\":{\n      \"e\": 0.1538718972926181,\n      \"a\": 138914258367.27258,\n      \"per\": 28219746.41774801,\n      \"t0\": 668428452.0240138,\n      \"rot\":[ 0.24147406832541118,-0.9677563738303439,0.9704072723997769,0.24081442440013842,0.0738648354196635,2.0047201612942906 ],\n    }\n   },\n   {\n    \"start\": 693792000 ,\n    \"stop\": 696902400 ,\n    \"interp\": 696729600 ,\n    \"sat\":{\n      \"e\": 0.1654887714924781,\n      \"a\": 139833246124.3972,\n      \"per\": 28500240.791284725,\n      \"t0\": 668274438.1500635,\n      \"rot\":[ 0.2462497431202449,-0.9665676432574664,0.9692064093954462,0.2455793023582639,0.07374142160913054,2.0569043462692225 ],\n    }\n   },\n   {\n    \"start\": 696902400 ,\n    \"stop\": 699840000 ,\n    \"interp\": 699667200 ,\n    \"sat\":{\n      \"e\": 0.15598675999051922,\n      \"a\": 138019840012.9971,\n      \"per\": 27947640.578536436,\n      \"t0\": 697076081.8003938,\n      \"rot\":[ 0.2520671483650995,-0.9650586953556094,0.9677097461093832,0.2513766078322987,0.0739696934781785,2.1581937627477763 ],\n    }\n   },\n   {\n    \"start\": 699840000 ,\n    \"stop\": 702950400 ,\n    \"interp\": 702777600 ,\n    \"sat\":{\n      \"e\": 0.1424876272257918,\n      \"a\": 135061715271.6189,\n      \"per\": 27053986.019349504,\n      \"t0\": 696824011.6170096,\n      \"rot\":[ 0.2532729541483524,-0.9647107696943558,0.9673948576961564,0.25257023499287834,0.07444062890227358,2.0832884976367803 ],\n    }\n   },\n   {\n    \"start\": 702950400 ,\n    \"stop\": 705888000 ,\n    \"interp\": 705715200 ,\n    \"sat\":{\n      \"e\": 0.1511140226602015,\n      \"a\": 133897500236.4333,\n      \"per\": 26704937.973949417,\n      \"t0\": 696697811.099677,\n      \"rot\":[ 0.25057881592086945,-0.9653877701717088,0.9680962023537201,0.2498777743017408,0.07474992383209539,2.0151443127996616 ],\n    }\n   },\n   {\n    \"start\": 705888000 ,\n    \"stop\": 708998400 ,\n    \"interp\": 708825600 ,\n    \"sat\":{\n      \"e\": 0.16113621246017582,\n      \"a\": 133768982575.2672,\n      \"per\": 26666499.252254777,\n      \"t0\": 696941508.5423242,\n      \"rot\":[ 0.24658255809559584,-0.9664025444239344,0.9691217890662824,0.24589067570520612,0.07485918602404576,2.0413681907094388 ],\n    }\n   },\n   {\n    \"start\": 708998400 ,\n    \"stop\": 715046400 ,\n    \"interp\": 714873600 ,\n    \"sat\":{\n      \"e\": 0.1627910319474514,\n      \"a\": 133966391866.5285,\n      \"per\": 26725550.56933607,\n      \"t0\": 697399590.8959138,\n      \"rot\":[ 0.23487255764132628,-0.9693313340857228,0.9720261733446388,0.23422139843745837,0.07441170118734182,2.112004961616986 ],\n    }\n   },\n   {\n    \"start\": 715046400 ,\n    \"stop\": 721094400 ,\n    \"interp\": 720921600 ,\n    \"sat\":{\n      \"e\": 0.1475329404681922,\n      \"a\": 136103211662.2296,\n      \"per\": 27367519.115732774,\n      \"t0\": 696860088.0081288,\n      \"rot\":[ 0.23225492628986968,-0.9700019675546304,0.9726549486915117,0.23162143551369702,0.07380849240243376,2.065092433062046 ],\n    }\n   },\n   {\n    \"start\": 721094400 ,\n    \"stop\": 724032000 ,\n    \"interp\": 723859200 ,\n    \"sat\":{\n      \"e\": 0.1664803672547238,\n      \"a\": 139276573973.6253,\n      \"per\": 28330222.31782524,\n      \"t0\": 695707976.7536975,\n      \"rot\":[ 0.23829502348073417,-0.9685691538839615,0.9711928139068556,0.23765127373525777,0.07345519883926876,2.024240704299395 ],\n    }\n   },\n   {\n    \"start\": 724032000 ,\n    \"stop\": 727142400 ,\n    \"interp\": 726969600 ,\n    \"sat\":{\n      \"e\": 0.16357853623113364,\n      \"a\": 138555289111.1209,\n      \"per\": 28110432.86259982,\n      \"t0\": 724384423.6120676,\n      \"rot\":[ 0.24397065742761087,-0.9671487335085156,0.9697826139472389,0.24330804548450172,0.07365135623589004,2.1410905592837803 ],\n    }\n   },\n   {\n    \"start\": 727142400 ,\n    \"stop\": 733190400 ,\n    \"interp\": 733017600 ,\n    \"sat\":{\n      \"e\": 0.14752983241050383,\n      \"a\": 134765409191.682,\n      \"per\": 26965006.00432256,\n      \"t0\": 724101803.6252953,\n      \"rot\":[ 0.24425788366561316,-0.9670360069350481,0.9697103104882384,0.24358426009049328,0.07421636967195736,2.0542656061561764 ],\n    }\n   },\n   {\n    \"start\": 733190400 ,\n    \"stop\": 736128000 ,\n    \"interp\": 735955200 ,\n    \"sat\":{\n      \"e\": 0.1620196863592726,\n      \"a\": 133607024454.0164,\n      \"per\": 26618085.017541725,\n      \"t0\": 724206017.0766971,\n      \"rot\":[ 0.23955986496488518,-0.9681886168956673,0.9708815947879567,0.23889538700619942,0.07442980707225522,2.0244647709043333 ],\n    }\n   },\n   {\n    \"start\": 736128000 ,\n    \"stop\": 739238400 ,\n    \"interp\": 739065600 ,\n    \"sat\":{\n      \"e\": 0.1659717370085063,\n      \"a\": 133567509007.7763,\n      \"per\": 26606277.09348602,\n      \"t0\": 724528603.9637045,\n      \"rot\":[ 0.236401510587838,-0.9689637180225168,0.9716554563176127,0.23574661692678722,0.07438310133057863,2.0741469232224645 ],\n    }\n   },\n   {\n    \"start\": 739238400 ,\n    \"stop\": 745286400 ,\n    \"interp\": 745113600 ,\n    \"sat\":{\n      \"e\": 0.15699125479855883,\n      \"a\": 134100421294.7132,\n      \"per\": 26765667.788125914,\n      \"t0\": 724804008.106107,\n      \"rot\":[ 0.23347476583881102,-0.9696877295246145,0.972362861135961,0.23283243800883047,0.07412666875195652,2.1289799763995285 ],\n    }\n   },\n   {\n    \"start\": 745286400 ,\n    \"stop\": 748224000 ,\n    \"interp\": 748051200 ,\n    \"sat\":{\n      \"e\": 0.14808366617676852,\n      \"a\": 136109994246.93192,\n      \"per\": 27369564.89584471,\n      \"t0\": 724052389.1904523,\n      \"rot\":[ 0.23430169906315138,-0.9695169274336307,0.972163933612084,0.23366374282593744,0.07374403506878435,2.046893891667617 ],\n    }\n   },\n   {\n    \"start\": 748224000 ,\n    \"stop\": 751334400 ,\n    \"interp\": 751161600 ,\n    \"sat\":{\n      \"e\": 0.16327533389935678,\n      \"a\": 138644448628.7023,\n      \"per\": 28137570.57569535,\n      \"t0\": 723145727.0235891,\n      \"rot\":[ 0.2382093109316258,-0.9685806719237622,0.9712138406064238,0.23756347448321616,0.07358721062233343,2.0150020801273314 ],\n    }\n   },\n   {\n    \"start\": 751334400 ,\n    \"stop\": 754272000 ,\n    \"interp\": 754099200 ,\n    \"sat\":{\n      \"e\": 0.1666901460879306,\n      \"a\": 139070911538.5604,\n      \"per\": 28267494.85149128,\n      \"t0\": 751596563.2561674,\n      \"rot\":[ 0.24234746544217609,-0.9675494192640899,0.9701895206575637,0.24168798410621495,0.07372272119500559,2.11974863795772 ],\n    }\n   },\n   {\n    \"start\": 754272000 ,\n    \"stop\": 1000000000000 ,\n    \"sat\":{\n      \"e\": 0.1501768833300617,\n      \"a\": 136722190238.2622,\n      \"per\": 27554426.757223677,\n      \"t0\": 751577919.903595,\n      \"rot\":[ 0.2433933758886226,-0.967266089817219,0.9699276594538068,0.24272548234759647,0.0740314237931058,2.1227315876308768 ],\n    }\n   }\n ]}\n\n\n\n\n  }\n}\n};\n export default solarSystem;\n","import Constants from \"../std/Constants.js\";\nimport Util      from \"../std/Util.js\";\nimport Orbit     from \"../orbits/Orbit.js\";\nimport ssData    from \"../data/PlanetaryData.js\";\n\nclass SolarPlanets {\n    \n    \n    /** Get the elements for a planet at a specific time. */\n    static getElements(name, time) {\n        \n        // Convert t from seconds to centuries...\n        const t = time/Constants.CENTURY;\n        const elems = {};\n        // Remember to get the planets of Sol.\n        const p = ssData.Sol.planets[name];\n        elems.a     = (p.elems.a + t*p.derivs.a)*Constants.AU;\n        elems.Eccen =  p.elems.e + t*p.derivs.e;\n        // Defer conversion to radians.\n        var   ML    =  p.elems.ML + t*p.derivs.ML;\n        elems.i     = Util.toRadians(p.elems.i     + t*p.derivs.i);\n        var   LonP  = Util.toRadians(p.elems.LonP  + t*p.derivs.LonP);\n        elems.Omega = Util.toRadians(p.elems.Omega + t*p.derivs.Omega);\n        \n        elems.Per   = 360./p.derivs.ML * Constants.CENTURY;\n        \n        elems.nu    = LonP - elems.Omega;\n        \n        let MA      = Util.toRadians(ML) - LonP;\n        if (p.corr != null) {\n            let corr =  p.corr[0]*t*t + \n                        // Paper doesn't explicitly indicate that the trig functions\n                        // are in degrees, but in other cases in paper they clearly are.\n                        p.corr[1]*Math.cos(Util.toRadians(p.corr[3]*t)) +\n                        p.corr[2]*Math.sin(Util.toRadians(p.corr[3]*t));\n             MA += Util.toRadians(corr);\n        }\n        MA = MA % (2*Math.PI);\n        \n        elems.t0    = time - MA/(2*Math.PI) * elems.Per;\n        let ringAngle = null;\n        let ringColor = null;\n        if (p.ring) {\n            ringAngle = p.ring.ringAngle;\n            ringColor = p.ring.color;\n        } \n        return {elements: elems, mass: p.mass, diameter: 2*p.radius/1000, color: p.render.color, ringColor: ringColor, ringAngle: ringAngle};\n    }\n        \n    // Get the orbit for a planet at a given time.\n    static getOrbit(pname, time) {\n        Util.log(\"Looking at pname, time:\"+pname, time);\n        const planetData = SolarPlanets.getElements(pname, time);\n        const elems = planetData.elements;\n\n        const orb = new Orbit(pname);\n\n        for (var key in elems) {\n            orb.addParam(key, elems[key]);\n        }\n        orb.addParam(\"t\", time);\n        // Make sure we can get positions.\n        const r0 = orb.getParameter(\"r\", true);\n        if (r0 == null) {\n            return null;\n        }\n        return orb.quickOrbit();\n    }\n}\n\nexport default SolarPlanets;","import Util from      \"../std/Util.js\";\nimport Constants from \"../std/Constants.js\";\nimport Orbit from     \"../orbits/Orbit.js\";\nimport ParameterFactory from \"../orbits/ParameterFactory.js\";\n\n\nconst loadMPCData = function (url, startTime, callback) {\n    Util.log(\"Initiating loading of MPC data\");\n    let xhr  = new XMLHttpRequest();\n    xhr.open('GET', url, true);\n    xhr.onload  = function() {\n        let stars = xhr.responseText;\n        let json = JSON.parse(stars);\n        let zz;\n        for (zz in json) {\n            break;\n        }\n        parseMPCData(startTime, callback, json[zz]);\n    };\n    \n    xhr.onerror = function() {\n        Util.log(\"Called error function when loading asteroids and comets!\");\n    }\n    \n    xhr.send(null);\n}\n\n// Called as callback in loadMPCData\nconst parseMPCData = function(startTime, callback, mpcdata) {\n    const info  = [];\n    var nskip       = 0;\n    var nhyper      = 0;\n    var nAst        = 0;\n    var nCom        = 0;\n    var unknowns = 0;\n    Util.log(\"Number of MPC small bodies:\"+mpcdata.length)\n    for (var i=0; i<mpcdata.length; i += 1) {\n        const elements = mpcdata[i];\n        var name = elements.Name;\n        if (!name) {\n            name = elements.Designation_and_name;\n        } \n        if (!name) {\n            unknowns += 1;\n            name = \"Unnamed_\"+unknowns;\n        }\n\n        const orb      = new Orbit(name);\n\n        const e = elements.e;\n        const type = elements.Orbit_type;\n        if (e == null || e === 1) {\n            // Skipping parabolic and radial orbits for the nonce\n            nskip += 1;\n            continue;\n        }\n\n        if (e > 1) {\n            nhyper += 1;\n        }\n\n\n        orb.addParameter(ParameterFactory.genParam(\"Eccen\", e));\n        orb.addParameter(ParameterFactory.genParam(\"i\", Util.toRadians(elements.i)));\n        orb.addParameter(ParameterFactory.genParam(\"nu\", Util.toRadians(elements.Peri)));\n        orb.addParameter(ParameterFactory.genParam(\"Omega\", Util.toRadians(elements.Node)));\n\n        // Comets give the time of perihelion and perihelion distance, \n        // while asteroids give the Mean anomaly at epoch and semimajor axis.\n        if (type === \"C\" || type === \"P\"  || type === \"A\"  || type === \"I\") {\n\n            const year = elements.Year_of_perihelion;\n            const mon  = elements.Month_of_perihelion;\n            const day  = elements.Day_of_perihelion;\n            const d    = new Date(year, mon-1, Math.floor(day));\n            var t1970  = d.setDate(Math.floor(day))/1000;\n            t1970     += 86400 * (day-Math.floor(day));  // Seconds in unix epoch.\n            var t0     = t1970 - Constants.Epoch0;\n            orb.addParameter(ParameterFactory.genParam(\"t0\", t0));\n            var peridist = elements.Perihelion_dist*Constants.AU;            \n            orb.addParameter(ParameterFactory.genParam(\"a\", peridist/(1 - e)));\n            nCom += 1;\n\n        } else {\n\n            orb.addParameter(ParameterFactory.genParam(\"a\", elements.a*Constants.AU));\n            const epoch = (elements.Epoch - Constants.JD0)*86400;\n            // To find t0, we take the mean anomaly at the epoch and use the mean motion to compute\n            // the number of days we are past.\n            const delta = (elements.M / elements.n)*86400;\n            orb.addParameter(ParameterFactory.genParam(\"t0\", epoch-delta));\n            nAst += 1;\n        }\n\n        orb.addParameter(ParameterFactory.genParam(\"t\", startTime));\n        const r = orb.getParameter(\"r\", true);\n\n        if (r == null) {\n            nskip += 1;\n            continue;\n        }\n        const qorb = orb.quickOrbit();\n        if (qorb == null) {\n            Util.log(\"Found null orbit at index:\"+i);\n        }\n\n        info.push({type: type, name: name, orbit: orb.quickOrbit(), H:elements.H});\n    }\n    \n    Util.log(\"Parsed MPC data\");\n    Util.log(\"    \"+info.length +\" total bodies\");\n    Util.log(\"    \"+nAst        +\" asteroids\");\n    Util.log(\"    \"+nCom        +\" comets\");\n    Util.log(\"    \"+nhyper      +\" hyperbolic orbits\");\n    Util.log(\"    \"+nskip       +\" orbits skipped (parabolic or missing information)\");\n    callback(info);    \n}\n\n\nexport default loadMPCData;","import {LineBasicMaterial, BufferGeometry,Line, Vector3} from \"three\";\n\n// This returns an orbit with the distances scaled to AU by default.\nconst OrbitPlot = function (name, orbit, color) {\n    const orbitR = orbit.orbitXYZ(360);\n    const points = [];\n    for (var pi=0; pi<orbitR.length; pi += 1) {\n        const r = orbitR[pi];\n        points.push(new Vector3(r[0], r[1], r[2]));\n    }\n   \n    const material = new LineBasicMaterial( { color: color } );\n    const geometry = new BufferGeometry().setFromPoints( points );\n    const line     = new Line(geometry, material );\n    return {component: line, name:name+\"Orbit\", render: null};\n}\n\nexport default OrbitPlot;","import {SphereGeometry, MeshBasicMaterial, Mesh} from \"three\";\nimport Util from \"../std/Util.js\";\nimport Constants from \"../std/Constants.js\";\n\nconst Planet = function(name, start, qorbit, size, color, wireFrame, useSize){\n    \n \n    // We're going to make things smaller than the Sun, but \n    // can't scale directly or they will disappear...\n    \n    var ratio = (Math.log10(size/10000)+1)*.03;\n    if (useSize) {\n        ratio = size;\n    }\n    \n    const geometry = new SphereGeometry(ratio, 8, 8);\n    const material = new MeshBasicMaterial({wireframe: wireFrame, color: color });\n    const sphere   = new Mesh(geometry, material);\n    const p        = qorbit.position(start);\n    sphere.position.set(p[0], p[1], p[2]);\n    let count = 0;\n        \n    const ret = \n      {component: sphere, name: name+\"Body\",\n        \n      render: function(time) {\n          // Update planet positions.\n           var r = qorbit.position(time);\n           // Using ret.component vs just sphere\n           // allows us to replace the component externally.\n           ret.component.position.set(r[0], r[1], r[2]);\n      }};\n    return ret;\n};\n\nexport default Planet;\n\n","import {RingGeometry, MeshBasicMaterial, Mesh} from \"three\";\nconst Ring = function(name, start, orbit, size, color){\n \n    // We're going to make things smaller than the Sun, but \n    // can't scale directly or they will disappear...\n    var ratio = (Math.log10(size/10000)+1)*.03;\n\n    const geometry = new RingGeometry(1.1*ratio, 2*ratio, 8);\n    const material = new MeshBasicMaterial({wireframe: true, color: color });\n    const ring     = new Mesh(geometry, material);\n    const p        = orbit.position(start);\n    ring.position.set(p[0], p[1], p[2]);\n    \n    return {\n      component: ring,\n      name: name+\"Ring\",        \n      render:function(time) {\n          // Update planet positions.\n           var r = orbit.position(time);\n           ring.position.set(r[0], r[1], r[2]);\n      }\n  };\n}\n\nexport default Ring;\n\n","/** This class started as a direct copy of the Points class.\n *  The testPoint method has been adapted to use an angular offset criterion\n *  during the raycast rather than the linear projected offset.  Since testPoint\n *  is not a method within Points, but a method defined in parallel in the Points\n *  module, we cannot [I think] simply update this method in this class but would\n *  need to copy the update the raycast method too... So we just do a complete\n *  copy instead.\n */\n\nimport { Sphere, Ray, Matrix4, Object3D, Vector3, PointsMaterial, BufferGeometry } from 'three';\nimport Util from \"../std/Util.js\";\n\nconst _inverseMatrix = /*@__PURE__*/ new Matrix4();\nconst _ray           = /*@__PURE__*/ new Ray();\nconst _sphere        = /*@__PURE__*/ new Sphere();\nconst _position      = /*@__PURE__*/ new Vector3();\n\nclass AngPoints extends Object3D {\n\n    constructor(geometry = new BufferGeometry(), material = new PointsMaterial()) {\n\n        super();\n\n        this.type = 'AngPoints';\n\n        this.geometry = geometry;\n        this.material = material;\n\n        this.updateMorphTargets();\n        this.maxAngSq   = 0.00005;\n\n    }\n\n    copy(source) {\n\n        super.copy(source);\n\n        this.material = source.material;\n        this.geometry = source.geometry;\n\n        return this;\n\n    }\n\n    raycast(raycaster, intersects) {\n\n        const geometry = this.geometry;\n        const matrixWorld = this.matrixWorld;\n        const threshold = raycaster.params.Points.threshold;\n        const drawRange = geometry.drawRange;\n\n        // Checking boundingSphere distance to ray\n\n        if (geometry.boundingSphere === null)\n            geometry.computeBoundingSphere();\n\n        _sphere.copy(geometry.boundingSphere);\n        _sphere.applyMatrix4(matrixWorld);\n        _sphere.radius += threshold;\n\n        if (raycaster.ray.intersectsSphere(_sphere) === false)\n            return;\n\n        //\n\n        _inverseMatrix.copy(matrixWorld).invert();\n        _ray.copy(raycaster.ray).applyMatrix4(_inverseMatrix);\n\n        const localThreshold = threshold / ((this.scale.x + this.scale.y + this.scale.z) / 3);\n        const localThresholdSq = localThreshold * localThreshold;\n\n        if (geometry.isBufferGeometry) {\n\n            const index = geometry.index;\n            const attributes = geometry.attributes;\n            const positionAttribute = attributes.position;\n\n            if (index !== null) {\n\n                const start = Math.max(0, drawRange.start);\n                const end = Math.min(index.count, (drawRange.start + drawRange.count));\n\n                for (let i = start, il = end; i < il; i++) {\n\n                    const a = index.getX(i);\n\n                    _position.fromBufferAttribute(positionAttribute, a);\n\n                    testPoint(_position, a, this.maxAngSq, matrixWorld, raycaster, intersects, this);\n\n                }\n\n            } else {\n\n                const start = Math.max(0, drawRange.start);\n                const end = Math.min(positionAttribute.count, (drawRange.start + drawRange.count));\n\n                for (let i = start, l = end; i < l; i++) {\n                    _position.fromBufferAttribute(positionAttribute, i);\n                    testPoint(_position, i, this.maxAngSq, matrixWorld, raycaster, intersects, this);\n                }\n            }\n        } else {\n            console.error('THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');\n        }\n    }\n\n    updateMorphTargets() {\n\n        const geometry = this.geometry;\n\n        if (geometry.isBufferGeometry) {\n\n            const morphAttributes = geometry.morphAttributes;\n            const keys = Object.keys(morphAttributes);\n\n            if (keys.length > 0) {\n\n                const morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n                if (morphAttribute !== undefined) {\n\n                    this.morphTargetInfluences = [];\n                    this.morphTargetDictionary = {};\n\n                    for (let m = 0, ml = morphAttribute.length; m < ml; m++) {\n\n                        const name = morphAttribute[ m ].name || String(m);\n\n                        this.morphTargetInfluences.push(0);\n                        this.morphTargetDictionary[ name ] = m;\n                    }\n                }\n            }\n        } else {\n            const morphTargets = geometry.morphTargets;\n            if (morphTargets !== undefined && morphTargets.length > 0) {\n                console.error('THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.');\n            }\n        }\n    }\n}\n\nAngPoints.prototype.isPoints = true;\n\nfunction testPoint(point, index, localThresholdSq, matrixWorld, raycaster, intersects, object) {\n\n    const rayPointDistanceSq = _ray.distanceSqToPoint(point);\n    const distanceSq         = _ray.origin.distanceToSquared(point);\n\n    if (rayPointDistanceSq/distanceSq < localThresholdSq) {\n\n        const intersectPoint = new Vector3();\n\n        _ray.closestPointToPoint(point, intersectPoint);\n        intersectPoint.applyMatrix4(matrixWorld);\n\n        const distance = raycaster.ray.origin.distanceTo(intersectPoint);\n\n        if (distance < raycaster.near || distance > raycaster.far)\n            return;\n\n        const dist = raycaster.ray.origin.distanceTo(point);\n        const xoffset = intersectPoint.distanceTo(point);\n        intersects.push({\n\n            distance:      distance,\n            distanceToRay: Math.sqrt(rayPointDistanceSq),\n            point:         intersectPoint,\n            index:         index,\n            face:          null,\n            object:        object\n\n        });\n    }\n}\n\nexport default AngPoints;\n\n\n","import {Color, BufferGeometry, PointsMaterial, Float32BufferAttribute, Vector3} from \"three\";\nimport AngPoints from \"../three/AngPoints.js\";\nimport Util from \"../std/Util.js\";\n\nconst SmallBodies = function(smbData, colorLookup, startTime) {\n    let xcount = 0;\n    function getPositions(data, time) {\n        xcount += 1;\n        const px = [];\n        for (var i=0; i<data.length; i += 1) {\n            if (data[i].orbit == null) {\n                Util.log(\"No orbit for \"+i+\" \"+data.name);\n            }\n            const p = data[i].orbit.position(time);\n            px.push(p[0], p[1], p[2]);\n        }\n        return new Float32BufferAttribute(px,3);\n    }\n    \n    function getColors(data, colorLookup) {\n        \n            var allTypes = {\n\"A\":              0xbfef45,\n\"Amor\":           0x1f8231,\n\"Apollo\":         0xfabed4,\n\"Aten\":           0xdcbeff,\n\"Atira\":          0x469990,\n\"C\":              0xf032e6,\n\"Distant Object\": 0x3cb44b,\n\"Hilda\":          0xffd8b1,\n\"Hungaria\":       0xaaffc3,\n\"I\":              0x9a6324,\n\"Jupiter Trojan\": 0x42d4f4,\n\"MBA\":            0xffe119,\n\"Object with perihelion distance < 1.665 AU\": 0x4363d8,\n\"P\":              0xe6194b,\n\"Phocaea\":        0xfffac8\n    };\n        const colors = [];\n        \n        for (var i=0; i < data.length; i += 1) {\n            const t   = data[i].type;\n            const h   = data[i].H;\n            var col = 0xFFFFFF;\n            if (allTypes[t]) {\n                col = allTypes[t];\n            } else {\n                Util.log(\"Cannot find type for: \"+i);\n            }\n            const c3 = new Color(col);\n            var fac = 1;\n            if (t !== \"P\") {\n                fac = 0.2;\n            }\n            if (h > 5) {\n                fac = 5/h;\n            }\n            colors.push(c3.r*fac, c3.g*fac, c3.b*fac);\n            \n        }\n        return new Float32BufferAttribute( colors, 3 );\n\n    }\n\n\n    const geometry = new BufferGeometry();        \n    // Should the time here be 0?\n    geometry.setAttribute( 'position', getPositions(smbData, startTime));\n    geometry.setAttribute( 'color',    getColors(smbData, colorLookup));\n        \n    const material       = new PointsMaterial( {sizeAttenuation: false, size: 2, vertexColors: true } );\n    const points         = new AngPoints(geometry, material );\n    \n    // Add this function to the component.\n    points.getIndexedName = function(index) {\n        return smbData[index].name;\n    };\n    \n    return {component: points,\n      render:function(time) {\n        geometry.setAttribute( 'position', getPositions(smbData, time));\n      }\n    };\n}\n\nexport default SmallBodies;","import  {SphereGeometry,MeshBasicMaterial,Mesh} from \"three\";\n\nconst Sun = function(settings) {\n\n    if (!settings) {\n        settings = {};\n    }\n    const sunSize     = settings.sunSize      || 0.1;\n    const sunColor    = settings.sunColor     || 0xFFFF00;\n    const sunWire     = settings.sunWire      || false;\n    const sunSegments = settings.sunSegements || 8;\n    const sunName     = settings.sunName      || \"SunBody\";\n    const sunPosition = settings.sunPosition  || [0,0,0];\n        \n    var geometry = new SphereGeometry(sunSize, sunSegments, sunSegments);\n    var material = new MeshBasicMaterial({wireframe: sunWire, color: sunColor});\n    var sphere   = new Mesh(geometry, material);\n \n    sphere.position.set(sunPosition[0], sunPosition[1], sunPosition[2]);\n    return {component: sphere, name: sunName, \n           render: null};        \n}\n\nexport default Sun;\n    \n\n\n","import Util from \"../std/Util.js\";\n\nclass SecondaryOrbit {\n    constructor(primary, secondary, secScale) {\n        this.prime = primary;\n        this.sec   = secondary;\n        this.scale = secScale;\n    }\n    \n    position(time) {\n        let p = this.sec.position(time);\n        if (this.scale) {\n            p = Util.times(this.scale, p);\n        }\n        return Util.vadd(this.prime.position(time),p);\n    }\n    \n    state(time) {\n        const pstate = this.prime.state(time);\n        const sstate = this.sec.state(time);\n        return [\n            Util.vadd(pstate[0], sstate[0]),\n            Util.vadd(pstate[1], sstate[1])\n        ];\n    }\n}\n\nexport default SecondaryOrbit;\n\n","import Util from \"../std/Util.js\";\nimport Constants from \"../std/Constants.js\";\nimport QOrb from \"../orbits/QOrb.js\";\nimport SecondaryOrbit from \"../orbits/SecondaryOrbit.js\";\nimport SolarPlanets from \"../solarsystem/SolarPlanets.js\";\n\n// \n// // This class allows us to define a \n// chain of orbits to define the position\n// of a object which is subject to changing conditions\n// either due to the evolution of an orbit or active\n// control.\n\n// Note that this class does not inherit from existing\n// orbit classes and only defines the 'position' method\n// (we should add the state method ultimately if we need\n// velocities).\n\n// For each interval we define define a start time and\n// stop time for which these elements are useful.  We may\n// either assume the elements are exactly correct for the entire\n// interval, or exactly correct for the beginning of the interval\n// followed by a time in which we wish to linearly interpolate\n// with the following set of elements.\n// \n// We may anticipate discontinuities in the orbit if we do\n// not include an interpolation interval.  (We can set\n// the times such that the entire interval is interpolated).\n////\n// The behavior prior to the first or after the last interval\n// can either extrapolate the extermum orbits, or we can return\n// an object at the origin (which will normally be hidden behind something else)\n// So if we wish to simulate a space mission beginning on some date we\n// supply the orbit chain and indicate that we should return the origin for\n// the prior times.  If the mission ends destructively we may do the same\n// for the subsequent time.\n\nclass ChainedOrbit {\n    constructor() {\n        this.orbits     = [];    // The orbits in the chain\n        this.name       = null;  // The name for this chain (e.g., the mission name)\n        this.usePrior   = false; // Use the first orbit before its start time.\n        this.useSubseq  = false; // Use the last orbit after its end time\n        this.index      =  0;    // The index of the current orbit\n        this.norbit     =  0;    // The number of orbits in the chain\n        this.isPrior    = false; // We are currently prior to the first interval\n        this.isSubseq   = false; // We are currently subsequent to the last interval\n        this.interp     = false; // We are interpolating?\n        this.startTime  = null;  // The start time of the first orbit in the chain\n        this.stopTime   = null;  // The end time of the last orbit in the chain\n        this.count      = 0;\n    }\n    \n    addOrbit(orbit, start, stop, interp, scale) {\n        \n        \n        if (stop <= start) {\n            Util.log(\"Invalid orbit chain interval:\"+orbit.name+\" \"+this.norbits);\n            return;\n        }\n        if (!interp) {\n            interp = stop;\n        } else if (interp < start || interp > stop) {\n            Util.log(\"Invalid orbit chain interpolation time: \"+interp+\" not between \"+start+\" and \"+stop);\n            return;\n        }\n        \n        \n        if (this.norbit <= 0) {\n            this.startTime = start;\n        }\n        \n        if (this.norbit > 0) {\n            if (start != this.stopTime) {\n                Util.log(\"Orbit gap:\"+this.name+\" index:\"+this.norbit, this.startTime, this.stopTime, start, stop);\n                return;\n            }\n        }\n        \n        this.stopTime = stop;\n        \n        if (!this.name && this.orbit.name) {\n            this.name = this.orbit.name;\n        }\n        \n        this.orbits.push({start: start, interp: interp, stop: stop, orbit:orbit, scale: scale});        \n        this.norbit = this.orbits.length;\n    }\n    \n    // Do we extend the initial orbit prior\n    // to its start time?  If not the\n    // orbit will return position and velocity\n    // as 0.\n    setPrior(flag) {\n        if (flag != null) {\n            this.usePrior = flag;\n        } else {\n            this.usePrior = true;\n        }\n    }\n    \n    // Do we extend the final orbit subsequent\n    // to its stop time?  If not the\n    // orbit will return position adn velocity\n    // as 0.\n    setSubseq(flag) {\n        if (flag != null) {\n            this.useSubseq = flag;\n        } else {\n            this.useSubseq = true;\n        }\n    }\n    \n    // Make sure we use the correct orbit[s] for this\n    // time\n    setOrbit(time) {\n        \n        if (this.norbit < 0) {\n            throw new Error(\"No elements in orbit chain\");\n        }\n        this.isPrior  = time < this.startTime;\n        this.isSubseq = time > this.stopTime;\n        \n        \n        while (time > this.orbits[this.index].stop) {\n            if (this.index < this.norbit-1) {\n                this.index += 1;\n            } else {\n                break;\n            }\n        }\n        while (time < this.orbits[this.index].start) {\n            if (this.index > 0) {\n                this.index -= 1;\n            } else {\n                break;\n            }\n        }\n        // Should we be interpolating?\n        this.interp =  (time > this.orbits[this.index].interp && this.index < this.norbit-1);\n    }\n    \n    \n    // The the position of the item at the specified time.\n    position(time) {\n        const interp = this.setOrbit(time);\n        let r0;\n        \n        // If beyond the range of the chain, do we still\n        // want to use these orbits?\n        if ( (this.isPrior  && !this.usePrior) ||\n             (this.isSubseq && !this.useSubseq) ) {\n            r0 = [0,0,0];\n        \n        // Just use the current (first or last) orbit if prior or subseqent.\n        // (since we've already checked that we don't want to use the origin then)\n        } else if (this.isPrior || this.isSubseq) {\n            r0 = this.orbits[this.index].orbit.position(time);\n            \n        } else {\n        \n            if (interp) {\n                let curr = this.orbits[this.index];\n                // OK need to interpolate between two orbits.\n                let f1 = (time - curr.interp)/(curr.stop-curr.interp);\n                let f0 = 1-f1;\n                    r0 = curr.orbit.position(time);\n                    let r1 = this.orbits[this.index+1].orbit.position(time);\n                    r0 = [f0*r0[0] + f1*r1[0], \n                          f0*r0[1] + f1*r1[1], \n                          f0*r0[2] + f1*r1[2]\n                         ];\n            } else {\n                let orb = this.orbits[this.index];\n                r0 = orb.orbit.position(time);\n            }\n        }\n        \n        if (this.orbits[this.index].scale) {\n            r0 = Util.times(this.orbits[this.index].scale, r0);\n        }\n        return r0;\n    }\n    \n    static createChain(name, chainDescrip) {\n        \n        let chain = new ChainedOrbit();\n        \n        chain.name = name;\n        \n        if (chainDescrip.prior) {\n            chain.setPrior(chainDescrip.prior);\n        }\n        if (chainDescrip.subseq) {\n            chain.setSubseq(chainDescrip.subseq);\n        }\n        Util.log(\"Creating orbit chain for \"+name);\n        \n        for (let i=0; i<chainDescrip.orbits.length; i += 1) {\n            \n            let orb    = chainDescrip.orbits[i];\n            let scale = orb.scale? orb.scale: 1;\n            \n            let qorb = new QOrb(orb.sat);\n            qorb.scale = 1/Constants.AU;\n            if (orb.planet) {\n               let porb = new QOrb(orb.planetOrb);\n               porb.scale = 1/Constants.AU;\n               qorb = new SecondaryOrbit(porb, qorb, -1);\n            } else {\n                if (qorb.e > 1) {\n                    qorb.scale *= -1;\n                }\n                if (orb.sat.scale) {\n                    qorb.scale *= orb.sat.scale;\n                }\n            }\n            \n            chain.addOrbit(qorb, orb.start, orb.stop, orb.interp, scale);\n        }\n        Util.log(\"  Chain created with \"+chainDescrip.orbits.length+\" orbits\");\n        return chain;\n    }\n}\n\nexport default ChainedOrbit;","import Util         from \"../std/Util.js\";\nimport ChainedOrbit from \"../orbits/ChainedOrbit.js\";\n\nimport {ConeGeometry,MeshBasicMaterial,Mesh, Color} from \"three\";\n\nfunction Missions(missions,start) {\n    let results = [];\n    for (let miss in missions) {\n        let chain = ChainedOrbit.createChain(miss, missions[miss]);\n        let time = chain.startTime;\n        const geometry = new ConeGeometry(.02, 0.04, 8);\n        const material = new MeshBasicMaterial({wireframe: true, color: new Color(miss.color)});\n        const sphere   = new Mesh(geometry, material);\n        const p        = chain.position(start);\n        sphere.position.set(p[0], p[1], p[2]);\n        let count = 0;\n    \n        const ret = \n            {component: sphere, name: miss, chain: chain,\n        \n             render: function(time) {\n              // Update planet positions.\n                var r = chain.position(time);\n//                count += 1;\n//                if (count % 100 == 0) {\n//                    Util.log(\"Chain: \"+time+\" \"+r);\n//                }\n                \n                  // Using ret.component vs just sphere\n                  // allows us to replace the component externally.\n                  ret.component.position.set(r[0], r[1], r[2]);\n        }};\n        results.push(ret);\n\n    } \n    return results;\n}\n\nexport default Missions;","import  {Component}  from \"react\";\r\n\r\nimport Animation     from    \"../elems/Animation.js\";\r\n \r\nimport Util          from    \"../std/Util.js\";\r\nimport Constants     from    \"../std/Constants.js\";\r\nimport OptionsSelector from  \"../elems/OptionsSelector.js\";\r\nimport TextInput     from    \"../elems/TextInput.js\";\r\nimport Action        from    \"../elems/Action.js\";\r\nimport LocalGalaxy   from    \"./LocalGalaxy.js\";\r\n\r\nimport SolarPlanets   from    \"../solarsystem/SolarPlanets.js\";\r\nimport ssData         from   \"../data/PlanetaryData.js\";\r\n\r\nimport ParameterFactory from \"../orbits/ParameterFactory\";\r\nimport Orbit         from    \"../orbits/Orbit.js\";\r\nimport loadMPCData  from    \"../parsers/ParseMPC.js\";\r\n\r\nimport OrbitPlot     from    \"../solarsystem/OrbitPlot.js\";\r\nimport Planet        from    \"../solarsystem/Planet.js\";\r\nimport Ring          from    \"../solarsystem/Ring.js\";\r\nimport SmallBodies   from    \"../solarsystem/SmallBodies.js\";\r\nimport Sun           from    \"../solarsystem/Sun.js\";\r\nimport Missions      from    \"../solarsystem/Missions.js\";\r\n\r\nclass SolarSystem extends Animation {\r\n    \r\n    \r\n    constructor(inputs) {\r\n        super(inputs);\r\n        \r\n        const fields = {\r\n            timeID:        \"timeDisp\",\r\n            name:          \"Solar System\",\r\n            baseAnimation: \"Local Galactic Neighborhood\",\r\n            longClickTime: 1500          // How long a mouse click needs to be to be classified as a long click.\r\n        };\r\n        \r\n        for (var key in fields) {\r\n            if (!inputs || !inputs[key]) {   // Don't override anything specified by user.\r\n                this[key] = fields[key];\r\n            }\r\n        }\r\n        \r\n        if (!inputs.planets) {\r\n            this.planets = Object.keys(ssData.Sol.planets);\r\n        }\r\n        \r\n        if (this.timeID) {\r\n            this.timeElem = document.getElementById(this.timeID);\r\n        }\r\n\r\n        this.addSun();\r\n        this.addPlanets();\r\n        this.addSmallBodies();\r\n        this.time = new Date().getTime()/1000 - Constants.Epoch0;\r\n        \r\n        if (this.timeElem) {\r\n            this.addTimeDisplay();\r\n        }\r\n        \r\n        let miss = Missions(ssData.Sol.missions, this.time);\r\n        for (let i=0; i<miss.length; i += 1) {\r\n            this.addElement(miss[i].name, miss[i]);\r\n        }\r\n        this.optionState = \"empty\";\r\n    }\r\n\r\n    doLongClick(e) {\r\n        \r\n        const matched = this.frame.raycast(e);\r\n        let found = null;\r\n        \r\n        for (let name in matched) {\r\n            if (name.endsWith(\"Body\")) {\r\n                const test = name.substring(0, name.length-4);\r\n                if (this.frame.animFactory.isAnimation(test)) {\r\n                    found = test;\r\n                    break;\r\n                }\r\n            } else if (name.endsWith(\"Orbit\")) {\r\n                const test = name.substring(0, name.length-5);\r\n                if (this.frame.animFactory.isAnimation(test)) {\r\n                    found = test;\r\n                    break;\r\n                }\r\n            }\r\n            \r\n        }\r\n        if (found) {\r\n            this.setAnim(found);\r\n        } else {\r\n            super.doLongClick(e);\r\n        }\r\n    }\r\n    \r\n    \r\n    foundBodies(e) {\r\n        var detail = e.detail;\r\n        detail = Object.entries(detail).sort((a, b) => a[1] - b[1]);\r\n        const data = [];\r\n        for (var i in detail) {\r\n            if (detail[i][1] > 0) {\r\n                detail[i][1] = detail[i][1].toFixed(4);                \r\n            }\r\n            data.push({name: detail[i][0], d: detail[i][1]});\r\n        }\r\n        this.setState({nearby: data});\r\n    }\r\n\r\n    addBody(name) {\r\n\r\n        if (!name || name.length < 2) {\r\n            return;\r\n        }\r\n        const body = this.findBody(name);\r\n        if (body) {\r\n            this.addElement(name + \"Orbit\", OrbitPlot(name, body.orbit, 0x00FFFF));\r\n            const planetBody = Planet(name, this.time, body.orbit, 4000, 0xFFFF00, true);\r\n            this.addElement(planetBody.name, planetBody);            \r\n        }\r\n    }\r\n    \r\n    findBody(name) {\r\n        for (var i = 0; i < this.smbData.length; i += 1) {\r\n            const body = this.smbData[i];\r\n            if (body.name === name) {\r\n                return body;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    \r\n\r\n\r\n    // Add the fixed sun\r\n    addSun() {\r\n        this.addElement(\"Sun\", Sun());\r\n    }\r\n\r\n    // Add the planets\r\n    addPlanets() {\r\n\r\n        const names = this.planets;\r\n\r\n        // Add each planet in the list.\r\n        for (var xi = 0; xi < names.length; xi += 1) {\r\n            const pname = names[xi];\r\n            Util.log(\"Processing \" + pname);\r\n\r\n            const planetData = SolarPlanets.getElements(pname, this.time);\r\n            const qorb       = SolarPlanets.getOrbit(pname, this.time);\r\n            if (qorb == null) {\r\n                Util.log(\"Unable to process orbit for \"+pname);\r\n                continue;\r\n            }\r\n            // Add the orbit line (which is invariant)\r\n            const orbitLine = OrbitPlot(pname, qorb, planetData.color);\r\n            this.addElement(orbitLine.name, orbitLine);\r\n\r\n            const planetBody = Planet(pname, this.time, qorb, planetData.diameter, planetData.color, true);\r\n            this.addElement(planetBody.name, planetBody);\r\n\r\n            // Does this planet have a ring?\r\n            if (planetData.ringAngle) {\r\n                const ringElement = Ring(pname, this.time, qorb, planetData.diameter, planetData.ringColor);\r\n                this.addElement(ringElement.name, ringElement);\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    // Add the small bodies point array.\r\n    addSmallBodies() {\r\n        Util.log(\"Adding small bodies\");\r\n        loadMPCData(ssData.Sol.smallBodiesURL, this.time, this.smbCallback.bind(this));\r\n    }\r\n    smbCallback(smbData) {\r\n        this.smbData = smbData;\r\n        this.addElement(\"SmallBodies\", SmallBodies(this.smbData, this.colorLookup, this.time));    \r\n    }\r\n    \r\n    options() {\r\n        \r\n        const names = [\r\n                 \"Solar System\",\r\n                 \"Set time\",\r\n                 \"Show object orbit\",\r\n                 \"Define orbit parameters\",\r\n                 \"Trajectory conrols\",\r\n                 \"The Earth and environs\",\r\n                 \"Local Galactic Neightborhood\",\r\n                 \"Nearby Galaxies (TBD)\",\r\n                 \"Help\"\r\n        ];\r\n        const opts = [];\r\n        for (var i=0; i<names.length; i += 1) {\r\n            const entry = {};\r\n            const val   = names[i];\r\n            entry.value = names[i];\r\n            const key = \"ka\"+i;\r\n            switch (val) {\r\n               \r\n            // Note that we need to ensure that we have separate\r\n            // keys for the elements (at least those that are the same compound types)\r\n            case \"Set time\":\r\n                entry.elem = <TextInput key={key} placeholder=\"...time...\"\r\n                               callback={this.updateTime.bind(this)} /> ;\r\n                break;\r\n            case \"Show object orbit\":\r\n                entry.elem = <TextInput key={key} placeholder=\"...object name..\"\r\n                               callback={this.addBody.bind(this)} /> ;\r\n                break;\r\n                \r\n            case \"Define orbit parameters\":\r\n                entry.elem = <Action key={key} action={this.openParams} />\r\n                break;\r\n                \r\n            case \"The Earth and environs\":\r\n                entry.elem = <Action key={key} args=\"The Earth and environs\" action={this.setAnim.bind(this)} />\r\n                break;\r\n                \r\n            case \"Local Galactic Neightborhood\":\r\n                entry.elem = <Action key={key} args=\"Local Galactic Neighborhood\" action={this.setAnim.bind(this)} />;\r\n                break;\r\n                \r\n            case \"Help\":\r\n                entry.elem = <Action key={key} action={this.openHelp} />;\r\n                break;\r\n                \r\n            default:\r\n                entry.elem = <div key={key}>Just the {val}</div> ;\r\n            }\r\n            \r\n        \r\n            opts.push(entry);\r\n        }\r\n        const res =  <OptionsSelector options={opts} /> ;\r\n        return res;\r\n    }\r\n    \r\n    raycastResult(results) {\r\n        super.raycastResult(results, \"au\");\r\n    }\r\n    \r\n    \r\n    \r\n    addExternalOrbit(name, orbit) {\r\n    \r\n        this.addElement(name+\"Orbit\", OrbitPlot(name, orbit, 0xAAFFAA));\r\n        // If the phase of the orbit has been specified add the body too.\r\n        if (orbit.t0 != null) {\r\n            const userBody = Planet(name+\"Body\", this.time, orbit, 4000, 0xFFAAFF, true);\r\n            this.addElement(userBody.name, userBody);\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default SolarSystem;","import Animation from \"../elems/Animation\";\nimport Util from \"../std/Util\";\n\nimport {Scene, Vector3, Euler, DirectionalLight, AmbientLight} from \"three\";\n\nclass Satellite extends Animation {\n    constructor(params) {\n        super(params);\n        \n        this.delta         = 20;\n        this.longClickTime = 1000;  // A little shorter since\n                                    // we do less clicking here.\n\n        this.scene       = new Scene();\n        this.textShowing = true;\n        \n        this.cameraPos = new Vector3(0,0,2.5);\n        this.cameraRot = new Euler(0,0,0,\"XYZ\");\n        this.baseAnimation = this.primary;\n        \n        const here = this; \n        \n        const r0         = this.planetOrbit.position(this.time);\n\n        const sunlight = new DirectionalLight(0xffffff, 1);\n        sunlight.position.x = -1000*r0[0];\n        sunlight.position.y = -1000*r0[1];\n        sunlight.position.z = -1000*r0[2];\n        \n        \n        this.addElement(\"sunlight\", {name: \"sunlight\", component: sunlight,\n                         render: function(time) {\n                             const r0 = here.planetOrbit.position(time);\n                             \n                             sunlight.position.x = -1000*r0[0];\n                             sunlight.position.y = -1000*r0[1];\n                             sunlight.position.z = -1000*r0[2];\n                         }});\n                     \n        this.scene.add(new AmbientLight(0x333333));\n\n        var radius = 1;\n                \n        this.addElement(this.name, this.createSatellite(this.name, radius, this.texture));\n        this.addTimeDisplay();                       \n    }\n    \n    createSatellite(name, radius, texture) {\n        const moon = this.createSphere(radius, this.segments, texture, null);\n        const here = this;\n        return {\n            name:      name,\n            component: moon,\n            render:    function(time) {\n                let r = here.satelliteOrbit.position(time);\n                // Assume tidally locked (but initial phase would be nice too!)\n                let phase = Math.atan2(r[1], r[0]);\n                moon.rotation.y = phase; \n            }\n        }      \n    }\n    raycastResult(){};  // Don't do anything on clicks.\n    \n    doLongClick(event)  {\n        \n        this.textShowing = !this.textShowing;\n        var text = \"<hr/>\";\n        if (this.textShowing) {\n            text += \"Satellite: \"+this.name+\"<br>\";\n            text += \"Source:    \"+this.texture.src;\n        }\n        const elem = document.getElementById(\"clickTarget\");\n        elem.innerHTML = text;\n        \n        super.doLongClick(event);\n    }\n    \n    raycastResult(results) {\n        super.raycastResult(results, \"au\");\n    }\n}\n\nexport default Satellite;\n","import Util from \"../std/Util\";\n\nclass CoordTrans {\n    // Construct a transformation  between coordinate systems\n    // using coordinates of the poles.\n    // \n    // ang = [alphaG, deltaG, lonE]\n    //    alphaG,deltaG  = longitude/latitude of the pole of \n    //    the destination system in the original system,\n    //    lonE =  the longitude of the pole\n    //    of the original system in the destination system.\n    \n    constructor(ang) {\n        this.sin_dg = Math.sin(ang[1]);\n        this.cos_dg = Math.cos(ang[1]); \n        this.alphaG = ang[0];\n        this.deltaG = ang[1];\n        this.lonE   = ang[2];\n        \n        \n        // Transform the unit vectors to get the full transformation\n        // matrix\n        const vx = this.toVector(this.transform(0.,        0.));\n        const vy = this.toVector(this.transform(Math.PI/2, 0.));\n        const vz = this.toVector(this.transform(0.,        Math.PI/2));\n        this.mat = [vx, vy, vz];\n    }\n    \n    static RADIAN = Math.PI/180;\n    static coordDefs = {\n        \n        eqgal: [192.859481, 27.128251, 122.931918],\n        eqec:  [270.,       66.560709,  90.],\n        galeq: [122.931918, 27.128251, 192.859481],\n        eceq:  [ 90.000000, 66.560709, 270.],\n        ecgal: [180.023217, 29.811440,  96.383971],\n        galec: [ 96.383971, 29.811440, 180.023217]\n    };\n    static transformations = {};\n    \n    static getCoords(name_or_angles) {\n        if (Array.isArray(name_or_angles)) {\n            // User is specifying angles directly.\n            // so names is really a\n            return new CoordTrans(name_or_angles);\n        }\n        let name = name_or_angles.toLowerCase();\n        \n        if (!CoordTrans.transformations[name]) {\n            if (!CoordTrans.coordDefs[name]) {\n                Util.log(\"Unknown coordinate System:\"+name);\n            }            \n            CoordTrans.transformations[name] = new CoordTrans(Util.times(CoordTrans.RADIAN, CoordTrans.coordDefs[name]));\n        }\n        return CoordTrans.transformations[name];\n    }\n        \n    // radians to radians\n    transform(a,d) { \n        const cos_d = Math.cos(d);\n        const sin_d = Math.sin(d);\n        const cos_delta = Math.cos(a-this.alphaG);\n        const sin_delta = Math.sin(a-this.alphaG);\n        \n        const sin_b = sin_d*this.sin_dg + \n                      cos_d*this.cos_dg*cos_delta;\n        \n              \n        const b     = Math.asin(sin_b);  // Range is OK...\n        const cos_b = Math.cos(b);\n        \n        const num   = cos_d*sin_delta;\n        const denom = sin_d*this.cos_dg - cos_d*this.sin_dg*cos_delta;\n        var l     = this.lonE - Math.atan2(num, denom);\n        l %= 2*Math.PI;\n        if (l < 0) {\n            l += 2*Math.PI;\n        }\n        return [l,b];\n    }\n        \n    \n    // Degrees to degrees\n    transformd(a,d) {        \n        return Util.times(1/CoordTrans.RADIAN,\n           this.transform(a*CoordTrans.RADIAN, d*CoordTrans.RADIAN)\n        );\n    }\n    \n    toVector(crd) {\n        const a = crd[0];\n        const d = crd[1];\n        const vec =  [\n            Math.cos(a)*Math.cos(d), \n            Math.sin(a)*Math.cos(d), \n            Math.sin(d)\n        ];\n        return vec;\n    }\n    \n    vTransform(v) {\n        if (!v.length || v.length != 3) {\n            return null;\n        }\n        // Get the vector in the new coordinate system\n        var result =    Util.times(v[0], this.mat[0]);\n        result = Util.vadd(result, Util.times(v[1], this.mat[1]));\n        result = Util.vadd(result, Util.times(v[2], this.mat[2]));\n        return result;\n    }\n}\n\nexport default CoordTrans.getCoords;\n\nfunction test() {\n  for (var name in CoordTrans.coordDefs) {\n    var coords = CoordTrans.getCoords(name);\n    Util.log(\"Testing matrix transformation for: \"+name);\n    var testCoord = [Math.random(), Math.random()];\n    var testVec   = coords.toVector(testCoord);\n    var tranCoord = coords.transform(testCoord[0], testCoord[1]);\n    var tranVec   = coords.vTransform(testVec);\n    Util.log(\"Initial coords:\"+testCoord);\n    Util.log(\"Initial vec:\"+testVec);\n    Util.log(\"Transformed coords:\"+tranCoord);\n    Util.log(\"Transformed vector:\"+tranVec);\n    Util.log(\"Implied coordinates:\",\n       Math.atan2(tranVec[1], tranVec[0]),\n       Math.asin(tranVec[2]));\n  }\n}\n","class TransformedOrbit {\n    \n    constructor(orbit) {\n        this.orbit = orbit;\n        this.transforms = [];\n    }\n    addTransform(trans) {\n        this.transforms.push(trans);\n    }\n    position(time) {\n        return this.transform(this.orbit.position(time));\n    }\n    \n    transform(r) {\n        for (let i=0; i<this.transforms.length; i += 1) {\n            r = this.transforms[i].vTransform(r);\n        }\n        return r;\n    }\n    \n    orbitXYZ(n) { \n        let vec = this.orbit.orbitXYZ(n);\n        return this.multi(vec);\n    }\n    \n    state(time) {\n        // State just returns two vectors, r and v\n        return multi(this.orbit.state(time));\n    }\n    \n    multi(vec) {\n        for (let i=0; i<vec.length; i += 1) {\n            vec[i] = this.transform(vec[i]);\n        }\n        return vec;\n    }\n}\n\nexport default TransformedOrbit;\n\n\n","import {Color, BufferGeometry, PointsMaterial, Float32BufferAttribute, Vector3} from \"three\";\nimport AngPoints from \"../three/AngPoints.js\";\nimport Util from \"../std/Util.js\";\n\nconst Satellites = function(satData, startTime) {\n    function getPositions(data, time) {\n        \n        const px = [];\n        for (var i=0; i<data.length; i += 1) {\n            \n            if (data[i].orbit == null) {\n                Util.log(\"No orbit for \"+i+\" \"+data.name);\n            }\n            const p = data[i].orbit.position(time);\n            px.push(p[0], p[1], p[2]);\n        }\n        return new Float32BufferAttribute(px,3);\n    }\n    \n\n    const geometry = new BufferGeometry();        \n    // Should the time here be 0?\n    geometry.setAttribute( 'position', getPositions(satData, startTime));\n    geometry.setAttribute( 'color',    getColors(satData));\n        \n    const material       = new PointsMaterial( {sizeAttenuation: false, size: 2,  vertexColors: true} );\n    const points         = new AngPoints(geometry, material );\n    \n    // Add this function to the component.  This allows us to find\n    // a specific satellite.\n    points.getIndexedName = function(index) {\n        return satData[index].name;\n    };\n    \n    return {component: points,\n      render:function(time) {\n        geometry.setAttribute( 'position', getPositions(satData, time));\n      }\n    };\n    \n    function getColors(data) {\n        const colors = [];\n        for (var i=0; i<data.length; i += 1) {\n            var sat = data[i];\n            var sn = sat.name.toUpperCase();\n            if (sn.indexOf(\"DEB\") > 0) {\n                colors.push(1,0,0);\n            } else if (sn.indexOf(\"STARLINK\") >= 0) {\n                colors.push(0,1,0);\n            } else {\n                colors.push(1,1,1);\n            }            \n        }\n        return new Float32BufferAttribute(colors, 3 );\n    }\n\n}\n\nexport default Satellites;","// Calculate the precession rates for the longitude\n// of the ascending node and the argument of perigee\n// for Earth satellites.  Source:\n// https://science.nasa.gov/science-pink/s3fs-public/atoms/files/GDC_OrbitPrimer.pdf\n\nimport Constants from \"../std/Constants\";\nclass SatPrecession {\n    \n    constructor(orbit) {\n        \n        let a  = orbit.a;\n        let rE = Constants.rEarth;\n        let mE = Constants.MEarth;\n        let G  = Constants.G;\n        let e  = orbit.e;\n        let e2 = e*e;\n        let cos_i = orbit.rot[3]/orbit.rot[0];\n        let sin_i = orbit.rot[4]\n        \n        // This term depends upon the shape of the Earth.\n        let j2 = 1.08262668e-3; //https://ai-solutions.com/_freeflyeruniversityguide/j2_perturbation.htm\n        \n        // if p = 3 sqrt(GM/a^3) J2 rE^2 / [2 a^2 (1-e^2)^2)\n        //    nodeP = -p*cos(i)\n        //    argP  =  p*(4-5sin(i)^2)/2  \n        \n        let p = 3*Math.sqrt(G * mE/(a*a*a)) * j2 * rE*rE / (2*a*a*(1-e2)*(1-e2));\n        this.fOmega    = -p*cos_i;\n        this.fNu =  p*(4-5*sin_i*sin_i)/2;\n    }\n}\n\nexport default SatPrecession;","import Util             from \"../std/Util\";\nimport Orbit            from \"../orbits/Orbit\";\nimport ParameterFactory from \"../orbits/ParameterFactory\";\nimport Constants        from \"../std/Constants\";\nimport SatPrecession    from \"../earth/SatPrecession\";\n\nfunction NoradReader(url, callback) {\n    const xhr = new XMLHttpRequest();\n    const here = this;\n    const xhrHandler = function() {\n        \n        if (xhr.readyState === XMLHttpRequest.DONE) {\n            const data = parseNorad(xhr.responseText);\n        };\n    }\n    xhr.open('GET', url);\n    xhr.onreadystatechange = xhrHandler;\n    xhr.send();\n    \n    var latestEpoch = -1e30;\n    var smallestA   = 1.e10;\n    \n    function parseNorad(text) {\n        var lines = text.split(\"\\n\");\n        var start = 0;\n        const data = [];\n        while (start < lines.length) {\n            if (lines[start].charAt(0) == \"0\") {\n                const res = parseLines(lines[start], lines[start+1], lines[start+2]);\n                if (res) {\n                    let satp = new SatPrecession(res.orbit);\n                    res.orbit.addPrecession(res.orbit.ep0, satp.fOmega, satp.fNu);\n                    data[data.length] = res;\n                }\n                start += 3;                \n            } else {\n                if (lines[start].trim().length > 0) {\n                    Util.log(\"Unexpected line in tle:\\n  \",lines[start]);\n                }\n                // Need to have 0 line to start.\n                start += 1;\n            }\n        }\n        if (callback) {\n            callback(latestEpoch, data);\n        }\n        \n    }\n    \n    var count = 0;\n    function parseLines(l0,l1,l2) {\n        count += 1;\n        if (!l1.charAt(0) == \"1\"  || !l2.charAt(0) == \"2\") {\n            Util.log(\"Invalid TLE detected:\\n  \", l0,\"\\n  \", l1,\"\\n  \", l2 );            \n            return null;\n        }\n        var name  = l0.substring(2).trim();\n        if (name.startsWith(\"TBA \")) {\n            name=\"TBA\";\n        }\n        var id    = l1.substring(2,7).trim();\n        var desig = l1.substring(9,17).trim();\n        var yr = l1.substring(18,20);\n        if (yr.charAt(0) > '4') {\n            yr = \"19\" +yr;            \n        } else {\n            yr = \"20\"+yr;\n        }\n        yr = parseInt(yr);\n        var yday = l1.substring(20,32).trim();\n        yday = parseFloat(yday);\n        \n        var inclination = l2.substring(8,16).trim();\n        var ascNode     = l2.substring(17,25).trim();\n        var ecc         = \"0.\"+l2.substring(26,33).trim();\n        var argPerigee  = l2.substring(34,42).trim();\n        var ma          = l2.substring(43,51).trim();\n        var mm          = l2.substring(52,63).trim();\n        var idays       = (yr-2000) * 365;  // Completedyears\n        // Leap days in the current year are handled in the yday\n        // but we need to add them for previous years.  (Just handling since 2000)\n        // Recall that 2000 is a leap year.  Note that 2004 has only\n        // one special leapday, since if we are past 2/28 this is included\n        // in yday.\n        var leap = 0;\n        if (yr > 2000) {\n           leap = Math.floor( (yr-2001)/4) + 1;  // 2001 -> 1, 2004 -> 1, 2005 -> 2           \n        }\n        var days  = idays + leap + yday;\n        var t = Constants.SOLAR_DAY * days;\n        \n        if (t > latestEpoch  || count < 3) {\n            latestEpoch = t;\n        }\n        \n        var orbit = new Orbit(name);\n        const pgen = ParameterFactory.genParam;\n        orbit.addParameter(pgen(\"M\",     Constants.MEarth));\n        orbit.addParameter(pgen(\"t\",     t));\n        orbit.addParameter(pgen(\"N0\",    mm));\n        orbit.addParameter(pgen(\"i\",     inclination*Math.PI/180));\n        orbit.addParameter(pgen(\"nu\",    argPerigee*Math.PI/180));\n        orbit.addParameter(pgen(\"Omega\", ascNode*Math.PI/180));\n        orbit.addParameter(pgen(\"MA\",    ma*Math.PI/180));\n        orbit.addParameter(pgen(\"Eccen\", ecc));\n        \n        var rot = orbit.getParameter(\"Rot\", true);\n        var a   = orbit.getParameter(\"a\", true);\n        var t0  = orbit.getParameter(\"t0\", true);\n        var per = orbit.getParameter(\"per\", true);\n        var e   = orbit.getParameter(\"Eccen\", true);\n        if (a.value < smallestA) {\n            smallestA = a.value;\n        }\n        var qorb = orbit.quickOrbit();\n        qorb.ep0 = t;\n        qorb.scale = 1./Constants.rEarth;\n        return {name: name+\"_\"+desig+\"_\"+id, id: id, orbit: qorb};\n    }\n}\n\nexport default NoradReader;\n\n\n","import Animation from \"../elems/Animation.js\";\nimport Util from \"../std/Util.js\";\nimport Constants from \"../std/Constants.js\";\nimport OptionsSelector from \"../elems/OptionsSelector.js\";\n\nimport Satellite from \"../animations/Satellite.js\";\n\n\nimport getCoords        from \"../std/Coords.js\";\nimport Orbit            from \"../orbits/Orbit.js\";\nimport TransformedOrbit from \"../orbits/TransformedOrbit.js\";\nimport Planet           from \"../solarsystem/Planet.js\";\nimport ParameterFactory from \"../orbits/ParameterFactory.js\";\nimport SolarPlanets     from \"../solarsystem/SolarPlanets.js\";\nimport ssData           from \"../data/PlanetaryData.js\";\nimport Satellites       from \"../earth/Satellites.js\";\nimport NoradReader      from \"../earth/NoradReader.js\";\n\nimport {Scene, Vector3, Euler, AmbientLight, DirectionalLight} from \"three\";\nimport {Mesh, Color, MeshPhongMaterial} from \"three\";\n\nclass PlanetarySystem extends Animation { \n\n    constructor(planet, params) {\n        Util.log(\"Creating new planetary system: \"+planet);\n        super(params);\n        \n        let info = ssData.Sol.planets[planet];\n        \n\n        this.delta         = 2;\n        this.moons         = {};\n        this.longClickTime = 1000;  // A little shorter since\n                                    // we do less clicking here.\n\n        this.scene = new Scene();\n        this.name           = planet;\n        this.planetName     = planet;\n        this.rotAxis        = info.rotAxis;\n        this.rotationPhase  = info.rotationPhase;\n        this.rotationPeriod = info.rotationPeriod;\n        this.moonInfo       = info.moonInfo;\n        this.texture        = info.render.texture;\n        this.ring           = info.ring;\n        this.satelliteURL   = info.satelliteURL;\n        \n        this.cameraPos     = new Vector3(0,0,5);\n        this.baseAnimation = \"Solar System\";\n        \n        this.segments = 40;\n        const here = this;\n        // \n        // For displaying a planetary system we want\n        // the reference plane to be the equatorial plane of the\n        // planet.\n        this.eceqE = getCoords(\"eceq\");\n        \n        // transformation from Earth equatorial to planet equatorial\n        let  angs = [this.rotAxis.ra, this.rotAxis.dec, Math.PI/2];\n        this.eqEeqP = getCoords(angs);\n        \n        this.planetOrbit = this.getOrbit(this.planetName, this.time);\n        \n        // Convert to local equator.\n        this.planetOrbit = new TransformedOrbit(this.planetOrbit);\n        this.planetOrbit.addTransform(this.eceqE);\n        this.planetOrbit.addTransform(this.eqEeqP);\n        \n        \n        const r0         = this.planetOrbit.position(this.time);\n\n        const sunlight = new DirectionalLight(0xffffff, 1);\n        sunlight.position.x = -1000*r0[0];\n        sunlight.position.y = -1000*r0[1];\n        sunlight.position.z = -1000*r0[2];\n        sunlight.castShadow = true;\n        \n        \n        this.addElement(\"sunlight\", {name: \"sunlight\", component: sunlight,\n                         render: function(time) {\n                             const r0 = here.planetOrbit.position(time);\n                             \n                             sunlight.position.x = -1000*r0[0];\n                             sunlight.position.y = -1000*r0[1];\n                             sunlight.position.z = -1000*r0[2];\n                         }});\n                     \n        this.scene.add(new AmbientLight(0x333333));\n\n        var radius   = 1;\n                \n        this.addElement(this.planetName, this.createPlanet(this.planetName, radius, this.texture, this.ring));\n        this.addTimeDisplay();\n        \n        if (this.moonInfo) {\n            this.addMoons(this.moonInfo);\n        }\n        \n        if (this.satelliteURL) {\n            NoradReader(this.satelliteURL, this.addSatellites.bind(this));\n        }\n    }\n        \n    options() {\n        this.frame.userControls.setState({showingOptions: true});\n        let content = <div><div>{this.name}</div><div id=\"pContent\"></div></div>;\n        return <OptionsSelector direct=\"true\" directContent={content} options={[]} />;\n    }\n        \n    addMoons(moonInfo) {\n        for (let moonName in moonInfo) {\n            const md   = moonInfo[moonName];\n            let   morb = this.getMoonOrbit(moonName, md);\n            if (md.frame && md.frame.type != \"Equatorial\") {\n                // Need to tranform the frame of the orbit from\n                // the frame in which it was computed, into the\n                // equatorial frame of the planet.\n                morb = new TransformedOrbit(morb);\n                if (md.frame == \"Ecliptic\" ) {\n                    // Same transformation as for planet orbit.\n                    morb.addTransform(this.eceqE);\n                    morb.addTransform(this.eqEeqP);\n                } else if (md.frame == \"Laplace\") {\n                    // Need the transform from Earth\n                    // equatorial to the Laplace frame.\n                    const lapTrans = getCoords([md.frame.ra,md.frame.dec,Math.PI/2]);\n                    morb.addTransform(this.eceqE);\n                    morb.addTransform(lapTrans);\n                }\n            }\n            var rad = 0.2;\n            if (md.render && md.render.frac) {\n                rad = md.render.frac;\n            }\n            var moon;\n            var color = md.render.color? md.render.color: 0xFFFF00;\n            \n            moon = Planet(moonName, this.time, \n                          morb, rad, color, false, true);\n            Util.log(\"Moon created position at time is:\"+morb.position(this.time));\n                          \n            if (md.render && md.render.texture) {\n                // Replace the featureless sphere\n                let pos = morb.position(this.time);\n                let texturedSphere = this.createSphere(rad, this.segments, md.render.texture);               \n                texturedSphere.position.set(pos[0], pos[1], pos[2]);\n                moon.component = texturedSphere;\n            }\n            \n            this.addElement(moonName+\"Body\", moon);\n            this.moons[moonName] = {rendering: moon, data: md, orbit: morb};\n        }\n\n    }\n    \n    createPlanet(name, radius, texture, ring) {\n        const planet = this.createSphere(radius, this.segments, texture, ring, name);\n        const here = this;\n        return {\n            name:      name,\n            component: planet,\n            render:    function(time) {\n                let phase = here.rotationPhase + 2*Math.PI * (time/here.rotationPeriod);\n                phase %= 2*Math.PI;\n                planet.rotation.y = phase; \n            }\n        }      \n    }\n    \n    getOrbit(name, time) {\n        const pData = SolarPlanets.getElements(name, time);\n        const elems = pData.elements;\n        this.planetRadius = pData.diameter*1000/2;  // diameter in km to radius in m.\n        \n        const orb = new Orbit(name);\n\n        for (var key in elems) {\n            orb.addParameter(ParameterFactory.genParam(key, elems[key]));\n        }\n        \n        orb.addParameter(ParameterFactory.genParam(\"t\", time));\n        // Make sure we can get positions.\n        const r0 = orb.getParameter(\"r\", true);;        \n        \n        return orb.quickOrbit();\n    }\n    \n    getMoonOrbit(name, moonData) {\n        let  morb = new Orbit(name);\n        const mElems = moonData.elems;\n        if (!mElems.t) {\n            if (moonData.prec) {\n                mElems.t = moonData.prec.ep0;\n            } else {\n                mElems.t = this.time;\n            }\n        }\n        morb.addStructure(moonData.elems);\n        const rm = morb.getParameter(\"r\", true);\n        morb = morb.quickOrbit();  // Just get this...\n        if (morb.prec) {\n            morb.addPrecession(\n                moonData.prec.ep0,\n                moonData.prec.fOmega,\n                moonData.prec.fNu\n            );\n        }\n        morb.scale = 1/this.planetRadius;\n        Util.log(\"Set scale:\"+this.planetRadius+\" scale:\"+moonData.moonScale);\n        if (moonData.moonScale) {\n            morb.scale *= moonData.moonScale;\n            Util.log(\"Updated scale:\"+morb.scale);\n        }\n        return morb;\n    }\n    \n    addSatellites(epoch, data) {\n        Util.log(\"Epoch for satellites: \"+epoch/(365.25*86400));\n        Util.log(\"Number of satellites: \"+data.length);\n        this.baseTime = epoch;\n        this.setTime(epoch);\n        this.addElement(\"satellites\", Satellites(data, epoch));\n    }\n\n    raycastResult(results) {\n        const letter = this.name.substring(0,1);\n        super.raycastResult(results, \"r<sub>\"+letter+\"</sub>\");\n    }\n    \n    options() {\n        \n        const names = [\n                 this.name,\n        ];\n        const opts = [];\n        for (var i=0; i<names.length; i += 1) {\n            const entry = {};\n            const val   = names[i];\n            entry.value = names[i];\n            const key = \"ka\"+i;\n            switch (val) {\n                               \n            default:\n                entry.elem = <div key={key}></div> ;\n            }\n            \n        \n            opts.push(entry);\n        }\n        const res =  <OptionsSelector options={opts} /> ;\n        return res;\n    }\n\n\n    doLongClick(event) {\n      \n        const matched = this.frame.raycast(event);\n        let found = null;\n        \n        for (let name in matched) {\n            if (name.indexOf(\"Body\") > 0) {\n                let sub = name.substring(name,name.length-4);\n                \n                if (this.moonInfo[sub].render.texture) {\n                    Util.log(\"Doing animation for satellite \"+sub+\" of \"+this.name);\n                    let anim = new Satellite({\n                        frame: this.frame,\n                        timeID: this.timeID,\n                        name: sub,\n                        planet: this.name,\n                        planetOrbit: this.planetOrbit,\n                        primary: this.name,\n                        satelliteOrbit: this.moons[sub].orbit,\n                        texture: this.moonInfo[sub].render.texture\n                    });\n                    Util.log(\"Found textured moon...\",name,anim);\n                    this.frame.setAnimation(anim);\n                    return;\n                }\n            }\n        }\n        super.doLongClick(event);\n    }\n    \n}\n\nexport default PlanetarySystem;","import LocalGalaxy     from \"./LocalGalaxy.js\";\nimport SolarSystem     from \"./SolarSystem.js\";\n//import Earth           from \"./Earth.js\";\nimport PlanetarySystem from \"./PlanetarySystem.js\";\nimport ssData          from \"../data/PlanetaryData.js\";\n\nclass AnimationFactory {\n  \n    constructor(){\n        this.cache = {};\n        this.available = {};\n        for (let planet in ssData.Sol.planets) {\n            this.available[planet.toLowerCase()]      = 1;\n        }\n        this.available[\"solar system\"]                = 1;\n        this.available[\"local galactic neighborhood\"] = 1;\n        this.available[\"the earth and environs\"]      = 1;\n    };\n    \n    getAnimation(name, args) {\n        name = name.toLowerCase();\n        if (!this.cache[name]) {\n            switch (name) {\n              case \"mercury\":\n              case \"venus\":\n              case \"mars\":\n              case \"jupiter\":\n              case \"saturn\":\n              case \"uranus\":\n              case \"neptune\":\n              case \"pluto\":\n                let capName = name.substring(0,1).toUpperCase()+name.substring(1);\n                this.cache[name] = new PlanetarySystem(capName, args);\n                break;\n                \n                \n              case \"earth\":\n              case \"the earth and environs\":\n                this.cache[name] = new PlanetarySystem(\"Earth\", args);\n                break;\n                               \n              case \"solar system\":                    \n                this.cache[name] = new SolarSystem(args);\n                break;\n                \n              case \"local galactic neighborhood\":\n                this.cache[name] = new LocalGalaxy(args);\n                break;\n                \n            }\n            \n        }\n        return this.cache[name];\n    }\n    \n    isAnimation(name) {\n        return this.available[name.toLowerCase()];\n    }\n}\nconst singleton = new AnimationFactory();\n\n// Export the instance not the class.\nexport default singleton;","function UnitLegend() {\n    return (\n  <div>\n    <strong>Unit legend:</strong>\n    <ul>\n        <li key=\"1\"> au: astronomical units </li> \n        <li key=\"2\"> au/day: astronomical units per day </li>\n        <li key=\"3\"> <strong>d: degrees (&deg;)</strong> </li>\n        <li key=\"4\"> day: days </li>\n        <li key=\"5\"> jd: Julian days (zero offset from time in other units)</li>\n        <li key=\"6\"> <strong>kg: kilograms </strong></li>\n        <li key=\"7\"> km/s: kilometers/second </li>\n        <li key=\"8\"> <strong>m: meters </strong></li>\n        <li key=\"9\"> <strong>m/s: meters/second</strong> </li>     \n        <li key=\"10\"> Me: Earth masses </li>            \n        <li key=\"11\"> Ms: Solar masses </li>\n        <li key=\"12\"> rad: radians</li>            \n        <li key=\"13\"> rE: Earth radii </li> \n        <li key=\"14\"> <strong>s: seconds</strong></li>\n        <li key=\"15\"> y: years </li>    \n    </ul>\n    Any of these can be used as suffixes to values.  Time units are 0 at\n    UT 2000.0 except for Julian days.\n    Units in <strong>bold</strong> are assumed if no units are specified.\n  </div>\n\n    )\n}\n\nexport default UnitLegend;\n\n","import {Component} from \"react\";\nimport Util from \"../std/Util.js\";\n\nclass Units extends Component {\n    \n    constructor(args) {\n        super(args);\n        this.units = args.units;\n        this.name  = args.name;\n        this.row   = args.row;\n    }\n    \n    render() {\n        if (this.units == null || this.units.length == 0) {\n            return <span></span>;\n        }\n        const elems = [];\n        const here = this;\n        elems.push(\n          <button \n            key=\"0\" \n            onClick={here.row.cycleUnits.bind(here.row)}\n            hidden={!this.props.value}>\n               &gt;&gt;\n          </button>\n        );\n        elems.push(<span key=\"-1\">&nbsp;&nbsp;</span>)\n        for (var i=0; i<this.units.length; i += 1) {\n            const unit = this.units[i];\n            if (unit.unit == 'd' || (unit.scale == 1  && unit.unit != 'rad')) {\n                elems.push(<span key={i+1}><strong>{unit.unit} </strong></span>);\n            } else {\n                elems.push(<span key={i+1}>{unit.unit} </span>);\n            }\n        }\n        \n        return <span>{elems}</span>;\n    }\n}\n\nexport default Units;\n\n","function status(msg) {\n    document.getElementById(\"statusContent\").innerHTML = msg;\n}\nexport default status;\n\n\n","import {Component} from \"react\";\nimport Units from \"./Units.js\";\nimport status from \"./Status.js\";\n\nimport ParameterFactory from \"../orbits/ParameterFactory.js\";\nimport Parameter from \"../orbits/Parameter.js\";\n\nimport Util from \"../std/Util.js\";\n\nclass Row extends Component {\n    constructor(args) {\n        super(args);\n        this.param = args.param;\n        this.validated = false;\n        this.unitIndex = -1;\n        this.parameter =  null;\n        this.showingUnit = false;\n        this.state = {value: '', computed: false};\n        this.values = null;\n    }\n    \n    // This is called every time the value changes.\n    handleChange(event) {\n        this.validated = false;\n        this.setState({value: event.target.value});\n    }\n    \n    // This is only called when the user enters a return.\n    validate(val) {\n        var initVal = val;\n        // Check if this is just a unit change.\n        if (this.unitIndex >= 0  && this.values) {\n            if (val == this.values[this.unitIndex]) {\n                this.validated = true;\n                return;\n            }\n        }\n        this.parameter = null;\n        this.unitIndex = -1;\n        if (this.state.computed) {\n            this.setState({computed: false});\n        }\n        this.values = null;\n        if (val == null || val.length == 0) {\n            this.validated = false;\n            return;\n        }\n        \n        val = val.trim();\n        \n        // Allow commas as separators.\n        // Get rid of [] that may have been displayed.\n        val = val.replace(/,/g, ' ');\n        val = val.replace('[', ' ');\n        val = val.replace(']', ' ');\n\n        // Replace multiple spaces (or tab or ...) with a single space.\n        val = val.replace(/\\s+/g, \" \");\n        var elems = val.split(\" \");\n        var dim = null;\n        if (elems.length === 2 || elems.length === 4 || elems.length === 10) {\n            dim = elems.pop().toLowerCase();\n        }\n        var unit = null;\n        if (dim && this.param.units) {            \n            this.unitIndex = -1;\n            var i;\n            for (i = 0; i < this.param.units.length; i += 1) {\n                const xunit = this.param.units[i];\n                if (xunit.unit.toLowerCase() === dim) {\n                    unit = this.param.units[i];\n                    this.unitIndex = i;\n                    break;\n                }\n            }\n            \n            if (this.unitIndex < 0) {\n                status(\"Error: Unknown unit:\"+dim+\" for parameter \"+this.param.name+\". Last token ignored.\");\n                return;\n            }\n        }\n        if (this.unitIndex < 0 && this.param.units) {\n            this.unitIndex = this.getDftUnit();\n            unit = this.param.units[this.unitIndex];\n        }\n        \n        var scale = 1;\n        var offset = 0;\n        if (unit) {\n            scale = unit.scale;\n            if (unit.offset) {\n                offset = unit.offset;\n            }\n        }\n        var p;\n        if (elems.length === 1) {\n            if (this.param.dim !== Parameter.SCALAR) {\n                status(\"Scalar specification for non-scalar parameter\");\n                return;\n            }\n            var val = elems[0];\n            if (isNaN(val)) {\n                status(\"Not a numerical value\");\n                return;\n            }\n            val = (Number.parseFloat(val)-offset)*scale;\n            this.parameter = ParameterFactory.genParam(this.param.name, \n                               val, unit);\n\n        } else if (elems.length === 3) {\n            if (this.param.dim !== Parameter.VECTOR) {\n                status(\"Vector specification for non-vector\");\n                return;\n            }\n            if (isNaN(elems[0])  || isNaN(elems[1] || isNaN(elems[2]))) {\n                status(\"Not a numeric vector\");\n                return;\n            }\n            this.parameter = ParameterFactory.genParam(this.param.name,\n                    [Number.parseFloat(elems[0]) * scale,\n                     Number.parseFloat(elems[1]) * scale,\n                     Number.parseFloat(elems[2]) * scale], unit);\n            \n        } else {\n            status(\"Unexpected number of tokens in parameter:\" + elems.length);\n            return;\n        }\n        // Now generate the values for all of the units.\n        if (unit) {\n            // Pass the input value so that it can be used for the current\n            // unit\n            this.genValues(initVal);\n        }\n        this.validated = true;\n        status(\"\");\n    }\n    \n    genValues(input) {\n        if (!this.param.units) {\n            return;\n        }\n        const units = this.param.units;\n        this.values = [];\n        for (var i=0; i<units.length; i += 1) {\n            if (i == this.unitIndex) {\n                this.values[i] = input;\n            } else {\n                this.values[i] = this.renderToUnit(units[i]);\n            }\n        }\n    } \n    \n    getDftUnit() {\n        for (var i=0; i<this.param.units.length; i += 1) {\n            const unit = this.param.units[i];\n            if (unit.unit == \"d\" || (unit.scale == 1  && unit.unit != 'rad')) {\n                return i;\n            }\n        }\n        Util.log(\"No default unit found:\"+this.param.name);\n    }\n    \n    cycleUnits() {\n        if (!this.validated) {\n            this.validate(this.state.value);\n        }\n        if (!this.validated) {\n            status(\"Invalid entry, cannot cycle units\");\n            return;\n        }        \n        this.unitIndex = (this.unitIndex + 1)%this.param.units.length;\n        this.setState({value: this.values[this.unitIndex]});\n    }\n    \n    renderNow() {\n        return this.valuesArr[this.unitIndex] + this.param.units[this.unitIndex].unit;\n    }\n    \n    renderToUnit(unit) {\n        if (!this.parameter) {\n            return \"\";\n        }\n        const scale  = unit.scale;\n        const offset = unit.offset? unit.offset: 0;\n        \n        if (this.param.dim == Parameter.SCALAR) {\n            return this.dispScalar(this.parameter.getScalar(), 7, scale, offset)+\" \"+unit.unit;\n        } else {\n            const vec = this.parameter.getVector();\n            return \"[ \"+this.dispVector(vec, 5, scale, offset)+\" ] \"+unit.unit;\n        }\n    }\n    \n    dispScalar(val, prec, scale, offset) {\n        return (val/scale+offset).toPrecision(prec);\n    }\n    dispVector(vec, prec, scale, offset) {\n        var str = \"\";\n        var prefix = \"\";\n        for (var i=0; i<vec.length; i += 1) {\n            str += prefix + this.dispScalar(vec[i], prec, scale, offset);\n            prefix = \" \";\n        }\n        return str;\n    }\n    \n    render() {\n        const param = this.param;\n        const here = this;\n        const cname = this.state.computed? \"yellow\": \"white\";\n        return (\n                <tr key={param.name} className={cname}>\n                    <th align=\"right\">{param.name}</th>\n                    <td><input size=\"18\"\n                          value={this.state.value}\n                          onChange={this.handleChange.bind(this)}\n                          onKeyUp={\n                            (event) => {\n                              if (event.key === 'Enter') {\n                                  here.validate(event.target.value);                       \n                              }\n                             }\n                           }/></td>\n                    <td><Units row={this} value={this.state.value} name={param.name} units={param.units} /></td>\n                    <td>{param.descrip}</td>\n                </tr>\n        );\n    }\n    \n    setParameter(p) {\n        this.unitIndex = -1;\n        this.parameter = p;\n        this.validated = true;\n        if (this.param.units) {\n            \n            this.genValues(\"\");\n            this.unitIndex = this.getDftUnit() - 1;  // Might be -1, but that's ok.\n            this.cycleUnits();\n            this.setState({computed: true});\n        } else {\n            // No units\n            var dispVal;\n            if (this.param.dim == Parameter.SCALAR) {\n                dispVal = this.dispScalar(p.getScalar(), 7, 1,0);\n            } else if (this.param.dim == Parameter.VECTOR) {\n                dispVal = this.dispVector(p.getVector(), 5,1,0);\n            } else if (this.param.dim == Parameter.BLOB) {\n                dispVal = this.dispVector(p.getVector(), 4, 1, 0);\n            }\n            this.setState({value: dispVal, computed: true});\n        }\n    }\n}\n\nexport default Row;\n","\n\nimport  {Component, createRef}  from \"react\";\nimport Util             from \"../std/Util.js\";\nimport Constants        from \"../std/Constants.js\";\nimport ParameterFactory from \"../orbits/ParameterFactory.js\";\nimport Parameter        from \"../orbits/Parameter.js\";\nimport Orbit            from \"../orbits/Orbit.js\";\nimport Missions from \"../solarsystem/Missions.js\";\nimport Kepler  from \"../orbits/Kepler.js\";\n\nimport UnitLegend       from \"./UnitLegend.js\";\n\nimport Row       from \"./Row.js\";\nimport status    from \"./Status.js\";\nimport TextInput from \"../elems/TextInput.js\";\n\n\n\nclass Debug extends Component {\n    \n    constructor(props) {\n        super(props);\n    }\n    \n    diffCalc(r1, r2) {\n        let diff = [r1[0]-r2[0], r1[1]-r2[1], r1[2]-r2[2]];\n        let res = Util.mag(diff)/Math.sqrt(Util.mag(r1)*Util.mag(r2));\n        res = res.toFixed(6);\n        return res;\n    }\n\n    // It seems like the first time we create the objects we \n    // can get proper references to them, but later entries don't\n    // seem to work.  So we only compute the references the first\n    // time.  Probably something dodgy going on here.\n    render() {\n        Util.log(\"Start 1\");\n        let ecc  = 1.318976;\n        let ma   = 63.07526296164796;\n        Util.log(\"Limit is:\"+Math.acos(-1/ecc));\n        Util.log(\"Value is:\"+Kepler(ma, ecc));\n        Util.log(\"Time of encounter:\"+Util.datetime(\"1980-11-01T00:00:00\"));\n        let dr = Math.PI/180;\n        let str = \"\";\n        let miss = Missions(0);\n        str += \"Missions:\"+miss+\"\\n\";\n        str += \"Length:\"+miss.length+\"\\n\";\n        let voy = miss[1];\n        str += \"Got voyager2:\"+voy+\"\\n\";\n        str += \"Name: \"+voy.name+\" \"+voy.component+\"\\n\";\n        let chain = voy.chain;\n        \n        let time = Util.datetime(\"1986-03-30T00:00:00\");\n        let p = chain.position(time);\n        str += \"Time:\"+time+\" \"+p+\"\\n\";\n        str += \"Index is :\"+chain.index+\"\\n\";\n        time = Util.datetime(\"1986-01-01T00:00:00\");\n        str += \"Time early:\"+time+\" \"+p+\"\\n\";\n        str += \"Index is :\"+chain.index+\"\\n\";\n        for (let i=0; i<2000; i += 1) {\n            str += i+\" \"+time +\":\"+chain.position(time)+\" \\n\";\n            time += 86400;\n        }\n        return (\n        <pre> {str} </pre>        \n               );\n    }    \n}\n\nexport default Debug;","\n\nimport  {Component, createRef}  from \"react\";\nimport Util             from \"../std/Util.js\";\nimport ParameterFactory from \"../orbits/ParameterFactory.js\";\nimport Parameter        from \"../orbits/Parameter.js\";\nimport Orbit            from \"../orbits/Orbit.js\";\n\nimport UnitLegend       from \"./UnitLegend.js\";\n\nimport Row       from \"./Row.js\";\nimport status    from \"./Status.js\";\nimport TextInput from \"../elems/TextInput.js\";\n\nclass OrbitCalculator extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.params = ParameterFactory.legalParameters;\n        this.orbit  = null;\n        this.fixed = null;\n        this.varies = null;\n        this.fixedRef = [];\n        this.variesRef = [];\n        this.orbitName = null;\n        this.animFactory = null;\n        this.displayCount = 0;\n    }\n\n    // It seems like the first time we create the objects we \n    // can get proper references to them, but later entries don't\n    // seem to work.  So we only compute the references the first\n    // time.  Probably something dodgy going on here.\n    render() {\n        const here = this;\n        this.varies = [];\n        this.fixed  = [];\n        var doRef = true;\n        if (this.fixedRef.length > 0) {\n            doRef = false;\n        }\n        for (var name in this.params) {\n            const param = this.params[name];\n            var ref;\n            var elem;\n            if (doRef) {\n                ref = createRef();\n                elem = <Row ref={ref} param={param} />;\n            } else {\n                elem = <Row param={param} />;\n            }\n            if (param.varies) {\n                this.varies.push(elem);\n                if (doRef) {\n                    this.variesRef.push(ref);\n                }\n            } else {\n                this.fixed.push(elem);\n                if (doRef) {\n                    this.fixedRef.push(ref);\n                }\n            }\n        }        \n        return (\n<div>\n    Name for orbit:&nbsp; \n    <TextInput placeholder=\"Optional name\"\n       callback={function(name) {here.setOrbitName(name);}} />\n    <p />\n    Status: <div id=\"statusContent\"></div>\n    <p />\n    \n  <table><tbody>\n    <tr key=\"hdr\"><th>Name</th><th>Value</th><th>Units</th><th align=\"left\">Description</th></tr>\n    <tr key=\"div1\"><td colSpan='4' align='center'> <i>Orbit Constants</i></td></tr>\n    {this.fixed}\n    <tr key=\"div2\"><td colSpan='4' align='center'><i>Orbit Variables</i></td></tr>\n    {this.varies}\n    </tbody>\n  </table>\n  <table><tbody>\n            <tr>\n            <td key=\"1\"><button\n              onClick={this.compute.bind(this)}\n            >Compute</button></td>\n            <td key=\"2\"><button\n              onClick={this.displayOrbit.bind(this)}\n            >Render orbit</button></td>\n            <td key=\"3\"><button\n               onClick={this.clearAll.bind(this)}\n            >Clear all</button></td>\n            <td key=\"4\"><button\n               onClick={this.clearVarying.bind(this)}\n            >Clear variables only</button></td>\n            </tr>\n      </tbody>\n    </table>\n    <p />\n    <hr/>\n    <UnitLegend />\n    </div>    \n    );\n    }\n    \n    // This may be from an invoking page.\n    setAnimFactory(animFactory) {\n        this.animFactory = animFactory;\n    }\n    \n    clearAll() {\n        this.clear(this.fixedRef);\n        this.clear(this.variesRef);\n    }\n    \n    clearVarying() {\n        this.clear(this.variesRef);\n    }\n    \n    clear(rows) {\n        for (var i=0; i<rows.length; i += 1) {\n            const row = rows[i].current;\n            \n            if (row.state && row.state.value) {\n                row.setState({value: \"\", computed: false});\n            }\n            row.parameter = null;\n            row.validated = false;\n        }\n    }\n    \n    compute() {\n        // Compute all of the parameters that we can given the \n        // current inputs.\n        \n        // First make sure all current inputs are valid.\n        const all = this.fixedRef.concat(this.variesRef);\n        const orbit = new Orbit(this.orbitName);\n        for (var i=0; i<all.length; i += 1) {                    \n            const row = all[i].current;\n            if (row.state && row.state.value) {\n                if (!row.validated) {\n                    row.validate(row.state.value);\n                    if (!row.validated) {\n                        status(\"Invalid entry for parameter:\"+row.param.name);\n                        return;\n                    }\n                }\n                orbit.addParameter(row.parameter);\n            }\n        }\n        status(\"\");\n        \n        var updated = true;\n        var totalUpdates = 0;\n        while (updated) {\n            updated = false;\n            // Loop overa all parameters and see if we can update them.\n            for (var i=0; i<all.length; i += 1) {\n                const row = all[i].current;\n                if (!row.parameter) {\n                    const name = row.param.name;\n                    const newPar = orbit.getParameter(name, true);\n                    if (newPar != null) {\n                        updated = true;\n                        totalUpdates += 1;\n                        row.setParameter(newPar);\n                    }\n                }\n            }\n        }\n        this.orbit = orbit;\n        status(totalUpdates+\" parameters computed\");\n    }\n    \n    displayOrbit() {\n        this.compute();\n        this.displayCount += 1;\n        var qorb = this.orbit.quickOrbit();\n        if (qorb == null) {\n            status(\"Insufficient known orbital parameters to determine orbit\");\n        } else {\n            var name = this.orbit.getOrbitName();\n            if (!name) {\n                name = \"UserOrbit\";\n            }\n            \n            name += this.orbitCount;\n            \n            // Use the central mass to decide where to show the orbit.\n            var mass = this.orbit.getParameter(\"M\").value;\n            var mrat = mass/Constants.MSun;\n            let anim = null;\n            if (mrat > 0.999999 && mrat < 1.000001) {\n                anim = \"Solar System\";\n            } else {\n                mrat = mass/Constants.MEarth;\n                if (mrat > 0.999999 && mrat < 1.000001) {\n                    amim = \"The Earth and environs\";\n                }                \n            }\n            \n            if (anim) {\n                this.animFactory.getAnimation(anim).addExternalOrbit(name, qorb);\n            } else {\n                status(\"Central orbit mass not consistent with Earth or sun\")\n            }\n        }        \n    }\n    \n    setOrbitName(name) {\n        this.orbitName = name;\n    }\n}\n\nexport default OrbitCalculator;","import {Component, createRef} from 'react';\n\nimport Util           from \"./std/Util.js\";\nimport Settings       from \"./std/Settings.js\";\n\n// Used in animations\nimport Frame          from \"./elems/Frame.js\";\nimport UserControls   from \"./elems/UserControls.js\";\nimport animFactory    from \"./animations/AnimationFactory.js\";\nimport Debug          from \"./calc/Debug.js\";\n\n// Used in OrbitCalculator\nimport OrbitCalculator from \"./calc/OrbitCalculator.js\";\n\nimport getCoords from \"./std/Coords\";\n\nclass App extends Component {\n    \n    constructor(props) {\n        super(props);\n        \n        // The use of the app setting is a kludge to allow us to define multiple pages\n        // within the react framework easily.  While this may nominally\n        // require the download of the entire JS code for the\n        // OrbitCalculator, this will normally be cached in the browser\n        // already.  Their is a lot of mystery about routing and such,\n        // but it is unclear if that will allow us to serve two different\n        // pages simultaneously and in any case requires higher level\n        // wizardry than I am capable of.\n        this.appKey   = Settings[\"app\"];\n        const url     = window.location.href;\n        this.controls = createRef();\n        \n        if (this.appKey) {\n            return;\n        }\n        this.frame = null;\n    }\n    \n    onWindowResize() {\n        if (this.appKey) {\n            return;\n        }\n        const dx = window.innerWidth;\n        const dy = window.innerHeight;\n        this.frame.resize(dx, dy);\n    }\n    \n    \n    render() {\n        if (this.appKey) {\n            if (this[\"render\"+this.appKey]) {\n                return this[\"render\"+this.appKey]();\n            }\n            return;\n        }\n        \n        const dx = window.innerWidth;\n        const dy = window.innerHeight;\n        return (\n            <div>\n               <div style={{\n                  height:dx+\"px\", \n                  width:dy+\"px\"\n                }} id=\"baseCanvas\"></div>\n               <UserControls ref={this.controls} />\n            </div>\n        );\n    }\n    renderDebug() {\n        return <Debug />\n    }\n    \n    renderOrbParams() {\n        return <OrbitCalculator ref={this.controls} />;\n    }\n    \n    componentDidMount() {\n        if (this.appKey) {\n            if (this[\"componentDidMount\"+this.appKey]) {\n               this[\"componentDidMount\"+this.appKey]();\n               return;                \n            }\n            return;\n        } else {\n            window.addEventListener( 'resize', this.onWindowResize.bind(this) );\n            // Note injection of animFactory into the Frame.  This resolves\n            // an import loop between the animations and the animation factory\n            this.frame = new Frame({animFactory: animFactory, animDiv: \"baseCanvas\", size:[window.innerWidth, window.innerHeight]});\n            \n            this.solar = animFactory.getAnimation(\"Solar System\", {timeID:\"timeDisplay\", frame:this.frame});\n            \n            this.frame.setUserControls(this.controls.current);\n            this.frame.setAnimation(this.solar);\n        }\n        window.GLOBALS = {animFactory: animFactory};\n    }\n    \n    componentDidMountOrbParams() {\n        // This kludgey bit allows the calculator to send\n        // orbits to the solar system even though it's on\n        // a different page.\n        let win = window.opener;\n        if (win) {\n            this.controls.current.setAnimFactory(win.GLOBALS.animFactory);\n        }\n    }\n    \n    componentDidMountDebug() {\n        \n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}